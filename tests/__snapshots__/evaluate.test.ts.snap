// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Builtin functions abs evaluate 1`] = `
"abs(number) => 0..inf | nan
abs(-3.14) => 3.14
abs(-2) => 2
abs(-1) => 1
abs(-0.5) => 0.5
abs(0) => 0
abs(0.5) => 0.5
abs(1) => 1
abs(2) => 2
abs(2.78) => 2.78
abs(3) => 3
abs(3.14) => 3.14
abs(10) => 10
abs(100) => 100
abs(-inf) => inf
abs(inf) => inf
abs(nan) => nan
abs(0..1) => 0..1
abs(0!..1) => 0!..1
abs(0..!1) => 0..!1
abs(0..2) => 0..2
abs(0!..!2) => 0!..!2
abs(0.5..1.5) => 0.5..1.5
abs(0.5..2.5) => 0.5..2.5
abs(0.5!..2.5) => 0.5!..2.5
abs(0.5..!2.5) => 0.5..!2.5
abs(-2.56..3.35) => 0..3.35
abs(0.5..0.75) => 0.5..0.75
abs(1..2) => 1..2
abs(0..inf) => 0..inf
abs(0!..inf) => 0!..inf
abs(0..!inf) => 0..!inf
abs(0!..!inf) => 0!..!inf
abs(1..inf) => 1..inf
abs(1!..inf) => 1!..inf
abs(1..!inf) => 1..!inf
abs(2..inf) => 2..inf
abs(2!..inf) => 2!..inf
abs(2.5..inf) => 2.5..inf
abs(-inf..0) => 0..inf
abs(-inf..inf) => 0..inf
abs(-inf!..inf) => 0..inf
abs(-inf..!inf) => 0..inf
abs(-inf!..!inf) => 0..!inf
abs(int(0..1)) => int(0..1)
abs(int(0..2)) => int(0..2)
abs(int(1..2)) => int(1..2)
abs(int(5..20)) => int(5..20)
abs(int(-20..-5)) => int(5..20)
abs(int(-10..10)) => int(0..10)
abs(int(0..inf)) => int(0..inf)
abs(int(1..inf)) => int(1..inf)
abs(int(-inf..0)) => int(0..inf)
abs(int(-inf..1)) => int(0..inf)
abs(int(-inf..inf)) => int(0..inf)
abs(nonInt(0..1)) => nonInt(0..1)
abs(nonInt(0..2)) => nonInt(0..2)
abs(nonInt(-1..2)) => nonInt(0..2)
abs(nonInt(0..inf)) => nonInt(0..inf)
abs(nonInt(-1..inf)) => nonInt(0..inf)
abs(nonInt(-inf..0)) => nonInt(0..inf)
abs(nonInt(-inf..1)) => nonInt(0..inf)
abs(nonInt(-inf..inf)) => nonInt(0..inf)
abs(1 | int(3..4)) => 1 | int(3..4)
abs(never) => never
abs(any) => Error: Incompatible argument type: The supplied argument type any is not compatible with the definition type."
`;

exports[`Builtin functions any::eq evaluate 1`] = `
"any::eq(false, true) => false
any::eq(false, false | true) => false | true
any::eq(false, never) => never
any::eq(false, any) => false | true
any::eq(true, false | true) => false | true
any::eq(true, never) => never
any::eq(true, any) => false | true
any::eq(false | true, never) => never
any::eq(false | true, any) => false | true
any::eq(never, any) => never"
`;

exports[`Builtin functions bool::and evaluate 1`] = `
"bool::and(false, true) => false
bool::and(false, false | true) => false
bool::and(true, false | true) => false | true"
`;

exports[`Builtin functions bool::not evaluate 1`] = `
"bool::not(false) => true
bool::not(true) => false
bool::not(false | true) => false | true
bool::not(never) => never
bool::not(any) => Error: Incompatible argument type: The supplied argument type any is not compatible with the definition type."
`;

exports[`Builtin functions bool::or evaluate 1`] = `
"bool::or(false, true) => true
bool::or(false, false | true) => false | true
bool::or(true, false | true) => true"
`;

exports[`Builtin functions floor evaluate 1`] = `
"floor(number) => -inf | int(-inf..inf) | inf | nan
floor(-3.14) => -4
floor(-2) => -2
floor(-1) => -1
floor(-0.5) => -1
floor(0) => 0
floor(0.5) => 0
floor(1) => 1
floor(2) => 2
floor(2.78) => 2
floor(3) => 3
floor(3.14) => 3
floor(10) => 10
floor(100) => 100
floor(-inf) => -inf
floor(inf) => inf
floor(nan) => nan
floor(0..1) => int(0..1)
floor(0!..1) => int(0..1)
floor(0..!1) => 0
floor(0..2) => int(0..2)
floor(0!..!2) => int(0..1)
floor(0.5..1.5) => int(0..1)
floor(0.5..2.5) => int(0..2)
floor(0.5!..2.5) => int(0..2)
floor(0.5..!2.5) => int(0..2)
floor(-2.56..3.35) => int(-3..3)
floor(0.5..0.75) => 0
floor(1..2) => int(1..2)
floor(0..inf) => int(0..inf) | inf
floor(0!..inf) => int(0..inf) | inf
floor(0..!inf) => int(0..inf)
floor(0!..!inf) => int(0..inf)
floor(1..inf) => int(1..inf) | inf
floor(1!..inf) => int(1..inf) | inf
floor(1..!inf) => int(1..inf)
floor(2..inf) => int(2..inf) | inf
floor(2!..inf) => int(2..inf) | inf
floor(2.5..inf) => int(2..inf) | inf
floor(-inf..0) => -inf | int(-inf..0)
floor(-inf..inf) => -inf | int(-inf..inf) | inf
floor(-inf!..inf) => int(-inf..inf) | inf
floor(-inf..!inf) => -inf | int(-inf..inf)
floor(-inf!..!inf) => int(-inf..inf)
floor(int(0..1)) => int(0..1)
floor(int(0..2)) => int(0..2)
floor(int(1..2)) => int(1..2)
floor(int(5..20)) => int(5..20)
floor(int(-20..-5)) => int(-20..-5)
floor(int(-10..10)) => int(-10..10)
floor(int(0..inf)) => int(0..inf)
floor(int(1..inf)) => int(1..inf)
floor(int(-inf..0)) => int(-inf..0)
floor(int(-inf..1)) => int(-inf..1)
floor(int(-inf..inf)) => int(-inf..inf)
floor(nonInt(0..1)) => 0
floor(nonInt(0..2)) => int(0..1)
floor(nonInt(-1..2)) => int(-1..1)
floor(nonInt(0..inf)) => int(0..inf)
floor(nonInt(-1..inf)) => int(-1..inf)
floor(nonInt(-inf..0)) => int(-inf..-1)
floor(nonInt(-inf..1)) => int(-inf..0)
floor(nonInt(-inf..inf)) => int(-inf..inf)
floor(1 | int(3..4)) => 1 | int(3..4)
floor(never) => never
floor(any) => Error: Incompatible argument type: The supplied argument type any is not compatible with the definition type."
`;

exports[`Builtin functions invStrSet evaluate 1`] = `
"invStrSet(string) => never
invStrSet("") => invStrSet("")
invStrSet("foo") => invStrSet("foo")
invStrSet("bar") => invStrSet("bar")
invStrSet("ðŸ’©") => invStrSet("ðŸ’©")
invStrSet("bar" | "foo") => invStrSet("bar" | "foo")
invStrSet("baz" | "foo") => invStrSet("baz" | "foo")
invStrSet(invStrSet("foo")) => "foo"
invStrSet(invStrSet("bar" | "foo")) => "bar" | "foo"
invStrSet(invStrSet("bar")) => "bar"
invStrSet(invStrSet("")) => ""
invStrSet(never) => string
invStrSet(any) => Error: Incompatible argument type: The supplied argument type any is not compatible with the definition type."
`;

exports[`Builtin functions min evaluate 1`] = `
"min(number, -3.14) => -inf..-3.14 | nan
min(number, -2) => -inf..-2 | nan
min(number, -1) => -inf..-1 | nan
min(number, -0.5) => -inf..-0.5 | nan
min(number, 0) => -inf..0 | nan
min(number, 0.5) => -inf..0.5 | nan
min(number, 1) => -inf..1 | nan
min(number, 2) => -inf..2 | nan
min(number, 2.78) => -inf..2.78 | nan
min(number, 3) => -inf..3 | nan
min(number, 3.14) => -inf..3.14 | nan
min(number, 10) => -inf..10 | nan
min(number, 100) => -inf..100 | nan
min(number, -inf) => -inf | nan
min(number, inf) => number
min(number, nan) => nan
min(number, 0..1) => -inf..1 | nan
min(number, 0!..1) => -inf..1 | nan
min(number, 0..!1) => -inf..!1 | nan
min(number, 0..2) => -inf..2 | nan
min(number, 0!..!2) => -inf..!2 | nan
min(number, 0.5..1.5) => -inf..1.5 | nan
min(number, 0.5..2.5) => -inf..2.5 | nan
min(number, 0.5!..2.5) => -inf..2.5 | nan
min(number, 0.5..!2.5) => -inf..!2.5 | nan
min(number, -2.56..3.35) => -inf..3.35 | nan
min(number, 0.5..0.75) => -inf..0.75 | nan
min(number, 1..2) => -inf..2 | nan
min(number, 0..inf) => number
min(number, 0!..inf) => number
min(number, 0..!inf) => -inf..!inf | nan
min(number, 0!..!inf) => -inf..!inf | nan
min(number, 1..inf) => number
min(number, 1!..inf) => number
min(number, 1..!inf) => -inf..!inf | nan
min(number, 2..inf) => number
min(number, 2!..inf) => number
min(number, 2.5..inf) => number
min(number, -inf..0) => -inf..0 | nan
min(number, -inf..inf) => number
min(number, -inf!..inf) => number
min(number, -inf..!inf) => -inf..!inf | nan
min(number, -inf!..!inf) => -inf..!inf | nan
min(number, int(0..1)) => -inf..1 | nan
min(number, int(0..2)) => -inf..2 | nan
min(number, int(1..2)) => -inf..2 | nan
min(number, int(5..20)) => -inf..20 | nan
min(number, int(-20..-5)) => -inf..-5 | nan
min(number, int(-10..10)) => -inf..10 | nan
min(number, int(0..inf)) => -inf..!inf | nan
min(number, int(1..inf)) => -inf..!inf | nan
min(number, int(-inf..0)) => -inf..0 | nan
min(number, int(-inf..1)) => -inf..1 | nan
min(number, int(-inf..inf)) => -inf..!inf | nan
min(number, nonInt(0..1)) => -inf..!1 | nan
min(number, nonInt(0..2)) => -inf..!2 | nan
min(number, nonInt(-1..2)) => -inf..!2 | nan
min(number, nonInt(0..inf)) => -inf..!inf | nan
min(number, nonInt(-1..inf)) => -inf..!inf | nan
min(number, nonInt(-inf..0)) => -inf..!0 | nan
min(number, nonInt(-inf..1)) => -inf..!1 | nan
min(number, nonInt(-inf..inf)) => -inf..!inf | nan
min(number, 1 | int(3..4)) => -inf..4 | nan
min(-3.14, -2) => -3.14
min(-3.14, -1) => -3.14
min(-3.14, -0.5) => -3.14
min(-3.14, 0) => -3.14
min(-3.14, 0.5) => -3.14
min(-3.14, 1) => -3.14
min(-3.14, 2) => -3.14
min(-3.14, 2.78) => -3.14
min(-3.14, 3) => -3.14
min(-3.14, 3.14) => -3.14
min(-3.14, 10) => -3.14
min(-3.14, 100) => -3.14
min(-3.14, -inf) => -inf
min(-3.14, inf) => -3.14
min(-3.14, nan) => nan
min(-3.14, 0..1) => -3.14
min(-3.14, 0!..1) => -3.14
min(-3.14, 0..!1) => -3.14
min(-3.14, 0..2) => -3.14
min(-3.14, 0!..!2) => -3.14
min(-3.14, 0.5..1.5) => -3.14
min(-3.14, 0.5..2.5) => -3.14
min(-3.14, 0.5!..2.5) => -3.14
min(-3.14, 0.5..!2.5) => -3.14
min(-3.14, -2.56..3.35) => -3.14
min(-3.14, 0.5..0.75) => -3.14
min(-3.14, 1..2) => -3.14
min(-3.14, 0..inf) => -3.14
min(-3.14, 0!..inf) => -3.14
min(-3.14, 0..!inf) => -3.14
min(-3.14, 0!..!inf) => -3.14
min(-3.14, 1..inf) => -3.14
min(-3.14, 1!..inf) => -3.14
min(-3.14, 1..!inf) => -3.14
min(-3.14, 2..inf) => -3.14
min(-3.14, 2!..inf) => -3.14
min(-3.14, 2.5..inf) => -3.14
min(-3.14, -inf..0) => -inf..-3.14
min(-3.14, -inf..inf) => -inf..-3.14
min(-3.14, -inf!..inf) => -inf!..-3.14
min(-3.14, -inf..!inf) => -inf..-3.14
min(-3.14, -inf!..!inf) => -inf!..-3.14
min(-3.14, int(0..1)) => -3.14
min(-3.14, int(0..2)) => -3.14
min(-3.14, int(1..2)) => -3.14
min(-3.14, int(5..20)) => -3.14
min(-3.14, int(-20..-5)) => int(-20..-5)
min(-3.14, int(-10..10)) => int(-10..-4) | -3.14
min(-3.14, int(0..inf)) => -3.14
min(-3.14, int(1..inf)) => -3.14
min(-3.14, int(-inf..0)) => int(-inf..-4) | -3.14
min(-3.14, int(-inf..1)) => int(-inf..-4) | -3.14
min(-3.14, int(-inf..inf)) => int(-inf..-4) | -3.14
min(-3.14, nonInt(0..1)) => -3.14
min(-3.14, nonInt(0..2)) => -3.14
min(-3.14, nonInt(-1..2)) => -3.14
min(-3.14, nonInt(0..inf)) => -3.14
min(-3.14, nonInt(-1..inf)) => -3.14
min(-3.14, nonInt(-inf..0)) => nonInt(-inf..-4) | -4!..-3.14
min(-3.14, nonInt(-inf..1)) => nonInt(-inf..-4) | -4!..-3.14
min(-3.14, nonInt(-inf..inf)) => nonInt(-inf..-4) | -4!..-3.14
min(-3.14, 1 | int(3..4)) => -3.14
min(-2, -1) => -2
min(-2, -0.5) => -2
min(-2, 0) => -2
min(-2, 0.5) => -2
min(-2, 1) => -2
min(-2, 2) => -2
min(-2, 2.78) => -2
min(-2, 3) => -2
min(-2, 3.14) => -2
min(-2, 10) => -2
min(-2, 100) => -2
min(-2, -inf) => -inf
min(-2, inf) => -2
min(-2, nan) => nan
min(-2, 0..1) => -2
min(-2, 0!..1) => -2
min(-2, 0..!1) => -2
min(-2, 0..2) => -2
min(-2, 0!..!2) => -2
min(-2, 0.5..1.5) => -2
min(-2, 0.5..2.5) => -2
min(-2, 0.5!..2.5) => -2
min(-2, 0.5..!2.5) => -2
min(-2, -2.56..3.35) => -2.56..-2
min(-2, 0.5..0.75) => -2
min(-2, 1..2) => -2
min(-2, 0..inf) => -2
min(-2, 0!..inf) => -2
min(-2, 0..!inf) => -2
min(-2, 0!..!inf) => -2
min(-2, 1..inf) => -2
min(-2, 1!..inf) => -2
min(-2, 1..!inf) => -2
min(-2, 2..inf) => -2
min(-2, 2!..inf) => -2
min(-2, 2.5..inf) => -2
min(-2, -inf..0) => -inf..-2
min(-2, -inf..inf) => -inf..-2
min(-2, -inf!..inf) => -inf!..-2
min(-2, -inf..!inf) => -inf..-2
min(-2, -inf!..!inf) => -inf!..-2
min(-2, int(0..1)) => -2
min(-2, int(0..2)) => -2
min(-2, int(1..2)) => -2
min(-2, int(5..20)) => -2
min(-2, int(-20..-5)) => int(-20..-5)
min(-2, int(-10..10)) => int(-10..-2)
min(-2, int(0..inf)) => -2
min(-2, int(1..inf)) => -2
min(-2, int(-inf..0)) => int(-inf..-2)
min(-2, int(-inf..1)) => int(-inf..-2)
min(-2, int(-inf..inf)) => int(-inf..-2)
min(-2, nonInt(0..1)) => -2
min(-2, nonInt(0..2)) => -2
min(-2, nonInt(-1..2)) => -2
min(-2, nonInt(0..inf)) => -2
min(-2, nonInt(-1..inf)) => -2
min(-2, nonInt(-inf..0)) => nonInt(-inf..-3) | -3!..-2
min(-2, nonInt(-inf..1)) => nonInt(-inf..-3) | -3!..-2
min(-2, nonInt(-inf..inf)) => nonInt(-inf..-3) | -3!..-2
min(-2, 1 | int(3..4)) => -2
min(-1, -0.5) => -1
min(-1, 0) => -1
min(-1, 0.5) => -1
min(-1, 1) => -1
min(-1, 2) => -1
min(-1, 2.78) => -1
min(-1, 3) => -1
min(-1, 3.14) => -1
min(-1, 10) => -1
min(-1, 100) => -1
min(-1, -inf) => -inf
min(-1, inf) => -1
min(-1, nan) => nan
min(-1, 0..1) => -1
min(-1, 0!..1) => -1
min(-1, 0..!1) => -1
min(-1, 0..2) => -1
min(-1, 0!..!2) => -1
min(-1, 0.5..1.5) => -1
min(-1, 0.5..2.5) => -1
min(-1, 0.5!..2.5) => -1
min(-1, 0.5..!2.5) => -1
min(-1, -2.56..3.35) => -2.56..-1
min(-1, 0.5..0.75) => -1
min(-1, 1..2) => -1
min(-1, 0..inf) => -1
min(-1, 0!..inf) => -1
min(-1, 0..!inf) => -1
min(-1, 0!..!inf) => -1
min(-1, 1..inf) => -1
min(-1, 1!..inf) => -1
min(-1, 1..!inf) => -1
min(-1, 2..inf) => -1
min(-1, 2!..inf) => -1
min(-1, 2.5..inf) => -1
min(-1, -inf..0) => -inf..-1
min(-1, -inf..inf) => -inf..-1
min(-1, -inf!..inf) => -inf!..-1
min(-1, -inf..!inf) => -inf..-1
min(-1, -inf!..!inf) => -inf!..-1
min(-1, int(0..1)) => -1
min(-1, int(0..2)) => -1
min(-1, int(1..2)) => -1
min(-1, int(5..20)) => -1
min(-1, int(-20..-5)) => int(-20..-5)
min(-1, int(-10..10)) => int(-10..-1)
min(-1, int(0..inf)) => -1
min(-1, int(1..inf)) => -1
min(-1, int(-inf..0)) => int(-inf..-1)
min(-1, int(-inf..1)) => int(-inf..-1)
min(-1, int(-inf..inf)) => int(-inf..-1)
min(-1, nonInt(0..1)) => -1
min(-1, nonInt(0..2)) => -1
min(-1, nonInt(-1..2)) => -1
min(-1, nonInt(0..inf)) => -1
min(-1, nonInt(-1..inf)) => -1
min(-1, nonInt(-inf..0)) => nonInt(-inf..-2) | -2!..-1
min(-1, nonInt(-inf..1)) => nonInt(-inf..-2) | -2!..-1
min(-1, nonInt(-inf..inf)) => nonInt(-inf..-2) | -2!..-1
min(-1, 1 | int(3..4)) => -1
min(-0.5, 0) => -0.5
min(-0.5, 0.5) => -0.5
min(-0.5, 1) => -0.5
min(-0.5, 2) => -0.5
min(-0.5, 2.78) => -0.5
min(-0.5, 3) => -0.5
min(-0.5, 3.14) => -0.5
min(-0.5, 10) => -0.5
min(-0.5, 100) => -0.5
min(-0.5, -inf) => -inf
min(-0.5, inf) => -0.5
min(-0.5, nan) => nan
min(-0.5, 0..1) => -0.5
min(-0.5, 0!..1) => -0.5
min(-0.5, 0..!1) => -0.5
min(-0.5, 0..2) => -0.5
min(-0.5, 0!..!2) => -0.5
min(-0.5, 0.5..1.5) => -0.5
min(-0.5, 0.5..2.5) => -0.5
min(-0.5, 0.5!..2.5) => -0.5
min(-0.5, 0.5..!2.5) => -0.5
min(-0.5, -2.56..3.35) => -2.56..-0.5
min(-0.5, 0.5..0.75) => -0.5
min(-0.5, 1..2) => -0.5
min(-0.5, 0..inf) => -0.5
min(-0.5, 0!..inf) => -0.5
min(-0.5, 0..!inf) => -0.5
min(-0.5, 0!..!inf) => -0.5
min(-0.5, 1..inf) => -0.5
min(-0.5, 1!..inf) => -0.5
min(-0.5, 1..!inf) => -0.5
min(-0.5, 2..inf) => -0.5
min(-0.5, 2!..inf) => -0.5
min(-0.5, 2.5..inf) => -0.5
min(-0.5, -inf..0) => -inf..-0.5
min(-0.5, -inf..inf) => -inf..-0.5
min(-0.5, -inf!..inf) => -inf!..-0.5
min(-0.5, -inf..!inf) => -inf..-0.5
min(-0.5, -inf!..!inf) => -inf!..-0.5
min(-0.5, int(0..1)) => -0.5
min(-0.5, int(0..2)) => -0.5
min(-0.5, int(1..2)) => -0.5
min(-0.5, int(5..20)) => -0.5
min(-0.5, int(-20..-5)) => int(-20..-5)
min(-0.5, int(-10..10)) => int(-10..-1) | -0.5
min(-0.5, int(0..inf)) => -0.5
min(-0.5, int(1..inf)) => -0.5
min(-0.5, int(-inf..0)) => int(-inf..-1) | -0.5
min(-0.5, int(-inf..1)) => int(-inf..-1) | -0.5
min(-0.5, int(-inf..inf)) => int(-inf..-1) | -0.5
min(-0.5, nonInt(0..1)) => -0.5
min(-0.5, nonInt(0..2)) => -0.5
min(-0.5, nonInt(-1..2)) => -1!..-0.5
min(-0.5, nonInt(0..inf)) => -0.5
min(-0.5, nonInt(-1..inf)) => -1!..-0.5
min(-0.5, nonInt(-inf..0)) => nonInt(-inf..-1) | -1!..-0.5
min(-0.5, nonInt(-inf..1)) => nonInt(-inf..-1) | -1!..-0.5
min(-0.5, nonInt(-inf..inf)) => nonInt(-inf..-1) | -1!..-0.5
min(-0.5, 1 | int(3..4)) => -0.5
min(0, 0.5) => 0
min(0, 1) => 0
min(0, 2) => 0
min(0, 2.78) => 0
min(0, 3) => 0
min(0, 3.14) => 0
min(0, 10) => 0
min(0, 100) => 0
min(0, -inf) => -inf
min(0, inf) => 0
min(0, nan) => nan
min(0, 0..1) => 0
min(0, 0!..1) => 0
min(0, 0..!1) => 0
min(0, 0..2) => 0
min(0, 0!..!2) => 0
min(0, 0.5..1.5) => 0
min(0, 0.5..2.5) => 0
min(0, 0.5!..2.5) => 0
min(0, 0.5..!2.5) => 0
min(0, -2.56..3.35) => -2.56..0
min(0, 0.5..0.75) => 0
min(0, 1..2) => 0
min(0, 0..inf) => 0
min(0, 0!..inf) => 0
min(0, 0..!inf) => 0
min(0, 0!..!inf) => 0
min(0, 1..inf) => 0
min(0, 1!..inf) => 0
min(0, 1..!inf) => 0
min(0, 2..inf) => 0
min(0, 2!..inf) => 0
min(0, 2.5..inf) => 0
min(0, -inf..0) => -inf..0
min(0, -inf..inf) => -inf..0
min(0, -inf!..inf) => -inf!..0
min(0, -inf..!inf) => -inf..0
min(0, -inf!..!inf) => -inf!..0
min(0, int(0..1)) => 0
min(0, int(0..2)) => 0
min(0, int(1..2)) => 0
min(0, int(5..20)) => 0
min(0, int(-20..-5)) => int(-20..-5)
min(0, int(-10..10)) => int(-10..0)
min(0, int(0..inf)) => 0
min(0, int(1..inf)) => 0
min(0, int(-inf..0)) => int(-inf..0)
min(0, int(-inf..1)) => int(-inf..0)
min(0, int(-inf..inf)) => int(-inf..0)
min(0, nonInt(0..1)) => 0
min(0, nonInt(0..2)) => 0
min(0, nonInt(-1..2)) => -1!..0
min(0, nonInt(0..inf)) => 0
min(0, nonInt(-1..inf)) => -1!..0
min(0, nonInt(-inf..0)) => nonInt(-inf..0)
min(0, nonInt(-inf..1)) => nonInt(-inf..-1) | -1!..0
min(0, nonInt(-inf..inf)) => nonInt(-inf..-1) | -1!..0
min(0, 1 | int(3..4)) => 0
min(0.5, 1) => 0.5
min(0.5, 2) => 0.5
min(0.5, 2.78) => 0.5
min(0.5, 3) => 0.5
min(0.5, 3.14) => 0.5
min(0.5, 10) => 0.5
min(0.5, 100) => 0.5
min(0.5, -inf) => -inf
min(0.5, inf) => 0.5
min(0.5, nan) => nan
min(0.5, 0..1) => 0..0.5
min(0.5, 0!..1) => 0!..0.5
min(0.5, 0..!1) => 0..0.5
min(0.5, 0..2) => 0..0.5
min(0.5, 0!..!2) => 0!..0.5
min(0.5, 0.5..1.5) => 0.5
min(0.5, 0.5..2.5) => 0.5
min(0.5, 0.5!..2.5) => 0.5
min(0.5, 0.5..!2.5) => 0.5
min(0.5, -2.56..3.35) => -2.56..0.5
min(0.5, 0.5..0.75) => 0.5
min(0.5, 1..2) => 0.5
min(0.5, 0..inf) => 0..0.5
min(0.5, 0!..inf) => 0!..0.5
min(0.5, 0..!inf) => 0..0.5
min(0.5, 0!..!inf) => 0!..0.5
min(0.5, 1..inf) => 0.5
min(0.5, 1!..inf) => 0.5
min(0.5, 1..!inf) => 0.5
min(0.5, 2..inf) => 0.5
min(0.5, 2!..inf) => 0.5
min(0.5, 2.5..inf) => 0.5
min(0.5, -inf..0) => -inf..0
min(0.5, -inf..inf) => -inf..0.5
min(0.5, -inf!..inf) => -inf!..0.5
min(0.5, -inf..!inf) => -inf..0.5
min(0.5, -inf!..!inf) => -inf!..0.5
min(0.5, int(0..1)) => 0 | 0.5
min(0.5, int(0..2)) => 0 | 0.5
min(0.5, int(1..2)) => 0.5
min(0.5, int(5..20)) => 0.5
min(0.5, int(-20..-5)) => int(-20..-5)
min(0.5, int(-10..10)) => int(-10..0) | 0.5
min(0.5, int(0..inf)) => 0 | 0.5
min(0.5, int(1..inf)) => 0.5
min(0.5, int(-inf..0)) => int(-inf..0)
min(0.5, int(-inf..1)) => int(-inf..0) | 0.5
min(0.5, int(-inf..inf)) => int(-inf..0) | 0.5
min(0.5, nonInt(0..1)) => 0!..0.5
min(0.5, nonInt(0..2)) => 0!..0.5
min(0.5, nonInt(-1..2)) => nonInt(-1..0) | 0!..0.5
min(0.5, nonInt(0..inf)) => 0!..0.5
min(0.5, nonInt(-1..inf)) => nonInt(-1..0) | 0!..0.5
min(0.5, nonInt(-inf..0)) => nonInt(-inf..0)
min(0.5, nonInt(-inf..1)) => nonInt(-inf..0) | 0!..0.5
min(0.5, nonInt(-inf..inf)) => nonInt(-inf..0) | 0!..0.5
min(0.5, 1 | int(3..4)) => 0.5
min(1, 2) => 1
min(1, 2.78) => 1
min(1, 3) => 1
min(1, 3.14) => 1
min(1, 10) => 1
min(1, 100) => 1
min(1, -inf) => -inf
min(1, inf) => 1
min(1, nan) => nan
min(1, 0..1) => 0..1
min(1, 0!..1) => 0!..1
min(1, 0..!1) => 0..!1
min(1, 0..2) => 0..1
min(1, 0!..!2) => 0!..1
min(1, 0.5..1.5) => 0.5..1
min(1, 0.5..2.5) => 0.5..1
min(1, 0.5!..2.5) => 0.5!..1
min(1, 0.5..!2.5) => 0.5..1
min(1, -2.56..3.35) => -2.56..1
min(1, 0.5..0.75) => 0.5..0.75
min(1, 1..2) => 1
min(1, 0..inf) => 0..1
min(1, 0!..inf) => 0!..1
min(1, 0..!inf) => 0..1
min(1, 0!..!inf) => 0!..1
min(1, 1..inf) => 1
min(1, 1!..inf) => 1
min(1, 1..!inf) => 1
min(1, 2..inf) => 1
min(1, 2!..inf) => 1
min(1, 2.5..inf) => 1
min(1, -inf..0) => -inf..0
min(1, -inf..inf) => -inf..1
min(1, -inf!..inf) => -inf!..1
min(1, -inf..!inf) => -inf..1
min(1, -inf!..!inf) => -inf!..1
min(1, int(0..1)) => int(0..1)
min(1, int(0..2)) => int(0..1)
min(1, int(1..2)) => 1
min(1, int(5..20)) => 1
min(1, int(-20..-5)) => int(-20..-5)
min(1, int(-10..10)) => int(-10..1)
min(1, int(0..inf)) => int(0..1)
min(1, int(1..inf)) => 1
min(1, int(-inf..0)) => int(-inf..0)
min(1, int(-inf..1)) => int(-inf..1)
min(1, int(-inf..inf)) => int(-inf..1)
min(1, nonInt(0..1)) => nonInt(0..1)
min(1, nonInt(0..2)) => 0!..1
min(1, nonInt(-1..2)) => nonInt(-1..0) | 0!..1
min(1, nonInt(0..inf)) => 0!..1
min(1, nonInt(-1..inf)) => nonInt(-1..0) | 0!..1
min(1, nonInt(-inf..0)) => nonInt(-inf..0)
min(1, nonInt(-inf..1)) => nonInt(-inf..1)
min(1, nonInt(-inf..inf)) => nonInt(-inf..0) | 0!..1
min(1, 1 | int(3..4)) => 1
min(2, 2.78) => 2
min(2, 3) => 2
min(2, 3.14) => 2
min(2, 10) => 2
min(2, 100) => 2
min(2, -inf) => -inf
min(2, inf) => 2
min(2, nan) => nan
min(2, 0..1) => 0..1
min(2, 0!..1) => 0!..1
min(2, 0..!1) => 0..!1
min(2, 0..2) => 0..2
min(2, 0!..!2) => 0!..!2
min(2, 0.5..1.5) => 0.5..1.5
min(2, 0.5..2.5) => 0.5..2
min(2, 0.5!..2.5) => 0.5!..2
min(2, 0.5..!2.5) => 0.5..2
min(2, -2.56..3.35) => -2.56..2
min(2, 0.5..0.75) => 0.5..0.75
min(2, 1..2) => 1..2
min(2, 0..inf) => 0..2
min(2, 0!..inf) => 0!..2
min(2, 0..!inf) => 0..2
min(2, 0!..!inf) => 0!..2
min(2, 1..inf) => 1..2
min(2, 1!..inf) => 1!..2
min(2, 1..!inf) => 1..2
min(2, 2..inf) => 2
min(2, 2!..inf) => 2
min(2, 2.5..inf) => 2
min(2, -inf..0) => -inf..0
min(2, -inf..inf) => -inf..2
min(2, -inf!..inf) => -inf!..2
min(2, -inf..!inf) => -inf..2
min(2, -inf!..!inf) => -inf!..2
min(2, int(0..1)) => int(0..1)
min(2, int(0..2)) => int(0..2)
min(2, int(1..2)) => int(1..2)
min(2, int(5..20)) => 2
min(2, int(-20..-5)) => int(-20..-5)
min(2, int(-10..10)) => int(-10..2)
min(2, int(0..inf)) => int(0..2)
min(2, int(1..inf)) => int(1..2)
min(2, int(-inf..0)) => int(-inf..0)
min(2, int(-inf..1)) => int(-inf..1)
min(2, int(-inf..inf)) => int(-inf..2)
min(2, nonInt(0..1)) => nonInt(0..1)
min(2, nonInt(0..2)) => nonInt(0..2)
min(2, nonInt(-1..2)) => nonInt(-1..2)
min(2, nonInt(0..inf)) => nonInt(0..1) | 1!..2
min(2, nonInt(-1..inf)) => nonInt(-1..1) | 1!..2
min(2, nonInt(-inf..0)) => nonInt(-inf..0)
min(2, nonInt(-inf..1)) => nonInt(-inf..1)
min(2, nonInt(-inf..inf)) => nonInt(-inf..1) | 1!..2
min(2, 1 | int(3..4)) => int(1..2)
min(2.78, 3) => 2.78
min(2.78, 3.14) => 2.78
min(2.78, 10) => 2.78
min(2.78, 100) => 2.78
min(2.78, -inf) => -inf
min(2.78, inf) => 2.78
min(2.78, nan) => nan
min(2.78, 0..1) => 0..1
min(2.78, 0!..1) => 0!..1
min(2.78, 0..!1) => 0..!1
min(2.78, 0..2) => 0..2
min(2.78, 0!..!2) => 0!..!2
min(2.78, 0.5..1.5) => 0.5..1.5
min(2.78, 0.5..2.5) => 0.5..2.5
min(2.78, 0.5!..2.5) => 0.5!..2.5
min(2.78, 0.5..!2.5) => 0.5..!2.5
min(2.78, -2.56..3.35) => -2.56..2.78
min(2.78, 0.5..0.75) => 0.5..0.75
min(2.78, 1..2) => 1..2
min(2.78, 0..inf) => 0..2.78
min(2.78, 0!..inf) => 0!..2.78
min(2.78, 0..!inf) => 0..2.78
min(2.78, 0!..!inf) => 0!..2.78
min(2.78, 1..inf) => 1..2.78
min(2.78, 1!..inf) => 1!..2.78
min(2.78, 1..!inf) => 1..2.78
min(2.78, 2..inf) => 2..2.78
min(2.78, 2!..inf) => 2!..2.78
min(2.78, 2.5..inf) => 2.5..2.78
min(2.78, -inf..0) => -inf..0
min(2.78, -inf..inf) => -inf..2.78
min(2.78, -inf!..inf) => -inf!..2.78
min(2.78, -inf..!inf) => -inf..2.78
min(2.78, -inf!..!inf) => -inf!..2.78
min(2.78, int(0..1)) => int(0..1)
min(2.78, int(0..2)) => int(0..2)
min(2.78, int(1..2)) => int(1..2)
min(2.78, int(5..20)) => 2.78
min(2.78, int(-20..-5)) => int(-20..-5)
min(2.78, int(-10..10)) => int(-10..2) | 2.78
min(2.78, int(0..inf)) => int(0..2) | 2.78
min(2.78, int(1..inf)) => int(1..2) | 2.78
min(2.78, int(-inf..0)) => int(-inf..0)
min(2.78, int(-inf..1)) => int(-inf..1)
min(2.78, int(-inf..inf)) => int(-inf..2) | 2.78
min(2.78, nonInt(0..1)) => nonInt(0..1)
min(2.78, nonInt(0..2)) => nonInt(0..2)
min(2.78, nonInt(-1..2)) => nonInt(-1..2)
min(2.78, nonInt(0..inf)) => nonInt(0..2) | 2!..2.78
min(2.78, nonInt(-1..inf)) => nonInt(-1..2) | 2!..2.78
min(2.78, nonInt(-inf..0)) => nonInt(-inf..0)
min(2.78, nonInt(-inf..1)) => nonInt(-inf..1)
min(2.78, nonInt(-inf..inf)) => nonInt(-inf..2) | 2!..2.78
min(2.78, 1 | int(3..4)) => 1 | 2.78
min(3, 3.14) => 3
min(3, 10) => 3
min(3, 100) => 3
min(3, -inf) => -inf
min(3, inf) => 3
min(3, nan) => nan
min(3, 0..1) => 0..1
min(3, 0!..1) => 0!..1
min(3, 0..!1) => 0..!1
min(3, 0..2) => 0..2
min(3, 0!..!2) => 0!..!2
min(3, 0.5..1.5) => 0.5..1.5
min(3, 0.5..2.5) => 0.5..2.5
min(3, 0.5!..2.5) => 0.5!..2.5
min(3, 0.5..!2.5) => 0.5..!2.5
min(3, -2.56..3.35) => -2.56..3
min(3, 0.5..0.75) => 0.5..0.75
min(3, 1..2) => 1..2
min(3, 0..inf) => 0..3
min(3, 0!..inf) => 0!..3
min(3, 0..!inf) => 0..3
min(3, 0!..!inf) => 0!..3
min(3, 1..inf) => 1..3
min(3, 1!..inf) => 1!..3
min(3, 1..!inf) => 1..3
min(3, 2..inf) => 2..3
min(3, 2!..inf) => 2!..3
min(3, 2.5..inf) => 2.5..3
min(3, -inf..0) => -inf..0
min(3, -inf..inf) => -inf..3
min(3, -inf!..inf) => -inf!..3
min(3, -inf..!inf) => -inf..3
min(3, -inf!..!inf) => -inf!..3
min(3, int(0..1)) => int(0..1)
min(3, int(0..2)) => int(0..2)
min(3, int(1..2)) => int(1..2)
min(3, int(5..20)) => 3
min(3, int(-20..-5)) => int(-20..-5)
min(3, int(-10..10)) => int(-10..3)
min(3, int(0..inf)) => int(0..3)
min(3, int(1..inf)) => int(1..3)
min(3, int(-inf..0)) => int(-inf..0)
min(3, int(-inf..1)) => int(-inf..1)
min(3, int(-inf..inf)) => int(-inf..3)
min(3, nonInt(0..1)) => nonInt(0..1)
min(3, nonInt(0..2)) => nonInt(0..2)
min(3, nonInt(-1..2)) => nonInt(-1..2)
min(3, nonInt(0..inf)) => nonInt(0..2) | 2!..3
min(3, nonInt(-1..inf)) => nonInt(-1..2) | 2!..3
min(3, nonInt(-inf..0)) => nonInt(-inf..0)
min(3, nonInt(-inf..1)) => nonInt(-inf..1)
min(3, nonInt(-inf..inf)) => nonInt(-inf..2) | 2!..3
min(3, 1 | int(3..4)) => 1 | 3
min(3.14, 10) => 3.14
min(3.14, 100) => 3.14
min(3.14, -inf) => -inf
min(3.14, inf) => 3.14
min(3.14, nan) => nan
min(3.14, 0..1) => 0..1
min(3.14, 0!..1) => 0!..1
min(3.14, 0..!1) => 0..!1
min(3.14, 0..2) => 0..2
min(3.14, 0!..!2) => 0!..!2
min(3.14, 0.5..1.5) => 0.5..1.5
min(3.14, 0.5..2.5) => 0.5..2.5
min(3.14, 0.5!..2.5) => 0.5!..2.5
min(3.14, 0.5..!2.5) => 0.5..!2.5
min(3.14, -2.56..3.35) => -2.56..3.14
min(3.14, 0.5..0.75) => 0.5..0.75
min(3.14, 1..2) => 1..2
min(3.14, 0..inf) => 0..3.14
min(3.14, 0!..inf) => 0!..3.14
min(3.14, 0..!inf) => 0..3.14
min(3.14, 0!..!inf) => 0!..3.14
min(3.14, 1..inf) => 1..3.14
min(3.14, 1!..inf) => 1!..3.14
min(3.14, 1..!inf) => 1..3.14
min(3.14, 2..inf) => 2..3.14
min(3.14, 2!..inf) => 2!..3.14
min(3.14, 2.5..inf) => 2.5..3.14
min(3.14, -inf..0) => -inf..0
min(3.14, -inf..inf) => -inf..3.14
min(3.14, -inf!..inf) => -inf!..3.14
min(3.14, -inf..!inf) => -inf..3.14
min(3.14, -inf!..!inf) => -inf!..3.14
min(3.14, int(0..1)) => int(0..1)
min(3.14, int(0..2)) => int(0..2)
min(3.14, int(1..2)) => int(1..2)
min(3.14, int(5..20)) => 3.14
min(3.14, int(-20..-5)) => int(-20..-5)
min(3.14, int(-10..10)) => int(-10..3) | 3.14
min(3.14, int(0..inf)) => int(0..3) | 3.14
min(3.14, int(1..inf)) => int(1..3) | 3.14
min(3.14, int(-inf..0)) => int(-inf..0)
min(3.14, int(-inf..1)) => int(-inf..1)
min(3.14, int(-inf..inf)) => int(-inf..3) | 3.14
min(3.14, nonInt(0..1)) => nonInt(0..1)
min(3.14, nonInt(0..2)) => nonInt(0..2)
min(3.14, nonInt(-1..2)) => nonInt(-1..2)
min(3.14, nonInt(0..inf)) => nonInt(0..3) | 3!..3.14
min(3.14, nonInt(-1..inf)) => nonInt(-1..3) | 3!..3.14
min(3.14, nonInt(-inf..0)) => nonInt(-inf..0)
min(3.14, nonInt(-inf..1)) => nonInt(-inf..1)
min(3.14, nonInt(-inf..inf)) => nonInt(-inf..3) | 3!..3.14
min(3.14, 1 | int(3..4)) => 1 | 3 | 3.14
min(10, 100) => 10
min(10, -inf) => -inf
min(10, inf) => 10
min(10, nan) => nan
min(10, 0..1) => 0..1
min(10, 0!..1) => 0!..1
min(10, 0..!1) => 0..!1
min(10, 0..2) => 0..2
min(10, 0!..!2) => 0!..!2
min(10, 0.5..1.5) => 0.5..1.5
min(10, 0.5..2.5) => 0.5..2.5
min(10, 0.5!..2.5) => 0.5!..2.5
min(10, 0.5..!2.5) => 0.5..!2.5
min(10, -2.56..3.35) => -2.56..3.35
min(10, 0.5..0.75) => 0.5..0.75
min(10, 1..2) => 1..2
min(10, 0..inf) => 0..10
min(10, 0!..inf) => 0!..10
min(10, 0..!inf) => 0..10
min(10, 0!..!inf) => 0!..10
min(10, 1..inf) => 1..10
min(10, 1!..inf) => 1!..10
min(10, 1..!inf) => 1..10
min(10, 2..inf) => 2..10
min(10, 2!..inf) => 2!..10
min(10, 2.5..inf) => 2.5..10
min(10, -inf..0) => -inf..0
min(10, -inf..inf) => -inf..10
min(10, -inf!..inf) => -inf!..10
min(10, -inf..!inf) => -inf..10
min(10, -inf!..!inf) => -inf!..10
min(10, int(0..1)) => int(0..1)
min(10, int(0..2)) => int(0..2)
min(10, int(1..2)) => int(1..2)
min(10, int(5..20)) => int(5..10)
min(10, int(-20..-5)) => int(-20..-5)
min(10, int(-10..10)) => int(-10..10)
min(10, int(0..inf)) => int(0..10)
min(10, int(1..inf)) => int(1..10)
min(10, int(-inf..0)) => int(-inf..0)
min(10, int(-inf..1)) => int(-inf..1)
min(10, int(-inf..inf)) => int(-inf..10)
min(10, nonInt(0..1)) => nonInt(0..1)
min(10, nonInt(0..2)) => nonInt(0..2)
min(10, nonInt(-1..2)) => nonInt(-1..2)
min(10, nonInt(0..inf)) => nonInt(0..9) | 9!..10
min(10, nonInt(-1..inf)) => nonInt(-1..9) | 9!..10
min(10, nonInt(-inf..0)) => nonInt(-inf..0)
min(10, nonInt(-inf..1)) => nonInt(-inf..1)
min(10, nonInt(-inf..inf)) => nonInt(-inf..9) | 9!..10
min(10, 1 | int(3..4)) => 1 | int(3..4)
min(100, -inf) => -inf
min(100, inf) => 100
min(100, nan) => nan
min(100, 0..1) => 0..1
min(100, 0!..1) => 0!..1
min(100, 0..!1) => 0..!1
min(100, 0..2) => 0..2
min(100, 0!..!2) => 0!..!2
min(100, 0.5..1.5) => 0.5..1.5
min(100, 0.5..2.5) => 0.5..2.5
min(100, 0.5!..2.5) => 0.5!..2.5
min(100, 0.5..!2.5) => 0.5..!2.5
min(100, -2.56..3.35) => -2.56..3.35
min(100, 0.5..0.75) => 0.5..0.75
min(100, 1..2) => 1..2
min(100, 0..inf) => 0..100
min(100, 0!..inf) => 0!..100
min(100, 0..!inf) => 0..100
min(100, 0!..!inf) => 0!..100
min(100, 1..inf) => 1..100
min(100, 1!..inf) => 1!..100
min(100, 1..!inf) => 1..100
min(100, 2..inf) => 2..100
min(100, 2!..inf) => 2!..100
min(100, 2.5..inf) => 2.5..100
min(100, -inf..0) => -inf..0
min(100, -inf..inf) => -inf..100
min(100, -inf!..inf) => -inf!..100
min(100, -inf..!inf) => -inf..100
min(100, -inf!..!inf) => -inf!..100
min(100, int(0..1)) => int(0..1)
min(100, int(0..2)) => int(0..2)
min(100, int(1..2)) => int(1..2)
min(100, int(5..20)) => int(5..20)
min(100, int(-20..-5)) => int(-20..-5)
min(100, int(-10..10)) => int(-10..10)
min(100, int(0..inf)) => int(0..100)
min(100, int(1..inf)) => int(1..100)
min(100, int(-inf..0)) => int(-inf..0)
min(100, int(-inf..1)) => int(-inf..1)
min(100, int(-inf..inf)) => int(-inf..100)
min(100, nonInt(0..1)) => nonInt(0..1)
min(100, nonInt(0..2)) => nonInt(0..2)
min(100, nonInt(-1..2)) => nonInt(-1..2)
min(100, nonInt(0..inf)) => nonInt(0..99) | 99!..100
min(100, nonInt(-1..inf)) => nonInt(-1..99) | 99!..100
min(100, nonInt(-inf..0)) => nonInt(-inf..0)
min(100, nonInt(-inf..1)) => nonInt(-inf..1)
min(100, nonInt(-inf..inf)) => nonInt(-inf..99) | 99!..100
min(100, 1 | int(3..4)) => 1 | int(3..4)
min(-inf, inf) => -inf
min(-inf, nan) => nan
min(-inf, 0..1) => -inf
min(-inf, 0!..1) => -inf
min(-inf, 0..!1) => -inf
min(-inf, 0..2) => -inf
min(-inf, 0!..!2) => -inf
min(-inf, 0.5..1.5) => -inf
min(-inf, 0.5..2.5) => -inf
min(-inf, 0.5!..2.5) => -inf
min(-inf, 0.5..!2.5) => -inf
min(-inf, -2.56..3.35) => -inf
min(-inf, 0.5..0.75) => -inf
min(-inf, 1..2) => -inf
min(-inf, 0..inf) => -inf
min(-inf, 0!..inf) => -inf
min(-inf, 0..!inf) => -inf
min(-inf, 0!..!inf) => -inf
min(-inf, 1..inf) => -inf
min(-inf, 1!..inf) => -inf
min(-inf, 1..!inf) => -inf
min(-inf, 2..inf) => -inf
min(-inf, 2!..inf) => -inf
min(-inf, 2.5..inf) => -inf
min(-inf, -inf..0) => -inf
min(-inf, -inf..inf) => -inf
min(-inf, -inf!..inf) => -inf
min(-inf, -inf..!inf) => -inf
min(-inf, -inf!..!inf) => -inf
min(-inf, int(0..1)) => -inf
min(-inf, int(0..2)) => -inf
min(-inf, int(1..2)) => -inf
min(-inf, int(5..20)) => -inf
min(-inf, int(-20..-5)) => -inf
min(-inf, int(-10..10)) => -inf
min(-inf, int(0..inf)) => -inf
min(-inf, int(1..inf)) => -inf
min(-inf, int(-inf..0)) => -inf
min(-inf, int(-inf..1)) => -inf
min(-inf, int(-inf..inf)) => -inf
min(-inf, nonInt(0..1)) => -inf
min(-inf, nonInt(0..2)) => -inf
min(-inf, nonInt(-1..2)) => -inf
min(-inf, nonInt(0..inf)) => -inf
min(-inf, nonInt(-1..inf)) => -inf
min(-inf, nonInt(-inf..0)) => -inf
min(-inf, nonInt(-inf..1)) => -inf
min(-inf, nonInt(-inf..inf)) => -inf
min(-inf, 1 | int(3..4)) => -inf
min(inf, nan) => nan
min(inf, 0..1) => 0..1
min(inf, 0!..1) => 0!..1
min(inf, 0..!1) => 0..!1
min(inf, 0..2) => 0..2
min(inf, 0!..!2) => 0!..!2
min(inf, 0.5..1.5) => 0.5..1.5
min(inf, 0.5..2.5) => 0.5..2.5
min(inf, 0.5!..2.5) => 0.5!..2.5
min(inf, 0.5..!2.5) => 0.5..!2.5
min(inf, -2.56..3.35) => -2.56..3.35
min(inf, 0.5..0.75) => 0.5..0.75
min(inf, 1..2) => 1..2
min(inf, 0..inf) => 0..inf
min(inf, 0!..inf) => 0!..inf
min(inf, 0..!inf) => 0..!inf
min(inf, 0!..!inf) => 0!..!inf
min(inf, 1..inf) => 1..inf
min(inf, 1!..inf) => 1!..inf
min(inf, 1..!inf) => 1..!inf
min(inf, 2..inf) => 2..inf
min(inf, 2!..inf) => 2!..inf
min(inf, 2.5..inf) => 2.5..inf
min(inf, -inf..0) => -inf..0
min(inf, -inf..inf) => -inf..inf
min(inf, -inf!..inf) => -inf!..inf
min(inf, -inf..!inf) => -inf..!inf
min(inf, -inf!..!inf) => -inf!..!inf
min(inf, int(0..1)) => int(0..1)
min(inf, int(0..2)) => int(0..2)
min(inf, int(1..2)) => int(1..2)
min(inf, int(5..20)) => int(5..20)
min(inf, int(-20..-5)) => int(-20..-5)
min(inf, int(-10..10)) => int(-10..10)
min(inf, int(0..inf)) => int(0..inf)
min(inf, int(1..inf)) => int(1..inf)
min(inf, int(-inf..0)) => int(-inf..0)
min(inf, int(-inf..1)) => int(-inf..1)
min(inf, int(-inf..inf)) => int(-inf..inf)
min(inf, nonInt(0..1)) => nonInt(0..1)
min(inf, nonInt(0..2)) => nonInt(0..2)
min(inf, nonInt(-1..2)) => nonInt(-1..2)
min(inf, nonInt(0..inf)) => nonInt(0..inf)
min(inf, nonInt(-1..inf)) => nonInt(-1..inf)
min(inf, nonInt(-inf..0)) => nonInt(-inf..0)
min(inf, nonInt(-inf..1)) => nonInt(-inf..1)
min(inf, nonInt(-inf..inf)) => nonInt(-inf..inf)
min(inf, 1 | int(3..4)) => 1 | int(3..4)
min(nan, 0..1) => nan
min(nan, 0!..1) => nan
min(nan, 0..!1) => nan
min(nan, 0..2) => nan
min(nan, 0!..!2) => nan
min(nan, 0.5..1.5) => nan
min(nan, 0.5..2.5) => nan
min(nan, 0.5!..2.5) => nan
min(nan, 0.5..!2.5) => nan
min(nan, -2.56..3.35) => nan
min(nan, 0.5..0.75) => nan
min(nan, 1..2) => nan
min(nan, 0..inf) => nan
min(nan, 0!..inf) => nan
min(nan, 0..!inf) => nan
min(nan, 0!..!inf) => nan
min(nan, 1..inf) => nan
min(nan, 1!..inf) => nan
min(nan, 1..!inf) => nan
min(nan, 2..inf) => nan
min(nan, 2!..inf) => nan
min(nan, 2.5..inf) => nan
min(nan, -inf..0) => nan
min(nan, -inf..inf) => nan
min(nan, -inf!..inf) => nan
min(nan, -inf..!inf) => nan
min(nan, -inf!..!inf) => nan
min(nan, int(0..1)) => nan
min(nan, int(0..2)) => nan
min(nan, int(1..2)) => nan
min(nan, int(5..20)) => nan
min(nan, int(-20..-5)) => nan
min(nan, int(-10..10)) => nan
min(nan, int(0..inf)) => nan
min(nan, int(1..inf)) => nan
min(nan, int(-inf..0)) => nan
min(nan, int(-inf..1)) => nan
min(nan, int(-inf..inf)) => nan
min(nan, nonInt(0..1)) => nan
min(nan, nonInt(0..2)) => nan
min(nan, nonInt(-1..2)) => nan
min(nan, nonInt(0..inf)) => nan
min(nan, nonInt(-1..inf)) => nan
min(nan, nonInt(-inf..0)) => nan
min(nan, nonInt(-inf..1)) => nan
min(nan, nonInt(-inf..inf)) => nan
min(nan, 1 | int(3..4)) => nan
min(0..1, 0!..1) => 0..1
min(0..1, 0..!1) => 0..!1
min(0..1, 0..2) => 0..1
min(0..1, 0!..!2) => 0..1
min(0..1, 0.5..1.5) => 0..1
min(0..1, 0.5..2.5) => 0..1
min(0..1, 0.5!..2.5) => 0..1
min(0..1, 0.5..!2.5) => 0..1
min(0..1, -2.56..3.35) => -2.56..1
min(0..1, 0.5..0.75) => 0..0.75
min(0..1, 1..2) => 0..1
min(0..1, 0..inf) => 0..1
min(0..1, 0!..inf) => 0..1
min(0..1, 0..!inf) => 0..1
min(0..1, 0!..!inf) => 0..1
min(0..1, 1..inf) => 0..1
min(0..1, 1!..inf) => 0..1
min(0..1, 1..!inf) => 0..1
min(0..1, 2..inf) => 0..1
min(0..1, 2!..inf) => 0..1
min(0..1, 2.5..inf) => 0..1
min(0..1, -inf..0) => -inf..0
min(0..1, -inf..inf) => -inf..1
min(0..1, -inf!..inf) => -inf!..1
min(0..1, -inf..!inf) => -inf..1
min(0..1, -inf!..!inf) => -inf!..1
min(0..1, int(0..1)) => 0..1
min(0..1, int(0..2)) => 0..1
min(0..1, int(1..2)) => 0..1
min(0..1, int(5..20)) => 0..1
min(0..1, int(-20..-5)) => int(-20..-5)
min(0..1, int(-10..10)) => int(-10..-1) | 0..1
min(0..1, int(0..inf)) => 0..1
min(0..1, int(1..inf)) => 0..1
min(0..1, int(-inf..0)) => int(-inf..0)
min(0..1, int(-inf..1)) => int(-inf..-1) | 0..1
min(0..1, int(-inf..inf)) => int(-inf..-1) | 0..1
min(0..1, nonInt(0..1)) => 0..!1
min(0..1, nonInt(0..2)) => 0..1
min(0..1, nonInt(-1..2)) => -1!..1
min(0..1, nonInt(0..inf)) => 0..1
min(0..1, nonInt(-1..inf)) => -1!..1
min(0..1, nonInt(-inf..0)) => nonInt(-inf..0)
min(0..1, nonInt(-inf..1)) => nonInt(-inf..-1) | -1!..!1
min(0..1, nonInt(-inf..inf)) => nonInt(-inf..-1) | -1!..1
min(0..1, 1 | int(3..4)) => 0..1
min(0!..1, 0..!1) => 0..!1
min(0!..1, 0..2) => 0..1
min(0!..1, 0!..!2) => 0!..1
min(0!..1, 0.5..1.5) => 0!..1
min(0!..1, 0.5..2.5) => 0!..1
min(0!..1, 0.5!..2.5) => 0!..1
min(0!..1, 0.5..!2.5) => 0!..1
min(0!..1, -2.56..3.35) => -2.56..1
min(0!..1, 0.5..0.75) => 0!..0.75
min(0!..1, 1..2) => 0!..1
min(0!..1, 0..inf) => 0..1
min(0!..1, 0!..inf) => 0!..1
min(0!..1, 0..!inf) => 0..1
min(0!..1, 0!..!inf) => 0!..1
min(0!..1, 1..inf) => 0!..1
min(0!..1, 1!..inf) => 0!..1
min(0!..1, 1..!inf) => 0!..1
min(0!..1, 2..inf) => 0!..1
min(0!..1, 2!..inf) => 0!..1
min(0!..1, 2.5..inf) => 0!..1
min(0!..1, -inf..0) => -inf..0
min(0!..1, -inf..inf) => -inf..1
min(0!..1, -inf!..inf) => -inf!..1
min(0!..1, -inf..!inf) => -inf..1
min(0!..1, -inf!..!inf) => -inf!..1
min(0!..1, int(0..1)) => 0..1
min(0!..1, int(0..2)) => 0..1
min(0!..1, int(1..2)) => 0!..1
min(0!..1, int(5..20)) => 0!..1
min(0!..1, int(-20..-5)) => int(-20..-5)
min(0!..1, int(-10..10)) => int(-10..-1) | 0..1
min(0!..1, int(0..inf)) => 0..1
min(0!..1, int(1..inf)) => 0!..1
min(0!..1, int(-inf..0)) => int(-inf..0)
min(0!..1, int(-inf..1)) => int(-inf..-1) | 0..1
min(0!..1, int(-inf..inf)) => int(-inf..-1) | 0..1
min(0!..1, nonInt(0..1)) => nonInt(0..1)
min(0!..1, nonInt(0..2)) => 0!..1
min(0!..1, nonInt(-1..2)) => nonInt(-1..0) | 0!..1
min(0!..1, nonInt(0..inf)) => 0!..1
min(0!..1, nonInt(-1..inf)) => nonInt(-1..0) | 0!..1
min(0!..1, nonInt(-inf..0)) => nonInt(-inf..0)
min(0!..1, nonInt(-inf..1)) => nonInt(-inf..1)
min(0!..1, nonInt(-inf..inf)) => nonInt(-inf..0) | 0!..1
min(0!..1, 1 | int(3..4)) => 0!..1
min(0..!1, 0..2) => 0..!1
min(0..!1, 0!..!2) => 0..!1
min(0..!1, 0.5..1.5) => 0..!1
min(0..!1, 0.5..2.5) => 0..!1
min(0..!1, 0.5!..2.5) => 0..!1
min(0..!1, 0.5..!2.5) => 0..!1
min(0..!1, -2.56..3.35) => -2.56..!1
min(0..!1, 0.5..0.75) => 0..0.75
min(0..!1, 1..2) => 0..!1
min(0..!1, 0..inf) => 0..!1
min(0..!1, 0!..inf) => 0..!1
min(0..!1, 0..!inf) => 0..!1
min(0..!1, 0!..!inf) => 0..!1
min(0..!1, 1..inf) => 0..!1
min(0..!1, 1!..inf) => 0..!1
min(0..!1, 1..!inf) => 0..!1
min(0..!1, 2..inf) => 0..!1
min(0..!1, 2!..inf) => 0..!1
min(0..!1, 2.5..inf) => 0..!1
min(0..!1, -inf..0) => -inf..0
min(0..!1, -inf..inf) => -inf..!1
min(0..!1, -inf!..inf) => -inf!..!1
min(0..!1, -inf..!inf) => -inf..!1
min(0..!1, -inf!..!inf) => -inf!..!1
min(0..!1, int(0..1)) => 0..!1
min(0..!1, int(0..2)) => 0..!1
min(0..!1, int(1..2)) => 0..!1
min(0..!1, int(5..20)) => 0..!1
min(0..!1, int(-20..-5)) => int(-20..-5)
min(0..!1, int(-10..10)) => int(-10..-1) | 0..!1
min(0..!1, int(0..inf)) => 0..!1
min(0..!1, int(1..inf)) => 0..!1
min(0..!1, int(-inf..0)) => int(-inf..0)
min(0..!1, int(-inf..1)) => int(-inf..-1) | 0..!1
min(0..!1, int(-inf..inf)) => int(-inf..-1) | 0..!1
min(0..!1, nonInt(0..1)) => 0..!1
min(0..!1, nonInt(0..2)) => 0..!1
min(0..!1, nonInt(-1..2)) => -1!..!1
min(0..!1, nonInt(0..inf)) => 0..!1
min(0..!1, nonInt(-1..inf)) => -1!..!1
min(0..!1, nonInt(-inf..0)) => nonInt(-inf..0)
min(0..!1, nonInt(-inf..1)) => nonInt(-inf..-1) | -1!..!1
min(0..!1, nonInt(-inf..inf)) => nonInt(-inf..-1) | -1!..!1
min(0..!1, 1 | int(3..4)) => 0..!1
min(0..2, 0!..!2) => 0..!2
min(0..2, 0.5..1.5) => 0..1.5
min(0..2, 0.5..2.5) => 0..2
min(0..2, 0.5!..2.5) => 0..2
min(0..2, 0.5..!2.5) => 0..2
min(0..2, -2.56..3.35) => -2.56..2
min(0..2, 0.5..0.75) => 0..0.75
min(0..2, 1..2) => 0..2
min(0..2, 0..inf) => 0..2
min(0..2, 0!..inf) => 0..2
min(0..2, 0..!inf) => 0..2
min(0..2, 0!..!inf) => 0..2
min(0..2, 1..inf) => 0..2
min(0..2, 1!..inf) => 0..2
min(0..2, 1..!inf) => 0..2
min(0..2, 2..inf) => 0..2
min(0..2, 2!..inf) => 0..2
min(0..2, 2.5..inf) => 0..2
min(0..2, -inf..0) => -inf..0
min(0..2, -inf..inf) => -inf..2
min(0..2, -inf!..inf) => -inf!..2
min(0..2, -inf..!inf) => -inf..2
min(0..2, -inf!..!inf) => -inf!..2
min(0..2, int(0..1)) => 0..1
min(0..2, int(0..2)) => 0..2
min(0..2, int(1..2)) => 0..2
min(0..2, int(5..20)) => 0..2
min(0..2, int(-20..-5)) => int(-20..-5)
min(0..2, int(-10..10)) => int(-10..-1) | 0..2
min(0..2, int(0..inf)) => 0..2
min(0..2, int(1..inf)) => 0..2
min(0..2, int(-inf..0)) => int(-inf..0)
min(0..2, int(-inf..1)) => int(-inf..-1) | 0..1
min(0..2, int(-inf..inf)) => int(-inf..-1) | 0..2
min(0..2, nonInt(0..1)) => 0..!1
min(0..2, nonInt(0..2)) => 0..!2
min(0..2, nonInt(-1..2)) => -1!..!2
min(0..2, nonInt(0..inf)) => 0..2
min(0..2, nonInt(-1..inf)) => -1!..2
min(0..2, nonInt(-inf..0)) => nonInt(-inf..0)
min(0..2, nonInt(-inf..1)) => nonInt(-inf..-1) | -1!..!1
min(0..2, nonInt(-inf..inf)) => nonInt(-inf..-1) | -1!..2
min(0..2, 1 | int(3..4)) => 0..2
min(0!..!2, 0.5..1.5) => 0!..1.5
min(0!..!2, 0.5..2.5) => 0!..!2
min(0!..!2, 0.5!..2.5) => 0!..!2
min(0!..!2, 0.5..!2.5) => 0!..!2
min(0!..!2, -2.56..3.35) => -2.56..!2
min(0!..!2, 0.5..0.75) => 0!..0.75
min(0!..!2, 1..2) => 0!..!2
min(0!..!2, 0..inf) => 0..!2
min(0!..!2, 0!..inf) => 0!..!2
min(0!..!2, 0..!inf) => 0..!2
min(0!..!2, 0!..!inf) => 0!..!2
min(0!..!2, 1..inf) => 0!..!2
min(0!..!2, 1!..inf) => 0!..!2
min(0!..!2, 1..!inf) => 0!..!2
min(0!..!2, 2..inf) => 0!..!2
min(0!..!2, 2!..inf) => 0!..!2
min(0!..!2, 2.5..inf) => 0!..!2
min(0!..!2, -inf..0) => -inf..0
min(0!..!2, -inf..inf) => -inf..!2
min(0!..!2, -inf!..inf) => -inf!..!2
min(0!..!2, -inf..!inf) => -inf..!2
min(0!..!2, -inf!..!inf) => -inf!..!2
min(0!..!2, int(0..1)) => 0..1
min(0!..!2, int(0..2)) => 0..!2
min(0!..!2, int(1..2)) => 0!..!2
min(0!..!2, int(5..20)) => 0!..!2
min(0!..!2, int(-20..-5)) => int(-20..-5)
min(0!..!2, int(-10..10)) => int(-10..-1) | 0..!2
min(0!..!2, int(0..inf)) => 0..!2
min(0!..!2, int(1..inf)) => 0!..!2
min(0!..!2, int(-inf..0)) => int(-inf..0)
min(0!..!2, int(-inf..1)) => int(-inf..-1) | 0..1
min(0!..!2, int(-inf..inf)) => int(-inf..-1) | 0..!2
min(0!..!2, nonInt(0..1)) => nonInt(0..1)
min(0!..!2, nonInt(0..2)) => 0!..!2
min(0!..!2, nonInt(-1..2)) => nonInt(-1..0) | 0!..!2
min(0!..!2, nonInt(0..inf)) => 0!..!2
min(0!..!2, nonInt(-1..inf)) => nonInt(-1..0) | 0!..!2
min(0!..!2, nonInt(-inf..0)) => nonInt(-inf..0)
min(0!..!2, nonInt(-inf..1)) => nonInt(-inf..1)
min(0!..!2, nonInt(-inf..inf)) => nonInt(-inf..0) | 0!..!2
min(0!..!2, 1 | int(3..4)) => 0!..!2
min(0.5..1.5, 0.5..2.5) => 0.5..1.5
min(0.5..1.5, 0.5!..2.5) => 0.5..1.5
min(0.5..1.5, 0.5..!2.5) => 0.5..1.5
min(0.5..1.5, -2.56..3.35) => -2.56..1.5
min(0.5..1.5, 0.5..0.75) => 0.5..0.75
min(0.5..1.5, 1..2) => 0.5..1.5
min(0.5..1.5, 0..inf) => 0..1.5
min(0.5..1.5, 0!..inf) => 0!..1.5
min(0.5..1.5, 0..!inf) => 0..1.5
min(0.5..1.5, 0!..!inf) => 0!..1.5
min(0.5..1.5, 1..inf) => 0.5..1.5
min(0.5..1.5, 1!..inf) => 0.5..1.5
min(0.5..1.5, 1..!inf) => 0.5..1.5
min(0.5..1.5, 2..inf) => 0.5..1.5
min(0.5..1.5, 2!..inf) => 0.5..1.5
min(0.5..1.5, 2.5..inf) => 0.5..1.5
min(0.5..1.5, -inf..0) => -inf..0
min(0.5..1.5, -inf..inf) => -inf..1.5
min(0.5..1.5, -inf!..inf) => -inf!..1.5
min(0.5..1.5, -inf..!inf) => -inf..1.5
min(0.5..1.5, -inf!..!inf) => -inf!..1.5
min(0.5..1.5, int(0..1)) => 0 | 0.5..1
min(0.5..1.5, int(0..2)) => 0 | 0.5..1.5
min(0.5..1.5, int(1..2)) => 0.5..1.5
min(0.5..1.5, int(5..20)) => 0.5..1.5
min(0.5..1.5, int(-20..-5)) => int(-20..-5)
min(0.5..1.5, int(-10..10)) => int(-10..0) | 0.5..1.5
min(0.5..1.5, int(0..inf)) => 0 | 0.5..1.5
min(0.5..1.5, int(1..inf)) => 0.5..1.5
min(0.5..1.5, int(-inf..0)) => int(-inf..0)
min(0.5..1.5, int(-inf..1)) => int(-inf..0) | 0.5..1
min(0.5..1.5, int(-inf..inf)) => int(-inf..0) | 0.5..1.5
min(0.5..1.5, nonInt(0..1)) => nonInt(0..1)
min(0.5..1.5, nonInt(0..2)) => 0!..1.5
min(0.5..1.5, nonInt(-1..2)) => nonInt(-1..0) | 0!..1.5
min(0.5..1.5, nonInt(0..inf)) => 0!..1.5
min(0.5..1.5, nonInt(-1..inf)) => nonInt(-1..0) | 0!..1.5
min(0.5..1.5, nonInt(-inf..0)) => nonInt(-inf..0)
min(0.5..1.5, nonInt(-inf..1)) => nonInt(-inf..1)
min(0.5..1.5, nonInt(-inf..inf)) => nonInt(-inf..0) | 0!..1.5
min(0.5..1.5, 1 | int(3..4)) => 0.5..1.5
min(0.5..2.5, 0.5!..2.5) => 0.5..2.5
min(0.5..2.5, 0.5..!2.5) => 0.5..!2.5
min(0.5..2.5, -2.56..3.35) => -2.56..2.5
min(0.5..2.5, 0.5..0.75) => 0.5..0.75
min(0.5..2.5, 1..2) => 0.5..2
min(0.5..2.5, 0..inf) => 0..2.5
min(0.5..2.5, 0!..inf) => 0!..2.5
min(0.5..2.5, 0..!inf) => 0..2.5
min(0.5..2.5, 0!..!inf) => 0!..2.5
min(0.5..2.5, 1..inf) => 0.5..2.5
min(0.5..2.5, 1!..inf) => 0.5..2.5
min(0.5..2.5, 1..!inf) => 0.5..2.5
min(0.5..2.5, 2..inf) => 0.5..2.5
min(0.5..2.5, 2!..inf) => 0.5..2.5
min(0.5..2.5, 2.5..inf) => 0.5..2.5
min(0.5..2.5, -inf..0) => -inf..0
min(0.5..2.5, -inf..inf) => -inf..2.5
min(0.5..2.5, -inf!..inf) => -inf!..2.5
min(0.5..2.5, -inf..!inf) => -inf..2.5
min(0.5..2.5, -inf!..!inf) => -inf!..2.5
min(0.5..2.5, int(0..1)) => 0 | 0.5..1
min(0.5..2.5, int(0..2)) => 0 | 0.5..2
min(0.5..2.5, int(1..2)) => 0.5..2
min(0.5..2.5, int(5..20)) => 0.5..2.5
min(0.5..2.5, int(-20..-5)) => int(-20..-5)
min(0.5..2.5, int(-10..10)) => int(-10..0) | 0.5..2.5
min(0.5..2.5, int(0..inf)) => 0 | 0.5..2.5
min(0.5..2.5, int(1..inf)) => 0.5..2.5
min(0.5..2.5, int(-inf..0)) => int(-inf..0)
min(0.5..2.5, int(-inf..1)) => int(-inf..0) | 0.5..1
min(0.5..2.5, int(-inf..inf)) => int(-inf..0) | 0.5..2.5
min(0.5..2.5, nonInt(0..1)) => nonInt(0..1)
min(0.5..2.5, nonInt(0..2)) => 0!..!2
min(0.5..2.5, nonInt(-1..2)) => nonInt(-1..0) | 0!..!2
min(0.5..2.5, nonInt(0..inf)) => 0!..2.5
min(0.5..2.5, nonInt(-1..inf)) => nonInt(-1..0) | 0!..2.5
min(0.5..2.5, nonInt(-inf..0)) => nonInt(-inf..0)
min(0.5..2.5, nonInt(-inf..1)) => nonInt(-inf..1)
min(0.5..2.5, nonInt(-inf..inf)) => nonInt(-inf..0) | 0!..2.5
min(0.5..2.5, 1 | int(3..4)) => 0.5..2.5
min(0.5!..2.5, 0.5..!2.5) => 0.5..!2.5
min(0.5!..2.5, -2.56..3.35) => -2.56..2.5
min(0.5!..2.5, 0.5..0.75) => 0.5..0.75
min(0.5!..2.5, 1..2) => 0.5!..2
min(0.5!..2.5, 0..inf) => 0..2.5
min(0.5!..2.5, 0!..inf) => 0!..2.5
min(0.5!..2.5, 0..!inf) => 0..2.5
min(0.5!..2.5, 0!..!inf) => 0!..2.5
min(0.5!..2.5, 1..inf) => 0.5!..2.5
min(0.5!..2.5, 1!..inf) => 0.5!..2.5
min(0.5!..2.5, 1..!inf) => 0.5!..2.5
min(0.5!..2.5, 2..inf) => 0.5!..2.5
min(0.5!..2.5, 2!..inf) => 0.5!..2.5
min(0.5!..2.5, 2.5..inf) => 0.5!..2.5
min(0.5!..2.5, -inf..0) => -inf..0
min(0.5!..2.5, -inf..inf) => -inf..2.5
min(0.5!..2.5, -inf!..inf) => -inf!..2.5
min(0.5!..2.5, -inf..!inf) => -inf..2.5
min(0.5!..2.5, -inf!..!inf) => -inf!..2.5
min(0.5!..2.5, int(0..1)) => 0 | 0.5!..1
min(0.5!..2.5, int(0..2)) => 0 | 0.5!..2
min(0.5!..2.5, int(1..2)) => 0.5!..2
min(0.5!..2.5, int(5..20)) => 0.5!..2.5
min(0.5!..2.5, int(-20..-5)) => int(-20..-5)
min(0.5!..2.5, int(-10..10)) => int(-10..0) | 0.5!..2.5
min(0.5!..2.5, int(0..inf)) => 0 | 0.5!..2.5
min(0.5!..2.5, int(1..inf)) => 0.5!..2.5
min(0.5!..2.5, int(-inf..0)) => int(-inf..0)
min(0.5!..2.5, int(-inf..1)) => int(-inf..0) | 0.5!..1
min(0.5!..2.5, int(-inf..inf)) => int(-inf..0) | 0.5!..2.5
min(0.5!..2.5, nonInt(0..1)) => nonInt(0..1)
min(0.5!..2.5, nonInt(0..2)) => 0!..!2
min(0.5!..2.5, nonInt(-1..2)) => nonInt(-1..0) | 0!..!2
min(0.5!..2.5, nonInt(0..inf)) => 0!..2.5
min(0.5!..2.5, nonInt(-1..inf)) => nonInt(-1..0) | 0!..2.5
min(0.5!..2.5, nonInt(-inf..0)) => nonInt(-inf..0)
min(0.5!..2.5, nonInt(-inf..1)) => nonInt(-inf..1)
min(0.5!..2.5, nonInt(-inf..inf)) => nonInt(-inf..0) | 0!..2.5
min(0.5!..2.5, 1 | int(3..4)) => 0.5!..2.5
min(0.5..!2.5, -2.56..3.35) => -2.56..!2.5
min(0.5..!2.5, 0.5..0.75) => 0.5..0.75
min(0.5..!2.5, 1..2) => 0.5..2
min(0.5..!2.5, 0..inf) => 0..!2.5
min(0.5..!2.5, 0!..inf) => 0!..!2.5
min(0.5..!2.5, 0..!inf) => 0..!2.5
min(0.5..!2.5, 0!..!inf) => 0!..!2.5
min(0.5..!2.5, 1..inf) => 0.5..!2.5
min(0.5..!2.5, 1!..inf) => 0.5..!2.5
min(0.5..!2.5, 1..!inf) => 0.5..!2.5
min(0.5..!2.5, 2..inf) => 0.5..!2.5
min(0.5..!2.5, 2!..inf) => 0.5..!2.5
min(0.5..!2.5, 2.5..inf) => 0.5..!2.5
min(0.5..!2.5, -inf..0) => -inf..0
min(0.5..!2.5, -inf..inf) => -inf..!2.5
min(0.5..!2.5, -inf!..inf) => -inf!..!2.5
min(0.5..!2.5, -inf..!inf) => -inf..!2.5
min(0.5..!2.5, -inf!..!inf) => -inf!..!2.5
min(0.5..!2.5, int(0..1)) => 0 | 0.5..1
min(0.5..!2.5, int(0..2)) => 0 | 0.5..2
min(0.5..!2.5, int(1..2)) => 0.5..2
min(0.5..!2.5, int(5..20)) => 0.5..!2.5
min(0.5..!2.5, int(-20..-5)) => int(-20..-5)
min(0.5..!2.5, int(-10..10)) => int(-10..0) | 0.5..!2.5
min(0.5..!2.5, int(0..inf)) => 0 | 0.5..!2.5
min(0.5..!2.5, int(1..inf)) => 0.5..!2.5
min(0.5..!2.5, int(-inf..0)) => int(-inf..0)
min(0.5..!2.5, int(-inf..1)) => int(-inf..0) | 0.5..1
min(0.5..!2.5, int(-inf..inf)) => int(-inf..0) | 0.5..!2.5
min(0.5..!2.5, nonInt(0..1)) => nonInt(0..1)
min(0.5..!2.5, nonInt(0..2)) => 0!..!2
min(0.5..!2.5, nonInt(-1..2)) => nonInt(-1..0) | 0!..!2
min(0.5..!2.5, nonInt(0..inf)) => 0!..!2.5
min(0.5..!2.5, nonInt(-1..inf)) => nonInt(-1..0) | 0!..!2.5
min(0.5..!2.5, nonInt(-inf..0)) => nonInt(-inf..0)
min(0.5..!2.5, nonInt(-inf..1)) => nonInt(-inf..1)
min(0.5..!2.5, nonInt(-inf..inf)) => nonInt(-inf..0) | 0!..!2.5
min(0.5..!2.5, 1 | int(3..4)) => 0.5..!2.5
min(-2.56..3.35, 0.5..0.75) => -2.56..0.75
min(-2.56..3.35, 1..2) => -2.56..2
min(-2.56..3.35, 0..inf) => -2.56..3.35
min(-2.56..3.35, 0!..inf) => -2.56..3.35
min(-2.56..3.35, 0..!inf) => -2.56..3.35
min(-2.56..3.35, 0!..!inf) => -2.56..3.35
min(-2.56..3.35, 1..inf) => -2.56..3.35
min(-2.56..3.35, 1!..inf) => -2.56..3.35
min(-2.56..3.35, 1..!inf) => -2.56..3.35
min(-2.56..3.35, 2..inf) => -2.56..3.35
min(-2.56..3.35, 2!..inf) => -2.56..3.35
min(-2.56..3.35, 2.5..inf) => -2.56..3.35
min(-2.56..3.35, -inf..0) => -inf..0
min(-2.56..3.35, -inf..inf) => -inf..3.35
min(-2.56..3.35, -inf!..inf) => -inf!..3.35
min(-2.56..3.35, -inf..!inf) => -inf..3.35
min(-2.56..3.35, -inf!..!inf) => -inf!..3.35
min(-2.56..3.35, int(0..1)) => -2.56..1
min(-2.56..3.35, int(0..2)) => -2.56..2
min(-2.56..3.35, int(1..2)) => -2.56..2
min(-2.56..3.35, int(5..20)) => -2.56..3.35
min(-2.56..3.35, int(-20..-5)) => int(-20..-5)
min(-2.56..3.35, int(-10..10)) => int(-10..-3) | -2.56..3.35
min(-2.56..3.35, int(0..inf)) => -2.56..3.35
min(-2.56..3.35, int(1..inf)) => -2.56..3.35
min(-2.56..3.35, int(-inf..0)) => int(-inf..-3) | -2.56..0
min(-2.56..3.35, int(-inf..1)) => int(-inf..-3) | -2.56..1
min(-2.56..3.35, int(-inf..inf)) => int(-inf..-3) | -2.56..3.35
min(-2.56..3.35, nonInt(0..1)) => -2.56..!1
min(-2.56..3.35, nonInt(0..2)) => -2.56..!2
min(-2.56..3.35, nonInt(-1..2)) => -2.56..!2
min(-2.56..3.35, nonInt(0..inf)) => -2.56..3.35
min(-2.56..3.35, nonInt(-1..inf)) => -2.56..3.35
min(-2.56..3.35, nonInt(-inf..0)) => nonInt(-inf..-3) | -3!..!0
min(-2.56..3.35, nonInt(-inf..1)) => nonInt(-inf..-3) | -3!..!1
min(-2.56..3.35, nonInt(-inf..inf)) => nonInt(-inf..-3) | -3!..3.35
min(-2.56..3.35, 1 | int(3..4)) => -2.56..3.35
min(0.5..0.75, 1..2) => 0.5..0.75
min(0.5..0.75, 0..inf) => 0..0.75
min(0.5..0.75, 0!..inf) => 0!..0.75
min(0.5..0.75, 0..!inf) => 0..0.75
min(0.5..0.75, 0!..!inf) => 0!..0.75
min(0.5..0.75, 1..inf) => 0.5..0.75
min(0.5..0.75, 1!..inf) => 0.5..0.75
min(0.5..0.75, 1..!inf) => 0.5..0.75
min(0.5..0.75, 2..inf) => 0.5..0.75
min(0.5..0.75, 2!..inf) => 0.5..0.75
min(0.5..0.75, 2.5..inf) => 0.5..0.75
min(0.5..0.75, -inf..0) => -inf..0
min(0.5..0.75, -inf..inf) => -inf..0.75
min(0.5..0.75, -inf!..inf) => -inf!..0.75
min(0.5..0.75, -inf..!inf) => -inf..0.75
min(0.5..0.75, -inf!..!inf) => -inf!..0.75
min(0.5..0.75, int(0..1)) => 0 | 0.5..0.75
min(0.5..0.75, int(0..2)) => 0 | 0.5..0.75
min(0.5..0.75, int(1..2)) => 0.5..0.75
min(0.5..0.75, int(5..20)) => 0.5..0.75
min(0.5..0.75, int(-20..-5)) => int(-20..-5)
min(0.5..0.75, int(-10..10)) => int(-10..0) | 0.5..0.75
min(0.5..0.75, int(0..inf)) => 0 | 0.5..0.75
min(0.5..0.75, int(1..inf)) => 0.5..0.75
min(0.5..0.75, int(-inf..0)) => int(-inf..0)
min(0.5..0.75, int(-inf..1)) => int(-inf..0) | 0.5..0.75
min(0.5..0.75, int(-inf..inf)) => int(-inf..0) | 0.5..0.75
min(0.5..0.75, nonInt(0..1)) => 0!..0.75
min(0.5..0.75, nonInt(0..2)) => 0!..0.75
min(0.5..0.75, nonInt(-1..2)) => nonInt(-1..0) | 0!..0.75
min(0.5..0.75, nonInt(0..inf)) => 0!..0.75
min(0.5..0.75, nonInt(-1..inf)) => nonInt(-1..0) | 0!..0.75
min(0.5..0.75, nonInt(-inf..0)) => nonInt(-inf..0)
min(0.5..0.75, nonInt(-inf..1)) => nonInt(-inf..0) | 0!..0.75
min(0.5..0.75, nonInt(-inf..inf)) => nonInt(-inf..0) | 0!..0.75
min(0.5..0.75, 1 | int(3..4)) => 0.5..0.75
min(1..2, 0..inf) => 0..2
min(1..2, 0!..inf) => 0!..2
min(1..2, 0..!inf) => 0..2
min(1..2, 0!..!inf) => 0!..2
min(1..2, 1..inf) => 1..2
min(1..2, 1!..inf) => 1..2
min(1..2, 1..!inf) => 1..2
min(1..2, 2..inf) => 1..2
min(1..2, 2!..inf) => 1..2
min(1..2, 2.5..inf) => 1..2
min(1..2, -inf..0) => -inf..0
min(1..2, -inf..inf) => -inf..2
min(1..2, -inf!..inf) => -inf!..2
min(1..2, -inf..!inf) => -inf..2
min(1..2, -inf!..!inf) => -inf!..2
min(1..2, int(0..1)) => int(0..1)
min(1..2, int(0..2)) => 0 | 1..2
min(1..2, int(1..2)) => 1..2
min(1..2, int(5..20)) => 1..2
min(1..2, int(-20..-5)) => int(-20..-5)
min(1..2, int(-10..10)) => int(-10..0) | 1..2
min(1..2, int(0..inf)) => 0 | 1..2
min(1..2, int(1..inf)) => 1..2
min(1..2, int(-inf..0)) => int(-inf..0)
min(1..2, int(-inf..1)) => int(-inf..1)
min(1..2, int(-inf..inf)) => int(-inf..0) | 1..2
min(1..2, nonInt(0..1)) => nonInt(0..1)
min(1..2, nonInt(0..2)) => 0!..!2
min(1..2, nonInt(-1..2)) => nonInt(-1..0) | 0!..!2
min(1..2, nonInt(0..inf)) => 0!..2
min(1..2, nonInt(-1..inf)) => nonInt(-1..0) | 0!..2
min(1..2, nonInt(-inf..0)) => nonInt(-inf..0)
min(1..2, nonInt(-inf..1)) => nonInt(-inf..1)
min(1..2, nonInt(-inf..inf)) => nonInt(-inf..0) | 0!..2
min(1..2, 1 | int(3..4)) => 1..2
min(0..inf, 0!..inf) => 0..inf
min(0..inf, 0..!inf) => 0..!inf
min(0..inf, 0!..!inf) => 0..!inf
min(0..inf, 1..inf) => 0..inf
min(0..inf, 1!..inf) => 0..inf
min(0..inf, 1..!inf) => 0..!inf
min(0..inf, 2..inf) => 0..inf
min(0..inf, 2!..inf) => 0..inf
min(0..inf, 2.5..inf) => 0..inf
min(0..inf, -inf..0) => -inf..0
min(0..inf, -inf..inf) => -inf..inf
min(0..inf, -inf!..inf) => -inf!..inf
min(0..inf, -inf..!inf) => -inf..!inf
min(0..inf, -inf!..!inf) => -inf!..!inf
min(0..inf, int(0..1)) => 0..1
min(0..inf, int(0..2)) => 0..2
min(0..inf, int(1..2)) => 0..2
min(0..inf, int(5..20)) => 0..20
min(0..inf, int(-20..-5)) => int(-20..-5)
min(0..inf, int(-10..10)) => int(-10..-1) | 0..10
min(0..inf, int(0..inf)) => 0..!inf
min(0..inf, int(1..inf)) => 0..!inf
min(0..inf, int(-inf..0)) => int(-inf..0)
min(0..inf, int(-inf..1)) => int(-inf..-1) | 0..1
min(0..inf, int(-inf..inf)) => int(-inf..-1) | 0..!inf
min(0..inf, nonInt(0..1)) => 0..!1
min(0..inf, nonInt(0..2)) => 0..!2
min(0..inf, nonInt(-1..2)) => -1!..!2
min(0..inf, nonInt(0..inf)) => 0..!inf
min(0..inf, nonInt(-1..inf)) => -1!..!inf
min(0..inf, nonInt(-inf..0)) => nonInt(-inf..0)
min(0..inf, nonInt(-inf..1)) => nonInt(-inf..-1) | -1!..!1
min(0..inf, nonInt(-inf..inf)) => nonInt(-inf..-1) | -1!..!inf
min(0..inf, 1 | int(3..4)) => 0..4
min(0!..inf, 0..!inf) => 0..!inf
min(0!..inf, 0!..!inf) => 0!..!inf
min(0!..inf, 1..inf) => 0!..inf
min(0!..inf, 1!..inf) => 0!..inf
min(0!..inf, 1..!inf) => 0!..!inf
min(0!..inf, 2..inf) => 0!..inf
min(0!..inf, 2!..inf) => 0!..inf
min(0!..inf, 2.5..inf) => 0!..inf
min(0!..inf, -inf..0) => -inf..0
min(0!..inf, -inf..inf) => -inf..inf
min(0!..inf, -inf!..inf) => -inf!..inf
min(0!..inf, -inf..!inf) => -inf..!inf
min(0!..inf, -inf!..!inf) => -inf!..!inf
min(0!..inf, int(0..1)) => 0..1
min(0!..inf, int(0..2)) => 0..2
min(0!..inf, int(1..2)) => 0!..2
min(0!..inf, int(5..20)) => 0!..20
min(0!..inf, int(-20..-5)) => int(-20..-5)
min(0!..inf, int(-10..10)) => int(-10..-1) | 0..10
min(0!..inf, int(0..inf)) => 0..!inf
min(0!..inf, int(1..inf)) => 0!..!inf
min(0!..inf, int(-inf..0)) => int(-inf..0)
min(0!..inf, int(-inf..1)) => int(-inf..-1) | 0..1
min(0!..inf, int(-inf..inf)) => int(-inf..-1) | 0..!inf
min(0!..inf, nonInt(0..1)) => nonInt(0..1)
min(0!..inf, nonInt(0..2)) => 0!..!2
min(0!..inf, nonInt(-1..2)) => nonInt(-1..0) | 0!..!2
min(0!..inf, nonInt(0..inf)) => 0!..!inf
min(0!..inf, nonInt(-1..inf)) => nonInt(-1..0) | 0!..!inf
min(0!..inf, nonInt(-inf..0)) => nonInt(-inf..0)
min(0!..inf, nonInt(-inf..1)) => nonInt(-inf..1)
min(0!..inf, nonInt(-inf..inf)) => nonInt(-inf..0) | 0!..!inf
min(0!..inf, 1 | int(3..4)) => 0!..4
min(0..!inf, 0!..!inf) => 0..!inf
min(0..!inf, 1..inf) => 0..!inf
min(0..!inf, 1!..inf) => 0..!inf
min(0..!inf, 1..!inf) => 0..!inf
min(0..!inf, 2..inf) => 0..!inf
min(0..!inf, 2!..inf) => 0..!inf
min(0..!inf, 2.5..inf) => 0..!inf
min(0..!inf, -inf..0) => -inf..0
min(0..!inf, -inf..inf) => -inf..!inf
min(0..!inf, -inf!..inf) => -inf!..!inf
min(0..!inf, -inf..!inf) => -inf..!inf
min(0..!inf, -inf!..!inf) => -inf!..!inf
min(0..!inf, int(0..1)) => 0..1
min(0..!inf, int(0..2)) => 0..2
min(0..!inf, int(1..2)) => 0..2
min(0..!inf, int(5..20)) => 0..20
min(0..!inf, int(-20..-5)) => int(-20..-5)
min(0..!inf, int(-10..10)) => int(-10..-1) | 0..10
min(0..!inf, int(0..inf)) => 0..!inf
min(0..!inf, int(1..inf)) => 0..!inf
min(0..!inf, int(-inf..0)) => int(-inf..0)
min(0..!inf, int(-inf..1)) => int(-inf..-1) | 0..1
min(0..!inf, int(-inf..inf)) => int(-inf..-1) | 0..!inf
min(0..!inf, nonInt(0..1)) => 0..!1
min(0..!inf, nonInt(0..2)) => 0..!2
min(0..!inf, nonInt(-1..2)) => -1!..!2
min(0..!inf, nonInt(0..inf)) => 0..!inf
min(0..!inf, nonInt(-1..inf)) => -1!..!inf
min(0..!inf, nonInt(-inf..0)) => nonInt(-inf..0)
min(0..!inf, nonInt(-inf..1)) => nonInt(-inf..-1) | -1!..!1
min(0..!inf, nonInt(-inf..inf)) => nonInt(-inf..-1) | -1!..!inf
min(0..!inf, 1 | int(3..4)) => 0..4
min(0!..!inf, 1..inf) => 0!..!inf
min(0!..!inf, 1!..inf) => 0!..!inf
min(0!..!inf, 1..!inf) => 0!..!inf
min(0!..!inf, 2..inf) => 0!..!inf
min(0!..!inf, 2!..inf) => 0!..!inf
min(0!..!inf, 2.5..inf) => 0!..!inf
min(0!..!inf, -inf..0) => -inf..0
min(0!..!inf, -inf..inf) => -inf..!inf
min(0!..!inf, -inf!..inf) => -inf!..!inf
min(0!..!inf, -inf..!inf) => -inf..!inf
min(0!..!inf, -inf!..!inf) => -inf!..!inf
min(0!..!inf, int(0..1)) => 0..1
min(0!..!inf, int(0..2)) => 0..2
min(0!..!inf, int(1..2)) => 0!..2
min(0!..!inf, int(5..20)) => 0!..20
min(0!..!inf, int(-20..-5)) => int(-20..-5)
min(0!..!inf, int(-10..10)) => int(-10..-1) | 0..10
min(0!..!inf, int(0..inf)) => 0..!inf
min(0!..!inf, int(1..inf)) => 0!..!inf
min(0!..!inf, int(-inf..0)) => int(-inf..0)
min(0!..!inf, int(-inf..1)) => int(-inf..-1) | 0..1
min(0!..!inf, int(-inf..inf)) => int(-inf..-1) | 0..!inf
min(0!..!inf, nonInt(0..1)) => nonInt(0..1)
min(0!..!inf, nonInt(0..2)) => 0!..!2
min(0!..!inf, nonInt(-1..2)) => nonInt(-1..0) | 0!..!2
min(0!..!inf, nonInt(0..inf)) => 0!..!inf
min(0!..!inf, nonInt(-1..inf)) => nonInt(-1..0) | 0!..!inf
min(0!..!inf, nonInt(-inf..0)) => nonInt(-inf..0)
min(0!..!inf, nonInt(-inf..1)) => nonInt(-inf..1)
min(0!..!inf, nonInt(-inf..inf)) => nonInt(-inf..0) | 0!..!inf
min(0!..!inf, 1 | int(3..4)) => 0!..4
min(1..inf, 1!..inf) => 1..inf
min(1..inf, 1..!inf) => 1..!inf
min(1..inf, 2..inf) => 1..inf
min(1..inf, 2!..inf) => 1..inf
min(1..inf, 2.5..inf) => 1..inf
min(1..inf, -inf..0) => -inf..0
min(1..inf, -inf..inf) => -inf..inf
min(1..inf, -inf!..inf) => -inf!..inf
min(1..inf, -inf..!inf) => -inf..!inf
min(1..inf, -inf!..!inf) => -inf!..!inf
min(1..inf, int(0..1)) => int(0..1)
min(1..inf, int(0..2)) => 0 | 1..2
min(1..inf, int(1..2)) => 1..2
min(1..inf, int(5..20)) => 1..20
min(1..inf, int(-20..-5)) => int(-20..-5)
min(1..inf, int(-10..10)) => int(-10..0) | 1..10
min(1..inf, int(0..inf)) => 0 | 1..!inf
min(1..inf, int(1..inf)) => 1..!inf
min(1..inf, int(-inf..0)) => int(-inf..0)
min(1..inf, int(-inf..1)) => int(-inf..1)
min(1..inf, int(-inf..inf)) => int(-inf..0) | 1..!inf
min(1..inf, nonInt(0..1)) => nonInt(0..1)
min(1..inf, nonInt(0..2)) => 0!..!2
min(1..inf, nonInt(-1..2)) => nonInt(-1..0) | 0!..!2
min(1..inf, nonInt(0..inf)) => 0!..!inf
min(1..inf, nonInt(-1..inf)) => nonInt(-1..0) | 0!..!inf
min(1..inf, nonInt(-inf..0)) => nonInt(-inf..0)
min(1..inf, nonInt(-inf..1)) => nonInt(-inf..1)
min(1..inf, nonInt(-inf..inf)) => nonInt(-inf..0) | 0!..!inf
min(1..inf, 1 | int(3..4)) => 1..4
min(1!..inf, 1..!inf) => 1..!inf
min(1!..inf, 2..inf) => 1!..inf
min(1!..inf, 2!..inf) => 1!..inf
min(1!..inf, 2.5..inf) => 1!..inf
min(1!..inf, -inf..0) => -inf..0
min(1!..inf, -inf..inf) => -inf..inf
min(1!..inf, -inf!..inf) => -inf!..inf
min(1!..inf, -inf..!inf) => -inf..!inf
min(1!..inf, -inf!..!inf) => -inf!..!inf
min(1!..inf, int(0..1)) => int(0..1)
min(1!..inf, int(0..2)) => 0 | 1..2
min(1!..inf, int(1..2)) => 1..2
min(1!..inf, int(5..20)) => 1!..20
min(1!..inf, int(-20..-5)) => int(-20..-5)
min(1!..inf, int(-10..10)) => int(-10..0) | 1..10
min(1!..inf, int(0..inf)) => 0 | 1..!inf
min(1!..inf, int(1..inf)) => 1..!inf
min(1!..inf, int(-inf..0)) => int(-inf..0)
min(1!..inf, int(-inf..1)) => int(-inf..1)
min(1!..inf, int(-inf..inf)) => int(-inf..0) | 1..!inf
min(1!..inf, nonInt(0..1)) => nonInt(0..1)
min(1!..inf, nonInt(0..2)) => nonInt(0..2)
min(1!..inf, nonInt(-1..2)) => nonInt(-1..2)
min(1!..inf, nonInt(0..inf)) => nonInt(0..1) | 1!..!inf
min(1!..inf, nonInt(-1..inf)) => nonInt(-1..1) | 1!..!inf
min(1!..inf, nonInt(-inf..0)) => nonInt(-inf..0)
min(1!..inf, nonInt(-inf..1)) => nonInt(-inf..1)
min(1!..inf, nonInt(-inf..inf)) => nonInt(-inf..1) | 1!..!inf
min(1!..inf, 1 | int(3..4)) => 1..4
min(1..!inf, 2..inf) => 1..!inf
min(1..!inf, 2!..inf) => 1..!inf
min(1..!inf, 2.5..inf) => 1..!inf
min(1..!inf, -inf..0) => -inf..0
min(1..!inf, -inf..inf) => -inf..!inf
min(1..!inf, -inf!..inf) => -inf!..!inf
min(1..!inf, -inf..!inf) => -inf..!inf
min(1..!inf, -inf!..!inf) => -inf!..!inf
min(1..!inf, int(0..1)) => int(0..1)
min(1..!inf, int(0..2)) => 0 | 1..2
min(1..!inf, int(1..2)) => 1..2
min(1..!inf, int(5..20)) => 1..20
min(1..!inf, int(-20..-5)) => int(-20..-5)
min(1..!inf, int(-10..10)) => int(-10..0) | 1..10
min(1..!inf, int(0..inf)) => 0 | 1..!inf
min(1..!inf, int(1..inf)) => 1..!inf
min(1..!inf, int(-inf..0)) => int(-inf..0)
min(1..!inf, int(-inf..1)) => int(-inf..1)
min(1..!inf, int(-inf..inf)) => int(-inf..0) | 1..!inf
min(1..!inf, nonInt(0..1)) => nonInt(0..1)
min(1..!inf, nonInt(0..2)) => 0!..!2
min(1..!inf, nonInt(-1..2)) => nonInt(-1..0) | 0!..!2
min(1..!inf, nonInt(0..inf)) => 0!..!inf
min(1..!inf, nonInt(-1..inf)) => nonInt(-1..0) | 0!..!inf
min(1..!inf, nonInt(-inf..0)) => nonInt(-inf..0)
min(1..!inf, nonInt(-inf..1)) => nonInt(-inf..1)
min(1..!inf, nonInt(-inf..inf)) => nonInt(-inf..0) | 0!..!inf
min(1..!inf, 1 | int(3..4)) => 1..4
min(2..inf, 2!..inf) => 2..inf
min(2..inf, 2.5..inf) => 2..inf
min(2..inf, -inf..0) => -inf..0
min(2..inf, -inf..inf) => -inf..inf
min(2..inf, -inf!..inf) => -inf!..inf
min(2..inf, -inf..!inf) => -inf..!inf
min(2..inf, -inf!..!inf) => -inf!..!inf
min(2..inf, int(0..1)) => int(0..1)
min(2..inf, int(0..2)) => int(0..2)
min(2..inf, int(1..2)) => int(1..2)
min(2..inf, int(5..20)) => 2..20
min(2..inf, int(-20..-5)) => int(-20..-5)
min(2..inf, int(-10..10)) => int(-10..1) | 2..10
min(2..inf, int(0..inf)) => int(0..1) | 2..!inf
min(2..inf, int(1..inf)) => 1 | 2..!inf
min(2..inf, int(-inf..0)) => int(-inf..0)
min(2..inf, int(-inf..1)) => int(-inf..1)
min(2..inf, int(-inf..inf)) => int(-inf..1) | 2..!inf
min(2..inf, nonInt(0..1)) => nonInt(0..1)
min(2..inf, nonInt(0..2)) => nonInt(0..2)
min(2..inf, nonInt(-1..2)) => nonInt(-1..2)
min(2..inf, nonInt(0..inf)) => nonInt(0..1) | 1!..!inf
min(2..inf, nonInt(-1..inf)) => nonInt(-1..1) | 1!..!inf
min(2..inf, nonInt(-inf..0)) => nonInt(-inf..0)
min(2..inf, nonInt(-inf..1)) => nonInt(-inf..1)
min(2..inf, nonInt(-inf..inf)) => nonInt(-inf..1) | 1!..!inf
min(2..inf, 1 | int(3..4)) => 1 | 2..4
min(2!..inf, 2.5..inf) => 2!..inf
min(2!..inf, -inf..0) => -inf..0
min(2!..inf, -inf..inf) => -inf..inf
min(2!..inf, -inf!..inf) => -inf!..inf
min(2!..inf, -inf..!inf) => -inf..!inf
min(2!..inf, -inf!..!inf) => -inf!..!inf
min(2!..inf, int(0..1)) => int(0..1)
min(2!..inf, int(0..2)) => int(0..2)
min(2!..inf, int(1..2)) => int(1..2)
min(2!..inf, int(5..20)) => 2!..20
min(2!..inf, int(-20..-5)) => int(-20..-5)
min(2!..inf, int(-10..10)) => int(-10..1) | 2..10
min(2!..inf, int(0..inf)) => int(0..1) | 2..!inf
min(2!..inf, int(1..inf)) => 1 | 2..!inf
min(2!..inf, int(-inf..0)) => int(-inf..0)
min(2!..inf, int(-inf..1)) => int(-inf..1)
min(2!..inf, int(-inf..inf)) => int(-inf..1) | 2..!inf
min(2!..inf, nonInt(0..1)) => nonInt(0..1)
min(2!..inf, nonInt(0..2)) => nonInt(0..2)
min(2!..inf, nonInt(-1..2)) => nonInt(-1..2)
min(2!..inf, nonInt(0..inf)) => nonInt(0..2) | 2!..!inf
min(2!..inf, nonInt(-1..inf)) => nonInt(-1..2) | 2!..!inf
min(2!..inf, nonInt(-inf..0)) => nonInt(-inf..0)
min(2!..inf, nonInt(-inf..1)) => nonInt(-inf..1)
min(2!..inf, nonInt(-inf..inf)) => nonInt(-inf..2) | 2!..!inf
min(2!..inf, 1 | int(3..4)) => 1 | 2!..4
min(2.5..inf, -inf..0) => -inf..0
min(2.5..inf, -inf..inf) => -inf..inf
min(2.5..inf, -inf!..inf) => -inf!..inf
min(2.5..inf, -inf..!inf) => -inf..!inf
min(2.5..inf, -inf!..!inf) => -inf!..!inf
min(2.5..inf, int(0..1)) => int(0..1)
min(2.5..inf, int(0..2)) => int(0..2)
min(2.5..inf, int(1..2)) => int(1..2)
min(2.5..inf, int(5..20)) => 2.5..20
min(2.5..inf, int(-20..-5)) => int(-20..-5)
min(2.5..inf, int(-10..10)) => int(-10..2) | 2.5..10
min(2.5..inf, int(0..inf)) => int(0..2) | 2.5..!inf
min(2.5..inf, int(1..inf)) => int(1..2) | 2.5..!inf
min(2.5..inf, int(-inf..0)) => int(-inf..0)
min(2.5..inf, int(-inf..1)) => int(-inf..1)
min(2.5..inf, int(-inf..inf)) => int(-inf..2) | 2.5..!inf
min(2.5..inf, nonInt(0..1)) => nonInt(0..1)
min(2.5..inf, nonInt(0..2)) => nonInt(0..2)
min(2.5..inf, nonInt(-1..2)) => nonInt(-1..2)
min(2.5..inf, nonInt(0..inf)) => nonInt(0..2) | 2!..!inf
min(2.5..inf, nonInt(-1..inf)) => nonInt(-1..2) | 2!..!inf
min(2.5..inf, nonInt(-inf..0)) => nonInt(-inf..0)
min(2.5..inf, nonInt(-inf..1)) => nonInt(-inf..1)
min(2.5..inf, nonInt(-inf..inf)) => nonInt(-inf..2) | 2!..!inf
min(2.5..inf, 1 | int(3..4)) => 1 | 2.5..4
min(-inf..0, -inf..inf) => -inf..0
min(-inf..0, -inf!..inf) => -inf..0
min(-inf..0, -inf..!inf) => -inf..0
min(-inf..0, -inf!..!inf) => -inf..0
min(-inf..0, int(0..1)) => -inf..0
min(-inf..0, int(0..2)) => -inf..0
min(-inf..0, int(1..2)) => -inf..0
min(-inf..0, int(5..20)) => -inf..0
min(-inf..0, int(-20..-5)) => -inf..-5
min(-inf..0, int(-10..10)) => -inf..0
min(-inf..0, int(0..inf)) => -inf..0
min(-inf..0, int(1..inf)) => -inf..0
min(-inf..0, int(-inf..0)) => -inf..0
min(-inf..0, int(-inf..1)) => -inf..0
min(-inf..0, int(-inf..inf)) => -inf..0
min(-inf..0, nonInt(0..1)) => -inf..0
min(-inf..0, nonInt(0..2)) => -inf..0
min(-inf..0, nonInt(-1..2)) => -inf..0
min(-inf..0, nonInt(0..inf)) => -inf..0
min(-inf..0, nonInt(-1..inf)) => -inf..0
min(-inf..0, nonInt(-inf..0)) => -inf..!0
min(-inf..0, nonInt(-inf..1)) => -inf..0
min(-inf..0, nonInt(-inf..inf)) => -inf..0
min(-inf..0, 1 | int(3..4)) => -inf..0
min(-inf..inf, -inf!..inf) => -inf..inf
min(-inf..inf, -inf..!inf) => -inf..!inf
min(-inf..inf, -inf!..!inf) => -inf..!inf
min(-inf..inf, int(0..1)) => -inf..1
min(-inf..inf, int(0..2)) => -inf..2
min(-inf..inf, int(1..2)) => -inf..2
min(-inf..inf, int(5..20)) => -inf..20
min(-inf..inf, int(-20..-5)) => -inf..-5
min(-inf..inf, int(-10..10)) => -inf..10
min(-inf..inf, int(0..inf)) => -inf..!inf
min(-inf..inf, int(1..inf)) => -inf..!inf
min(-inf..inf, int(-inf..0)) => -inf..0
min(-inf..inf, int(-inf..1)) => -inf..1
min(-inf..inf, int(-inf..inf)) => -inf..!inf
min(-inf..inf, nonInt(0..1)) => -inf..!1
min(-inf..inf, nonInt(0..2)) => -inf..!2
min(-inf..inf, nonInt(-1..2)) => -inf..!2
min(-inf..inf, nonInt(0..inf)) => -inf..!inf
min(-inf..inf, nonInt(-1..inf)) => -inf..!inf
min(-inf..inf, nonInt(-inf..0)) => -inf..!0
min(-inf..inf, nonInt(-inf..1)) => -inf..!1
min(-inf..inf, nonInt(-inf..inf)) => -inf..!inf
min(-inf..inf, 1 | int(3..4)) => -inf..4
min(-inf!..inf, -inf..!inf) => -inf..!inf
min(-inf!..inf, -inf!..!inf) => -inf!..!inf
min(-inf!..inf, int(0..1)) => -inf!..1
min(-inf!..inf, int(0..2)) => -inf!..2
min(-inf!..inf, int(1..2)) => -inf!..2
min(-inf!..inf, int(5..20)) => -inf!..20
min(-inf!..inf, int(-20..-5)) => -inf!..-5
min(-inf!..inf, int(-10..10)) => -inf!..10
min(-inf!..inf, int(0..inf)) => -inf!..!inf
min(-inf!..inf, int(1..inf)) => -inf!..!inf
min(-inf!..inf, int(-inf..0)) => -inf!..0
min(-inf!..inf, int(-inf..1)) => -inf!..1
min(-inf!..inf, int(-inf..inf)) => -inf!..!inf
min(-inf!..inf, nonInt(0..1)) => -inf!..!1
min(-inf!..inf, nonInt(0..2)) => -inf!..!2
min(-inf!..inf, nonInt(-1..2)) => -inf!..!2
min(-inf!..inf, nonInt(0..inf)) => -inf!..!inf
min(-inf!..inf, nonInt(-1..inf)) => -inf!..!inf
min(-inf!..inf, nonInt(-inf..0)) => -inf!..!0
min(-inf!..inf, nonInt(-inf..1)) => -inf!..!1
min(-inf!..inf, nonInt(-inf..inf)) => -inf!..!inf
min(-inf!..inf, 1 | int(3..4)) => -inf!..4
min(-inf..!inf, -inf!..!inf) => -inf..!inf
min(-inf..!inf, int(0..1)) => -inf..1
min(-inf..!inf, int(0..2)) => -inf..2
min(-inf..!inf, int(1..2)) => -inf..2
min(-inf..!inf, int(5..20)) => -inf..20
min(-inf..!inf, int(-20..-5)) => -inf..-5
min(-inf..!inf, int(-10..10)) => -inf..10
min(-inf..!inf, int(0..inf)) => -inf..!inf
min(-inf..!inf, int(1..inf)) => -inf..!inf
min(-inf..!inf, int(-inf..0)) => -inf..0
min(-inf..!inf, int(-inf..1)) => -inf..1
min(-inf..!inf, int(-inf..inf)) => -inf..!inf
min(-inf..!inf, nonInt(0..1)) => -inf..!1
min(-inf..!inf, nonInt(0..2)) => -inf..!2
min(-inf..!inf, nonInt(-1..2)) => -inf..!2
min(-inf..!inf, nonInt(0..inf)) => -inf..!inf
min(-inf..!inf, nonInt(-1..inf)) => -inf..!inf
min(-inf..!inf, nonInt(-inf..0)) => -inf..!0
min(-inf..!inf, nonInt(-inf..1)) => -inf..!1
min(-inf..!inf, nonInt(-inf..inf)) => -inf..!inf
min(-inf..!inf, 1 | int(3..4)) => -inf..4
min(-inf!..!inf, int(0..1)) => -inf!..1
min(-inf!..!inf, int(0..2)) => -inf!..2
min(-inf!..!inf, int(1..2)) => -inf!..2
min(-inf!..!inf, int(5..20)) => -inf!..20
min(-inf!..!inf, int(-20..-5)) => -inf!..-5
min(-inf!..!inf, int(-10..10)) => -inf!..10
min(-inf!..!inf, int(0..inf)) => -inf!..!inf
min(-inf!..!inf, int(1..inf)) => -inf!..!inf
min(-inf!..!inf, int(-inf..0)) => -inf!..0
min(-inf!..!inf, int(-inf..1)) => -inf!..1
min(-inf!..!inf, int(-inf..inf)) => -inf!..!inf
min(-inf!..!inf, nonInt(0..1)) => -inf!..!1
min(-inf!..!inf, nonInt(0..2)) => -inf!..!2
min(-inf!..!inf, nonInt(-1..2)) => -inf!..!2
min(-inf!..!inf, nonInt(0..inf)) => -inf!..!inf
min(-inf!..!inf, nonInt(-1..inf)) => -inf!..!inf
min(-inf!..!inf, nonInt(-inf..0)) => -inf!..!0
min(-inf!..!inf, nonInt(-inf..1)) => -inf!..!1
min(-inf!..!inf, nonInt(-inf..inf)) => -inf!..!inf
min(-inf!..!inf, 1 | int(3..4)) => -inf!..4
min(int(0..1), int(0..2)) => int(0..1)
min(int(0..1), int(1..2)) => int(0..1)
min(int(0..1), int(5..20)) => int(0..1)
min(int(0..1), int(-20..-5)) => int(-20..-5)
min(int(0..1), int(-10..10)) => int(-10..1)
min(int(0..1), int(0..inf)) => int(0..1)
min(int(0..1), int(1..inf)) => int(0..1)
min(int(0..1), int(-inf..0)) => int(-inf..0)
min(int(0..1), int(-inf..1)) => int(-inf..1)
min(int(0..1), int(-inf..inf)) => int(-inf..1)
min(int(0..1), nonInt(0..1)) => 0..!1
min(int(0..1), nonInt(0..2)) => 0..1
min(int(0..1), nonInt(-1..2)) => -1!..1
min(int(0..1), nonInt(0..inf)) => 0..1
min(int(0..1), nonInt(-1..inf)) => -1!..1
min(int(0..1), nonInt(-inf..0)) => nonInt(-inf..0)
min(int(0..1), nonInt(-inf..1)) => nonInt(-inf..-1) | -1!..!1
min(int(0..1), nonInt(-inf..inf)) => nonInt(-inf..-1) | -1!..1
min(int(0..1), 1 | int(3..4)) => int(0..1)
min(int(0..2), int(1..2)) => int(0..2)
min(int(0..2), int(5..20)) => int(0..2)
min(int(0..2), int(-20..-5)) => int(-20..-5)
min(int(0..2), int(-10..10)) => int(-10..2)
min(int(0..2), int(0..inf)) => int(0..2)
min(int(0..2), int(1..inf)) => int(0..2)
min(int(0..2), int(-inf..0)) => int(-inf..0)
min(int(0..2), int(-inf..1)) => int(-inf..1)
min(int(0..2), int(-inf..inf)) => int(-inf..2)
min(int(0..2), nonInt(0..1)) => 0..!1
min(int(0..2), nonInt(0..2)) => 0..!2
min(int(0..2), nonInt(-1..2)) => -1!..!2
min(int(0..2), nonInt(0..inf)) => 0..2
min(int(0..2), nonInt(-1..inf)) => -1!..2
min(int(0..2), nonInt(-inf..0)) => nonInt(-inf..0)
min(int(0..2), nonInt(-inf..1)) => nonInt(-inf..-1) | -1!..!1
min(int(0..2), nonInt(-inf..inf)) => nonInt(-inf..-1) | -1!..2
min(int(0..2), 1 | int(3..4)) => int(0..2)
min(int(1..2), int(5..20)) => int(1..2)
min(int(1..2), int(-20..-5)) => int(-20..-5)
min(int(1..2), int(-10..10)) => int(-10..2)
min(int(1..2), int(0..inf)) => int(0..2)
min(int(1..2), int(1..inf)) => int(1..2)
min(int(1..2), int(-inf..0)) => int(-inf..0)
min(int(1..2), int(-inf..1)) => int(-inf..1)
min(int(1..2), int(-inf..inf)) => int(-inf..2)
min(int(1..2), nonInt(0..1)) => nonInt(0..1)
min(int(1..2), nonInt(0..2)) => 0!..!2
min(int(1..2), nonInt(-1..2)) => nonInt(-1..0) | 0!..!2
min(int(1..2), nonInt(0..inf)) => 0!..2
min(int(1..2), nonInt(-1..inf)) => nonInt(-1..0) | 0!..2
min(int(1..2), nonInt(-inf..0)) => nonInt(-inf..0)
min(int(1..2), nonInt(-inf..1)) => nonInt(-inf..1)
min(int(1..2), nonInt(-inf..inf)) => nonInt(-inf..0) | 0!..2
min(int(1..2), 1 | int(3..4)) => int(1..2)
min(int(5..20), int(-20..-5)) => int(-20..-5)
min(int(5..20), int(-10..10)) => int(-10..10)
min(int(5..20), int(0..inf)) => int(0..20)
min(int(5..20), int(1..inf)) => int(1..20)
min(int(5..20), int(-inf..0)) => int(-inf..0)
min(int(5..20), int(-inf..1)) => int(-inf..1)
min(int(5..20), int(-inf..inf)) => int(-inf..20)
min(int(5..20), nonInt(0..1)) => nonInt(0..1)
min(int(5..20), nonInt(0..2)) => nonInt(0..2)
min(int(5..20), nonInt(-1..2)) => nonInt(-1..2)
min(int(5..20), nonInt(0..inf)) => nonInt(0..4) | 4!..20
min(int(5..20), nonInt(-1..inf)) => nonInt(-1..4) | 4!..20
min(int(5..20), nonInt(-inf..0)) => nonInt(-inf..0)
min(int(5..20), nonInt(-inf..1)) => nonInt(-inf..1)
min(int(5..20), nonInt(-inf..inf)) => nonInt(-inf..4) | 4!..20
min(int(5..20), 1 | int(3..4)) => 1 | int(3..4)
min(int(-20..-5), int(-10..10)) => int(-20..-5)
min(int(-20..-5), int(0..inf)) => int(-20..-5)
min(int(-20..-5), int(1..inf)) => int(-20..-5)
min(int(-20..-5), int(-inf..0)) => int(-inf..-5)
min(int(-20..-5), int(-inf..1)) => int(-inf..-5)
min(int(-20..-5), int(-inf..inf)) => int(-inf..-5)
min(int(-20..-5), nonInt(0..1)) => int(-20..-5)
min(int(-20..-5), nonInt(0..2)) => int(-20..-5)
min(int(-20..-5), nonInt(-1..2)) => int(-20..-5)
min(int(-20..-5), nonInt(0..inf)) => int(-20..-5)
min(int(-20..-5), nonInt(-1..inf)) => int(-20..-5)
min(int(-20..-5), nonInt(-inf..0)) => nonInt(-inf..-21) | -21!..-5
min(int(-20..-5), nonInt(-inf..1)) => nonInt(-inf..-21) | -21!..-5
min(int(-20..-5), nonInt(-inf..inf)) => nonInt(-inf..-21) | -21!..-5
min(int(-20..-5), 1 | int(3..4)) => int(-20..-5)
min(int(-10..10), int(0..inf)) => int(-10..10)
min(int(-10..10), int(1..inf)) => int(-10..10)
min(int(-10..10), int(-inf..0)) => int(-inf..0)
min(int(-10..10), int(-inf..1)) => int(-inf..1)
min(int(-10..10), int(-inf..inf)) => int(-inf..10)
min(int(-10..10), nonInt(0..1)) => int(-10..-1) | 0..!1
min(int(-10..10), nonInt(0..2)) => int(-10..-1) | 0..!2
min(int(-10..10), nonInt(-1..2)) => int(-10..-2) | -1..!2
min(int(-10..10), nonInt(0..inf)) => int(-10..-1) | 0..10
min(int(-10..10), nonInt(-1..inf)) => int(-10..-2) | -1..10
min(int(-10..10), nonInt(-inf..0)) => nonInt(-inf..-11) | -11!..!0
min(int(-10..10), nonInt(-inf..1)) => nonInt(-inf..-11) | -11!..!1
min(int(-10..10), nonInt(-inf..inf)) => nonInt(-inf..-11) | -11!..10
min(int(-10..10), 1 | int(3..4)) => int(-10..4)
min(int(0..inf), int(1..inf)) => int(0..inf)
min(int(0..inf), int(-inf..0)) => int(-inf..0)
min(int(0..inf), int(-inf..1)) => int(-inf..1)
min(int(0..inf), int(-inf..inf)) => int(-inf..inf)
min(int(0..inf), nonInt(0..1)) => 0..!1
min(int(0..inf), nonInt(0..2)) => 0..!2
min(int(0..inf), nonInt(-1..2)) => -1!..!2
min(int(0..inf), nonInt(0..inf)) => 0..!inf
min(int(0..inf), nonInt(-1..inf)) => -1!..!inf
min(int(0..inf), nonInt(-inf..0)) => nonInt(-inf..0)
min(int(0..inf), nonInt(-inf..1)) => nonInt(-inf..-1) | -1!..!1
min(int(0..inf), nonInt(-inf..inf)) => nonInt(-inf..-1) | -1!..!inf
min(int(0..inf), 1 | int(3..4)) => int(0..4)
min(int(1..inf), int(-inf..0)) => int(-inf..0)
min(int(1..inf), int(-inf..1)) => int(-inf..1)
min(int(1..inf), int(-inf..inf)) => int(-inf..inf)
min(int(1..inf), nonInt(0..1)) => nonInt(0..1)
min(int(1..inf), nonInt(0..2)) => 0!..!2
min(int(1..inf), nonInt(-1..2)) => nonInt(-1..0) | 0!..!2
min(int(1..inf), nonInt(0..inf)) => 0!..!inf
min(int(1..inf), nonInt(-1..inf)) => nonInt(-1..0) | 0!..!inf
min(int(1..inf), nonInt(-inf..0)) => nonInt(-inf..0)
min(int(1..inf), nonInt(-inf..1)) => nonInt(-inf..1)
min(int(1..inf), nonInt(-inf..inf)) => nonInt(-inf..0) | 0!..!inf
min(int(1..inf), 1 | int(3..4)) => int(1..4)
min(int(-inf..0), int(-inf..1)) => int(-inf..0)
min(int(-inf..0), int(-inf..inf)) => int(-inf..0)
min(int(-inf..0), nonInt(0..1)) => int(-inf..0)
min(int(-inf..0), nonInt(0..2)) => int(-inf..0)
min(int(-inf..0), nonInt(-1..2)) => int(-inf..-2) | -1..0
min(int(-inf..0), nonInt(0..inf)) => int(-inf..0)
min(int(-inf..0), nonInt(-1..inf)) => int(-inf..-2) | -1..0
min(int(-inf..0), nonInt(-inf..0)) => -inf!..!0
min(int(-inf..0), nonInt(-inf..1)) => -inf!..0
min(int(-inf..0), nonInt(-inf..inf)) => -inf!..0
min(int(-inf..0), 1 | int(3..4)) => int(-inf..0)
min(int(-inf..1), int(-inf..inf)) => int(-inf..1)
min(int(-inf..1), nonInt(0..1)) => int(-inf..-1) | 0..!1
min(int(-inf..1), nonInt(0..2)) => int(-inf..-1) | 0..1
min(int(-inf..1), nonInt(-1..2)) => int(-inf..-2) | -1..1
min(int(-inf..1), nonInt(0..inf)) => int(-inf..-1) | 0..1
min(int(-inf..1), nonInt(-1..inf)) => int(-inf..-2) | -1..1
min(int(-inf..1), nonInt(-inf..0)) => -inf!..!0
min(int(-inf..1), nonInt(-inf..1)) => -inf!..!1
min(int(-inf..1), nonInt(-inf..inf)) => -inf!..1
min(int(-inf..1), 1 | int(3..4)) => int(-inf..1)
min(int(-inf..inf), nonInt(0..1)) => int(-inf..-1) | 0..!1
min(int(-inf..inf), nonInt(0..2)) => int(-inf..-1) | 0..!2
min(int(-inf..inf), nonInt(-1..2)) => int(-inf..-2) | -1..!2
min(int(-inf..inf), nonInt(0..inf)) => int(-inf..-1) | 0..!inf
min(int(-inf..inf), nonInt(-1..inf)) => int(-inf..-2) | -1..!inf
min(int(-inf..inf), nonInt(-inf..0)) => -inf!..!0
min(int(-inf..inf), nonInt(-inf..1)) => -inf!..!1
min(int(-inf..inf), nonInt(-inf..inf)) => -inf!..!inf
min(int(-inf..inf), 1 | int(3..4)) => int(-inf..4)
min(nonInt(0..1), nonInt(0..2)) => nonInt(0..1)
min(nonInt(0..1), nonInt(-1..2)) => nonInt(-1..1)
min(nonInt(0..1), nonInt(0..inf)) => nonInt(0..1)
min(nonInt(0..1), nonInt(-1..inf)) => nonInt(-1..1)
min(nonInt(0..1), nonInt(-inf..0)) => nonInt(-inf..0)
min(nonInt(0..1), nonInt(-inf..1)) => nonInt(-inf..1)
min(nonInt(0..1), nonInt(-inf..inf)) => nonInt(-inf..1)
min(nonInt(0..1), 1 | int(3..4)) => nonInt(0..1)
min(nonInt(0..2), nonInt(-1..2)) => nonInt(-1..2)
min(nonInt(0..2), nonInt(0..inf)) => nonInt(0..2)
min(nonInt(0..2), nonInt(-1..inf)) => nonInt(-1..2)
min(nonInt(0..2), nonInt(-inf..0)) => nonInt(-inf..0)
min(nonInt(0..2), nonInt(-inf..1)) => nonInt(-inf..1)
min(nonInt(0..2), nonInt(-inf..inf)) => nonInt(-inf..2)
min(nonInt(0..2), 1 | int(3..4)) => 0!..!2
min(nonInt(-1..2), nonInt(0..inf)) => nonInt(-1..2)
min(nonInt(-1..2), nonInt(-1..inf)) => nonInt(-1..2)
min(nonInt(-1..2), nonInt(-inf..0)) => nonInt(-inf..0)
min(nonInt(-1..2), nonInt(-inf..1)) => nonInt(-inf..1)
min(nonInt(-1..2), nonInt(-inf..inf)) => nonInt(-inf..2)
min(nonInt(-1..2), 1 | int(3..4)) => nonInt(-1..0) | 0!..!2
min(nonInt(0..inf), nonInt(-1..inf)) => nonInt(-1..inf)
min(nonInt(0..inf), nonInt(-inf..0)) => nonInt(-inf..0)
min(nonInt(0..inf), nonInt(-inf..1)) => nonInt(-inf..1)
min(nonInt(0..inf), nonInt(-inf..inf)) => nonInt(-inf..inf)
min(nonInt(0..inf), 1 | int(3..4)) => 0!..!2 | 2!..4
min(nonInt(-1..inf), nonInt(-inf..0)) => nonInt(-inf..0)
min(nonInt(-1..inf), nonInt(-inf..1)) => nonInt(-inf..1)
min(nonInt(-1..inf), nonInt(-inf..inf)) => nonInt(-inf..inf)
min(nonInt(-1..inf), 1 | int(3..4)) => nonInt(-1..0) | 0!..!2 | 2!..4
min(nonInt(-inf..0), nonInt(-inf..1)) => nonInt(-inf..0)
min(nonInt(-inf..0), nonInt(-inf..inf)) => nonInt(-inf..0)
min(nonInt(-inf..0), 1 | int(3..4)) => nonInt(-inf..0)
min(nonInt(-inf..1), nonInt(-inf..inf)) => nonInt(-inf..1)
min(nonInt(-inf..1), 1 | int(3..4)) => nonInt(-inf..1)
min(nonInt(-inf..inf), 1 | int(3..4)) => nonInt(-inf..0) | 0!..!2 | 2!..4"
`;

exports[`Builtin functions number::add evaluate 1`] = `
"number::add(number, -3.14) => number
number::add(number, -2) => number
number::add(number, -1) => number
number::add(number, -0.5) => number
number::add(number, 0) => number
number::add(number, 0.5) => number
number::add(number, 1) => number
number::add(number, 2) => number
number::add(number, 2.78) => number
number::add(number, 3) => number
number::add(number, 3.14) => number
number::add(number, 10) => number
number::add(number, 100) => number
number::add(number, -inf) => -inf | nan
number::add(number, inf) => inf | nan
number::add(number, nan) => nan
number::add(number, 0..1) => number
number::add(number, 0!..1) => number
number::add(number, 0..!1) => number
number::add(number, 0..2) => number
number::add(number, 0!..!2) => number
number::add(number, 0.5..1.5) => number
number::add(number, 0.5..2.5) => number
number::add(number, 0.5!..2.5) => number
number::add(number, 0.5..!2.5) => number
number::add(number, -2.56..3.35) => number
number::add(number, 0.5..0.75) => number
number::add(number, 1..2) => number
number::add(number, 0..inf) => number
number::add(number, 0!..inf) => number
number::add(number, 0..!inf) => number
number::add(number, 0!..!inf) => number
number::add(number, 1..inf) => number
number::add(number, 1!..inf) => number
number::add(number, 1..!inf) => number
number::add(number, 2..inf) => number
number::add(number, 2!..inf) => number
number::add(number, 2.5..inf) => number
number::add(number, -inf..0) => number
number::add(number, -inf..inf) => number
number::add(number, -inf!..inf) => number
number::add(number, -inf..!inf) => number
number::add(number, -inf!..!inf) => number
number::add(number, int(0..1)) => number
number::add(number, int(0..2)) => number
number::add(number, int(1..2)) => number
number::add(number, int(5..20)) => number
number::add(number, int(-20..-5)) => number
number::add(number, int(-10..10)) => number
number::add(number, int(0..inf)) => number
number::add(number, int(1..inf)) => number
number::add(number, int(-inf..0)) => number
number::add(number, int(-inf..1)) => number
number::add(number, int(-inf..inf)) => number
number::add(number, nonInt(0..1)) => number
number::add(number, nonInt(0..2)) => number
number::add(number, nonInt(-1..2)) => number
number::add(number, nonInt(0..inf)) => number
number::add(number, nonInt(-1..inf)) => number
number::add(number, nonInt(-inf..0)) => number
number::add(number, nonInt(-inf..1)) => number
number::add(number, nonInt(-inf..inf)) => number
number::add(number, 1 | int(3..4)) => number
number::add(-3.14, -2) => -5.14
number::add(-3.14, -1) => -4.14
number::add(-3.14, -0.5) => -3.64
number::add(-3.14, 0) => -3.14
number::add(-3.14, 0.5) => -2.64
number::add(-3.14, 1) => -2.14
number::add(-3.14, 2) => -1.14
number::add(-3.14, 2.78) => -0.36
number::add(-3.14, 3) => -0.14
number::add(-3.14, 3.14) => 0
number::add(-3.14, 10) => 6.86
number::add(-3.14, 100) => 96.86
number::add(-3.14, -inf) => -inf
number::add(-3.14, inf) => inf
number::add(-3.14, nan) => nan
number::add(-3.14, 0..1) => -3.14..-2.14
number::add(-3.14, 0!..1) => -3.14!..-2.14
number::add(-3.14, 0..!1) => -3.14..!-2.14
number::add(-3.14, 0..2) => -3.14..-1.14
number::add(-3.14, 0!..!2) => -3.14!..!-1.14
number::add(-3.14, 0.5..1.5) => -2.64..-1.64
number::add(-3.14, 0.5..2.5) => -2.64..-0.64
number::add(-3.14, 0.5!..2.5) => -2.64!..-0.64
number::add(-3.14, 0.5..!2.5) => -2.64..!-0.64
number::add(-3.14, -2.56..3.35) => -5.7..0.21
number::add(-3.14, 0.5..0.75) => -2.64..-2.39
number::add(-3.14, 1..2) => -2.14..-1.14
number::add(-3.14, 0..inf) => -3.14..inf
number::add(-3.14, 0!..inf) => -3.14!..inf
number::add(-3.14, 0..!inf) => -3.14..!inf
number::add(-3.14, 0!..!inf) => -3.14!..!inf
number::add(-3.14, 1..inf) => -2.14..inf
number::add(-3.14, 1!..inf) => -2.14!..inf
number::add(-3.14, 1..!inf) => -2.14..!inf
number::add(-3.14, 2..inf) => -1.14..inf
number::add(-3.14, 2!..inf) => -1.14!..inf
number::add(-3.14, 2.5..inf) => -0.64..inf
number::add(-3.14, -inf..0) => -inf..-3.14
number::add(-3.14, -inf..inf) => -inf..inf
number::add(-3.14, -inf!..inf) => -inf!..inf
number::add(-3.14, -inf..!inf) => -inf..!inf
number::add(-3.14, -inf!..!inf) => -inf!..!inf
number::add(-3.14, int(0..1)) => -3.14 | -2.14
number::add(-3.14, int(0..2)) => -3.14 | -2.14 | -1.14
number::add(-3.14, int(1..2)) => -2.14 | -1.14
number::add(-3.14, int(5..20)) => 1.86..16.86
number::add(-3.14, int(-20..-5)) => -23.14..-8.14
number::add(-3.14, int(-10..10)) => -13.14..6.86
number::add(-3.14, int(0..inf)) => -3.14..inf
number::add(-3.14, int(1..inf)) => -2.14..inf
number::add(-3.14, int(-inf..0)) => -inf..-3.14
number::add(-3.14, int(-inf..1)) => -inf..-2.14
number::add(-3.14, int(-inf..inf)) => -inf..inf
number::add(-3.14, nonInt(0..1)) => -3.14!..!-2.14
number::add(-3.14, nonInt(0..2)) => -3.14!..!-1.14
number::add(-3.14, nonInt(-1..2)) => -4.14!..!-1.14
number::add(-3.14, nonInt(0..inf)) => -3.14!..!inf
number::add(-3.14, nonInt(-1..inf)) => -4.14!..!inf
number::add(-3.14, nonInt(-inf..0)) => -inf!..!-3.14
number::add(-3.14, nonInt(-inf..1)) => -inf!..!-2.14
number::add(-3.14, nonInt(-inf..inf)) => -inf!..!inf
number::add(-3.14, 1 | int(3..4)) => -2.14 | -0.14 | 0.86
number::add(-2, -1) => -3
number::add(-2, -0.5) => -2.5
number::add(-2, 0) => -2
number::add(-2, 0.5) => -1.5
number::add(-2, 1) => -1
number::add(-2, 2) => 0
number::add(-2, 2.78) => 0.78
number::add(-2, 3) => 1
number::add(-2, 3.14) => 1.14
number::add(-2, 10) => 8
number::add(-2, 100) => 98
number::add(-2, -inf) => -inf
number::add(-2, inf) => inf
number::add(-2, nan) => nan
number::add(-2, 0..1) => -2..-1
number::add(-2, 0!..1) => -2!..-1
number::add(-2, 0..!1) => -2..!-1
number::add(-2, 0..2) => -2..0
number::add(-2, 0!..!2) => -2!..!0
number::add(-2, 0.5..1.5) => -1.5..-0.5
number::add(-2, 0.5..2.5) => -1.5..0.5
number::add(-2, 0.5!..2.5) => -1.5!..0.5
number::add(-2, 0.5..!2.5) => -1.5..!0.5
number::add(-2, -2.56..3.35) => -4.56..1.35
number::add(-2, 0.5..0.75) => -1.5..-1.25
number::add(-2, 1..2) => -1..0
number::add(-2, 0..inf) => -2..inf
number::add(-2, 0!..inf) => -2!..inf
number::add(-2, 0..!inf) => -2..!inf
number::add(-2, 0!..!inf) => -2!..!inf
number::add(-2, 1..inf) => -1..inf
number::add(-2, 1!..inf) => -1!..inf
number::add(-2, 1..!inf) => -1..!inf
number::add(-2, 2..inf) => 0..inf
number::add(-2, 2!..inf) => 0!..inf
number::add(-2, 2.5..inf) => 0.5..inf
number::add(-2, -inf..0) => -inf..-2
number::add(-2, -inf..inf) => -inf..inf
number::add(-2, -inf!..inf) => -inf!..inf
number::add(-2, -inf..!inf) => -inf..!inf
number::add(-2, -inf!..!inf) => -inf!..!inf
number::add(-2, int(0..1)) => int(-2..-1)
number::add(-2, int(0..2)) => int(-2..0)
number::add(-2, int(1..2)) => int(-1..0)
number::add(-2, int(5..20)) => int(3..18)
number::add(-2, int(-20..-5)) => int(-22..-7)
number::add(-2, int(-10..10)) => int(-12..8)
number::add(-2, int(0..inf)) => int(-2..inf)
number::add(-2, int(1..inf)) => int(-1..inf)
number::add(-2, int(-inf..0)) => int(-inf..-2)
number::add(-2, int(-inf..1)) => int(-inf..-1)
number::add(-2, int(-inf..inf)) => int(-inf..inf)
number::add(-2, nonInt(0..1)) => nonInt(-2..-1)
number::add(-2, nonInt(0..2)) => nonInt(-2..0)
number::add(-2, nonInt(-1..2)) => nonInt(-3..0)
number::add(-2, nonInt(0..inf)) => nonInt(-2..inf)
number::add(-2, nonInt(-1..inf)) => nonInt(-3..inf)
number::add(-2, nonInt(-inf..0)) => nonInt(-inf..-2)
number::add(-2, nonInt(-inf..1)) => nonInt(-inf..-1)
number::add(-2, nonInt(-inf..inf)) => nonInt(-inf..inf)
number::add(-2, 1 | int(3..4)) => -1 | int(1..2)
number::add(-1, -0.5) => -1.5
number::add(-1, 0) => -1
number::add(-1, 0.5) => -0.5
number::add(-1, 1) => 0
number::add(-1, 2) => 1
number::add(-1, 2.78) => 1.78
number::add(-1, 3) => 2
number::add(-1, 3.14) => 2.14
number::add(-1, 10) => 9
number::add(-1, 100) => 99
number::add(-1, -inf) => -inf
number::add(-1, inf) => inf
number::add(-1, nan) => nan
number::add(-1, 0..1) => -1..0
number::add(-1, 0!..1) => -1!..0
number::add(-1, 0..!1) => -1..!0
number::add(-1, 0..2) => -1..1
number::add(-1, 0!..!2) => -1!..!1
number::add(-1, 0.5..1.5) => -0.5..0.5
number::add(-1, 0.5..2.5) => -0.5..1.5
number::add(-1, 0.5!..2.5) => -0.5!..1.5
number::add(-1, 0.5..!2.5) => -0.5..!1.5
number::add(-1, -2.56..3.35) => -3.56..2.35
number::add(-1, 0.5..0.75) => -0.5..-0.25
number::add(-1, 1..2) => 0..1
number::add(-1, 0..inf) => -1..inf
number::add(-1, 0!..inf) => -1!..inf
number::add(-1, 0..!inf) => -1..!inf
number::add(-1, 0!..!inf) => -1!..!inf
number::add(-1, 1..inf) => 0..inf
number::add(-1, 1!..inf) => 0!..inf
number::add(-1, 1..!inf) => 0..!inf
number::add(-1, 2..inf) => 1..inf
number::add(-1, 2!..inf) => 1!..inf
number::add(-1, 2.5..inf) => 1.5..inf
number::add(-1, -inf..0) => -inf..-1
number::add(-1, -inf..inf) => -inf..inf
number::add(-1, -inf!..inf) => -inf!..inf
number::add(-1, -inf..!inf) => -inf..!inf
number::add(-1, -inf!..!inf) => -inf!..!inf
number::add(-1, int(0..1)) => int(-1..0)
number::add(-1, int(0..2)) => int(-1..1)
number::add(-1, int(1..2)) => int(0..1)
number::add(-1, int(5..20)) => int(4..19)
number::add(-1, int(-20..-5)) => int(-21..-6)
number::add(-1, int(-10..10)) => int(-11..9)
number::add(-1, int(0..inf)) => int(-1..inf)
number::add(-1, int(1..inf)) => int(0..inf)
number::add(-1, int(-inf..0)) => int(-inf..-1)
number::add(-1, int(-inf..1)) => int(-inf..0)
number::add(-1, int(-inf..inf)) => int(-inf..inf)
number::add(-1, nonInt(0..1)) => nonInt(-1..0)
number::add(-1, nonInt(0..2)) => nonInt(-1..1)
number::add(-1, nonInt(-1..2)) => nonInt(-2..1)
number::add(-1, nonInt(0..inf)) => nonInt(-1..inf)
number::add(-1, nonInt(-1..inf)) => nonInt(-2..inf)
number::add(-1, nonInt(-inf..0)) => nonInt(-inf..-1)
number::add(-1, nonInt(-inf..1)) => nonInt(-inf..0)
number::add(-1, nonInt(-inf..inf)) => nonInt(-inf..inf)
number::add(-1, 1 | int(3..4)) => 0 | int(2..3)
number::add(-0.5, 0) => -0.5
number::add(-0.5, 0.5) => 0
number::add(-0.5, 1) => 0.5
number::add(-0.5, 2) => 1.5
number::add(-0.5, 2.78) => 2.28
number::add(-0.5, 3) => 2.5
number::add(-0.5, 3.14) => 2.64
number::add(-0.5, 10) => 9.5
number::add(-0.5, 100) => 99.5
number::add(-0.5, -inf) => -inf
number::add(-0.5, inf) => inf
number::add(-0.5, nan) => nan
number::add(-0.5, 0..1) => -0.5..0.5
number::add(-0.5, 0!..1) => -0.5!..0.5
number::add(-0.5, 0..!1) => -0.5..!0.5
number::add(-0.5, 0..2) => -0.5..1.5
number::add(-0.5, 0!..!2) => -0.5!..!1.5
number::add(-0.5, 0.5..1.5) => 0..1
number::add(-0.5, 0.5..2.5) => 0..2
number::add(-0.5, 0.5!..2.5) => 0!..2
number::add(-0.5, 0.5..!2.5) => 0..!2
number::add(-0.5, -2.56..3.35) => -3.06..2.85
number::add(-0.5, 0.5..0.75) => 0..0.25
number::add(-0.5, 1..2) => 0.5..1.5
number::add(-0.5, 0..inf) => -0.5..inf
number::add(-0.5, 0!..inf) => -0.5!..inf
number::add(-0.5, 0..!inf) => -0.5..!inf
number::add(-0.5, 0!..!inf) => -0.5!..!inf
number::add(-0.5, 1..inf) => 0.5..inf
number::add(-0.5, 1!..inf) => 0.5!..inf
number::add(-0.5, 1..!inf) => 0.5..!inf
number::add(-0.5, 2..inf) => 1.5..inf
number::add(-0.5, 2!..inf) => 1.5!..inf
number::add(-0.5, 2.5..inf) => 2..inf
number::add(-0.5, -inf..0) => -inf..-0.5
number::add(-0.5, -inf..inf) => -inf..inf
number::add(-0.5, -inf!..inf) => -inf!..inf
number::add(-0.5, -inf..!inf) => -inf..!inf
number::add(-0.5, -inf!..!inf) => -inf!..!inf
number::add(-0.5, int(0..1)) => -0.5 | 0.5
number::add(-0.5, int(0..2)) => -0.5 | 0.5 | 1.5
number::add(-0.5, int(1..2)) => 0.5 | 1.5
number::add(-0.5, int(5..20)) => 4.5..19.5
number::add(-0.5, int(-20..-5)) => -20.5..-5.5
number::add(-0.5, int(-10..10)) => -10.5..9.5
number::add(-0.5, int(0..inf)) => -0.5..inf
number::add(-0.5, int(1..inf)) => 0.5..inf
number::add(-0.5, int(-inf..0)) => -inf..-0.5
number::add(-0.5, int(-inf..1)) => -inf..0.5
number::add(-0.5, int(-inf..inf)) => -inf..inf
number::add(-0.5, nonInt(0..1)) => -0.5!..!0.5
number::add(-0.5, nonInt(0..2)) => -0.5!..!1.5
number::add(-0.5, nonInt(-1..2)) => -1.5!..!1.5
number::add(-0.5, nonInt(0..inf)) => -0.5!..!inf
number::add(-0.5, nonInt(-1..inf)) => -1.5!..!inf
number::add(-0.5, nonInt(-inf..0)) => -inf!..!-0.5
number::add(-0.5, nonInt(-inf..1)) => -inf!..!0.5
number::add(-0.5, nonInt(-inf..inf)) => -inf!..!inf
number::add(-0.5, 1 | int(3..4)) => 0.5 | 2.5 | 3.5
number::add(0, 0.5) => 0.5
number::add(0, 1) => 1
number::add(0, 2) => 2
number::add(0, 2.78) => 2.78
number::add(0, 3) => 3
number::add(0, 3.14) => 3.14
number::add(0, 10) => 10
number::add(0, 100) => 100
number::add(0, -inf) => -inf
number::add(0, inf) => inf
number::add(0, nan) => nan
number::add(0, 0..1) => 0..1
number::add(0, 0!..1) => 0!..1
number::add(0, 0..!1) => 0..!1
number::add(0, 0..2) => 0..2
number::add(0, 0!..!2) => 0!..!2
number::add(0, 0.5..1.5) => 0.5..1.5
number::add(0, 0.5..2.5) => 0.5..2.5
number::add(0, 0.5!..2.5) => 0.5!..2.5
number::add(0, 0.5..!2.5) => 0.5..!2.5
number::add(0, -2.56..3.35) => -2.56..3.35
number::add(0, 0.5..0.75) => 0.5..0.75
number::add(0, 1..2) => 1..2
number::add(0, 0..inf) => 0..inf
number::add(0, 0!..inf) => 0!..inf
number::add(0, 0..!inf) => 0..!inf
number::add(0, 0!..!inf) => 0!..!inf
number::add(0, 1..inf) => 1..inf
number::add(0, 1!..inf) => 1!..inf
number::add(0, 1..!inf) => 1..!inf
number::add(0, 2..inf) => 2..inf
number::add(0, 2!..inf) => 2!..inf
number::add(0, 2.5..inf) => 2.5..inf
number::add(0, -inf..0) => -inf..0
number::add(0, -inf..inf) => -inf..inf
number::add(0, -inf!..inf) => -inf!..inf
number::add(0, -inf..!inf) => -inf..!inf
number::add(0, -inf!..!inf) => -inf!..!inf
number::add(0, int(0..1)) => int(0..1)
number::add(0, int(0..2)) => int(0..2)
number::add(0, int(1..2)) => int(1..2)
number::add(0, int(5..20)) => int(5..20)
number::add(0, int(-20..-5)) => int(-20..-5)
number::add(0, int(-10..10)) => int(-10..10)
number::add(0, int(0..inf)) => int(0..inf)
number::add(0, int(1..inf)) => int(1..inf)
number::add(0, int(-inf..0)) => int(-inf..0)
number::add(0, int(-inf..1)) => int(-inf..1)
number::add(0, int(-inf..inf)) => int(-inf..inf)
number::add(0, nonInt(0..1)) => nonInt(0..1)
number::add(0, nonInt(0..2)) => nonInt(0..2)
number::add(0, nonInt(-1..2)) => nonInt(-1..2)
number::add(0, nonInt(0..inf)) => nonInt(0..inf)
number::add(0, nonInt(-1..inf)) => nonInt(-1..inf)
number::add(0, nonInt(-inf..0)) => nonInt(-inf..0)
number::add(0, nonInt(-inf..1)) => nonInt(-inf..1)
number::add(0, nonInt(-inf..inf)) => nonInt(-inf..inf)
number::add(0, 1 | int(3..4)) => 1 | int(3..4)
number::add(0.5, 1) => 1.5
number::add(0.5, 2) => 2.5
number::add(0.5, 2.78) => 3.28
number::add(0.5, 3) => 3.5
number::add(0.5, 3.14) => 3.64
number::add(0.5, 10) => 10.5
number::add(0.5, 100) => 100.5
number::add(0.5, -inf) => -inf
number::add(0.5, inf) => inf
number::add(0.5, nan) => nan
number::add(0.5, 0..1) => 0.5..1.5
number::add(0.5, 0!..1) => 0.5!..1.5
number::add(0.5, 0..!1) => 0.5..!1.5
number::add(0.5, 0..2) => 0.5..2.5
number::add(0.5, 0!..!2) => 0.5!..!2.5
number::add(0.5, 0.5..1.5) => 1..2
number::add(0.5, 0.5..2.5) => 1..3
number::add(0.5, 0.5!..2.5) => 1!..3
number::add(0.5, 0.5..!2.5) => 1..!3
number::add(0.5, -2.56..3.35) => -2.06..3.85
number::add(0.5, 0.5..0.75) => 1..1.25
number::add(0.5, 1..2) => 1.5..2.5
number::add(0.5, 0..inf) => 0.5..inf
number::add(0.5, 0!..inf) => 0.5!..inf
number::add(0.5, 0..!inf) => 0.5..!inf
number::add(0.5, 0!..!inf) => 0.5!..!inf
number::add(0.5, 1..inf) => 1.5..inf
number::add(0.5, 1!..inf) => 1.5!..inf
number::add(0.5, 1..!inf) => 1.5..!inf
number::add(0.5, 2..inf) => 2.5..inf
number::add(0.5, 2!..inf) => 2.5!..inf
number::add(0.5, 2.5..inf) => 3..inf
number::add(0.5, -inf..0) => -inf..0.5
number::add(0.5, -inf..inf) => -inf..inf
number::add(0.5, -inf!..inf) => -inf!..inf
number::add(0.5, -inf..!inf) => -inf..!inf
number::add(0.5, -inf!..!inf) => -inf!..!inf
number::add(0.5, int(0..1)) => 0.5 | 1.5
number::add(0.5, int(0..2)) => 0.5 | 1.5 | 2.5
number::add(0.5, int(1..2)) => 1.5 | 2.5
number::add(0.5, int(5..20)) => 5.5..20.5
number::add(0.5, int(-20..-5)) => -19.5..-4.5
number::add(0.5, int(-10..10)) => -9.5..10.5
number::add(0.5, int(0..inf)) => 0.5..inf
number::add(0.5, int(1..inf)) => 1.5..inf
number::add(0.5, int(-inf..0)) => -inf..0.5
number::add(0.5, int(-inf..1)) => -inf..1.5
number::add(0.5, int(-inf..inf)) => -inf..inf
number::add(0.5, nonInt(0..1)) => 0.5!..!1.5
number::add(0.5, nonInt(0..2)) => 0.5!..!2.5
number::add(0.5, nonInt(-1..2)) => -0.5!..!2.5
number::add(0.5, nonInt(0..inf)) => 0.5!..!inf
number::add(0.5, nonInt(-1..inf)) => -0.5!..!inf
number::add(0.5, nonInt(-inf..0)) => -inf!..!0.5
number::add(0.5, nonInt(-inf..1)) => -inf!..!1.5
number::add(0.5, nonInt(-inf..inf)) => -inf!..!inf
number::add(0.5, 1 | int(3..4)) => 1.5 | 3.5 | 4.5
number::add(1, 2) => 3
number::add(1, 2.78) => 3.78
number::add(1, 3) => 4
number::add(1, 3.14) => 4.14
number::add(1, 10) => 11
number::add(1, 100) => 101
number::add(1, -inf) => -inf
number::add(1, inf) => inf
number::add(1, nan) => nan
number::add(1, 0..1) => 1..2
number::add(1, 0!..1) => 1!..2
number::add(1, 0..!1) => 1..!2
number::add(1, 0..2) => 1..3
number::add(1, 0!..!2) => 1!..!3
number::add(1, 0.5..1.5) => 1.5..2.5
number::add(1, 0.5..2.5) => 1.5..3.5
number::add(1, 0.5!..2.5) => 1.5!..3.5
number::add(1, 0.5..!2.5) => 1.5..!3.5
number::add(1, -2.56..3.35) => -1.56..4.35
number::add(1, 0.5..0.75) => 1.5..1.75
number::add(1, 1..2) => 2..3
number::add(1, 0..inf) => 1..inf
number::add(1, 0!..inf) => 1!..inf
number::add(1, 0..!inf) => 1..!inf
number::add(1, 0!..!inf) => 1!..!inf
number::add(1, 1..inf) => 2..inf
number::add(1, 1!..inf) => 2!..inf
number::add(1, 1..!inf) => 2..!inf
number::add(1, 2..inf) => 3..inf
number::add(1, 2!..inf) => 3!..inf
number::add(1, 2.5..inf) => 3.5..inf
number::add(1, -inf..0) => -inf..1
number::add(1, -inf..inf) => -inf..inf
number::add(1, -inf!..inf) => -inf!..inf
number::add(1, -inf..!inf) => -inf..!inf
number::add(1, -inf!..!inf) => -inf!..!inf
number::add(1, int(0..1)) => int(1..2)
number::add(1, int(0..2)) => int(1..3)
number::add(1, int(1..2)) => int(2..3)
number::add(1, int(5..20)) => int(6..21)
number::add(1, int(-20..-5)) => int(-19..-4)
number::add(1, int(-10..10)) => int(-9..11)
number::add(1, int(0..inf)) => int(1..inf)
number::add(1, int(1..inf)) => int(2..inf)
number::add(1, int(-inf..0)) => int(-inf..1)
number::add(1, int(-inf..1)) => int(-inf..2)
number::add(1, int(-inf..inf)) => int(-inf..inf)
number::add(1, nonInt(0..1)) => nonInt(1..2)
number::add(1, nonInt(0..2)) => nonInt(1..3)
number::add(1, nonInt(-1..2)) => nonInt(0..3)
number::add(1, nonInt(0..inf)) => nonInt(1..inf)
number::add(1, nonInt(-1..inf)) => nonInt(0..inf)
number::add(1, nonInt(-inf..0)) => nonInt(-inf..1)
number::add(1, nonInt(-inf..1)) => nonInt(-inf..2)
number::add(1, nonInt(-inf..inf)) => nonInt(-inf..inf)
number::add(1, 1 | int(3..4)) => 2 | int(4..5)
number::add(2, 2.78) => 4.78
number::add(2, 3) => 5
number::add(2, 3.14) => 5.14
number::add(2, 10) => 12
number::add(2, 100) => 102
number::add(2, -inf) => -inf
number::add(2, inf) => inf
number::add(2, nan) => nan
number::add(2, 0..1) => 2..3
number::add(2, 0!..1) => 2!..3
number::add(2, 0..!1) => 2..!3
number::add(2, 0..2) => 2..4
number::add(2, 0!..!2) => 2!..!4
number::add(2, 0.5..1.5) => 2.5..3.5
number::add(2, 0.5..2.5) => 2.5..4.5
number::add(2, 0.5!..2.5) => 2.5!..4.5
number::add(2, 0.5..!2.5) => 2.5..!4.5
number::add(2, -2.56..3.35) => -0.56..5.35
number::add(2, 0.5..0.75) => 2.5..2.75
number::add(2, 1..2) => 3..4
number::add(2, 0..inf) => 2..inf
number::add(2, 0!..inf) => 2!..inf
number::add(2, 0..!inf) => 2..!inf
number::add(2, 0!..!inf) => 2!..!inf
number::add(2, 1..inf) => 3..inf
number::add(2, 1!..inf) => 3!..inf
number::add(2, 1..!inf) => 3..!inf
number::add(2, 2..inf) => 4..inf
number::add(2, 2!..inf) => 4!..inf
number::add(2, 2.5..inf) => 4.5..inf
number::add(2, -inf..0) => -inf..2
number::add(2, -inf..inf) => -inf..inf
number::add(2, -inf!..inf) => -inf!..inf
number::add(2, -inf..!inf) => -inf..!inf
number::add(2, -inf!..!inf) => -inf!..!inf
number::add(2, int(0..1)) => int(2..3)
number::add(2, int(0..2)) => int(2..4)
number::add(2, int(1..2)) => int(3..4)
number::add(2, int(5..20)) => int(7..22)
number::add(2, int(-20..-5)) => int(-18..-3)
number::add(2, int(-10..10)) => int(-8..12)
number::add(2, int(0..inf)) => int(2..inf)
number::add(2, int(1..inf)) => int(3..inf)
number::add(2, int(-inf..0)) => int(-inf..2)
number::add(2, int(-inf..1)) => int(-inf..3)
number::add(2, int(-inf..inf)) => int(-inf..inf)
number::add(2, nonInt(0..1)) => nonInt(2..3)
number::add(2, nonInt(0..2)) => nonInt(2..4)
number::add(2, nonInt(-1..2)) => nonInt(1..4)
number::add(2, nonInt(0..inf)) => nonInt(2..inf)
number::add(2, nonInt(-1..inf)) => nonInt(1..inf)
number::add(2, nonInt(-inf..0)) => nonInt(-inf..2)
number::add(2, nonInt(-inf..1)) => nonInt(-inf..3)
number::add(2, nonInt(-inf..inf)) => nonInt(-inf..inf)
number::add(2, 1 | int(3..4)) => 3 | int(5..6)
number::add(2.78, 3) => 5.78
number::add(2.78, 3.14) => 5.92
number::add(2.78, 10) => 12.78
number::add(2.78, 100) => 102.78
number::add(2.78, -inf) => -inf
number::add(2.78, inf) => inf
number::add(2.78, nan) => nan
number::add(2.78, 0..1) => 2.78..3.78
number::add(2.78, 0!..1) => 2.78!..3.78
number::add(2.78, 0..!1) => 2.78..!3.78
number::add(2.78, 0..2) => 2.78..4.78
number::add(2.78, 0!..!2) => 2.78!..!4.78
number::add(2.78, 0.5..1.5) => 3.28..4.28
number::add(2.78, 0.5..2.5) => 3.28..5.28
number::add(2.78, 0.5!..2.5) => 3.28!..5.28
number::add(2.78, 0.5..!2.5) => 3.28..!5.28
number::add(2.78, -2.56..3.35) => 0.22..6.13
number::add(2.78, 0.5..0.75) => 3.28..3.53
number::add(2.78, 1..2) => 3.78..4.78
number::add(2.78, 0..inf) => 2.78..inf
number::add(2.78, 0!..inf) => 2.78!..inf
number::add(2.78, 0..!inf) => 2.78..!inf
number::add(2.78, 0!..!inf) => 2.78!..!inf
number::add(2.78, 1..inf) => 3.78..inf
number::add(2.78, 1!..inf) => 3.78!..inf
number::add(2.78, 1..!inf) => 3.78..!inf
number::add(2.78, 2..inf) => 4.78..inf
number::add(2.78, 2!..inf) => 4.78!..inf
number::add(2.78, 2.5..inf) => 5.28..inf
number::add(2.78, -inf..0) => -inf..2.78
number::add(2.78, -inf..inf) => -inf..inf
number::add(2.78, -inf!..inf) => -inf!..inf
number::add(2.78, -inf..!inf) => -inf..!inf
number::add(2.78, -inf!..!inf) => -inf!..!inf
number::add(2.78, int(0..1)) => 2.78 | 3.78
number::add(2.78, int(0..2)) => 2.78 | 3.78 | 4.78
number::add(2.78, int(1..2)) => 3.78 | 4.78
number::add(2.78, int(5..20)) => 7.78..22.78
number::add(2.78, int(-20..-5)) => -17.22..-2.22
number::add(2.78, int(-10..10)) => -7.22..12.78
number::add(2.78, int(0..inf)) => 2.78..inf
number::add(2.78, int(1..inf)) => 3.78..inf
number::add(2.78, int(-inf..0)) => -inf..2.78
number::add(2.78, int(-inf..1)) => -inf..3.78
number::add(2.78, int(-inf..inf)) => -inf..inf
number::add(2.78, nonInt(0..1)) => 2.78!..!3.78
number::add(2.78, nonInt(0..2)) => 2.78!..!4.78
number::add(2.78, nonInt(-1..2)) => 1.78!..!4.78
number::add(2.78, nonInt(0..inf)) => 2.78!..!inf
number::add(2.78, nonInt(-1..inf)) => 1.78!..!inf
number::add(2.78, nonInt(-inf..0)) => -inf!..!2.78
number::add(2.78, nonInt(-inf..1)) => -inf!..!3.78
number::add(2.78, nonInt(-inf..inf)) => -inf!..!inf
number::add(2.78, 1 | int(3..4)) => 3.78 | 5.78 | 6.78
number::add(3, 3.14) => 6.14
number::add(3, 10) => 13
number::add(3, 100) => 103
number::add(3, -inf) => -inf
number::add(3, inf) => inf
number::add(3, nan) => nan
number::add(3, 0..1) => 3..4
number::add(3, 0!..1) => 3!..4
number::add(3, 0..!1) => 3..!4
number::add(3, 0..2) => 3..5
number::add(3, 0!..!2) => 3!..!5
number::add(3, 0.5..1.5) => 3.5..4.5
number::add(3, 0.5..2.5) => 3.5..5.5
number::add(3, 0.5!..2.5) => 3.5!..5.5
number::add(3, 0.5..!2.5) => 3.5..!5.5
number::add(3, -2.56..3.35) => 0.44..6.35
number::add(3, 0.5..0.75) => 3.5..3.75
number::add(3, 1..2) => 4..5
number::add(3, 0..inf) => 3..inf
number::add(3, 0!..inf) => 3!..inf
number::add(3, 0..!inf) => 3..!inf
number::add(3, 0!..!inf) => 3!..!inf
number::add(3, 1..inf) => 4..inf
number::add(3, 1!..inf) => 4!..inf
number::add(3, 1..!inf) => 4..!inf
number::add(3, 2..inf) => 5..inf
number::add(3, 2!..inf) => 5!..inf
number::add(3, 2.5..inf) => 5.5..inf
number::add(3, -inf..0) => -inf..3
number::add(3, -inf..inf) => -inf..inf
number::add(3, -inf!..inf) => -inf!..inf
number::add(3, -inf..!inf) => -inf..!inf
number::add(3, -inf!..!inf) => -inf!..!inf
number::add(3, int(0..1)) => int(3..4)
number::add(3, int(0..2)) => int(3..5)
number::add(3, int(1..2)) => int(4..5)
number::add(3, int(5..20)) => int(8..23)
number::add(3, int(-20..-5)) => int(-17..-2)
number::add(3, int(-10..10)) => int(-7..13)
number::add(3, int(0..inf)) => int(3..inf)
number::add(3, int(1..inf)) => int(4..inf)
number::add(3, int(-inf..0)) => int(-inf..3)
number::add(3, int(-inf..1)) => int(-inf..4)
number::add(3, int(-inf..inf)) => int(-inf..inf)
number::add(3, nonInt(0..1)) => nonInt(3..4)
number::add(3, nonInt(0..2)) => nonInt(3..5)
number::add(3, nonInt(-1..2)) => nonInt(2..5)
number::add(3, nonInt(0..inf)) => nonInt(3..inf)
number::add(3, nonInt(-1..inf)) => nonInt(2..inf)
number::add(3, nonInt(-inf..0)) => nonInt(-inf..3)
number::add(3, nonInt(-inf..1)) => nonInt(-inf..4)
number::add(3, nonInt(-inf..inf)) => nonInt(-inf..inf)
number::add(3, 1 | int(3..4)) => 4 | int(6..7)
number::add(3.14, 10) => 13.14
number::add(3.14, 100) => 103.14
number::add(3.14, -inf) => -inf
number::add(3.14, inf) => inf
number::add(3.14, nan) => nan
number::add(3.14, 0..1) => 3.14..4.14
number::add(3.14, 0!..1) => 3.14!..4.14
number::add(3.14, 0..!1) => 3.14..!4.14
number::add(3.14, 0..2) => 3.14..5.14
number::add(3.14, 0!..!2) => 3.14!..!5.14
number::add(3.14, 0.5..1.5) => 3.64..4.64
number::add(3.14, 0.5..2.5) => 3.64..5.64
number::add(3.14, 0.5!..2.5) => 3.64!..5.64
number::add(3.14, 0.5..!2.5) => 3.64..!5.64
number::add(3.14, -2.56..3.35) => 0.58..6.49
number::add(3.14, 0.5..0.75) => 3.64..3.89
number::add(3.14, 1..2) => 4.14..5.14
number::add(3.14, 0..inf) => 3.14..inf
number::add(3.14, 0!..inf) => 3.14!..inf
number::add(3.14, 0..!inf) => 3.14..!inf
number::add(3.14, 0!..!inf) => 3.14!..!inf
number::add(3.14, 1..inf) => 4.14..inf
number::add(3.14, 1!..inf) => 4.14!..inf
number::add(3.14, 1..!inf) => 4.14..!inf
number::add(3.14, 2..inf) => 5.14..inf
number::add(3.14, 2!..inf) => 5.14!..inf
number::add(3.14, 2.5..inf) => 5.64..inf
number::add(3.14, -inf..0) => -inf..3.14
number::add(3.14, -inf..inf) => -inf..inf
number::add(3.14, -inf!..inf) => -inf!..inf
number::add(3.14, -inf..!inf) => -inf..!inf
number::add(3.14, -inf!..!inf) => -inf!..!inf
number::add(3.14, int(0..1)) => 3.14 | 4.14
number::add(3.14, int(0..2)) => 3.14 | 4.14 | 5.14
number::add(3.14, int(1..2)) => 4.14 | 5.14
number::add(3.14, int(5..20)) => 8.14..23.14
number::add(3.14, int(-20..-5)) => -16.86..-1.86
number::add(3.14, int(-10..10)) => -6.86..13.14
number::add(3.14, int(0..inf)) => 3.14..inf
number::add(3.14, int(1..inf)) => 4.14..inf
number::add(3.14, int(-inf..0)) => -inf..3.14
number::add(3.14, int(-inf..1)) => -inf..4.14
number::add(3.14, int(-inf..inf)) => -inf..inf
number::add(3.14, nonInt(0..1)) => 3.14!..!4.14
number::add(3.14, nonInt(0..2)) => 3.14!..!5.14
number::add(3.14, nonInt(-1..2)) => 2.14!..!5.14
number::add(3.14, nonInt(0..inf)) => 3.14!..!inf
number::add(3.14, nonInt(-1..inf)) => 2.14!..!inf
number::add(3.14, nonInt(-inf..0)) => -inf!..!3.14
number::add(3.14, nonInt(-inf..1)) => -inf!..!4.14
number::add(3.14, nonInt(-inf..inf)) => -inf!..!inf
number::add(3.14, 1 | int(3..4)) => 4.14 | 6.14 | 7.14
number::add(10, 100) => 110
number::add(10, -inf) => -inf
number::add(10, inf) => inf
number::add(10, nan) => nan
number::add(10, 0..1) => 10..11
number::add(10, 0!..1) => 10!..11
number::add(10, 0..!1) => 10..!11
number::add(10, 0..2) => 10..12
number::add(10, 0!..!2) => 10!..!12
number::add(10, 0.5..1.5) => 10.5..11.5
number::add(10, 0.5..2.5) => 10.5..12.5
number::add(10, 0.5!..2.5) => 10.5!..12.5
number::add(10, 0.5..!2.5) => 10.5..!12.5
number::add(10, -2.56..3.35) => 7.44..13.35
number::add(10, 0.5..0.75) => 10.5..10.75
number::add(10, 1..2) => 11..12
number::add(10, 0..inf) => 10..inf
number::add(10, 0!..inf) => 10!..inf
number::add(10, 0..!inf) => 10..!inf
number::add(10, 0!..!inf) => 10!..!inf
number::add(10, 1..inf) => 11..inf
number::add(10, 1!..inf) => 11!..inf
number::add(10, 1..!inf) => 11..!inf
number::add(10, 2..inf) => 12..inf
number::add(10, 2!..inf) => 12!..inf
number::add(10, 2.5..inf) => 12.5..inf
number::add(10, -inf..0) => -inf..10
number::add(10, -inf..inf) => -inf..inf
number::add(10, -inf!..inf) => -inf!..inf
number::add(10, -inf..!inf) => -inf..!inf
number::add(10, -inf!..!inf) => -inf!..!inf
number::add(10, int(0..1)) => int(10..11)
number::add(10, int(0..2)) => int(10..12)
number::add(10, int(1..2)) => int(11..12)
number::add(10, int(5..20)) => int(15..30)
number::add(10, int(-20..-5)) => int(-10..5)
number::add(10, int(-10..10)) => int(0..20)
number::add(10, int(0..inf)) => int(10..inf)
number::add(10, int(1..inf)) => int(11..inf)
number::add(10, int(-inf..0)) => int(-inf..10)
number::add(10, int(-inf..1)) => int(-inf..11)
number::add(10, int(-inf..inf)) => int(-inf..inf)
number::add(10, nonInt(0..1)) => nonInt(10..11)
number::add(10, nonInt(0..2)) => nonInt(10..12)
number::add(10, nonInt(-1..2)) => nonInt(9..12)
number::add(10, nonInt(0..inf)) => nonInt(10..inf)
number::add(10, nonInt(-1..inf)) => nonInt(9..inf)
number::add(10, nonInt(-inf..0)) => nonInt(-inf..10)
number::add(10, nonInt(-inf..1)) => nonInt(-inf..11)
number::add(10, nonInt(-inf..inf)) => nonInt(-inf..inf)
number::add(10, 1 | int(3..4)) => 11 | int(13..14)
number::add(100, -inf) => -inf
number::add(100, inf) => inf
number::add(100, nan) => nan
number::add(100, 0..1) => 100..101
number::add(100, 0!..1) => 100!..101
number::add(100, 0..!1) => 100..!101
number::add(100, 0..2) => 100..102
number::add(100, 0!..!2) => 100!..!102
number::add(100, 0.5..1.5) => 100.5..101.5
number::add(100, 0.5..2.5) => 100.5..102.5
number::add(100, 0.5!..2.5) => 100.5!..102.5
number::add(100, 0.5..!2.5) => 100.5..!102.5
number::add(100, -2.56..3.35) => 97.44..103.35
number::add(100, 0.5..0.75) => 100.5..100.75
number::add(100, 1..2) => 101..102
number::add(100, 0..inf) => 100..inf
number::add(100, 0!..inf) => 100!..inf
number::add(100, 0..!inf) => 100..!inf
number::add(100, 0!..!inf) => 100!..!inf
number::add(100, 1..inf) => 101..inf
number::add(100, 1!..inf) => 101!..inf
number::add(100, 1..!inf) => 101..!inf
number::add(100, 2..inf) => 102..inf
number::add(100, 2!..inf) => 102!..inf
number::add(100, 2.5..inf) => 102.5..inf
number::add(100, -inf..0) => -inf..100
number::add(100, -inf..inf) => -inf..inf
number::add(100, -inf!..inf) => -inf!..inf
number::add(100, -inf..!inf) => -inf..!inf
number::add(100, -inf!..!inf) => -inf!..!inf
number::add(100, int(0..1)) => int(100..101)
number::add(100, int(0..2)) => int(100..102)
number::add(100, int(1..2)) => int(101..102)
number::add(100, int(5..20)) => int(105..120)
number::add(100, int(-20..-5)) => int(80..95)
number::add(100, int(-10..10)) => int(90..110)
number::add(100, int(0..inf)) => int(100..inf)
number::add(100, int(1..inf)) => int(101..inf)
number::add(100, int(-inf..0)) => int(-inf..100)
number::add(100, int(-inf..1)) => int(-inf..101)
number::add(100, int(-inf..inf)) => int(-inf..inf)
number::add(100, nonInt(0..1)) => nonInt(100..101)
number::add(100, nonInt(0..2)) => nonInt(100..102)
number::add(100, nonInt(-1..2)) => nonInt(99..102)
number::add(100, nonInt(0..inf)) => nonInt(100..inf)
number::add(100, nonInt(-1..inf)) => nonInt(99..inf)
number::add(100, nonInt(-inf..0)) => nonInt(-inf..100)
number::add(100, nonInt(-inf..1)) => nonInt(-inf..101)
number::add(100, nonInt(-inf..inf)) => nonInt(-inf..inf)
number::add(100, 1 | int(3..4)) => 101 | int(103..104)
number::add(-inf, inf) => nan
number::add(-inf, nan) => nan
number::add(-inf, 0..1) => -inf
number::add(-inf, 0!..1) => -inf
number::add(-inf, 0..!1) => -inf
number::add(-inf, 0..2) => -inf
number::add(-inf, 0!..!2) => -inf
number::add(-inf, 0.5..1.5) => -inf
number::add(-inf, 0.5..2.5) => -inf
number::add(-inf, 0.5!..2.5) => -inf
number::add(-inf, 0.5..!2.5) => -inf
number::add(-inf, -2.56..3.35) => -inf
number::add(-inf, 0.5..0.75) => -inf
number::add(-inf, 1..2) => -inf
number::add(-inf, 0..inf) => -inf | nan
number::add(-inf, 0!..inf) => -inf | nan
number::add(-inf, 0..!inf) => -inf
number::add(-inf, 0!..!inf) => -inf
number::add(-inf, 1..inf) => -inf | nan
number::add(-inf, 1!..inf) => -inf | nan
number::add(-inf, 1..!inf) => -inf
number::add(-inf, 2..inf) => -inf | nan
number::add(-inf, 2!..inf) => -inf | nan
number::add(-inf, 2.5..inf) => -inf | nan
number::add(-inf, -inf..0) => -inf
number::add(-inf, -inf..inf) => -inf | nan
number::add(-inf, -inf!..inf) => -inf | nan
number::add(-inf, -inf..!inf) => -inf
number::add(-inf, -inf!..!inf) => -inf
number::add(-inf, int(0..1)) => -inf
number::add(-inf, int(0..2)) => -inf
number::add(-inf, int(1..2)) => -inf
number::add(-inf, int(5..20)) => -inf
number::add(-inf, int(-20..-5)) => -inf
number::add(-inf, int(-10..10)) => -inf
number::add(-inf, int(0..inf)) => -inf
number::add(-inf, int(1..inf)) => -inf
number::add(-inf, int(-inf..0)) => -inf
number::add(-inf, int(-inf..1)) => -inf
number::add(-inf, int(-inf..inf)) => -inf
number::add(-inf, nonInt(0..1)) => -inf
number::add(-inf, nonInt(0..2)) => -inf
number::add(-inf, nonInt(-1..2)) => -inf
number::add(-inf, nonInt(0..inf)) => -inf
number::add(-inf, nonInt(-1..inf)) => -inf
number::add(-inf, nonInt(-inf..0)) => -inf
number::add(-inf, nonInt(-inf..1)) => -inf
number::add(-inf, nonInt(-inf..inf)) => -inf
number::add(-inf, 1 | int(3..4)) => -inf
number::add(inf, nan) => nan
number::add(inf, 0..1) => inf
number::add(inf, 0!..1) => inf
number::add(inf, 0..!1) => inf
number::add(inf, 0..2) => inf
number::add(inf, 0!..!2) => inf
number::add(inf, 0.5..1.5) => inf
number::add(inf, 0.5..2.5) => inf
number::add(inf, 0.5!..2.5) => inf
number::add(inf, 0.5..!2.5) => inf
number::add(inf, -2.56..3.35) => inf
number::add(inf, 0.5..0.75) => inf
number::add(inf, 1..2) => inf
number::add(inf, 0..inf) => inf
number::add(inf, 0!..inf) => inf
number::add(inf, 0..!inf) => inf
number::add(inf, 0!..!inf) => inf
number::add(inf, 1..inf) => inf
number::add(inf, 1!..inf) => inf
number::add(inf, 1..!inf) => inf
number::add(inf, 2..inf) => inf
number::add(inf, 2!..inf) => inf
number::add(inf, 2.5..inf) => inf
number::add(inf, -inf..0) => inf | nan
number::add(inf, -inf..inf) => inf | nan
number::add(inf, -inf!..inf) => inf
number::add(inf, -inf..!inf) => inf | nan
number::add(inf, -inf!..!inf) => inf
number::add(inf, int(0..1)) => inf
number::add(inf, int(0..2)) => inf
number::add(inf, int(1..2)) => inf
number::add(inf, int(5..20)) => inf
number::add(inf, int(-20..-5)) => inf
number::add(inf, int(-10..10)) => inf
number::add(inf, int(0..inf)) => inf
number::add(inf, int(1..inf)) => inf
number::add(inf, int(-inf..0)) => inf
number::add(inf, int(-inf..1)) => inf
number::add(inf, int(-inf..inf)) => inf
number::add(inf, nonInt(0..1)) => inf
number::add(inf, nonInt(0..2)) => inf
number::add(inf, nonInt(-1..2)) => inf
number::add(inf, nonInt(0..inf)) => inf
number::add(inf, nonInt(-1..inf)) => inf
number::add(inf, nonInt(-inf..0)) => inf
number::add(inf, nonInt(-inf..1)) => inf
number::add(inf, nonInt(-inf..inf)) => inf
number::add(inf, 1 | int(3..4)) => inf
number::add(nan, 0..1) => nan
number::add(nan, 0!..1) => nan
number::add(nan, 0..!1) => nan
number::add(nan, 0..2) => nan
number::add(nan, 0!..!2) => nan
number::add(nan, 0.5..1.5) => nan
number::add(nan, 0.5..2.5) => nan
number::add(nan, 0.5!..2.5) => nan
number::add(nan, 0.5..!2.5) => nan
number::add(nan, -2.56..3.35) => nan
number::add(nan, 0.5..0.75) => nan
number::add(nan, 1..2) => nan
number::add(nan, 0..inf) => nan
number::add(nan, 0!..inf) => nan
number::add(nan, 0..!inf) => nan
number::add(nan, 0!..!inf) => nan
number::add(nan, 1..inf) => nan
number::add(nan, 1!..inf) => nan
number::add(nan, 1..!inf) => nan
number::add(nan, 2..inf) => nan
number::add(nan, 2!..inf) => nan
number::add(nan, 2.5..inf) => nan
number::add(nan, -inf..0) => nan
number::add(nan, -inf..inf) => nan
number::add(nan, -inf!..inf) => nan
number::add(nan, -inf..!inf) => nan
number::add(nan, -inf!..!inf) => nan
number::add(nan, int(0..1)) => nan
number::add(nan, int(0..2)) => nan
number::add(nan, int(1..2)) => nan
number::add(nan, int(5..20)) => nan
number::add(nan, int(-20..-5)) => nan
number::add(nan, int(-10..10)) => nan
number::add(nan, int(0..inf)) => nan
number::add(nan, int(1..inf)) => nan
number::add(nan, int(-inf..0)) => nan
number::add(nan, int(-inf..1)) => nan
number::add(nan, int(-inf..inf)) => nan
number::add(nan, nonInt(0..1)) => nan
number::add(nan, nonInt(0..2)) => nan
number::add(nan, nonInt(-1..2)) => nan
number::add(nan, nonInt(0..inf)) => nan
number::add(nan, nonInt(-1..inf)) => nan
number::add(nan, nonInt(-inf..0)) => nan
number::add(nan, nonInt(-inf..1)) => nan
number::add(nan, nonInt(-inf..inf)) => nan
number::add(nan, 1 | int(3..4)) => nan
number::add(0..1, 0!..1) => 0!..2
number::add(0..1, 0..!1) => 0..!2
number::add(0..1, 0..2) => 0..3
number::add(0..1, 0!..!2) => 0!..!3
number::add(0..1, 0.5..1.5) => 0.5..2.5
number::add(0..1, 0.5..2.5) => 0.5..3.5
number::add(0..1, 0.5!..2.5) => 0.5!..3.5
number::add(0..1, 0.5..!2.5) => 0.5..!3.5
number::add(0..1, -2.56..3.35) => -2.56..4.35
number::add(0..1, 0.5..0.75) => 0.5..1.75
number::add(0..1, 1..2) => 1..3
number::add(0..1, 0..inf) => 0..inf
number::add(0..1, 0!..inf) => 0!..inf
number::add(0..1, 0..!inf) => 0..!inf
number::add(0..1, 0!..!inf) => 0!..!inf
number::add(0..1, 1..inf) => 1..inf
number::add(0..1, 1!..inf) => 1!..inf
number::add(0..1, 1..!inf) => 1..!inf
number::add(0..1, 2..inf) => 2..inf
number::add(0..1, 2!..inf) => 2!..inf
number::add(0..1, 2.5..inf) => 2.5..inf
number::add(0..1, -inf..0) => -inf..1
number::add(0..1, -inf..inf) => -inf..inf
number::add(0..1, -inf!..inf) => -inf!..inf
number::add(0..1, -inf..!inf) => -inf..!inf
number::add(0..1, -inf!..!inf) => -inf!..!inf
number::add(0..1, int(0..1)) => 0..2
number::add(0..1, int(0..2)) => 0..3
number::add(0..1, int(1..2)) => 1..3
number::add(0..1, int(5..20)) => 5..21
number::add(0..1, int(-20..-5)) => -20..-4
number::add(0..1, int(-10..10)) => -10..11
number::add(0..1, int(0..inf)) => 0..!inf
number::add(0..1, int(1..inf)) => 1..!inf
number::add(0..1, int(-inf..0)) => -inf!..1
number::add(0..1, int(-inf..1)) => -inf!..2
number::add(0..1, int(-inf..inf)) => -inf!..!inf
number::add(0..1, nonInt(0..1)) => 0!..!2
number::add(0..1, nonInt(0..2)) => 0!..!3
number::add(0..1, nonInt(-1..2)) => -1!..!3
number::add(0..1, nonInt(0..inf)) => 0!..!inf
number::add(0..1, nonInt(-1..inf)) => -1!..!inf
number::add(0..1, nonInt(-inf..0)) => -inf!..!1
number::add(0..1, nonInt(-inf..1)) => -inf!..!2
number::add(0..1, nonInt(-inf..inf)) => -inf!..!inf
number::add(0..1, 1 | int(3..4)) => 1..2 | 3..5
number::add(0!..1, 0..!1) => 0!..!2
number::add(0!..1, 0..2) => 0!..3
number::add(0!..1, 0!..!2) => 0!..!3
number::add(0!..1, 0.5..1.5) => 0.5!..2.5
number::add(0!..1, 0.5..2.5) => 0.5!..3.5
number::add(0!..1, 0.5!..2.5) => 0.5!..3.5
number::add(0!..1, 0.5..!2.5) => 0.5!..!3.5
number::add(0!..1, -2.56..3.35) => -2.56!..4.35
number::add(0!..1, 0.5..0.75) => 0.5!..1.75
number::add(0!..1, 1..2) => 1!..3
number::add(0!..1, 0..inf) => 0!..inf
number::add(0!..1, 0!..inf) => 0!..inf
number::add(0!..1, 0..!inf) => 0!..!inf
number::add(0!..1, 0!..!inf) => 0!..!inf
number::add(0!..1, 1..inf) => 1!..inf
number::add(0!..1, 1!..inf) => 1!..inf
number::add(0!..1, 1..!inf) => 1!..!inf
number::add(0!..1, 2..inf) => 2!..inf
number::add(0!..1, 2!..inf) => 2!..inf
number::add(0!..1, 2.5..inf) => 2.5!..inf
number::add(0!..1, -inf..0) => -inf..1
number::add(0!..1, -inf..inf) => -inf..inf
number::add(0!..1, -inf!..inf) => -inf!..inf
number::add(0!..1, -inf..!inf) => -inf..!inf
number::add(0!..1, -inf!..!inf) => -inf!..!inf
number::add(0!..1, int(0..1)) => 0!..2
number::add(0!..1, int(0..2)) => 0!..3
number::add(0!..1, int(1..2)) => 1!..3
number::add(0!..1, int(5..20)) => 5!..21
number::add(0!..1, int(-20..-5)) => -20!..-4
number::add(0!..1, int(-10..10)) => -10!..11
number::add(0!..1, int(0..inf)) => 0!..!inf
number::add(0!..1, int(1..inf)) => 1!..!inf
number::add(0!..1, int(-inf..0)) => -inf!..1
number::add(0!..1, int(-inf..1)) => -inf!..2
number::add(0!..1, int(-inf..inf)) => -inf!..!inf
number::add(0!..1, nonInt(0..1)) => 0!..!2
number::add(0!..1, nonInt(0..2)) => 0!..!3
number::add(0!..1, nonInt(-1..2)) => -1!..!3
number::add(0!..1, nonInt(0..inf)) => 0!..!inf
number::add(0!..1, nonInt(-1..inf)) => -1!..!inf
number::add(0!..1, nonInt(-inf..0)) => -inf!..!1
number::add(0!..1, nonInt(-inf..1)) => -inf!..!2
number::add(0!..1, nonInt(-inf..inf)) => -inf!..!inf
number::add(0!..1, 1 | int(3..4)) => 1!..2 | 3!..5
number::add(0..!1, 0..2) => 0..!3
number::add(0..!1, 0!..!2) => 0!..!3
number::add(0..!1, 0.5..1.5) => 0.5..!2.5
number::add(0..!1, 0.5..2.5) => 0.5..!3.5
number::add(0..!1, 0.5!..2.5) => 0.5!..!3.5
number::add(0..!1, 0.5..!2.5) => 0.5..!3.5
number::add(0..!1, -2.56..3.35) => -2.56..!4.35
number::add(0..!1, 0.5..0.75) => 0.5..!1.75
number::add(0..!1, 1..2) => 1..!3
number::add(0..!1, 0..inf) => 0..inf
number::add(0..!1, 0!..inf) => 0!..inf
number::add(0..!1, 0..!inf) => 0..!inf
number::add(0..!1, 0!..!inf) => 0!..!inf
number::add(0..!1, 1..inf) => 1..inf
number::add(0..!1, 1!..inf) => 1!..inf
number::add(0..!1, 1..!inf) => 1..!inf
number::add(0..!1, 2..inf) => 2..inf
number::add(0..!1, 2!..inf) => 2!..inf
number::add(0..!1, 2.5..inf) => 2.5..inf
number::add(0..!1, -inf..0) => -inf..!1
number::add(0..!1, -inf..inf) => -inf..inf
number::add(0..!1, -inf!..inf) => -inf!..inf
number::add(0..!1, -inf..!inf) => -inf..!inf
number::add(0..!1, -inf!..!inf) => -inf!..!inf
number::add(0..!1, int(0..1)) => 0..!2
number::add(0..!1, int(0..2)) => 0..!3
number::add(0..!1, int(1..2)) => 1..!3
number::add(0..!1, int(5..20)) => 5..!21
number::add(0..!1, int(-20..-5)) => -20..!-4
number::add(0..!1, int(-10..10)) => -10..!11
number::add(0..!1, int(0..inf)) => 0..!inf
number::add(0..!1, int(1..inf)) => 1..!inf
number::add(0..!1, int(-inf..0)) => -inf!..!1
number::add(0..!1, int(-inf..1)) => -inf!..!2
number::add(0..!1, int(-inf..inf)) => -inf!..!inf
number::add(0..!1, nonInt(0..1)) => 0!..!2
number::add(0..!1, nonInt(0..2)) => 0!..!3
number::add(0..!1, nonInt(-1..2)) => -1!..!3
number::add(0..!1, nonInt(0..inf)) => 0!..!inf
number::add(0..!1, nonInt(-1..inf)) => -1!..!inf
number::add(0..!1, nonInt(-inf..0)) => -inf!..!1
number::add(0..!1, nonInt(-inf..1)) => -inf!..!2
number::add(0..!1, nonInt(-inf..inf)) => -inf!..!inf
number::add(0..!1, 1 | int(3..4)) => 1..!2 | 3..!5
number::add(0..2, 0!..!2) => 0!..!4
number::add(0..2, 0.5..1.5) => 0.5..3.5
number::add(0..2, 0.5..2.5) => 0.5..4.5
number::add(0..2, 0.5!..2.5) => 0.5!..4.5
number::add(0..2, 0.5..!2.5) => 0.5..!4.5
number::add(0..2, -2.56..3.35) => -2.56..5.35
number::add(0..2, 0.5..0.75) => 0.5..2.75
number::add(0..2, 1..2) => 1..4
number::add(0..2, 0..inf) => 0..inf
number::add(0..2, 0!..inf) => 0!..inf
number::add(0..2, 0..!inf) => 0..!inf
number::add(0..2, 0!..!inf) => 0!..!inf
number::add(0..2, 1..inf) => 1..inf
number::add(0..2, 1!..inf) => 1!..inf
number::add(0..2, 1..!inf) => 1..!inf
number::add(0..2, 2..inf) => 2..inf
number::add(0..2, 2!..inf) => 2!..inf
number::add(0..2, 2.5..inf) => 2.5..inf
number::add(0..2, -inf..0) => -inf..2
number::add(0..2, -inf..inf) => -inf..inf
number::add(0..2, -inf!..inf) => -inf!..inf
number::add(0..2, -inf..!inf) => -inf..!inf
number::add(0..2, -inf!..!inf) => -inf!..!inf
number::add(0..2, int(0..1)) => 0..3
number::add(0..2, int(0..2)) => 0..4
number::add(0..2, int(1..2)) => 1..4
number::add(0..2, int(5..20)) => 5..22
number::add(0..2, int(-20..-5)) => -20..-3
number::add(0..2, int(-10..10)) => -10..12
number::add(0..2, int(0..inf)) => 0..!inf
number::add(0..2, int(1..inf)) => 1..!inf
number::add(0..2, int(-inf..0)) => -inf!..2
number::add(0..2, int(-inf..1)) => -inf!..3
number::add(0..2, int(-inf..inf)) => -inf!..!inf
number::add(0..2, nonInt(0..1)) => 0!..!3
number::add(0..2, nonInt(0..2)) => 0!..!4
number::add(0..2, nonInt(-1..2)) => -1!..!4
number::add(0..2, nonInt(0..inf)) => 0!..!inf
number::add(0..2, nonInt(-1..inf)) => -1!..!inf
number::add(0..2, nonInt(-inf..0)) => -inf!..!2
number::add(0..2, nonInt(-inf..1)) => -inf!..!3
number::add(0..2, nonInt(-inf..inf)) => -inf!..!inf
number::add(0..2, 1 | int(3..4)) => 1..6
number::add(0!..!2, 0.5..1.5) => 0.5!..!3.5
number::add(0!..!2, 0.5..2.5) => 0.5!..!4.5
number::add(0!..!2, 0.5!..2.5) => 0.5!..!4.5
number::add(0!..!2, 0.5..!2.5) => 0.5!..!4.5
number::add(0!..!2, -2.56..3.35) => -2.56!..!5.35
number::add(0!..!2, 0.5..0.75) => 0.5!..!2.75
number::add(0!..!2, 1..2) => 1!..!4
number::add(0!..!2, 0..inf) => 0!..inf
number::add(0!..!2, 0!..inf) => 0!..inf
number::add(0!..!2, 0..!inf) => 0!..!inf
number::add(0!..!2, 0!..!inf) => 0!..!inf
number::add(0!..!2, 1..inf) => 1!..inf
number::add(0!..!2, 1!..inf) => 1!..inf
number::add(0!..!2, 1..!inf) => 1!..!inf
number::add(0!..!2, 2..inf) => 2!..inf
number::add(0!..!2, 2!..inf) => 2!..inf
number::add(0!..!2, 2.5..inf) => 2.5!..inf
number::add(0!..!2, -inf..0) => -inf..!2
number::add(0!..!2, -inf..inf) => -inf..inf
number::add(0!..!2, -inf!..inf) => -inf!..inf
number::add(0!..!2, -inf..!inf) => -inf..!inf
number::add(0!..!2, -inf!..!inf) => -inf!..!inf
number::add(0!..!2, int(0..1)) => 0!..!3
number::add(0!..!2, int(0..2)) => 0!..!4
number::add(0!..!2, int(1..2)) => 1!..!4
number::add(0!..!2, int(5..20)) => 5!..!22
number::add(0!..!2, int(-20..-5)) => -20!..!-3
number::add(0!..!2, int(-10..10)) => -10!..!12
number::add(0!..!2, int(0..inf)) => 0!..!inf
number::add(0!..!2, int(1..inf)) => 1!..!inf
number::add(0!..!2, int(-inf..0)) => -inf!..!2
number::add(0!..!2, int(-inf..1)) => -inf!..!3
number::add(0!..!2, int(-inf..inf)) => -inf!..!inf
number::add(0!..!2, nonInt(0..1)) => 0!..!3
number::add(0!..!2, nonInt(0..2)) => 0!..!4
number::add(0!..!2, nonInt(-1..2)) => -1!..!4
number::add(0!..!2, nonInt(0..inf)) => 0!..!inf
number::add(0!..!2, nonInt(-1..inf)) => -1!..!inf
number::add(0!..!2, nonInt(-inf..0)) => -inf!..!2
number::add(0!..!2, nonInt(-inf..1)) => -inf!..!3
number::add(0!..!2, nonInt(-inf..inf)) => -inf!..!inf
number::add(0!..!2, 1 | int(3..4)) => 1!..!3 | 3!..!6
number::add(0.5..1.5, 0.5..2.5) => 1..4
number::add(0.5..1.5, 0.5!..2.5) => 1!..4
number::add(0.5..1.5, 0.5..!2.5) => 1..!4
number::add(0.5..1.5, -2.56..3.35) => -2.06..4.85
number::add(0.5..1.5, 0.5..0.75) => 1..2.25
number::add(0.5..1.5, 1..2) => 1.5..3.5
number::add(0.5..1.5, 0..inf) => 0.5..inf
number::add(0.5..1.5, 0!..inf) => 0.5!..inf
number::add(0.5..1.5, 0..!inf) => 0.5..!inf
number::add(0.5..1.5, 0!..!inf) => 0.5!..!inf
number::add(0.5..1.5, 1..inf) => 1.5..inf
number::add(0.5..1.5, 1!..inf) => 1.5!..inf
number::add(0.5..1.5, 1..!inf) => 1.5..!inf
number::add(0.5..1.5, 2..inf) => 2.5..inf
number::add(0.5..1.5, 2!..inf) => 2.5!..inf
number::add(0.5..1.5, 2.5..inf) => 3..inf
number::add(0.5..1.5, -inf..0) => -inf..1.5
number::add(0.5..1.5, -inf..inf) => -inf..inf
number::add(0.5..1.5, -inf!..inf) => -inf!..inf
number::add(0.5..1.5, -inf..!inf) => -inf..!inf
number::add(0.5..1.5, -inf!..!inf) => -inf!..!inf
number::add(0.5..1.5, int(0..1)) => 0.5..2.5
number::add(0.5..1.5, int(0..2)) => 0.5..3.5
number::add(0.5..1.5, int(1..2)) => 1.5..3.5
number::add(0.5..1.5, int(5..20)) => 5.5..21.5
number::add(0.5..1.5, int(-20..-5)) => -19.5..-3.5
number::add(0.5..1.5, int(-10..10)) => -9.5..11.5
number::add(0.5..1.5, int(0..inf)) => 0.5..!inf
number::add(0.5..1.5, int(1..inf)) => 1.5..!inf
number::add(0.5..1.5, int(-inf..0)) => -inf!..1.5
number::add(0.5..1.5, int(-inf..1)) => -inf!..2.5
number::add(0.5..1.5, int(-inf..inf)) => -inf!..!inf
number::add(0.5..1.5, nonInt(0..1)) => 0.5!..!2.5
number::add(0.5..1.5, nonInt(0..2)) => 0.5!..!3.5
number::add(0.5..1.5, nonInt(-1..2)) => -0.5!..!3.5
number::add(0.5..1.5, nonInt(0..inf)) => 0.5!..!inf
number::add(0.5..1.5, nonInt(-1..inf)) => -0.5!..!inf
number::add(0.5..1.5, nonInt(-inf..0)) => -inf!..!1.5
number::add(0.5..1.5, nonInt(-inf..1)) => -inf!..!2.5
number::add(0.5..1.5, nonInt(-inf..inf)) => -inf!..!inf
number::add(0.5..1.5, 1 | int(3..4)) => 1.5..2.5 | 3.5..5.5
number::add(0.5..2.5, 0.5!..2.5) => 1!..5
number::add(0.5..2.5, 0.5..!2.5) => 1..!5
number::add(0.5..2.5, -2.56..3.35) => -2.06..5.85
number::add(0.5..2.5, 0.5..0.75) => 1..3.25
number::add(0.5..2.5, 1..2) => 1.5..4.5
number::add(0.5..2.5, 0..inf) => 0.5..inf
number::add(0.5..2.5, 0!..inf) => 0.5!..inf
number::add(0.5..2.5, 0..!inf) => 0.5..!inf
number::add(0.5..2.5, 0!..!inf) => 0.5!..!inf
number::add(0.5..2.5, 1..inf) => 1.5..inf
number::add(0.5..2.5, 1!..inf) => 1.5!..inf
number::add(0.5..2.5, 1..!inf) => 1.5..!inf
number::add(0.5..2.5, 2..inf) => 2.5..inf
number::add(0.5..2.5, 2!..inf) => 2.5!..inf
number::add(0.5..2.5, 2.5..inf) => 3..inf
number::add(0.5..2.5, -inf..0) => -inf..2.5
number::add(0.5..2.5, -inf..inf) => -inf..inf
number::add(0.5..2.5, -inf!..inf) => -inf!..inf
number::add(0.5..2.5, -inf..!inf) => -inf..!inf
number::add(0.5..2.5, -inf!..!inf) => -inf!..!inf
number::add(0.5..2.5, int(0..1)) => 0.5..3.5
number::add(0.5..2.5, int(0..2)) => 0.5..4.5
number::add(0.5..2.5, int(1..2)) => 1.5..4.5
number::add(0.5..2.5, int(5..20)) => 5.5..22.5
number::add(0.5..2.5, int(-20..-5)) => -19.5..-2.5
number::add(0.5..2.5, int(-10..10)) => -9.5..12.5
number::add(0.5..2.5, int(0..inf)) => 0.5..!inf
number::add(0.5..2.5, int(1..inf)) => 1.5..!inf
number::add(0.5..2.5, int(-inf..0)) => -inf!..2.5
number::add(0.5..2.5, int(-inf..1)) => -inf!..3.5
number::add(0.5..2.5, int(-inf..inf)) => -inf!..!inf
number::add(0.5..2.5, nonInt(0..1)) => 0.5!..!3.5
number::add(0.5..2.5, nonInt(0..2)) => 0.5!..!4.5
number::add(0.5..2.5, nonInt(-1..2)) => -0.5!..!4.5
number::add(0.5..2.5, nonInt(0..inf)) => 0.5!..!inf
number::add(0.5..2.5, nonInt(-1..inf)) => -0.5!..!inf
number::add(0.5..2.5, nonInt(-inf..0)) => -inf!..!2.5
number::add(0.5..2.5, nonInt(-inf..1)) => -inf!..!3.5
number::add(0.5..2.5, nonInt(-inf..inf)) => -inf!..!inf
number::add(0.5..2.5, 1 | int(3..4)) => 1.5..6.5
number::add(0.5!..2.5, 0.5..!2.5) => 1!..!5
number::add(0.5!..2.5, -2.56..3.35) => -2.06!..5.85
number::add(0.5!..2.5, 0.5..0.75) => 1!..3.25
number::add(0.5!..2.5, 1..2) => 1.5!..4.5
number::add(0.5!..2.5, 0..inf) => 0.5!..inf
number::add(0.5!..2.5, 0!..inf) => 0.5!..inf
number::add(0.5!..2.5, 0..!inf) => 0.5!..!inf
number::add(0.5!..2.5, 0!..!inf) => 0.5!..!inf
number::add(0.5!..2.5, 1..inf) => 1.5!..inf
number::add(0.5!..2.5, 1!..inf) => 1.5!..inf
number::add(0.5!..2.5, 1..!inf) => 1.5!..!inf
number::add(0.5!..2.5, 2..inf) => 2.5!..inf
number::add(0.5!..2.5, 2!..inf) => 2.5!..inf
number::add(0.5!..2.5, 2.5..inf) => 3!..inf
number::add(0.5!..2.5, -inf..0) => -inf..2.5
number::add(0.5!..2.5, -inf..inf) => -inf..inf
number::add(0.5!..2.5, -inf!..inf) => -inf!..inf
number::add(0.5!..2.5, -inf..!inf) => -inf..!inf
number::add(0.5!..2.5, -inf!..!inf) => -inf!..!inf
number::add(0.5!..2.5, int(0..1)) => 0.5!..3.5
number::add(0.5!..2.5, int(0..2)) => 0.5!..4.5
number::add(0.5!..2.5, int(1..2)) => 1.5!..4.5
number::add(0.5!..2.5, int(5..20)) => 5.5!..22.5
number::add(0.5!..2.5, int(-20..-5)) => -19.5!..-2.5
number::add(0.5!..2.5, int(-10..10)) => -9.5!..12.5
number::add(0.5!..2.5, int(0..inf)) => 0.5!..!inf
number::add(0.5!..2.5, int(1..inf)) => 1.5!..!inf
number::add(0.5!..2.5, int(-inf..0)) => -inf!..2.5
number::add(0.5!..2.5, int(-inf..1)) => -inf!..3.5
number::add(0.5!..2.5, int(-inf..inf)) => -inf!..!inf
number::add(0.5!..2.5, nonInt(0..1)) => 0.5!..!3.5
number::add(0.5!..2.5, nonInt(0..2)) => 0.5!..!4.5
number::add(0.5!..2.5, nonInt(-1..2)) => -0.5!..!4.5
number::add(0.5!..2.5, nonInt(0..inf)) => 0.5!..!inf
number::add(0.5!..2.5, nonInt(-1..inf)) => -0.5!..!inf
number::add(0.5!..2.5, nonInt(-inf..0)) => -inf!..!2.5
number::add(0.5!..2.5, nonInt(-inf..1)) => -inf!..!3.5
number::add(0.5!..2.5, nonInt(-inf..inf)) => -inf!..!inf
number::add(0.5!..2.5, 1 | int(3..4)) => 1.5!..6.5
number::add(0.5..!2.5, -2.56..3.35) => -2.06..!5.85
number::add(0.5..!2.5, 0.5..0.75) => 1..!3.25
number::add(0.5..!2.5, 1..2) => 1.5..!4.5
number::add(0.5..!2.5, 0..inf) => 0.5..inf
number::add(0.5..!2.5, 0!..inf) => 0.5!..inf
number::add(0.5..!2.5, 0..!inf) => 0.5..!inf
number::add(0.5..!2.5, 0!..!inf) => 0.5!..!inf
number::add(0.5..!2.5, 1..inf) => 1.5..inf
number::add(0.5..!2.5, 1!..inf) => 1.5!..inf
number::add(0.5..!2.5, 1..!inf) => 1.5..!inf
number::add(0.5..!2.5, 2..inf) => 2.5..inf
number::add(0.5..!2.5, 2!..inf) => 2.5!..inf
number::add(0.5..!2.5, 2.5..inf) => 3..inf
number::add(0.5..!2.5, -inf..0) => -inf..!2.5
number::add(0.5..!2.5, -inf..inf) => -inf..inf
number::add(0.5..!2.5, -inf!..inf) => -inf!..inf
number::add(0.5..!2.5, -inf..!inf) => -inf..!inf
number::add(0.5..!2.5, -inf!..!inf) => -inf!..!inf
number::add(0.5..!2.5, int(0..1)) => 0.5..!3.5
number::add(0.5..!2.5, int(0..2)) => 0.5..!4.5
number::add(0.5..!2.5, int(1..2)) => 1.5..!4.5
number::add(0.5..!2.5, int(5..20)) => 5.5..!22.5
number::add(0.5..!2.5, int(-20..-5)) => -19.5..!-2.5
number::add(0.5..!2.5, int(-10..10)) => -9.5..!12.5
number::add(0.5..!2.5, int(0..inf)) => 0.5..!inf
number::add(0.5..!2.5, int(1..inf)) => 1.5..!inf
number::add(0.5..!2.5, int(-inf..0)) => -inf!..!2.5
number::add(0.5..!2.5, int(-inf..1)) => -inf!..!3.5
number::add(0.5..!2.5, int(-inf..inf)) => -inf!..!inf
number::add(0.5..!2.5, nonInt(0..1)) => 0.5!..!3.5
number::add(0.5..!2.5, nonInt(0..2)) => 0.5!..!4.5
number::add(0.5..!2.5, nonInt(-1..2)) => -0.5!..!4.5
number::add(0.5..!2.5, nonInt(0..inf)) => 0.5!..!inf
number::add(0.5..!2.5, nonInt(-1..inf)) => -0.5!..!inf
number::add(0.5..!2.5, nonInt(-inf..0)) => -inf!..!2.5
number::add(0.5..!2.5, nonInt(-inf..1)) => -inf!..!3.5
number::add(0.5..!2.5, nonInt(-inf..inf)) => -inf!..!inf
number::add(0.5..!2.5, 1 | int(3..4)) => 1.5..!6.5
number::add(-2.56..3.35, 0.5..0.75) => -2.06..4.1
number::add(-2.56..3.35, 1..2) => -1.56..5.35
number::add(-2.56..3.35, 0..inf) => -2.56..inf
number::add(-2.56..3.35, 0!..inf) => -2.56!..inf
number::add(-2.56..3.35, 0..!inf) => -2.56..!inf
number::add(-2.56..3.35, 0!..!inf) => -2.56!..!inf
number::add(-2.56..3.35, 1..inf) => -1.56..inf
number::add(-2.56..3.35, 1!..inf) => -1.56!..inf
number::add(-2.56..3.35, 1..!inf) => -1.56..!inf
number::add(-2.56..3.35, 2..inf) => -0.56..inf
number::add(-2.56..3.35, 2!..inf) => -0.56!..inf
number::add(-2.56..3.35, 2.5..inf) => -0.06..inf
number::add(-2.56..3.35, -inf..0) => -inf..3.35
number::add(-2.56..3.35, -inf..inf) => -inf..inf
number::add(-2.56..3.35, -inf!..inf) => -inf!..inf
number::add(-2.56..3.35, -inf..!inf) => -inf..!inf
number::add(-2.56..3.35, -inf!..!inf) => -inf!..!inf
number::add(-2.56..3.35, int(0..1)) => -2.56..4.35
number::add(-2.56..3.35, int(0..2)) => -2.56..5.35
number::add(-2.56..3.35, int(1..2)) => -1.56..5.35
number::add(-2.56..3.35, int(5..20)) => 2.44..23.35
number::add(-2.56..3.35, int(-20..-5)) => -22.56..-1.65
number::add(-2.56..3.35, int(-10..10)) => -12.56..13.35
number::add(-2.56..3.35, int(0..inf)) => -2.56..!inf
number::add(-2.56..3.35, int(1..inf)) => -1.56..!inf
number::add(-2.56..3.35, int(-inf..0)) => -inf!..3.35
number::add(-2.56..3.35, int(-inf..1)) => -inf!..4.35
number::add(-2.56..3.35, int(-inf..inf)) => -inf!..!inf
number::add(-2.56..3.35, nonInt(0..1)) => -2.56!..!4.35
number::add(-2.56..3.35, nonInt(0..2)) => -2.56!..!5.35
number::add(-2.56..3.35, nonInt(-1..2)) => -3.56!..!5.35
number::add(-2.56..3.35, nonInt(0..inf)) => -2.56!..!inf
number::add(-2.56..3.35, nonInt(-1..inf)) => -3.56!..!inf
number::add(-2.56..3.35, nonInt(-inf..0)) => -inf!..!3.35
number::add(-2.56..3.35, nonInt(-inf..1)) => -inf!..!4.35
number::add(-2.56..3.35, nonInt(-inf..inf)) => -inf!..!inf
number::add(-2.56..3.35, 1 | int(3..4)) => -1.56..7.35
number::add(0.5..0.75, 1..2) => 1.5..2.75
number::add(0.5..0.75, 0..inf) => 0.5..inf
number::add(0.5..0.75, 0!..inf) => 0.5!..inf
number::add(0.5..0.75, 0..!inf) => 0.5..!inf
number::add(0.5..0.75, 0!..!inf) => 0.5!..!inf
number::add(0.5..0.75, 1..inf) => 1.5..inf
number::add(0.5..0.75, 1!..inf) => 1.5!..inf
number::add(0.5..0.75, 1..!inf) => 1.5..!inf
number::add(0.5..0.75, 2..inf) => 2.5..inf
number::add(0.5..0.75, 2!..inf) => 2.5!..inf
number::add(0.5..0.75, 2.5..inf) => 3..inf
number::add(0.5..0.75, -inf..0) => -inf..0.75
number::add(0.5..0.75, -inf..inf) => -inf..inf
number::add(0.5..0.75, -inf!..inf) => -inf!..inf
number::add(0.5..0.75, -inf..!inf) => -inf..!inf
number::add(0.5..0.75, -inf!..!inf) => -inf!..!inf
number::add(0.5..0.75, int(0..1)) => 0.5..0.75 | 1.5..1.75
number::add(0.5..0.75, int(0..2)) => 0.5..0.75 | 1.5..1.75 | 2.5..2.75
number::add(0.5..0.75, int(1..2)) => 1.5..1.75 | 2.5..2.75
number::add(0.5..0.75, int(5..20)) => 5.5..20.75
number::add(0.5..0.75, int(-20..-5)) => -19.5..-4.25
number::add(0.5..0.75, int(-10..10)) => -9.5..10.75
number::add(0.5..0.75, int(0..inf)) => 0.5..!inf
number::add(0.5..0.75, int(1..inf)) => 1.5..!inf
number::add(0.5..0.75, int(-inf..0)) => -inf!..0.75
number::add(0.5..0.75, int(-inf..1)) => -inf!..1.75
number::add(0.5..0.75, int(-inf..inf)) => -inf!..!inf
number::add(0.5..0.75, nonInt(0..1)) => 0.5!..!1.75
number::add(0.5..0.75, nonInt(0..2)) => 0.5!..!2.75
number::add(0.5..0.75, nonInt(-1..2)) => -0.5!..!2.75
number::add(0.5..0.75, nonInt(0..inf)) => 0.5!..!inf
number::add(0.5..0.75, nonInt(-1..inf)) => -0.5!..!inf
number::add(0.5..0.75, nonInt(-inf..0)) => -inf!..!0.75
number::add(0.5..0.75, nonInt(-inf..1)) => -inf!..!1.75
number::add(0.5..0.75, nonInt(-inf..inf)) => -inf!..!inf
number::add(0.5..0.75, 1 | int(3..4)) => 1.5..1.75 | 3.5..3.75 | 4.5..4.75
number::add(1..2, 0..inf) => 1..inf
number::add(1..2, 0!..inf) => 1!..inf
number::add(1..2, 0..!inf) => 1..!inf
number::add(1..2, 0!..!inf) => 1!..!inf
number::add(1..2, 1..inf) => 2..inf
number::add(1..2, 1!..inf) => 2!..inf
number::add(1..2, 1..!inf) => 2..!inf
number::add(1..2, 2..inf) => 3..inf
number::add(1..2, 2!..inf) => 3!..inf
number::add(1..2, 2.5..inf) => 3.5..inf
number::add(1..2, -inf..0) => -inf..2
number::add(1..2, -inf..inf) => -inf..inf
number::add(1..2, -inf!..inf) => -inf!..inf
number::add(1..2, -inf..!inf) => -inf..!inf
number::add(1..2, -inf!..!inf) => -inf!..!inf
number::add(1..2, int(0..1)) => 1..3
number::add(1..2, int(0..2)) => 1..4
number::add(1..2, int(1..2)) => 2..4
number::add(1..2, int(5..20)) => 6..22
number::add(1..2, int(-20..-5)) => -19..-3
number::add(1..2, int(-10..10)) => -9..12
number::add(1..2, int(0..inf)) => 1..!inf
number::add(1..2, int(1..inf)) => 2..!inf
number::add(1..2, int(-inf..0)) => -inf!..2
number::add(1..2, int(-inf..1)) => -inf!..3
number::add(1..2, int(-inf..inf)) => -inf!..!inf
number::add(1..2, nonInt(0..1)) => 1!..!3
number::add(1..2, nonInt(0..2)) => 1!..!4
number::add(1..2, nonInt(-1..2)) => 0!..!4
number::add(1..2, nonInt(0..inf)) => 1!..!inf
number::add(1..2, nonInt(-1..inf)) => 0!..!inf
number::add(1..2, nonInt(-inf..0)) => -inf!..!2
number::add(1..2, nonInt(-inf..1)) => -inf!..!3
number::add(1..2, nonInt(-inf..inf)) => -inf!..!inf
number::add(1..2, 1 | int(3..4)) => 2..3 | 4..6
number::add(0..inf, 0!..inf) => 0!..inf
number::add(0..inf, 0..!inf) => 0..inf
number::add(0..inf, 0!..!inf) => 0!..inf
number::add(0..inf, 1..inf) => 1..inf
number::add(0..inf, 1!..inf) => 1!..inf
number::add(0..inf, 1..!inf) => 1..inf
number::add(0..inf, 2..inf) => 2..inf
number::add(0..inf, 2!..inf) => 2!..inf
number::add(0..inf, 2.5..inf) => 2.5..inf
number::add(0..inf, -inf..0) => -inf..inf
number::add(0..inf, -inf..inf) => -inf..inf
number::add(0..inf, -inf!..inf) => -inf!..inf
number::add(0..inf, -inf..!inf) => -inf..inf
number::add(0..inf, -inf!..!inf) => -inf!..inf
number::add(0..inf, int(0..1)) => 0..inf
number::add(0..inf, int(0..2)) => 0..inf
number::add(0..inf, int(1..2)) => 1..inf
number::add(0..inf, int(5..20)) => 5..inf
number::add(0..inf, int(-20..-5)) => -20..inf
number::add(0..inf, int(-10..10)) => -10..inf
number::add(0..inf, int(0..inf)) => 0..inf
number::add(0..inf, int(1..inf)) => 1..inf
number::add(0..inf, int(-inf..0)) => -inf!..inf
number::add(0..inf, int(-inf..1)) => -inf!..inf
number::add(0..inf, int(-inf..inf)) => -inf!..inf
number::add(0..inf, nonInt(0..1)) => 0!..inf
number::add(0..inf, nonInt(0..2)) => 0!..inf
number::add(0..inf, nonInt(-1..2)) => -1!..inf
number::add(0..inf, nonInt(0..inf)) => 0!..inf
number::add(0..inf, nonInt(-1..inf)) => -1!..inf
number::add(0..inf, nonInt(-inf..0)) => -inf!..inf
number::add(0..inf, nonInt(-inf..1)) => -inf!..inf
number::add(0..inf, nonInt(-inf..inf)) => -inf!..inf
number::add(0..inf, 1 | int(3..4)) => 1..inf
number::add(0!..inf, 0..!inf) => 0!..inf
number::add(0!..inf, 0!..!inf) => 0!..inf
number::add(0!..inf, 1..inf) => 1!..inf
number::add(0!..inf, 1!..inf) => 1!..inf
number::add(0!..inf, 1..!inf) => 1!..inf
number::add(0!..inf, 2..inf) => 2!..inf
number::add(0!..inf, 2!..inf) => 2!..inf
number::add(0!..inf, 2.5..inf) => 2.5!..inf
number::add(0!..inf, -inf..0) => -inf..inf
number::add(0!..inf, -inf..inf) => -inf..inf
number::add(0!..inf, -inf!..inf) => -inf!..inf
number::add(0!..inf, -inf..!inf) => -inf..inf
number::add(0!..inf, -inf!..!inf) => -inf!..inf
number::add(0!..inf, int(0..1)) => 0!..inf
number::add(0!..inf, int(0..2)) => 0!..inf
number::add(0!..inf, int(1..2)) => 1!..inf
number::add(0!..inf, int(5..20)) => 5!..inf
number::add(0!..inf, int(-20..-5)) => -20!..inf
number::add(0!..inf, int(-10..10)) => -10!..inf
number::add(0!..inf, int(0..inf)) => 0!..inf
number::add(0!..inf, int(1..inf)) => 1!..inf
number::add(0!..inf, int(-inf..0)) => -inf!..inf
number::add(0!..inf, int(-inf..1)) => -inf!..inf
number::add(0!..inf, int(-inf..inf)) => -inf!..inf
number::add(0!..inf, nonInt(0..1)) => 0!..inf
number::add(0!..inf, nonInt(0..2)) => 0!..inf
number::add(0!..inf, nonInt(-1..2)) => -1!..inf
number::add(0!..inf, nonInt(0..inf)) => 0!..inf
number::add(0!..inf, nonInt(-1..inf)) => -1!..inf
number::add(0!..inf, nonInt(-inf..0)) => -inf!..inf
number::add(0!..inf, nonInt(-inf..1)) => -inf!..inf
number::add(0!..inf, nonInt(-inf..inf)) => -inf!..inf
number::add(0!..inf, 1 | int(3..4)) => 1!..inf
number::add(0..!inf, 0!..!inf) => 0!..!inf
number::add(0..!inf, 1..inf) => 1..inf
number::add(0..!inf, 1!..inf) => 1!..inf
number::add(0..!inf, 1..!inf) => 1..!inf
number::add(0..!inf, 2..inf) => 2..inf
number::add(0..!inf, 2!..inf) => 2!..inf
number::add(0..!inf, 2.5..inf) => 2.5..inf
number::add(0..!inf, -inf..0) => -inf..!inf
number::add(0..!inf, -inf..inf) => -inf..inf
number::add(0..!inf, -inf!..inf) => -inf!..inf
number::add(0..!inf, -inf..!inf) => -inf..!inf
number::add(0..!inf, -inf!..!inf) => -inf!..!inf
number::add(0..!inf, int(0..1)) => 0..!inf
number::add(0..!inf, int(0..2)) => 0..!inf
number::add(0..!inf, int(1..2)) => 1..!inf
number::add(0..!inf, int(5..20)) => 5..!inf
number::add(0..!inf, int(-20..-5)) => -20..!inf
number::add(0..!inf, int(-10..10)) => -10..!inf
number::add(0..!inf, int(0..inf)) => 0..!inf
number::add(0..!inf, int(1..inf)) => 1..!inf
number::add(0..!inf, int(-inf..0)) => -inf!..!inf
number::add(0..!inf, int(-inf..1)) => -inf!..!inf
number::add(0..!inf, int(-inf..inf)) => -inf!..!inf
number::add(0..!inf, nonInt(0..1)) => 0!..!inf
number::add(0..!inf, nonInt(0..2)) => 0!..!inf
number::add(0..!inf, nonInt(-1..2)) => -1!..!inf
number::add(0..!inf, nonInt(0..inf)) => 0!..!inf
number::add(0..!inf, nonInt(-1..inf)) => -1!..!inf
number::add(0..!inf, nonInt(-inf..0)) => -inf!..!inf
number::add(0..!inf, nonInt(-inf..1)) => -inf!..!inf
number::add(0..!inf, nonInt(-inf..inf)) => -inf!..!inf
number::add(0..!inf, 1 | int(3..4)) => 1..!inf
number::add(0!..!inf, 1..inf) => 1!..inf
number::add(0!..!inf, 1!..inf) => 1!..inf
number::add(0!..!inf, 1..!inf) => 1!..!inf
number::add(0!..!inf, 2..inf) => 2!..inf
number::add(0!..!inf, 2!..inf) => 2!..inf
number::add(0!..!inf, 2.5..inf) => 2.5!..inf
number::add(0!..!inf, -inf..0) => -inf..!inf
number::add(0!..!inf, -inf..inf) => -inf..inf
number::add(0!..!inf, -inf!..inf) => -inf!..inf
number::add(0!..!inf, -inf..!inf) => -inf..!inf
number::add(0!..!inf, -inf!..!inf) => -inf!..!inf
number::add(0!..!inf, int(0..1)) => 0!..!inf
number::add(0!..!inf, int(0..2)) => 0!..!inf
number::add(0!..!inf, int(1..2)) => 1!..!inf
number::add(0!..!inf, int(5..20)) => 5!..!inf
number::add(0!..!inf, int(-20..-5)) => -20!..!inf
number::add(0!..!inf, int(-10..10)) => -10!..!inf
number::add(0!..!inf, int(0..inf)) => 0!..!inf
number::add(0!..!inf, int(1..inf)) => 1!..!inf
number::add(0!..!inf, int(-inf..0)) => -inf!..!inf
number::add(0!..!inf, int(-inf..1)) => -inf!..!inf
number::add(0!..!inf, int(-inf..inf)) => -inf!..!inf
number::add(0!..!inf, nonInt(0..1)) => 0!..!inf
number::add(0!..!inf, nonInt(0..2)) => 0!..!inf
number::add(0!..!inf, nonInt(-1..2)) => -1!..!inf
number::add(0!..!inf, nonInt(0..inf)) => 0!..!inf
number::add(0!..!inf, nonInt(-1..inf)) => -1!..!inf
number::add(0!..!inf, nonInt(-inf..0)) => -inf!..!inf
number::add(0!..!inf, nonInt(-inf..1)) => -inf!..!inf
number::add(0!..!inf, nonInt(-inf..inf)) => -inf!..!inf
number::add(0!..!inf, 1 | int(3..4)) => 1!..!inf
number::add(1..inf, 1!..inf) => 2!..inf
number::add(1..inf, 1..!inf) => 2..inf
number::add(1..inf, 2..inf) => 3..inf
number::add(1..inf, 2!..inf) => 3!..inf
number::add(1..inf, 2.5..inf) => 3.5..inf
number::add(1..inf, -inf..0) => -inf..inf
number::add(1..inf, -inf..inf) => -inf..inf
number::add(1..inf, -inf!..inf) => -inf!..inf
number::add(1..inf, -inf..!inf) => -inf..inf
number::add(1..inf, -inf!..!inf) => -inf!..inf
number::add(1..inf, int(0..1)) => 1..inf
number::add(1..inf, int(0..2)) => 1..inf
number::add(1..inf, int(1..2)) => 2..inf
number::add(1..inf, int(5..20)) => 6..inf
number::add(1..inf, int(-20..-5)) => -19..inf
number::add(1..inf, int(-10..10)) => -9..inf
number::add(1..inf, int(0..inf)) => 1..inf
number::add(1..inf, int(1..inf)) => 2..inf
number::add(1..inf, int(-inf..0)) => -inf!..inf
number::add(1..inf, int(-inf..1)) => -inf!..inf
number::add(1..inf, int(-inf..inf)) => -inf!..inf
number::add(1..inf, nonInt(0..1)) => 1!..inf
number::add(1..inf, nonInt(0..2)) => 1!..inf
number::add(1..inf, nonInt(-1..2)) => 0!..inf
number::add(1..inf, nonInt(0..inf)) => 1!..inf
number::add(1..inf, nonInt(-1..inf)) => 0!..inf
number::add(1..inf, nonInt(-inf..0)) => -inf!..inf
number::add(1..inf, nonInt(-inf..1)) => -inf!..inf
number::add(1..inf, nonInt(-inf..inf)) => -inf!..inf
number::add(1..inf, 1 | int(3..4)) => 2..inf
number::add(1!..inf, 1..!inf) => 2!..inf
number::add(1!..inf, 2..inf) => 3!..inf
number::add(1!..inf, 2!..inf) => 3!..inf
number::add(1!..inf, 2.5..inf) => 3.5!..inf
number::add(1!..inf, -inf..0) => -inf..inf
number::add(1!..inf, -inf..inf) => -inf..inf
number::add(1!..inf, -inf!..inf) => -inf!..inf
number::add(1!..inf, -inf..!inf) => -inf..inf
number::add(1!..inf, -inf!..!inf) => -inf!..inf
number::add(1!..inf, int(0..1)) => 1!..inf
number::add(1!..inf, int(0..2)) => 1!..inf
number::add(1!..inf, int(1..2)) => 2!..inf
number::add(1!..inf, int(5..20)) => 6!..inf
number::add(1!..inf, int(-20..-5)) => -19!..inf
number::add(1!..inf, int(-10..10)) => -9!..inf
number::add(1!..inf, int(0..inf)) => 1!..inf
number::add(1!..inf, int(1..inf)) => 2!..inf
number::add(1!..inf, int(-inf..0)) => -inf!..inf
number::add(1!..inf, int(-inf..1)) => -inf!..inf
number::add(1!..inf, int(-inf..inf)) => -inf!..inf
number::add(1!..inf, nonInt(0..1)) => 1!..inf
number::add(1!..inf, nonInt(0..2)) => 1!..inf
number::add(1!..inf, nonInt(-1..2)) => 0!..inf
number::add(1!..inf, nonInt(0..inf)) => 1!..inf
number::add(1!..inf, nonInt(-1..inf)) => 0!..inf
number::add(1!..inf, nonInt(-inf..0)) => -inf!..inf
number::add(1!..inf, nonInt(-inf..1)) => -inf!..inf
number::add(1!..inf, nonInt(-inf..inf)) => -inf!..inf
number::add(1!..inf, 1 | int(3..4)) => 2!..inf
number::add(1..!inf, 2..inf) => 3..inf
number::add(1..!inf, 2!..inf) => 3!..inf
number::add(1..!inf, 2.5..inf) => 3.5..inf
number::add(1..!inf, -inf..0) => -inf..!inf
number::add(1..!inf, -inf..inf) => -inf..inf
number::add(1..!inf, -inf!..inf) => -inf!..inf
number::add(1..!inf, -inf..!inf) => -inf..!inf
number::add(1..!inf, -inf!..!inf) => -inf!..!inf
number::add(1..!inf, int(0..1)) => 1..!inf
number::add(1..!inf, int(0..2)) => 1..!inf
number::add(1..!inf, int(1..2)) => 2..!inf
number::add(1..!inf, int(5..20)) => 6..!inf
number::add(1..!inf, int(-20..-5)) => -19..!inf
number::add(1..!inf, int(-10..10)) => -9..!inf
number::add(1..!inf, int(0..inf)) => 1..!inf
number::add(1..!inf, int(1..inf)) => 2..!inf
number::add(1..!inf, int(-inf..0)) => -inf!..!inf
number::add(1..!inf, int(-inf..1)) => -inf!..!inf
number::add(1..!inf, int(-inf..inf)) => -inf!..!inf
number::add(1..!inf, nonInt(0..1)) => 1!..!inf
number::add(1..!inf, nonInt(0..2)) => 1!..!inf
number::add(1..!inf, nonInt(-1..2)) => 0!..!inf
number::add(1..!inf, nonInt(0..inf)) => 1!..!inf
number::add(1..!inf, nonInt(-1..inf)) => 0!..!inf
number::add(1..!inf, nonInt(-inf..0)) => -inf!..!inf
number::add(1..!inf, nonInt(-inf..1)) => -inf!..!inf
number::add(1..!inf, nonInt(-inf..inf)) => -inf!..!inf
number::add(1..!inf, 1 | int(3..4)) => 2..!inf
number::add(2..inf, 2!..inf) => 4!..inf
number::add(2..inf, 2.5..inf) => 4.5..inf
number::add(2..inf, -inf..0) => -inf..inf
number::add(2..inf, -inf..inf) => -inf..inf
number::add(2..inf, -inf!..inf) => -inf!..inf
number::add(2..inf, -inf..!inf) => -inf..inf
number::add(2..inf, -inf!..!inf) => -inf!..inf
number::add(2..inf, int(0..1)) => 2..inf
number::add(2..inf, int(0..2)) => 2..inf
number::add(2..inf, int(1..2)) => 3..inf
number::add(2..inf, int(5..20)) => 7..inf
number::add(2..inf, int(-20..-5)) => -18..inf
number::add(2..inf, int(-10..10)) => -8..inf
number::add(2..inf, int(0..inf)) => 2..inf
number::add(2..inf, int(1..inf)) => 3..inf
number::add(2..inf, int(-inf..0)) => -inf!..inf
number::add(2..inf, int(-inf..1)) => -inf!..inf
number::add(2..inf, int(-inf..inf)) => -inf!..inf
number::add(2..inf, nonInt(0..1)) => 2!..inf
number::add(2..inf, nonInt(0..2)) => 2!..inf
number::add(2..inf, nonInt(-1..2)) => 1!..inf
number::add(2..inf, nonInt(0..inf)) => 2!..inf
number::add(2..inf, nonInt(-1..inf)) => 1!..inf
number::add(2..inf, nonInt(-inf..0)) => -inf!..inf
number::add(2..inf, nonInt(-inf..1)) => -inf!..inf
number::add(2..inf, nonInt(-inf..inf)) => -inf!..inf
number::add(2..inf, 1 | int(3..4)) => 3..inf
number::add(2!..inf, 2.5..inf) => 4.5!..inf
number::add(2!..inf, -inf..0) => -inf..inf
number::add(2!..inf, -inf..inf) => -inf..inf
number::add(2!..inf, -inf!..inf) => -inf!..inf
number::add(2!..inf, -inf..!inf) => -inf..inf
number::add(2!..inf, -inf!..!inf) => -inf!..inf
number::add(2!..inf, int(0..1)) => 2!..inf
number::add(2!..inf, int(0..2)) => 2!..inf
number::add(2!..inf, int(1..2)) => 3!..inf
number::add(2!..inf, int(5..20)) => 7!..inf
number::add(2!..inf, int(-20..-5)) => -18!..inf
number::add(2!..inf, int(-10..10)) => -8!..inf
number::add(2!..inf, int(0..inf)) => 2!..inf
number::add(2!..inf, int(1..inf)) => 3!..inf
number::add(2!..inf, int(-inf..0)) => -inf!..inf
number::add(2!..inf, int(-inf..1)) => -inf!..inf
number::add(2!..inf, int(-inf..inf)) => -inf!..inf
number::add(2!..inf, nonInt(0..1)) => 2!..inf
number::add(2!..inf, nonInt(0..2)) => 2!..inf
number::add(2!..inf, nonInt(-1..2)) => 1!..inf
number::add(2!..inf, nonInt(0..inf)) => 2!..inf
number::add(2!..inf, nonInt(-1..inf)) => 1!..inf
number::add(2!..inf, nonInt(-inf..0)) => -inf!..inf
number::add(2!..inf, nonInt(-inf..1)) => -inf!..inf
number::add(2!..inf, nonInt(-inf..inf)) => -inf!..inf
number::add(2!..inf, 1 | int(3..4)) => 3!..inf
number::add(2.5..inf, -inf..0) => -inf..inf
number::add(2.5..inf, -inf..inf) => -inf..inf
number::add(2.5..inf, -inf!..inf) => -inf!..inf
number::add(2.5..inf, -inf..!inf) => -inf..inf
number::add(2.5..inf, -inf!..!inf) => -inf!..inf
number::add(2.5..inf, int(0..1)) => 2.5..inf
number::add(2.5..inf, int(0..2)) => 2.5..inf
number::add(2.5..inf, int(1..2)) => 3.5..inf
number::add(2.5..inf, int(5..20)) => 7.5..inf
number::add(2.5..inf, int(-20..-5)) => -17.5..inf
number::add(2.5..inf, int(-10..10)) => -7.5..inf
number::add(2.5..inf, int(0..inf)) => 2.5..inf
number::add(2.5..inf, int(1..inf)) => 3.5..inf
number::add(2.5..inf, int(-inf..0)) => -inf!..inf
number::add(2.5..inf, int(-inf..1)) => -inf!..inf
number::add(2.5..inf, int(-inf..inf)) => -inf!..inf
number::add(2.5..inf, nonInt(0..1)) => 2.5!..inf
number::add(2.5..inf, nonInt(0..2)) => 2.5!..inf
number::add(2.5..inf, nonInt(-1..2)) => 1.5!..inf
number::add(2.5..inf, nonInt(0..inf)) => 2.5!..inf
number::add(2.5..inf, nonInt(-1..inf)) => 1.5!..inf
number::add(2.5..inf, nonInt(-inf..0)) => -inf!..inf
number::add(2.5..inf, nonInt(-inf..1)) => -inf!..inf
number::add(2.5..inf, nonInt(-inf..inf)) => -inf!..inf
number::add(2.5..inf, 1 | int(3..4)) => 3.5..inf
number::add(-inf..0, -inf..inf) => -inf..inf
number::add(-inf..0, -inf!..inf) => -inf..inf
number::add(-inf..0, -inf..!inf) => -inf..!inf
number::add(-inf..0, -inf!..!inf) => -inf..!inf
number::add(-inf..0, int(0..1)) => -inf..1
number::add(-inf..0, int(0..2)) => -inf..2
number::add(-inf..0, int(1..2)) => -inf..2
number::add(-inf..0, int(5..20)) => -inf..20
number::add(-inf..0, int(-20..-5)) => -inf..-5
number::add(-inf..0, int(-10..10)) => -inf..10
number::add(-inf..0, int(0..inf)) => -inf..!inf
number::add(-inf..0, int(1..inf)) => -inf..!inf
number::add(-inf..0, int(-inf..0)) => -inf..0
number::add(-inf..0, int(-inf..1)) => -inf..1
number::add(-inf..0, int(-inf..inf)) => -inf..!inf
number::add(-inf..0, nonInt(0..1)) => -inf..!1
number::add(-inf..0, nonInt(0..2)) => -inf..!2
number::add(-inf..0, nonInt(-1..2)) => -inf..!2
number::add(-inf..0, nonInt(0..inf)) => -inf..!inf
number::add(-inf..0, nonInt(-1..inf)) => -inf..!inf
number::add(-inf..0, nonInt(-inf..0)) => -inf..!0
number::add(-inf..0, nonInt(-inf..1)) => -inf..!1
number::add(-inf..0, nonInt(-inf..inf)) => -inf..!inf
number::add(-inf..0, 1 | int(3..4)) => -inf..4
number::add(-inf..inf, -inf!..inf) => -inf..inf
number::add(-inf..inf, -inf..!inf) => -inf..inf
number::add(-inf..inf, -inf!..!inf) => -inf..inf
number::add(-inf..inf, int(0..1)) => -inf..inf
number::add(-inf..inf, int(0..2)) => -inf..inf
number::add(-inf..inf, int(1..2)) => -inf..inf
number::add(-inf..inf, int(5..20)) => -inf..inf
number::add(-inf..inf, int(-20..-5)) => -inf..inf
number::add(-inf..inf, int(-10..10)) => -inf..inf
number::add(-inf..inf, int(0..inf)) => -inf..inf
number::add(-inf..inf, int(1..inf)) => -inf..inf
number::add(-inf..inf, int(-inf..0)) => -inf..inf
number::add(-inf..inf, int(-inf..1)) => -inf..inf
number::add(-inf..inf, int(-inf..inf)) => -inf..inf
number::add(-inf..inf, nonInt(0..1)) => -inf..inf
number::add(-inf..inf, nonInt(0..2)) => -inf..inf
number::add(-inf..inf, nonInt(-1..2)) => -inf..inf
number::add(-inf..inf, nonInt(0..inf)) => -inf..inf
number::add(-inf..inf, nonInt(-1..inf)) => -inf..inf
number::add(-inf..inf, nonInt(-inf..0)) => -inf..inf
number::add(-inf..inf, nonInt(-inf..1)) => -inf..inf
number::add(-inf..inf, nonInt(-inf..inf)) => -inf..inf
number::add(-inf..inf, 1 | int(3..4)) => -inf..inf
number::add(-inf!..inf, -inf..!inf) => -inf..inf
number::add(-inf!..inf, -inf!..!inf) => -inf!..inf
number::add(-inf!..inf, int(0..1)) => -inf!..inf
number::add(-inf!..inf, int(0..2)) => -inf!..inf
number::add(-inf!..inf, int(1..2)) => -inf!..inf
number::add(-inf!..inf, int(5..20)) => -inf!..inf
number::add(-inf!..inf, int(-20..-5)) => -inf!..inf
number::add(-inf!..inf, int(-10..10)) => -inf!..inf
number::add(-inf!..inf, int(0..inf)) => -inf!..inf
number::add(-inf!..inf, int(1..inf)) => -inf!..inf
number::add(-inf!..inf, int(-inf..0)) => -inf!..inf
number::add(-inf!..inf, int(-inf..1)) => -inf!..inf
number::add(-inf!..inf, int(-inf..inf)) => -inf!..inf
number::add(-inf!..inf, nonInt(0..1)) => -inf!..inf
number::add(-inf!..inf, nonInt(0..2)) => -inf!..inf
number::add(-inf!..inf, nonInt(-1..2)) => -inf!..inf
number::add(-inf!..inf, nonInt(0..inf)) => -inf!..inf
number::add(-inf!..inf, nonInt(-1..inf)) => -inf!..inf
number::add(-inf!..inf, nonInt(-inf..0)) => -inf!..inf
number::add(-inf!..inf, nonInt(-inf..1)) => -inf!..inf
number::add(-inf!..inf, nonInt(-inf..inf)) => -inf!..inf
number::add(-inf!..inf, 1 | int(3..4)) => -inf!..inf
number::add(-inf..!inf, -inf!..!inf) => -inf..!inf
number::add(-inf..!inf, int(0..1)) => -inf..!inf
number::add(-inf..!inf, int(0..2)) => -inf..!inf
number::add(-inf..!inf, int(1..2)) => -inf..!inf
number::add(-inf..!inf, int(5..20)) => -inf..!inf
number::add(-inf..!inf, int(-20..-5)) => -inf..!inf
number::add(-inf..!inf, int(-10..10)) => -inf..!inf
number::add(-inf..!inf, int(0..inf)) => -inf..!inf
number::add(-inf..!inf, int(1..inf)) => -inf..!inf
number::add(-inf..!inf, int(-inf..0)) => -inf..!inf
number::add(-inf..!inf, int(-inf..1)) => -inf..!inf
number::add(-inf..!inf, int(-inf..inf)) => -inf..!inf
number::add(-inf..!inf, nonInt(0..1)) => -inf..!inf
number::add(-inf..!inf, nonInt(0..2)) => -inf..!inf
number::add(-inf..!inf, nonInt(-1..2)) => -inf..!inf
number::add(-inf..!inf, nonInt(0..inf)) => -inf..!inf
number::add(-inf..!inf, nonInt(-1..inf)) => -inf..!inf
number::add(-inf..!inf, nonInt(-inf..0)) => -inf..!inf
number::add(-inf..!inf, nonInt(-inf..1)) => -inf..!inf
number::add(-inf..!inf, nonInt(-inf..inf)) => -inf..!inf
number::add(-inf..!inf, 1 | int(3..4)) => -inf..!inf
number::add(-inf!..!inf, int(0..1)) => -inf!..!inf
number::add(-inf!..!inf, int(0..2)) => -inf!..!inf
number::add(-inf!..!inf, int(1..2)) => -inf!..!inf
number::add(-inf!..!inf, int(5..20)) => -inf!..!inf
number::add(-inf!..!inf, int(-20..-5)) => -inf!..!inf
number::add(-inf!..!inf, int(-10..10)) => -inf!..!inf
number::add(-inf!..!inf, int(0..inf)) => -inf!..!inf
number::add(-inf!..!inf, int(1..inf)) => -inf!..!inf
number::add(-inf!..!inf, int(-inf..0)) => -inf!..!inf
number::add(-inf!..!inf, int(-inf..1)) => -inf!..!inf
number::add(-inf!..!inf, int(-inf..inf)) => -inf!..!inf
number::add(-inf!..!inf, nonInt(0..1)) => -inf!..!inf
number::add(-inf!..!inf, nonInt(0..2)) => -inf!..!inf
number::add(-inf!..!inf, nonInt(-1..2)) => -inf!..!inf
number::add(-inf!..!inf, nonInt(0..inf)) => -inf!..!inf
number::add(-inf!..!inf, nonInt(-1..inf)) => -inf!..!inf
number::add(-inf!..!inf, nonInt(-inf..0)) => -inf!..!inf
number::add(-inf!..!inf, nonInt(-inf..1)) => -inf!..!inf
number::add(-inf!..!inf, nonInt(-inf..inf)) => -inf!..!inf
number::add(-inf!..!inf, 1 | int(3..4)) => -inf!..!inf
number::add(int(0..1), int(0..2)) => int(0..3)
number::add(int(0..1), int(1..2)) => int(1..3)
number::add(int(0..1), int(5..20)) => int(5..21)
number::add(int(0..1), int(-20..-5)) => int(-20..-4)
number::add(int(0..1), int(-10..10)) => int(-10..11)
number::add(int(0..1), int(0..inf)) => int(0..inf)
number::add(int(0..1), int(1..inf)) => int(1..inf)
number::add(int(0..1), int(-inf..0)) => int(-inf..1)
number::add(int(0..1), int(-inf..1)) => int(-inf..2)
number::add(int(0..1), int(-inf..inf)) => int(-inf..inf)
number::add(int(0..1), nonInt(0..1)) => nonInt(0..2)
number::add(int(0..1), nonInt(0..2)) => nonInt(0..3)
number::add(int(0..1), nonInt(-1..2)) => nonInt(-1..3)
number::add(int(0..1), nonInt(0..inf)) => nonInt(0..inf)
number::add(int(0..1), nonInt(-1..inf)) => nonInt(-1..inf)
number::add(int(0..1), nonInt(-inf..0)) => nonInt(-inf..1)
number::add(int(0..1), nonInt(-inf..1)) => nonInt(-inf..2)
number::add(int(0..1), nonInt(-inf..inf)) => nonInt(-inf..inf)
number::add(int(0..1), 1 | int(3..4)) => int(1..5)
number::add(int(0..2), int(1..2)) => int(1..4)
number::add(int(0..2), int(5..20)) => int(5..22)
number::add(int(0..2), int(-20..-5)) => int(-20..-3)
number::add(int(0..2), int(-10..10)) => int(-10..12)
number::add(int(0..2), int(0..inf)) => int(0..inf)
number::add(int(0..2), int(1..inf)) => int(1..inf)
number::add(int(0..2), int(-inf..0)) => int(-inf..2)
number::add(int(0..2), int(-inf..1)) => int(-inf..3)
number::add(int(0..2), int(-inf..inf)) => int(-inf..inf)
number::add(int(0..2), nonInt(0..1)) => nonInt(0..3)
number::add(int(0..2), nonInt(0..2)) => nonInt(0..4)
number::add(int(0..2), nonInt(-1..2)) => nonInt(-1..4)
number::add(int(0..2), nonInt(0..inf)) => nonInt(0..inf)
number::add(int(0..2), nonInt(-1..inf)) => nonInt(-1..inf)
number::add(int(0..2), nonInt(-inf..0)) => nonInt(-inf..2)
number::add(int(0..2), nonInt(-inf..1)) => nonInt(-inf..3)
number::add(int(0..2), nonInt(-inf..inf)) => nonInt(-inf..inf)
number::add(int(0..2), 1 | int(3..4)) => int(1..6)
number::add(int(1..2), int(5..20)) => int(6..22)
number::add(int(1..2), int(-20..-5)) => int(-19..-3)
number::add(int(1..2), int(-10..10)) => int(-9..12)
number::add(int(1..2), int(0..inf)) => int(1..inf)
number::add(int(1..2), int(1..inf)) => int(2..inf)
number::add(int(1..2), int(-inf..0)) => int(-inf..2)
number::add(int(1..2), int(-inf..1)) => int(-inf..3)
number::add(int(1..2), int(-inf..inf)) => int(-inf..inf)
number::add(int(1..2), nonInt(0..1)) => nonInt(1..3)
number::add(int(1..2), nonInt(0..2)) => nonInt(1..4)
number::add(int(1..2), nonInt(-1..2)) => nonInt(0..4)
number::add(int(1..2), nonInt(0..inf)) => nonInt(1..inf)
number::add(int(1..2), nonInt(-1..inf)) => nonInt(0..inf)
number::add(int(1..2), nonInt(-inf..0)) => nonInt(-inf..2)
number::add(int(1..2), nonInt(-inf..1)) => nonInt(-inf..3)
number::add(int(1..2), nonInt(-inf..inf)) => nonInt(-inf..inf)
number::add(int(1..2), 1 | int(3..4)) => int(2..6)
number::add(int(5..20), int(-20..-5)) => int(-15..15)
number::add(int(5..20), int(-10..10)) => int(-5..30)
number::add(int(5..20), int(0..inf)) => int(5..inf)
number::add(int(5..20), int(1..inf)) => int(6..inf)
number::add(int(5..20), int(-inf..0)) => int(-inf..20)
number::add(int(5..20), int(-inf..1)) => int(-inf..21)
number::add(int(5..20), int(-inf..inf)) => int(-inf..inf)
number::add(int(5..20), nonInt(0..1)) => nonInt(5..21)
number::add(int(5..20), nonInt(0..2)) => nonInt(5..22)
number::add(int(5..20), nonInt(-1..2)) => nonInt(4..22)
number::add(int(5..20), nonInt(0..inf)) => nonInt(5..inf)
number::add(int(5..20), nonInt(-1..inf)) => nonInt(4..inf)
number::add(int(5..20), nonInt(-inf..0)) => nonInt(-inf..20)
number::add(int(5..20), nonInt(-inf..1)) => nonInt(-inf..21)
number::add(int(5..20), nonInt(-inf..inf)) => nonInt(-inf..inf)
number::add(int(5..20), 1 | int(3..4)) => int(6..24)
number::add(int(-20..-5), int(-10..10)) => int(-30..5)
number::add(int(-20..-5), int(0..inf)) => int(-20..inf)
number::add(int(-20..-5), int(1..inf)) => int(-19..inf)
number::add(int(-20..-5), int(-inf..0)) => int(-inf..-5)
number::add(int(-20..-5), int(-inf..1)) => int(-inf..-4)
number::add(int(-20..-5), int(-inf..inf)) => int(-inf..inf)
number::add(int(-20..-5), nonInt(0..1)) => nonInt(-20..-4)
number::add(int(-20..-5), nonInt(0..2)) => nonInt(-20..-3)
number::add(int(-20..-5), nonInt(-1..2)) => nonInt(-21..-3)
number::add(int(-20..-5), nonInt(0..inf)) => nonInt(-20..inf)
number::add(int(-20..-5), nonInt(-1..inf)) => nonInt(-21..inf)
number::add(int(-20..-5), nonInt(-inf..0)) => nonInt(-inf..-5)
number::add(int(-20..-5), nonInt(-inf..1)) => nonInt(-inf..-4)
number::add(int(-20..-5), nonInt(-inf..inf)) => nonInt(-inf..inf)
number::add(int(-20..-5), 1 | int(3..4)) => int(-19..-1)
number::add(int(-10..10), int(0..inf)) => int(-10..inf)
number::add(int(-10..10), int(1..inf)) => int(-9..inf)
number::add(int(-10..10), int(-inf..0)) => int(-inf..10)
number::add(int(-10..10), int(-inf..1)) => int(-inf..11)
number::add(int(-10..10), int(-inf..inf)) => int(-inf..inf)
number::add(int(-10..10), nonInt(0..1)) => nonInt(-10..11)
number::add(int(-10..10), nonInt(0..2)) => nonInt(-10..12)
number::add(int(-10..10), nonInt(-1..2)) => nonInt(-11..12)
number::add(int(-10..10), nonInt(0..inf)) => nonInt(-10..inf)
number::add(int(-10..10), nonInt(-1..inf)) => nonInt(-11..inf)
number::add(int(-10..10), nonInt(-inf..0)) => nonInt(-inf..10)
number::add(int(-10..10), nonInt(-inf..1)) => nonInt(-inf..11)
number::add(int(-10..10), nonInt(-inf..inf)) => nonInt(-inf..inf)
number::add(int(-10..10), 1 | int(3..4)) => int(-9..14)
number::add(int(0..inf), int(1..inf)) => int(1..inf)
number::add(int(0..inf), int(-inf..0)) => int(-inf..inf)
number::add(int(0..inf), int(-inf..1)) => int(-inf..inf)
number::add(int(0..inf), int(-inf..inf)) => int(-inf..inf)
number::add(int(0..inf), nonInt(0..1)) => nonInt(0..inf)
number::add(int(0..inf), nonInt(0..2)) => nonInt(0..inf)
number::add(int(0..inf), nonInt(-1..2)) => nonInt(-1..inf)
number::add(int(0..inf), nonInt(0..inf)) => nonInt(0..inf)
number::add(int(0..inf), nonInt(-1..inf)) => nonInt(-1..inf)
number::add(int(0..inf), nonInt(-inf..0)) => nonInt(-inf..inf)
number::add(int(0..inf), nonInt(-inf..1)) => nonInt(-inf..inf)
number::add(int(0..inf), nonInt(-inf..inf)) => nonInt(-inf..inf)
number::add(int(0..inf), 1 | int(3..4)) => int(1..inf)
number::add(int(1..inf), int(-inf..0)) => int(-inf..inf)
number::add(int(1..inf), int(-inf..1)) => int(-inf..inf)
number::add(int(1..inf), int(-inf..inf)) => int(-inf..inf)
number::add(int(1..inf), nonInt(0..1)) => nonInt(1..inf)
number::add(int(1..inf), nonInt(0..2)) => nonInt(1..inf)
number::add(int(1..inf), nonInt(-1..2)) => nonInt(0..inf)
number::add(int(1..inf), nonInt(0..inf)) => nonInt(1..inf)
number::add(int(1..inf), nonInt(-1..inf)) => nonInt(0..inf)
number::add(int(1..inf), nonInt(-inf..0)) => nonInt(-inf..inf)
number::add(int(1..inf), nonInt(-inf..1)) => nonInt(-inf..inf)
number::add(int(1..inf), nonInt(-inf..inf)) => nonInt(-inf..inf)
number::add(int(1..inf), 1 | int(3..4)) => int(2..inf)
number::add(int(-inf..0), int(-inf..1)) => int(-inf..1)
number::add(int(-inf..0), int(-inf..inf)) => int(-inf..inf)
number::add(int(-inf..0), nonInt(0..1)) => nonInt(-inf..1)
number::add(int(-inf..0), nonInt(0..2)) => nonInt(-inf..2)
number::add(int(-inf..0), nonInt(-1..2)) => nonInt(-inf..2)
number::add(int(-inf..0), nonInt(0..inf)) => nonInt(-inf..inf)
number::add(int(-inf..0), nonInt(-1..inf)) => nonInt(-inf..inf)
number::add(int(-inf..0), nonInt(-inf..0)) => nonInt(-inf..0)
number::add(int(-inf..0), nonInt(-inf..1)) => nonInt(-inf..1)
number::add(int(-inf..0), nonInt(-inf..inf)) => nonInt(-inf..inf)
number::add(int(-inf..0), 1 | int(3..4)) => int(-inf..4)
number::add(int(-inf..1), int(-inf..inf)) => int(-inf..inf)
number::add(int(-inf..1), nonInt(0..1)) => nonInt(-inf..2)
number::add(int(-inf..1), nonInt(0..2)) => nonInt(-inf..3)
number::add(int(-inf..1), nonInt(-1..2)) => nonInt(-inf..3)
number::add(int(-inf..1), nonInt(0..inf)) => nonInt(-inf..inf)
number::add(int(-inf..1), nonInt(-1..inf)) => nonInt(-inf..inf)
number::add(int(-inf..1), nonInt(-inf..0)) => nonInt(-inf..1)
number::add(int(-inf..1), nonInt(-inf..1)) => nonInt(-inf..2)
number::add(int(-inf..1), nonInt(-inf..inf)) => nonInt(-inf..inf)
number::add(int(-inf..1), 1 | int(3..4)) => int(-inf..5)
number::add(int(-inf..inf), nonInt(0..1)) => nonInt(-inf..inf)
number::add(int(-inf..inf), nonInt(0..2)) => nonInt(-inf..inf)
number::add(int(-inf..inf), nonInt(-1..2)) => nonInt(-inf..inf)
number::add(int(-inf..inf), nonInt(0..inf)) => nonInt(-inf..inf)
number::add(int(-inf..inf), nonInt(-1..inf)) => nonInt(-inf..inf)
number::add(int(-inf..inf), nonInt(-inf..0)) => nonInt(-inf..inf)
number::add(int(-inf..inf), nonInt(-inf..1)) => nonInt(-inf..inf)
number::add(int(-inf..inf), nonInt(-inf..inf)) => nonInt(-inf..inf)
number::add(int(-inf..inf), 1 | int(3..4)) => int(-inf..inf)
number::add(nonInt(0..1), nonInt(0..2)) => 0!..!3
number::add(nonInt(0..1), nonInt(-1..2)) => -1!..!3
number::add(nonInt(0..1), nonInt(0..inf)) => 0!..!inf
number::add(nonInt(0..1), nonInt(-1..inf)) => -1!..!inf
number::add(nonInt(0..1), nonInt(-inf..0)) => -inf!..!1
number::add(nonInt(0..1), nonInt(-inf..1)) => -inf!..!2
number::add(nonInt(0..1), nonInt(-inf..inf)) => -inf!..!inf
number::add(nonInt(0..1), 1 | int(3..4)) => nonInt(1..2) | nonInt(3..5)
number::add(nonInt(0..2), nonInt(-1..2)) => -1!..!4
number::add(nonInt(0..2), nonInt(0..inf)) => 0!..!inf
number::add(nonInt(0..2), nonInt(-1..inf)) => -1!..!inf
number::add(nonInt(0..2), nonInt(-inf..0)) => -inf!..!2
number::add(nonInt(0..2), nonInt(-inf..1)) => -inf!..!3
number::add(nonInt(0..2), nonInt(-inf..inf)) => -inf!..!inf
number::add(nonInt(0..2), 1 | int(3..4)) => nonInt(1..6)
number::add(nonInt(-1..2), nonInt(0..inf)) => -1!..!inf
number::add(nonInt(-1..2), nonInt(-1..inf)) => -2!..!inf
number::add(nonInt(-1..2), nonInt(-inf..0)) => -inf!..!2
number::add(nonInt(-1..2), nonInt(-inf..1)) => -inf!..!3
number::add(nonInt(-1..2), nonInt(-inf..inf)) => -inf!..!inf
number::add(nonInt(-1..2), 1 | int(3..4)) => nonInt(0..6)
number::add(nonInt(0..inf), nonInt(-1..inf)) => -1!..!inf
number::add(nonInt(0..inf), nonInt(-inf..0)) => -inf!..!inf
number::add(nonInt(0..inf), nonInt(-inf..1)) => -inf!..!inf
number::add(nonInt(0..inf), nonInt(-inf..inf)) => -inf!..!inf
number::add(nonInt(0..inf), 1 | int(3..4)) => nonInt(1..inf)
number::add(nonInt(-1..inf), nonInt(-inf..0)) => -inf!..!inf
number::add(nonInt(-1..inf), nonInt(-inf..1)) => -inf!..!inf
number::add(nonInt(-1..inf), nonInt(-inf..inf)) => -inf!..!inf
number::add(nonInt(-1..inf), 1 | int(3..4)) => nonInt(0..inf)
number::add(nonInt(-inf..0), nonInt(-inf..1)) => -inf!..!1
number::add(nonInt(-inf..0), nonInt(-inf..inf)) => -inf!..!inf
number::add(nonInt(-inf..0), 1 | int(3..4)) => nonInt(-inf..4)
number::add(nonInt(-inf..1), nonInt(-inf..inf)) => -inf!..!inf
number::add(nonInt(-inf..1), 1 | int(3..4)) => nonInt(-inf..5)
number::add(nonInt(-inf..inf), 1 | int(3..4)) => nonInt(-inf..inf)"
`;

exports[`Builtin functions number::cos evaluate 1`] = `
"number::cos(number) => -1..1 | nan
number::cos(-3.14) => -0.9999987317275395
number::cos(-2) => -0.4161468365471424
number::cos(-1) => 0.5403023058681398
number::cos(-0.5) => 0.8775825618903728
number::cos(0) => 1
number::cos(0.5) => 0.8775825618903728
number::cos(1) => 0.5403023058681398
number::cos(2) => -0.4161468365471424
number::cos(2.78) => -0.9353345861207387
number::cos(3) => -0.9899924966004454
number::cos(3.14) => -0.9999987317275395
number::cos(10) => -0.8390715290764524
number::cos(100) => 0.8623188722876839
number::cos(-inf) => nan
number::cos(inf) => nan
number::cos(nan) => nan
number::cos(0..1) => 0.5403023058681398..1
number::cos(0!..1) => 0.5403023058681398..!1
number::cos(0..!1) => 0.5403023058681398!..1
number::cos(0..2) => -0.4161468365471424..1
number::cos(0!..!2) => -0.4161468365471424!..!1
number::cos(0.5..1.5) => 0.0707372016677029..0.8775825618903728
number::cos(0.5..2.5) => -0.8011436155469337..0.8775825618903728
number::cos(0.5!..2.5) => -0.8011436155469337..!0.8775825618903728
number::cos(0.5..!2.5) => -0.8011436155469337!..0.8775825618903728
number::cos(-2.56..3.35) => -1..1
number::cos(0.5..0.75) => 0.7316888688738209..0.8775825618903728
number::cos(1..2) => -0.4161468365471424..0.5403023058681398
number::cos(0..inf) => -1..1 | nan
number::cos(0!..inf) => -1..1 | nan
number::cos(0..!inf) => -1..1
number::cos(0!..!inf) => -1..1
number::cos(1..inf) => -1..1 | nan
number::cos(1!..inf) => -1..1 | nan
number::cos(1..!inf) => -1..1
number::cos(2..inf) => -1..1 | nan
number::cos(2!..inf) => -1..1 | nan
number::cos(2.5..inf) => -1..1 | nan
number::cos(-inf..0) => -1..1 | nan
number::cos(-inf..inf) => -1..1 | nan
number::cos(-inf!..inf) => -1..1 | nan
number::cos(-inf..!inf) => -1..1 | nan
number::cos(-inf!..!inf) => -1..1
number::cos(int(0..1)) => 0.5403023058681398 | 1
number::cos(int(0..2)) => -0.4161468365471424 | 0.5403023058681398 | 1
number::cos(int(1..2)) => -0.4161468365471424 | 0.5403023058681398
number::cos(int(5..20)) => -1..1
number::cos(int(-20..-5)) => -1..1
number::cos(int(-10..10)) => -1..1
number::cos(int(0..inf)) => -1..1
number::cos(int(1..inf)) => -1..1
number::cos(int(-inf..0)) => -1..1
number::cos(int(-inf..1)) => -1..1
number::cos(int(-inf..inf)) => -1..1
number::cos(nonInt(0..1)) => 0.5403023058681398!..!1
number::cos(nonInt(0..2)) => -0.4161468365471424!..!1
number::cos(nonInt(-1..2)) => -0.4161468365471424!..1
number::cos(nonInt(0..inf)) => -1..1
number::cos(nonInt(-1..inf)) => -1..1
number::cos(nonInt(-inf..0)) => -1..1
number::cos(nonInt(-inf..1)) => -1..1
number::cos(nonInt(-inf..inf)) => -1..1
number::cos(1 | int(3..4)) => -0.9899924966004454 | -0.6536436208636119 | 0.5403023058681398
number::cos(never) => never
number::cos(any) => Error: Incompatible argument type: The supplied argument type any is not compatible with the definition type."
`;

exports[`Builtin functions number::degToRad evaluate 1`] = `
"number::degToRad(number) => number
number::degToRad(-3.14) => -0.05480333851262195
number::degToRad(-2) => -0.03490658503988659
number::degToRad(-1) => -0.017453292519943295
number::degToRad(-0.5) => -0.008726646259971648
number::degToRad(0) => 0
number::degToRad(0.5) => 0.008726646259971648
number::degToRad(1) => 0.017453292519943295
number::degToRad(2) => 0.03490658503988659
number::degToRad(2.78) => 0.04852015320544236
number::degToRad(3) => 0.05235987755982989
number::degToRad(3.14) => 0.05480333851262195
number::degToRad(10) => 0.17453292519943295
number::degToRad(100) => 1.7453292519943295
number::degToRad(-inf) => -inf
number::degToRad(inf) => inf
number::degToRad(nan) => nan
number::degToRad(0..1) => 0..0.017453292519943295
number::degToRad(0!..1) => 0!..0.017453292519943295
number::degToRad(0..!1) => 0..!0.017453292519943295
number::degToRad(0..2) => 0..0.03490658503988659
number::degToRad(0!..!2) => 0!..!0.03490658503988659
number::degToRad(0.5..1.5) => 0.008726646259971648..0.026179938779914945
number::degToRad(0.5..2.5) => 0.008726646259971648..0.04363323129985824
number::degToRad(0.5!..2.5) => 0.008726646259971648!..0.04363323129985824
number::degToRad(0.5..!2.5) => 0.008726646259971648..!0.04363323129985824
number::degToRad(-2.56..3.35) => -0.04468042885105484..0.05846852994181004
number::degToRad(0.5..0.75) => 0.008726646259971648..0.013089969389957472
number::degToRad(1..2) => 0.017453292519943295..0.03490658503988659
number::degToRad(0..inf) => 0..inf
number::degToRad(0!..inf) => 0!..inf
number::degToRad(0..!inf) => 0..!inf
number::degToRad(0!..!inf) => 0!..!inf
number::degToRad(1..inf) => 0.017453292519943295..inf
number::degToRad(1!..inf) => 0.017453292519943295!..inf
number::degToRad(1..!inf) => 0.017453292519943295..!inf
number::degToRad(2..inf) => 0.03490658503988659..inf
number::degToRad(2!..inf) => 0.03490658503988659!..inf
number::degToRad(2.5..inf) => 0.04363323129985824..inf
number::degToRad(-inf..0) => -inf..0
number::degToRad(-inf..inf) => -inf..inf
number::degToRad(-inf!..inf) => -inf!..inf
number::degToRad(-inf..!inf) => -inf..!inf
number::degToRad(-inf!..!inf) => -inf!..!inf
number::degToRad(int(0..1)) => 0 | 0.017453292519943295
number::degToRad(int(0..2)) => 0 | 0.017453292519943295 | 0.03490658503988659
number::degToRad(int(1..2)) => 0.017453292519943295 | 0.03490658503988659
number::degToRad(int(5..20)) => 0.08726646259971647..0.3490658503988659
number::degToRad(int(-20..-5)) => -0.3490658503988659..-0.08726646259971647
number::degToRad(int(-10..10)) => -0.17453292519943295..0.17453292519943295
number::degToRad(int(0..inf)) => 0..!inf
number::degToRad(int(1..inf)) => 0.017453292519943295..!inf
number::degToRad(int(-inf..0)) => -inf!..0
number::degToRad(int(-inf..1)) => -inf!..0.017453292519943295
number::degToRad(int(-inf..inf)) => -inf!..!inf
number::degToRad(nonInt(0..1)) => 0!..!0.017453292519943295
number::degToRad(nonInt(0..2)) => 0!..!0.03490658503988659
number::degToRad(nonInt(-1..2)) => -0.017453292519943295!..!0.03490658503988659
number::degToRad(nonInt(0..inf)) => 0!..!inf
number::degToRad(nonInt(-1..inf)) => -0.017453292519943295!..!inf
number::degToRad(nonInt(-inf..0)) => -inf!..!0
number::degToRad(nonInt(-inf..1)) => -inf!..!0.017453292519943295
number::degToRad(nonInt(-inf..inf)) => -inf!..!inf
number::degToRad(1 | int(3..4)) => 0.017453292519943295 | 0.05235987755982989 | 0.06981317007977318
number::degToRad(never) => never
number::degToRad(any) => Error: Incompatible argument type: The supplied argument type any is not compatible with the definition type."
`;

exports[`Builtin functions number::exp evaluate 1`] = `
"number::exp(number) => 0..inf | nan
number::exp(-3.14) => 0.043282797901965896
number::exp(-2) => 0.1353352832366127
number::exp(-1) => 0.36787944117144233
number::exp(-0.5) => 0.6065306597126334
number::exp(0) => 1
number::exp(0.5) => 1.6487212707001282
number::exp(1) => 2.718281828459045
number::exp(2) => 7.38905609893065
number::exp(2.78) => 16.119020948027543
number::exp(3) => 20.085536923187668
number::exp(3.14) => 23.103866858722185
number::exp(10) => 22026.465794806718
number::exp(100) => 2.6881171418161356e+43
number::exp(-inf) => 0
number::exp(inf) => inf
number::exp(nan) => nan
number::exp(0..1) => 1..2.718281828459045
number::exp(0!..1) => 1..2.718281828459045
number::exp(0..!1) => 1..2.718281828459045
number::exp(0..2) => 1..7.38905609893065
number::exp(0!..!2) => 1..7.38905609893065
number::exp(0.5..1.5) => 1.6487212707001282..4.4816890703380645
number::exp(0.5..2.5) => 1.6487212707001282..12.182493960703473
number::exp(0.5!..2.5) => 1.6487212707001282..12.182493960703473
number::exp(0.5..!2.5) => 1.6487212707001282..12.182493960703473
number::exp(-2.56..3.35) => 0.07730474044329974..28.502733643767282
number::exp(0.5..0.75) => 1.6487212707001282..2.117000016612675
number::exp(1..2) => 2.718281828459045..7.38905609893065
number::exp(0..inf) => 1..inf
number::exp(0!..inf) => 1..inf
number::exp(0..!inf) => 1..inf
number::exp(0!..!inf) => 1..inf
number::exp(1..inf) => 2.718281828459045..inf
number::exp(1!..inf) => 2.718281828459045..inf
number::exp(1..!inf) => 2.718281828459045..inf
number::exp(2..inf) => 7.38905609893065..inf
number::exp(2!..inf) => 7.38905609893065..inf
number::exp(2.5..inf) => 12.182493960703473..inf
number::exp(-inf..0) => 0..1
number::exp(-inf..inf) => 0..inf
number::exp(-inf!..inf) => 0..inf
number::exp(-inf..!inf) => 0..inf
number::exp(-inf!..!inf) => 0..inf
number::exp(int(0..1)) => 1 | 2.718281828459045
number::exp(int(0..2)) => 1 | 2.718281828459045 | 7.38905609893065
number::exp(int(1..2)) => 2.718281828459045 | 7.38905609893065
number::exp(int(5..20)) => 148.4131591025766..485165195.4097903
number::exp(int(-20..-5)) => 2.061153622438558e-9..0.006737946999085467
number::exp(int(-10..10)) => 0.00004539992976248485..22026.465794806718
number::exp(int(0..inf)) => 1..inf
number::exp(int(1..inf)) => 2.718281828459045..inf
number::exp(int(-inf..0)) => 0..1
number::exp(int(-inf..1)) => 0..2.718281828459045
number::exp(int(-inf..inf)) => 0..inf
number::exp(nonInt(0..1)) => 1..2.718281828459045
number::exp(nonInt(0..2)) => 1..7.38905609893065
number::exp(nonInt(-1..2)) => 0.36787944117144233..7.38905609893065
number::exp(nonInt(0..inf)) => 1..inf
number::exp(nonInt(-1..inf)) => 0.36787944117144233..inf
number::exp(nonInt(-inf..0)) => 0..1
number::exp(nonInt(-inf..1)) => 0..2.718281828459045
number::exp(nonInt(-inf..inf)) => 0..inf
number::exp(1 | int(3..4)) => 2.718281828459045 | 20.085536923187668 | 54.598150033144236
number::exp(never) => never
number::exp(any) => Error: Incompatible argument type: The supplied argument type any is not compatible with the definition type."
`;

exports[`Builtin functions number::log evaluate 1`] = `
"number::log(number) => number
number::log(-3.14) => never
number::log(-2) => never
number::log(-1) => never
number::log(-0.5) => never
number::log(0) => never
number::log(0.5) => -0.6931471805599453
number::log(1) => 0
number::log(2) => 0.6931471805599453
number::log(2.78) => 1.0224509277025455
number::log(3) => 1.0986122886681096
number::log(3.14) => 1.144222799920162
number::log(10) => 2.302585092994046
number::log(100) => 4.605170185988092
number::log(-inf) => never
number::log(inf) => inf
number::log(nan) => nan
number::log(0..1) => -inf..0
number::log(0!..1) => -inf..0
number::log(0..!1) => -inf..0
number::log(0..2) => -inf..0.6931471805599453
number::log(0!..!2) => -inf..0.6931471805599453
number::log(0.5..1.5) => -0.6931471805599453..0.4054651081081644
number::log(0.5..2.5) => -0.6931471805599453..0.9162907318741551
number::log(0.5!..2.5) => -0.6931471805599453..0.9162907318741551
number::log(0.5..!2.5) => -0.6931471805599453..0.9162907318741551
number::log(-2.56..3.35) => -inf..1.208960345836975
number::log(0.5..0.75) => -0.6931471805599453..-0.2876820724517809
number::log(1..2) => 0..0.6931471805599453
number::log(0..inf) => -inf..inf
number::log(0!..inf) => -inf..inf
number::log(0..!inf) => -inf..inf
number::log(0!..!inf) => -inf..inf
number::log(1..inf) => 0..inf
number::log(1!..inf) => 0..inf
number::log(1..!inf) => 0..inf
number::log(2..inf) => 0.6931471805599453..inf
number::log(2!..inf) => 0.6931471805599453..inf
number::log(2.5..inf) => 0.9162907318741551..inf
number::log(-inf..0) => never
number::log(-inf..inf) => -inf..inf
number::log(-inf!..inf) => -inf..inf
number::log(-inf..!inf) => -inf..inf
number::log(-inf!..!inf) => -inf..inf
number::log(int(0..1)) => 0
number::log(int(0..2)) => 0 | 0.6931471805599453
number::log(int(1..2)) => 0 | 0.6931471805599453
number::log(int(5..20)) => 1.6094379124341003..2.995732273553991
number::log(int(-20..-5)) => never
number::log(int(-10..10)) => -inf..2.302585092994046
number::log(int(0..inf)) => -inf..inf
number::log(int(1..inf)) => 0..inf
number::log(int(-inf..0)) => never
number::log(int(-inf..1)) => -inf..0
number::log(int(-inf..inf)) => -inf..inf
number::log(nonInt(0..1)) => -inf..0
number::log(nonInt(0..2)) => -inf..0.6931471805599453
number::log(nonInt(-1..2)) => -inf..0.6931471805599453
number::log(nonInt(0..inf)) => -inf..inf
number::log(nonInt(-1..inf)) => -inf..inf
number::log(nonInt(-inf..0)) => never
number::log(nonInt(-inf..1)) => -inf..0
number::log(nonInt(-inf..inf)) => -inf..inf
number::log(1 | int(3..4)) => 0 | 1.0986122886681096 | 1.3862943611198906
number::log(never) => never
number::log(any) => Error: Incompatible argument type: The supplied argument type any is not compatible with the definition type."
`;

exports[`Builtin functions number::lt evaluate 1`] = `
"number::lt(number, number) => false | true
number::lt(number, -3.14) => false | true
number::lt(number, -2) => false | true
number::lt(number, -1) => false | true
number::lt(number, -0.5) => false | true
number::lt(number, 0) => false | true
number::lt(number, 0.5) => false | true
number::lt(number, 1) => false | true
number::lt(number, 2) => false | true
number::lt(number, 2.78) => false | true
number::lt(number, 3) => false | true
number::lt(number, 3.14) => false | true
number::lt(number, 10) => false | true
number::lt(number, 100) => false | true
number::lt(number, -inf) => false
number::lt(number, inf) => false | true
number::lt(number, nan) => false
number::lt(number, 0..1) => false | true
number::lt(number, 0!..1) => false | true
number::lt(number, 0..!1) => false | true
number::lt(number, 0..2) => false | true
number::lt(number, 0!..!2) => false | true
number::lt(number, 0.5..1.5) => false | true
number::lt(number, 0.5..2.5) => false | true
number::lt(number, 0.5!..2.5) => false | true
number::lt(number, 0.5..!2.5) => false | true
number::lt(number, -2.56..3.35) => false | true
number::lt(number, 0.5..0.75) => false | true
number::lt(number, 1..2) => false | true
number::lt(number, 0..inf) => false | true
number::lt(number, 0!..inf) => false | true
number::lt(number, 0..!inf) => false | true
number::lt(number, 0!..!inf) => false | true
number::lt(number, 1..inf) => false | true
number::lt(number, 1!..inf) => false | true
number::lt(number, 1..!inf) => false | true
number::lt(number, 2..inf) => false | true
number::lt(number, 2!..inf) => false | true
number::lt(number, 2.5..inf) => false | true
number::lt(number, -inf..0) => false | true
number::lt(number, -inf..inf) => false | true
number::lt(number, -inf!..inf) => false | true
number::lt(number, -inf..!inf) => false | true
number::lt(number, -inf!..!inf) => false | true
number::lt(number, int(0..1)) => false | true
number::lt(number, int(0..2)) => false | true
number::lt(number, int(1..2)) => false | true
number::lt(number, int(5..20)) => false | true
number::lt(number, int(-20..-5)) => false | true
number::lt(number, int(-10..10)) => false | true
number::lt(number, int(0..inf)) => false | true
number::lt(number, int(1..inf)) => false | true
number::lt(number, int(-inf..0)) => false | true
number::lt(number, int(-inf..1)) => false | true
number::lt(number, int(-inf..inf)) => false | true
number::lt(number, nonInt(0..1)) => false | true
number::lt(number, nonInt(0..2)) => false | true
number::lt(number, nonInt(-1..2)) => false | true
number::lt(number, nonInt(0..inf)) => false | true
number::lt(number, nonInt(-1..inf)) => false | true
number::lt(number, nonInt(-inf..0)) => false | true
number::lt(number, nonInt(-inf..1)) => false | true
number::lt(number, nonInt(-inf..inf)) => false | true
number::lt(number, 1 | int(3..4)) => false | true
number::lt(-3.14, number) => false | true
number::lt(-3.14, -3.14) => false
number::lt(-3.14, -2) => true
number::lt(-3.14, -1) => true
number::lt(-3.14, -0.5) => true
number::lt(-3.14, 0) => true
number::lt(-3.14, 0.5) => true
number::lt(-3.14, 1) => true
number::lt(-3.14, 2) => true
number::lt(-3.14, 2.78) => true
number::lt(-3.14, 3) => true
number::lt(-3.14, 3.14) => true
number::lt(-3.14, 10) => true
number::lt(-3.14, 100) => true
number::lt(-3.14, -inf) => false
number::lt(-3.14, inf) => true
number::lt(-3.14, nan) => false
number::lt(-3.14, 0..1) => true
number::lt(-3.14, 0!..1) => true
number::lt(-3.14, 0..!1) => true
number::lt(-3.14, 0..2) => true
number::lt(-3.14, 0!..!2) => true
number::lt(-3.14, 0.5..1.5) => true
number::lt(-3.14, 0.5..2.5) => true
number::lt(-3.14, 0.5!..2.5) => true
number::lt(-3.14, 0.5..!2.5) => true
number::lt(-3.14, -2.56..3.35) => true
number::lt(-3.14, 0.5..0.75) => true
number::lt(-3.14, 1..2) => true
number::lt(-3.14, 0..inf) => true
number::lt(-3.14, 0!..inf) => true
number::lt(-3.14, 0..!inf) => true
number::lt(-3.14, 0!..!inf) => true
number::lt(-3.14, 1..inf) => true
number::lt(-3.14, 1!..inf) => true
number::lt(-3.14, 1..!inf) => true
number::lt(-3.14, 2..inf) => true
number::lt(-3.14, 2!..inf) => true
number::lt(-3.14, 2.5..inf) => true
number::lt(-3.14, -inf..0) => false | true
number::lt(-3.14, -inf..inf) => false | true
number::lt(-3.14, -inf!..inf) => false | true
number::lt(-3.14, -inf..!inf) => false | true
number::lt(-3.14, -inf!..!inf) => false | true
number::lt(-3.14, int(0..1)) => true
number::lt(-3.14, int(0..2)) => true
number::lt(-3.14, int(1..2)) => true
number::lt(-3.14, int(5..20)) => true
number::lt(-3.14, int(-20..-5)) => false
number::lt(-3.14, int(-10..10)) => false | true
number::lt(-3.14, int(0..inf)) => true
number::lt(-3.14, int(1..inf)) => true
number::lt(-3.14, int(-inf..0)) => false | true
number::lt(-3.14, int(-inf..1)) => false | true
number::lt(-3.14, int(-inf..inf)) => false | true
number::lt(-3.14, nonInt(0..1)) => true
number::lt(-3.14, nonInt(0..2)) => true
number::lt(-3.14, nonInt(-1..2)) => true
number::lt(-3.14, nonInt(0..inf)) => true
number::lt(-3.14, nonInt(-1..inf)) => true
number::lt(-3.14, nonInt(-inf..0)) => false | true
number::lt(-3.14, nonInt(-inf..1)) => false | true
number::lt(-3.14, nonInt(-inf..inf)) => false | true
number::lt(-3.14, 1 | int(3..4)) => true
number::lt(-2, number) => false | true
number::lt(-2, -3.14) => false
number::lt(-2, -2) => false
number::lt(-2, -1) => true
number::lt(-2, -0.5) => true
number::lt(-2, 0) => true
number::lt(-2, 0.5) => true
number::lt(-2, 1) => true
number::lt(-2, 2) => true
number::lt(-2, 2.78) => true
number::lt(-2, 3) => true
number::lt(-2, 3.14) => true
number::lt(-2, 10) => true
number::lt(-2, 100) => true
number::lt(-2, -inf) => false
number::lt(-2, inf) => true
number::lt(-2, nan) => false
number::lt(-2, 0..1) => true
number::lt(-2, 0!..1) => true
number::lt(-2, 0..!1) => true
number::lt(-2, 0..2) => true
number::lt(-2, 0!..!2) => true
number::lt(-2, 0.5..1.5) => true
number::lt(-2, 0.5..2.5) => true
number::lt(-2, 0.5!..2.5) => true
number::lt(-2, 0.5..!2.5) => true
number::lt(-2, -2.56..3.35) => false | true
number::lt(-2, 0.5..0.75) => true
number::lt(-2, 1..2) => true
number::lt(-2, 0..inf) => true
number::lt(-2, 0!..inf) => true
number::lt(-2, 0..!inf) => true
number::lt(-2, 0!..!inf) => true
number::lt(-2, 1..inf) => true
number::lt(-2, 1!..inf) => true
number::lt(-2, 1..!inf) => true
number::lt(-2, 2..inf) => true
number::lt(-2, 2!..inf) => true
number::lt(-2, 2.5..inf) => true
number::lt(-2, -inf..0) => false | true
number::lt(-2, -inf..inf) => false | true
number::lt(-2, -inf!..inf) => false | true
number::lt(-2, -inf..!inf) => false | true
number::lt(-2, -inf!..!inf) => false | true
number::lt(-2, int(0..1)) => true
number::lt(-2, int(0..2)) => true
number::lt(-2, int(1..2)) => true
number::lt(-2, int(5..20)) => true
number::lt(-2, int(-20..-5)) => false
number::lt(-2, int(-10..10)) => false | true
number::lt(-2, int(0..inf)) => true
number::lt(-2, int(1..inf)) => true
number::lt(-2, int(-inf..0)) => false | true
number::lt(-2, int(-inf..1)) => false | true
number::lt(-2, int(-inf..inf)) => false | true
number::lt(-2, nonInt(0..1)) => true
number::lt(-2, nonInt(0..2)) => true
number::lt(-2, nonInt(-1..2)) => true
number::lt(-2, nonInt(0..inf)) => true
number::lt(-2, nonInt(-1..inf)) => true
number::lt(-2, nonInt(-inf..0)) => false | true
number::lt(-2, nonInt(-inf..1)) => false | true
number::lt(-2, nonInt(-inf..inf)) => false | true
number::lt(-2, 1 | int(3..4)) => true
number::lt(-1, number) => false | true
number::lt(-1, -3.14) => false
number::lt(-1, -2) => false
number::lt(-1, -1) => false
number::lt(-1, -0.5) => true
number::lt(-1, 0) => true
number::lt(-1, 0.5) => true
number::lt(-1, 1) => true
number::lt(-1, 2) => true
number::lt(-1, 2.78) => true
number::lt(-1, 3) => true
number::lt(-1, 3.14) => true
number::lt(-1, 10) => true
number::lt(-1, 100) => true
number::lt(-1, -inf) => false
number::lt(-1, inf) => true
number::lt(-1, nan) => false
number::lt(-1, 0..1) => true
number::lt(-1, 0!..1) => true
number::lt(-1, 0..!1) => true
number::lt(-1, 0..2) => true
number::lt(-1, 0!..!2) => true
number::lt(-1, 0.5..1.5) => true
number::lt(-1, 0.5..2.5) => true
number::lt(-1, 0.5!..2.5) => true
number::lt(-1, 0.5..!2.5) => true
number::lt(-1, -2.56..3.35) => false | true
number::lt(-1, 0.5..0.75) => true
number::lt(-1, 1..2) => true
number::lt(-1, 0..inf) => true
number::lt(-1, 0!..inf) => true
number::lt(-1, 0..!inf) => true
number::lt(-1, 0!..!inf) => true
number::lt(-1, 1..inf) => true
number::lt(-1, 1!..inf) => true
number::lt(-1, 1..!inf) => true
number::lt(-1, 2..inf) => true
number::lt(-1, 2!..inf) => true
number::lt(-1, 2.5..inf) => true
number::lt(-1, -inf..0) => false | true
number::lt(-1, -inf..inf) => false | true
number::lt(-1, -inf!..inf) => false | true
number::lt(-1, -inf..!inf) => false | true
number::lt(-1, -inf!..!inf) => false | true
number::lt(-1, int(0..1)) => true
number::lt(-1, int(0..2)) => true
number::lt(-1, int(1..2)) => true
number::lt(-1, int(5..20)) => true
number::lt(-1, int(-20..-5)) => false
number::lt(-1, int(-10..10)) => false | true
number::lt(-1, int(0..inf)) => true
number::lt(-1, int(1..inf)) => true
number::lt(-1, int(-inf..0)) => false | true
number::lt(-1, int(-inf..1)) => false | true
number::lt(-1, int(-inf..inf)) => false | true
number::lt(-1, nonInt(0..1)) => true
number::lt(-1, nonInt(0..2)) => true
number::lt(-1, nonInt(-1..2)) => true
number::lt(-1, nonInt(0..inf)) => true
number::lt(-1, nonInt(-1..inf)) => true
number::lt(-1, nonInt(-inf..0)) => false | true
number::lt(-1, nonInt(-inf..1)) => false | true
number::lt(-1, nonInt(-inf..inf)) => false | true
number::lt(-1, 1 | int(3..4)) => true
number::lt(-0.5, number) => false | true
number::lt(-0.5, -3.14) => false
number::lt(-0.5, -2) => false
number::lt(-0.5, -1) => false
number::lt(-0.5, -0.5) => false
number::lt(-0.5, 0) => true
number::lt(-0.5, 0.5) => true
number::lt(-0.5, 1) => true
number::lt(-0.5, 2) => true
number::lt(-0.5, 2.78) => true
number::lt(-0.5, 3) => true
number::lt(-0.5, 3.14) => true
number::lt(-0.5, 10) => true
number::lt(-0.5, 100) => true
number::lt(-0.5, -inf) => false
number::lt(-0.5, inf) => true
number::lt(-0.5, nan) => false
number::lt(-0.5, 0..1) => true
number::lt(-0.5, 0!..1) => true
number::lt(-0.5, 0..!1) => true
number::lt(-0.5, 0..2) => true
number::lt(-0.5, 0!..!2) => true
number::lt(-0.5, 0.5..1.5) => true
number::lt(-0.5, 0.5..2.5) => true
number::lt(-0.5, 0.5!..2.5) => true
number::lt(-0.5, 0.5..!2.5) => true
number::lt(-0.5, -2.56..3.35) => false | true
number::lt(-0.5, 0.5..0.75) => true
number::lt(-0.5, 1..2) => true
number::lt(-0.5, 0..inf) => true
number::lt(-0.5, 0!..inf) => true
number::lt(-0.5, 0..!inf) => true
number::lt(-0.5, 0!..!inf) => true
number::lt(-0.5, 1..inf) => true
number::lt(-0.5, 1!..inf) => true
number::lt(-0.5, 1..!inf) => true
number::lt(-0.5, 2..inf) => true
number::lt(-0.5, 2!..inf) => true
number::lt(-0.5, 2.5..inf) => true
number::lt(-0.5, -inf..0) => false | true
number::lt(-0.5, -inf..inf) => false | true
number::lt(-0.5, -inf!..inf) => false | true
number::lt(-0.5, -inf..!inf) => false | true
number::lt(-0.5, -inf!..!inf) => false | true
number::lt(-0.5, int(0..1)) => true
number::lt(-0.5, int(0..2)) => true
number::lt(-0.5, int(1..2)) => true
number::lt(-0.5, int(5..20)) => true
number::lt(-0.5, int(-20..-5)) => false
number::lt(-0.5, int(-10..10)) => false | true
number::lt(-0.5, int(0..inf)) => true
number::lt(-0.5, int(1..inf)) => true
number::lt(-0.5, int(-inf..0)) => false | true
number::lt(-0.5, int(-inf..1)) => false | true
number::lt(-0.5, int(-inf..inf)) => false | true
number::lt(-0.5, nonInt(0..1)) => true
number::lt(-0.5, nonInt(0..2)) => true
number::lt(-0.5, nonInt(-1..2)) => false | true
number::lt(-0.5, nonInt(0..inf)) => true
number::lt(-0.5, nonInt(-1..inf)) => false | true
number::lt(-0.5, nonInt(-inf..0)) => false | true
number::lt(-0.5, nonInt(-inf..1)) => false | true
number::lt(-0.5, nonInt(-inf..inf)) => false | true
number::lt(-0.5, 1 | int(3..4)) => true
number::lt(0, number) => false | true
number::lt(0, -3.14) => false
number::lt(0, -2) => false
number::lt(0, -1) => false
number::lt(0, -0.5) => false
number::lt(0, 0) => false
number::lt(0, 0.5) => true
number::lt(0, 1) => true
number::lt(0, 2) => true
number::lt(0, 2.78) => true
number::lt(0, 3) => true
number::lt(0, 3.14) => true
number::lt(0, 10) => true
number::lt(0, 100) => true
number::lt(0, -inf) => false
number::lt(0, inf) => true
number::lt(0, nan) => false
number::lt(0, 0..1) => false | true
number::lt(0, 0!..1) => true
number::lt(0, 0..!1) => false | true
number::lt(0, 0..2) => false | true
number::lt(0, 0!..!2) => true
number::lt(0, 0.5..1.5) => true
number::lt(0, 0.5..2.5) => true
number::lt(0, 0.5!..2.5) => true
number::lt(0, 0.5..!2.5) => true
number::lt(0, -2.56..3.35) => false | true
number::lt(0, 0.5..0.75) => true
number::lt(0, 1..2) => true
number::lt(0, 0..inf) => false | true
number::lt(0, 0!..inf) => true
number::lt(0, 0..!inf) => false | true
number::lt(0, 0!..!inf) => true
number::lt(0, 1..inf) => true
number::lt(0, 1!..inf) => true
number::lt(0, 1..!inf) => true
number::lt(0, 2..inf) => true
number::lt(0, 2!..inf) => true
number::lt(0, 2.5..inf) => true
number::lt(0, -inf..0) => false
number::lt(0, -inf..inf) => false | true
number::lt(0, -inf!..inf) => false | true
number::lt(0, -inf..!inf) => false | true
number::lt(0, -inf!..!inf) => false | true
number::lt(0, int(0..1)) => false | true
number::lt(0, int(0..2)) => false | true
number::lt(0, int(1..2)) => true
number::lt(0, int(5..20)) => true
number::lt(0, int(-20..-5)) => false
number::lt(0, int(-10..10)) => false | true
number::lt(0, int(0..inf)) => false | true
number::lt(0, int(1..inf)) => true
number::lt(0, int(-inf..0)) => false
number::lt(0, int(-inf..1)) => false | true
number::lt(0, int(-inf..inf)) => false | true
number::lt(0, nonInt(0..1)) => true
number::lt(0, nonInt(0..2)) => true
number::lt(0, nonInt(-1..2)) => false | true
number::lt(0, nonInt(0..inf)) => true
number::lt(0, nonInt(-1..inf)) => false | true
number::lt(0, nonInt(-inf..0)) => false
number::lt(0, nonInt(-inf..1)) => false | true
number::lt(0, nonInt(-inf..inf)) => false | true
number::lt(0, 1 | int(3..4)) => true
number::lt(0.5, number) => false | true
number::lt(0.5, -3.14) => false
number::lt(0.5, -2) => false
number::lt(0.5, -1) => false
number::lt(0.5, -0.5) => false
number::lt(0.5, 0) => false
number::lt(0.5, 0.5) => false
number::lt(0.5, 1) => true
number::lt(0.5, 2) => true
number::lt(0.5, 2.78) => true
number::lt(0.5, 3) => true
number::lt(0.5, 3.14) => true
number::lt(0.5, 10) => true
number::lt(0.5, 100) => true
number::lt(0.5, -inf) => false
number::lt(0.5, inf) => true
number::lt(0.5, nan) => false
number::lt(0.5, 0..1) => false | true
number::lt(0.5, 0!..1) => false | true
number::lt(0.5, 0..!1) => false | true
number::lt(0.5, 0..2) => false | true
number::lt(0.5, 0!..!2) => false | true
number::lt(0.5, 0.5..1.5) => false | true
number::lt(0.5, 0.5..2.5) => false | true
number::lt(0.5, 0.5!..2.5) => true
number::lt(0.5, 0.5..!2.5) => false | true
number::lt(0.5, -2.56..3.35) => false | true
number::lt(0.5, 0.5..0.75) => false | true
number::lt(0.5, 1..2) => true
number::lt(0.5, 0..inf) => false | true
number::lt(0.5, 0!..inf) => false | true
number::lt(0.5, 0..!inf) => false | true
number::lt(0.5, 0!..!inf) => false | true
number::lt(0.5, 1..inf) => true
number::lt(0.5, 1!..inf) => true
number::lt(0.5, 1..!inf) => true
number::lt(0.5, 2..inf) => true
number::lt(0.5, 2!..inf) => true
number::lt(0.5, 2.5..inf) => true
number::lt(0.5, -inf..0) => false
number::lt(0.5, -inf..inf) => false | true
number::lt(0.5, -inf!..inf) => false | true
number::lt(0.5, -inf..!inf) => false | true
number::lt(0.5, -inf!..!inf) => false | true
number::lt(0.5, int(0..1)) => false | true
number::lt(0.5, int(0..2)) => false | true
number::lt(0.5, int(1..2)) => true
number::lt(0.5, int(5..20)) => true
number::lt(0.5, int(-20..-5)) => false
number::lt(0.5, int(-10..10)) => false | true
number::lt(0.5, int(0..inf)) => false | true
number::lt(0.5, int(1..inf)) => true
number::lt(0.5, int(-inf..0)) => false
number::lt(0.5, int(-inf..1)) => false | true
number::lt(0.5, int(-inf..inf)) => false | true
number::lt(0.5, nonInt(0..1)) => false | true
number::lt(0.5, nonInt(0..2)) => false | true
number::lt(0.5, nonInt(-1..2)) => false | true
number::lt(0.5, nonInt(0..inf)) => false | true
number::lt(0.5, nonInt(-1..inf)) => false | true
number::lt(0.5, nonInt(-inf..0)) => false
number::lt(0.5, nonInt(-inf..1)) => false | true
number::lt(0.5, nonInt(-inf..inf)) => false | true
number::lt(0.5, 1 | int(3..4)) => true
number::lt(1, number) => false | true
number::lt(1, -3.14) => false
number::lt(1, -2) => false
number::lt(1, -1) => false
number::lt(1, -0.5) => false
number::lt(1, 0) => false
number::lt(1, 0.5) => false
number::lt(1, 1) => false
number::lt(1, 2) => true
number::lt(1, 2.78) => true
number::lt(1, 3) => true
number::lt(1, 3.14) => true
number::lt(1, 10) => true
number::lt(1, 100) => true
number::lt(1, -inf) => false
number::lt(1, inf) => true
number::lt(1, nan) => false
number::lt(1, 0..1) => false
number::lt(1, 0!..1) => false
number::lt(1, 0..!1) => false
number::lt(1, 0..2) => false | true
number::lt(1, 0!..!2) => false | true
number::lt(1, 0.5..1.5) => false | true
number::lt(1, 0.5..2.5) => false | true
number::lt(1, 0.5!..2.5) => false | true
number::lt(1, 0.5..!2.5) => false | true
number::lt(1, -2.56..3.35) => false | true
number::lt(1, 0.5..0.75) => false
number::lt(1, 1..2) => false | true
number::lt(1, 0..inf) => false | true
number::lt(1, 0!..inf) => false | true
number::lt(1, 0..!inf) => false | true
number::lt(1, 0!..!inf) => false | true
number::lt(1, 1..inf) => false | true
number::lt(1, 1!..inf) => true
number::lt(1, 1..!inf) => false | true
number::lt(1, 2..inf) => true
number::lt(1, 2!..inf) => true
number::lt(1, 2.5..inf) => true
number::lt(1, -inf..0) => false
number::lt(1, -inf..inf) => false | true
number::lt(1, -inf!..inf) => false | true
number::lt(1, -inf..!inf) => false | true
number::lt(1, -inf!..!inf) => false | true
number::lt(1, int(0..1)) => false
number::lt(1, int(0..2)) => false | true
number::lt(1, int(1..2)) => false | true
number::lt(1, int(5..20)) => true
number::lt(1, int(-20..-5)) => false
number::lt(1, int(-10..10)) => false | true
number::lt(1, int(0..inf)) => false | true
number::lt(1, int(1..inf)) => false | true
number::lt(1, int(-inf..0)) => false
number::lt(1, int(-inf..1)) => false
number::lt(1, int(-inf..inf)) => false | true
number::lt(1, nonInt(0..1)) => false
number::lt(1, nonInt(0..2)) => false | true
number::lt(1, nonInt(-1..2)) => false | true
number::lt(1, nonInt(0..inf)) => false | true
number::lt(1, nonInt(-1..inf)) => false | true
number::lt(1, nonInt(-inf..0)) => false
number::lt(1, nonInt(-inf..1)) => false
number::lt(1, nonInt(-inf..inf)) => false | true
number::lt(1, 1 | int(3..4)) => false | true
number::lt(2, number) => false | true
number::lt(2, -3.14) => false
number::lt(2, -2) => false
number::lt(2, -1) => false
number::lt(2, -0.5) => false
number::lt(2, 0) => false
number::lt(2, 0.5) => false
number::lt(2, 1) => false
number::lt(2, 2) => false
number::lt(2, 2.78) => true
number::lt(2, 3) => true
number::lt(2, 3.14) => true
number::lt(2, 10) => true
number::lt(2, 100) => true
number::lt(2, -inf) => false
number::lt(2, inf) => true
number::lt(2, nan) => false
number::lt(2, 0..1) => false
number::lt(2, 0!..1) => false
number::lt(2, 0..!1) => false
number::lt(2, 0..2) => false
number::lt(2, 0!..!2) => false
number::lt(2, 0.5..1.5) => false
number::lt(2, 0.5..2.5) => false | true
number::lt(2, 0.5!..2.5) => false | true
number::lt(2, 0.5..!2.5) => false | true
number::lt(2, -2.56..3.35) => false | true
number::lt(2, 0.5..0.75) => false
number::lt(2, 1..2) => false
number::lt(2, 0..inf) => false | true
number::lt(2, 0!..inf) => false | true
number::lt(2, 0..!inf) => false | true
number::lt(2, 0!..!inf) => false | true
number::lt(2, 1..inf) => false | true
number::lt(2, 1!..inf) => false | true
number::lt(2, 1..!inf) => false | true
number::lt(2, 2..inf) => false | true
number::lt(2, 2!..inf) => true
number::lt(2, 2.5..inf) => true
number::lt(2, -inf..0) => false
number::lt(2, -inf..inf) => false | true
number::lt(2, -inf!..inf) => false | true
number::lt(2, -inf..!inf) => false | true
number::lt(2, -inf!..!inf) => false | true
number::lt(2, int(0..1)) => false
number::lt(2, int(0..2)) => false
number::lt(2, int(1..2)) => false
number::lt(2, int(5..20)) => true
number::lt(2, int(-20..-5)) => false
number::lt(2, int(-10..10)) => false | true
number::lt(2, int(0..inf)) => false | true
number::lt(2, int(1..inf)) => false | true
number::lt(2, int(-inf..0)) => false
number::lt(2, int(-inf..1)) => false
number::lt(2, int(-inf..inf)) => false | true
number::lt(2, nonInt(0..1)) => false
number::lt(2, nonInt(0..2)) => false
number::lt(2, nonInt(-1..2)) => false
number::lt(2, nonInt(0..inf)) => false | true
number::lt(2, nonInt(-1..inf)) => false | true
number::lt(2, nonInt(-inf..0)) => false
number::lt(2, nonInt(-inf..1)) => false
number::lt(2, nonInt(-inf..inf)) => false | true
number::lt(2, 1 | int(3..4)) => false | true
number::lt(2.78, number) => false | true
number::lt(2.78, -3.14) => false
number::lt(2.78, -2) => false
number::lt(2.78, -1) => false
number::lt(2.78, -0.5) => false
number::lt(2.78, 0) => false
number::lt(2.78, 0.5) => false
number::lt(2.78, 1) => false
number::lt(2.78, 2) => false
number::lt(2.78, 2.78) => false
number::lt(2.78, 3) => true
number::lt(2.78, 3.14) => true
number::lt(2.78, 10) => true
number::lt(2.78, 100) => true
number::lt(2.78, -inf) => false
number::lt(2.78, inf) => true
number::lt(2.78, nan) => false
number::lt(2.78, 0..1) => false
number::lt(2.78, 0!..1) => false
number::lt(2.78, 0..!1) => false
number::lt(2.78, 0..2) => false
number::lt(2.78, 0!..!2) => false
number::lt(2.78, 0.5..1.5) => false
number::lt(2.78, 0.5..2.5) => false
number::lt(2.78, 0.5!..2.5) => false
number::lt(2.78, 0.5..!2.5) => false
number::lt(2.78, -2.56..3.35) => false | true
number::lt(2.78, 0.5..0.75) => false
number::lt(2.78, 1..2) => false
number::lt(2.78, 0..inf) => false | true
number::lt(2.78, 0!..inf) => false | true
number::lt(2.78, 0..!inf) => false | true
number::lt(2.78, 0!..!inf) => false | true
number::lt(2.78, 1..inf) => false | true
number::lt(2.78, 1!..inf) => false | true
number::lt(2.78, 1..!inf) => false | true
number::lt(2.78, 2..inf) => false | true
number::lt(2.78, 2!..inf) => false | true
number::lt(2.78, 2.5..inf) => false | true
number::lt(2.78, -inf..0) => false
number::lt(2.78, -inf..inf) => false | true
number::lt(2.78, -inf!..inf) => false | true
number::lt(2.78, -inf..!inf) => false | true
number::lt(2.78, -inf!..!inf) => false | true
number::lt(2.78, int(0..1)) => false
number::lt(2.78, int(0..2)) => false
number::lt(2.78, int(1..2)) => false
number::lt(2.78, int(5..20)) => true
number::lt(2.78, int(-20..-5)) => false
number::lt(2.78, int(-10..10)) => false | true
number::lt(2.78, int(0..inf)) => false | true
number::lt(2.78, int(1..inf)) => false | true
number::lt(2.78, int(-inf..0)) => false
number::lt(2.78, int(-inf..1)) => false
number::lt(2.78, int(-inf..inf)) => false | true
number::lt(2.78, nonInt(0..1)) => false
number::lt(2.78, nonInt(0..2)) => false
number::lt(2.78, nonInt(-1..2)) => false
number::lt(2.78, nonInt(0..inf)) => false | true
number::lt(2.78, nonInt(-1..inf)) => false | true
number::lt(2.78, nonInt(-inf..0)) => false
number::lt(2.78, nonInt(-inf..1)) => false
number::lt(2.78, nonInt(-inf..inf)) => false | true
number::lt(2.78, 1 | int(3..4)) => false | true
number::lt(3, number) => false | true
number::lt(3, -3.14) => false
number::lt(3, -2) => false
number::lt(3, -1) => false
number::lt(3, -0.5) => false
number::lt(3, 0) => false
number::lt(3, 0.5) => false
number::lt(3, 1) => false
number::lt(3, 2) => false
number::lt(3, 2.78) => false
number::lt(3, 3) => false
number::lt(3, 3.14) => true
number::lt(3, 10) => true
number::lt(3, 100) => true
number::lt(3, -inf) => false
number::lt(3, inf) => true
number::lt(3, nan) => false
number::lt(3, 0..1) => false
number::lt(3, 0!..1) => false
number::lt(3, 0..!1) => false
number::lt(3, 0..2) => false
number::lt(3, 0!..!2) => false
number::lt(3, 0.5..1.5) => false
number::lt(3, 0.5..2.5) => false
number::lt(3, 0.5!..2.5) => false
number::lt(3, 0.5..!2.5) => false
number::lt(3, -2.56..3.35) => false | true
number::lt(3, 0.5..0.75) => false
number::lt(3, 1..2) => false
number::lt(3, 0..inf) => false | true
number::lt(3, 0!..inf) => false | true
number::lt(3, 0..!inf) => false | true
number::lt(3, 0!..!inf) => false | true
number::lt(3, 1..inf) => false | true
number::lt(3, 1!..inf) => false | true
number::lt(3, 1..!inf) => false | true
number::lt(3, 2..inf) => false | true
number::lt(3, 2!..inf) => false | true
number::lt(3, 2.5..inf) => false | true
number::lt(3, -inf..0) => false
number::lt(3, -inf..inf) => false | true
number::lt(3, -inf!..inf) => false | true
number::lt(3, -inf..!inf) => false | true
number::lt(3, -inf!..!inf) => false | true
number::lt(3, int(0..1)) => false
number::lt(3, int(0..2)) => false
number::lt(3, int(1..2)) => false
number::lt(3, int(5..20)) => true
number::lt(3, int(-20..-5)) => false
number::lt(3, int(-10..10)) => false | true
number::lt(3, int(0..inf)) => false | true
number::lt(3, int(1..inf)) => false | true
number::lt(3, int(-inf..0)) => false
number::lt(3, int(-inf..1)) => false
number::lt(3, int(-inf..inf)) => false | true
number::lt(3, nonInt(0..1)) => false
number::lt(3, nonInt(0..2)) => false
number::lt(3, nonInt(-1..2)) => false
number::lt(3, nonInt(0..inf)) => false | true
number::lt(3, nonInt(-1..inf)) => false | true
number::lt(3, nonInt(-inf..0)) => false
number::lt(3, nonInt(-inf..1)) => false
number::lt(3, nonInt(-inf..inf)) => false | true
number::lt(3, 1 | int(3..4)) => false | true
number::lt(3.14, number) => false | true
number::lt(3.14, -3.14) => false
number::lt(3.14, -2) => false
number::lt(3.14, -1) => false
number::lt(3.14, -0.5) => false
number::lt(3.14, 0) => false
number::lt(3.14, 0.5) => false
number::lt(3.14, 1) => false
number::lt(3.14, 2) => false
number::lt(3.14, 2.78) => false
number::lt(3.14, 3) => false
number::lt(3.14, 3.14) => false
number::lt(3.14, 10) => true
number::lt(3.14, 100) => true
number::lt(3.14, -inf) => false
number::lt(3.14, inf) => true
number::lt(3.14, nan) => false
number::lt(3.14, 0..1) => false
number::lt(3.14, 0!..1) => false
number::lt(3.14, 0..!1) => false
number::lt(3.14, 0..2) => false
number::lt(3.14, 0!..!2) => false
number::lt(3.14, 0.5..1.5) => false
number::lt(3.14, 0.5..2.5) => false
number::lt(3.14, 0.5!..2.5) => false
number::lt(3.14, 0.5..!2.5) => false
number::lt(3.14, -2.56..3.35) => false | true
number::lt(3.14, 0.5..0.75) => false
number::lt(3.14, 1..2) => false
number::lt(3.14, 0..inf) => false | true
number::lt(3.14, 0!..inf) => false | true
number::lt(3.14, 0..!inf) => false | true
number::lt(3.14, 0!..!inf) => false | true
number::lt(3.14, 1..inf) => false | true
number::lt(3.14, 1!..inf) => false | true
number::lt(3.14, 1..!inf) => false | true
number::lt(3.14, 2..inf) => false | true
number::lt(3.14, 2!..inf) => false | true
number::lt(3.14, 2.5..inf) => false | true
number::lt(3.14, -inf..0) => false
number::lt(3.14, -inf..inf) => false | true
number::lt(3.14, -inf!..inf) => false | true
number::lt(3.14, -inf..!inf) => false | true
number::lt(3.14, -inf!..!inf) => false | true
number::lt(3.14, int(0..1)) => false
number::lt(3.14, int(0..2)) => false
number::lt(3.14, int(1..2)) => false
number::lt(3.14, int(5..20)) => true
number::lt(3.14, int(-20..-5)) => false
number::lt(3.14, int(-10..10)) => false | true
number::lt(3.14, int(0..inf)) => false | true
number::lt(3.14, int(1..inf)) => false | true
number::lt(3.14, int(-inf..0)) => false
number::lt(3.14, int(-inf..1)) => false
number::lt(3.14, int(-inf..inf)) => false | true
number::lt(3.14, nonInt(0..1)) => false
number::lt(3.14, nonInt(0..2)) => false
number::lt(3.14, nonInt(-1..2)) => false
number::lt(3.14, nonInt(0..inf)) => false | true
number::lt(3.14, nonInt(-1..inf)) => false | true
number::lt(3.14, nonInt(-inf..0)) => false
number::lt(3.14, nonInt(-inf..1)) => false
number::lt(3.14, nonInt(-inf..inf)) => false | true
number::lt(3.14, 1 | int(3..4)) => false | true
number::lt(10, number) => false | true
number::lt(10, -3.14) => false
number::lt(10, -2) => false
number::lt(10, -1) => false
number::lt(10, -0.5) => false
number::lt(10, 0) => false
number::lt(10, 0.5) => false
number::lt(10, 1) => false
number::lt(10, 2) => false
number::lt(10, 2.78) => false
number::lt(10, 3) => false
number::lt(10, 3.14) => false
number::lt(10, 10) => false
number::lt(10, 100) => true
number::lt(10, -inf) => false
number::lt(10, inf) => true
number::lt(10, nan) => false
number::lt(10, 0..1) => false
number::lt(10, 0!..1) => false
number::lt(10, 0..!1) => false
number::lt(10, 0..2) => false
number::lt(10, 0!..!2) => false
number::lt(10, 0.5..1.5) => false
number::lt(10, 0.5..2.5) => false
number::lt(10, 0.5!..2.5) => false
number::lt(10, 0.5..!2.5) => false
number::lt(10, -2.56..3.35) => false
number::lt(10, 0.5..0.75) => false
number::lt(10, 1..2) => false
number::lt(10, 0..inf) => false | true
number::lt(10, 0!..inf) => false | true
number::lt(10, 0..!inf) => false | true
number::lt(10, 0!..!inf) => false | true
number::lt(10, 1..inf) => false | true
number::lt(10, 1!..inf) => false | true
number::lt(10, 1..!inf) => false | true
number::lt(10, 2..inf) => false | true
number::lt(10, 2!..inf) => false | true
number::lt(10, 2.5..inf) => false | true
number::lt(10, -inf..0) => false
number::lt(10, -inf..inf) => false | true
number::lt(10, -inf!..inf) => false | true
number::lt(10, -inf..!inf) => false | true
number::lt(10, -inf!..!inf) => false | true
number::lt(10, int(0..1)) => false
number::lt(10, int(0..2)) => false
number::lt(10, int(1..2)) => false
number::lt(10, int(5..20)) => false | true
number::lt(10, int(-20..-5)) => false
number::lt(10, int(-10..10)) => false
number::lt(10, int(0..inf)) => false | true
number::lt(10, int(1..inf)) => false | true
number::lt(10, int(-inf..0)) => false
number::lt(10, int(-inf..1)) => false
number::lt(10, int(-inf..inf)) => false | true
number::lt(10, nonInt(0..1)) => false
number::lt(10, nonInt(0..2)) => false
number::lt(10, nonInt(-1..2)) => false
number::lt(10, nonInt(0..inf)) => false | true
number::lt(10, nonInt(-1..inf)) => false | true
number::lt(10, nonInt(-inf..0)) => false
number::lt(10, nonInt(-inf..1)) => false
number::lt(10, nonInt(-inf..inf)) => false | true
number::lt(10, 1 | int(3..4)) => false
number::lt(100, number) => false | true
number::lt(100, -3.14) => false
number::lt(100, -2) => false
number::lt(100, -1) => false
number::lt(100, -0.5) => false
number::lt(100, 0) => false
number::lt(100, 0.5) => false
number::lt(100, 1) => false
number::lt(100, 2) => false
number::lt(100, 2.78) => false
number::lt(100, 3) => false
number::lt(100, 3.14) => false
number::lt(100, 10) => false
number::lt(100, 100) => false
number::lt(100, -inf) => false
number::lt(100, inf) => true
number::lt(100, nan) => false
number::lt(100, 0..1) => false
number::lt(100, 0!..1) => false
number::lt(100, 0..!1) => false
number::lt(100, 0..2) => false
number::lt(100, 0!..!2) => false
number::lt(100, 0.5..1.5) => false
number::lt(100, 0.5..2.5) => false
number::lt(100, 0.5!..2.5) => false
number::lt(100, 0.5..!2.5) => false
number::lt(100, -2.56..3.35) => false
number::lt(100, 0.5..0.75) => false
number::lt(100, 1..2) => false
number::lt(100, 0..inf) => false | true
number::lt(100, 0!..inf) => false | true
number::lt(100, 0..!inf) => false | true
number::lt(100, 0!..!inf) => false | true
number::lt(100, 1..inf) => false | true
number::lt(100, 1!..inf) => false | true
number::lt(100, 1..!inf) => false | true
number::lt(100, 2..inf) => false | true
number::lt(100, 2!..inf) => false | true
number::lt(100, 2.5..inf) => false | true
number::lt(100, -inf..0) => false
number::lt(100, -inf..inf) => false | true
number::lt(100, -inf!..inf) => false | true
number::lt(100, -inf..!inf) => false | true
number::lt(100, -inf!..!inf) => false | true
number::lt(100, int(0..1)) => false
number::lt(100, int(0..2)) => false
number::lt(100, int(1..2)) => false
number::lt(100, int(5..20)) => false
number::lt(100, int(-20..-5)) => false
number::lt(100, int(-10..10)) => false
number::lt(100, int(0..inf)) => false | true
number::lt(100, int(1..inf)) => false | true
number::lt(100, int(-inf..0)) => false
number::lt(100, int(-inf..1)) => false
number::lt(100, int(-inf..inf)) => false | true
number::lt(100, nonInt(0..1)) => false
number::lt(100, nonInt(0..2)) => false
number::lt(100, nonInt(-1..2)) => false
number::lt(100, nonInt(0..inf)) => false | true
number::lt(100, nonInt(-1..inf)) => false | true
number::lt(100, nonInt(-inf..0)) => false
number::lt(100, nonInt(-inf..1)) => false
number::lt(100, nonInt(-inf..inf)) => false | true
number::lt(100, 1 | int(3..4)) => false
number::lt(-inf, number) => false | true
number::lt(-inf, -3.14) => true
number::lt(-inf, -2) => true
number::lt(-inf, -1) => true
number::lt(-inf, -0.5) => true
number::lt(-inf, 0) => true
number::lt(-inf, 0.5) => true
number::lt(-inf, 1) => true
number::lt(-inf, 2) => true
number::lt(-inf, 2.78) => true
number::lt(-inf, 3) => true
number::lt(-inf, 3.14) => true
number::lt(-inf, 10) => true
number::lt(-inf, 100) => true
number::lt(-inf, -inf) => false
number::lt(-inf, inf) => true
number::lt(-inf, nan) => false
number::lt(-inf, 0..1) => true
number::lt(-inf, 0!..1) => true
number::lt(-inf, 0..!1) => true
number::lt(-inf, 0..2) => true
number::lt(-inf, 0!..!2) => true
number::lt(-inf, 0.5..1.5) => true
number::lt(-inf, 0.5..2.5) => true
number::lt(-inf, 0.5!..2.5) => true
number::lt(-inf, 0.5..!2.5) => true
number::lt(-inf, -2.56..3.35) => true
number::lt(-inf, 0.5..0.75) => true
number::lt(-inf, 1..2) => true
number::lt(-inf, 0..inf) => true
number::lt(-inf, 0!..inf) => true
number::lt(-inf, 0..!inf) => true
number::lt(-inf, 0!..!inf) => true
number::lt(-inf, 1..inf) => true
number::lt(-inf, 1!..inf) => true
number::lt(-inf, 1..!inf) => true
number::lt(-inf, 2..inf) => true
number::lt(-inf, 2!..inf) => true
number::lt(-inf, 2.5..inf) => true
number::lt(-inf, -inf..0) => false | true
number::lt(-inf, -inf..inf) => false | true
number::lt(-inf, -inf!..inf) => true
number::lt(-inf, -inf..!inf) => false | true
number::lt(-inf, -inf!..!inf) => true
number::lt(-inf, int(0..1)) => true
number::lt(-inf, int(0..2)) => true
number::lt(-inf, int(1..2)) => true
number::lt(-inf, int(5..20)) => true
number::lt(-inf, int(-20..-5)) => true
number::lt(-inf, int(-10..10)) => true
number::lt(-inf, int(0..inf)) => true
number::lt(-inf, int(1..inf)) => true
number::lt(-inf, int(-inf..0)) => true
number::lt(-inf, int(-inf..1)) => true
number::lt(-inf, int(-inf..inf)) => true
number::lt(-inf, nonInt(0..1)) => true
number::lt(-inf, nonInt(0..2)) => true
number::lt(-inf, nonInt(-1..2)) => true
number::lt(-inf, nonInt(0..inf)) => true
number::lt(-inf, nonInt(-1..inf)) => true
number::lt(-inf, nonInt(-inf..0)) => true
number::lt(-inf, nonInt(-inf..1)) => true
number::lt(-inf, nonInt(-inf..inf)) => true
number::lt(-inf, 1 | int(3..4)) => true
number::lt(inf, number) => false
number::lt(inf, -3.14) => false
number::lt(inf, -2) => false
number::lt(inf, -1) => false
number::lt(inf, -0.5) => false
number::lt(inf, 0) => false
number::lt(inf, 0.5) => false
number::lt(inf, 1) => false
number::lt(inf, 2) => false
number::lt(inf, 2.78) => false
number::lt(inf, 3) => false
number::lt(inf, 3.14) => false
number::lt(inf, 10) => false
number::lt(inf, 100) => false
number::lt(inf, -inf) => false
number::lt(inf, inf) => false
number::lt(inf, nan) => false
number::lt(inf, 0..1) => false
number::lt(inf, 0!..1) => false
number::lt(inf, 0..!1) => false
number::lt(inf, 0..2) => false
number::lt(inf, 0!..!2) => false
number::lt(inf, 0.5..1.5) => false
number::lt(inf, 0.5..2.5) => false
number::lt(inf, 0.5!..2.5) => false
number::lt(inf, 0.5..!2.5) => false
number::lt(inf, -2.56..3.35) => false
number::lt(inf, 0.5..0.75) => false
number::lt(inf, 1..2) => false
number::lt(inf, 0..inf) => false
number::lt(inf, 0!..inf) => false
number::lt(inf, 0..!inf) => false
number::lt(inf, 0!..!inf) => false
number::lt(inf, 1..inf) => false
number::lt(inf, 1!..inf) => false
number::lt(inf, 1..!inf) => false
number::lt(inf, 2..inf) => false
number::lt(inf, 2!..inf) => false
number::lt(inf, 2.5..inf) => false
number::lt(inf, -inf..0) => false
number::lt(inf, -inf..inf) => false
number::lt(inf, -inf!..inf) => false
number::lt(inf, -inf..!inf) => false
number::lt(inf, -inf!..!inf) => false
number::lt(inf, int(0..1)) => false
number::lt(inf, int(0..2)) => false
number::lt(inf, int(1..2)) => false
number::lt(inf, int(5..20)) => false
number::lt(inf, int(-20..-5)) => false
number::lt(inf, int(-10..10)) => false
number::lt(inf, int(0..inf)) => false
number::lt(inf, int(1..inf)) => false
number::lt(inf, int(-inf..0)) => false
number::lt(inf, int(-inf..1)) => false
number::lt(inf, int(-inf..inf)) => false
number::lt(inf, nonInt(0..1)) => false
number::lt(inf, nonInt(0..2)) => false
number::lt(inf, nonInt(-1..2)) => false
number::lt(inf, nonInt(0..inf)) => false
number::lt(inf, nonInt(-1..inf)) => false
number::lt(inf, nonInt(-inf..0)) => false
number::lt(inf, nonInt(-inf..1)) => false
number::lt(inf, nonInt(-inf..inf)) => false
number::lt(inf, 1 | int(3..4)) => false
number::lt(nan, number) => false
number::lt(nan, -3.14) => false
number::lt(nan, -2) => false
number::lt(nan, -1) => false
number::lt(nan, -0.5) => false
number::lt(nan, 0) => false
number::lt(nan, 0.5) => false
number::lt(nan, 1) => false
number::lt(nan, 2) => false
number::lt(nan, 2.78) => false
number::lt(nan, 3) => false
number::lt(nan, 3.14) => false
number::lt(nan, 10) => false
number::lt(nan, 100) => false
number::lt(nan, -inf) => false
number::lt(nan, inf) => false
number::lt(nan, nan) => false
number::lt(nan, 0..1) => false
number::lt(nan, 0!..1) => false
number::lt(nan, 0..!1) => false
number::lt(nan, 0..2) => false
number::lt(nan, 0!..!2) => false
number::lt(nan, 0.5..1.5) => false
number::lt(nan, 0.5..2.5) => false
number::lt(nan, 0.5!..2.5) => false
number::lt(nan, 0.5..!2.5) => false
number::lt(nan, -2.56..3.35) => false
number::lt(nan, 0.5..0.75) => false
number::lt(nan, 1..2) => false
number::lt(nan, 0..inf) => false
number::lt(nan, 0!..inf) => false
number::lt(nan, 0..!inf) => false
number::lt(nan, 0!..!inf) => false
number::lt(nan, 1..inf) => false
number::lt(nan, 1!..inf) => false
number::lt(nan, 1..!inf) => false
number::lt(nan, 2..inf) => false
number::lt(nan, 2!..inf) => false
number::lt(nan, 2.5..inf) => false
number::lt(nan, -inf..0) => false
number::lt(nan, -inf..inf) => false
number::lt(nan, -inf!..inf) => false
number::lt(nan, -inf..!inf) => false
number::lt(nan, -inf!..!inf) => false
number::lt(nan, int(0..1)) => false
number::lt(nan, int(0..2)) => false
number::lt(nan, int(1..2)) => false
number::lt(nan, int(5..20)) => false
number::lt(nan, int(-20..-5)) => false
number::lt(nan, int(-10..10)) => false
number::lt(nan, int(0..inf)) => false
number::lt(nan, int(1..inf)) => false
number::lt(nan, int(-inf..0)) => false
number::lt(nan, int(-inf..1)) => false
number::lt(nan, int(-inf..inf)) => false
number::lt(nan, nonInt(0..1)) => false
number::lt(nan, nonInt(0..2)) => false
number::lt(nan, nonInt(-1..2)) => false
number::lt(nan, nonInt(0..inf)) => false
number::lt(nan, nonInt(-1..inf)) => false
number::lt(nan, nonInt(-inf..0)) => false
number::lt(nan, nonInt(-inf..1)) => false
number::lt(nan, nonInt(-inf..inf)) => false
number::lt(nan, 1 | int(3..4)) => false
number::lt(0..1, number) => false | true
number::lt(0..1, -3.14) => false
number::lt(0..1, -2) => false
number::lt(0..1, -1) => false
number::lt(0..1, -0.5) => false
number::lt(0..1, 0) => false
number::lt(0..1, 0.5) => false | true
number::lt(0..1, 1) => false | true
number::lt(0..1, 2) => true
number::lt(0..1, 2.78) => true
number::lt(0..1, 3) => true
number::lt(0..1, 3.14) => true
number::lt(0..1, 10) => true
number::lt(0..1, 100) => true
number::lt(0..1, -inf) => false
number::lt(0..1, inf) => true
number::lt(0..1, nan) => false
number::lt(0..1, 0..1) => false | true
number::lt(0..1, 0!..1) => false | true
number::lt(0..1, 0..!1) => false | true
number::lt(0..1, 0..2) => false | true
number::lt(0..1, 0!..!2) => false | true
number::lt(0..1, 0.5..1.5) => false | true
number::lt(0..1, 0.5..2.5) => false | true
number::lt(0..1, 0.5!..2.5) => false | true
number::lt(0..1, 0.5..!2.5) => false | true
number::lt(0..1, -2.56..3.35) => false | true
number::lt(0..1, 0.5..0.75) => false | true
number::lt(0..1, 1..2) => false | true
number::lt(0..1, 0..inf) => false | true
number::lt(0..1, 0!..inf) => false | true
number::lt(0..1, 0..!inf) => false | true
number::lt(0..1, 0!..!inf) => false | true
number::lt(0..1, 1..inf) => false | true
number::lt(0..1, 1!..inf) => true
number::lt(0..1, 1..!inf) => false | true
number::lt(0..1, 2..inf) => true
number::lt(0..1, 2!..inf) => true
number::lt(0..1, 2.5..inf) => true
number::lt(0..1, -inf..0) => false
number::lt(0..1, -inf..inf) => false | true
number::lt(0..1, -inf!..inf) => false | true
number::lt(0..1, -inf..!inf) => false | true
number::lt(0..1, -inf!..!inf) => false | true
number::lt(0..1, int(0..1)) => false | true
number::lt(0..1, int(0..2)) => false | true
number::lt(0..1, int(1..2)) => false | true
number::lt(0..1, int(5..20)) => true
number::lt(0..1, int(-20..-5)) => false
number::lt(0..1, int(-10..10)) => false | true
number::lt(0..1, int(0..inf)) => false | true
number::lt(0..1, int(1..inf)) => false | true
number::lt(0..1, int(-inf..0)) => false
number::lt(0..1, int(-inf..1)) => false | true
number::lt(0..1, int(-inf..inf)) => false | true
number::lt(0..1, nonInt(0..1)) => false | true
number::lt(0..1, nonInt(0..2)) => false | true
number::lt(0..1, nonInt(-1..2)) => false | true
number::lt(0..1, nonInt(0..inf)) => false | true
number::lt(0..1, nonInt(-1..inf)) => false | true
number::lt(0..1, nonInt(-inf..0)) => false
number::lt(0..1, nonInt(-inf..1)) => false | true
number::lt(0..1, nonInt(-inf..inf)) => false | true
number::lt(0..1, 1 | int(3..4)) => false | true
number::lt(0!..1, number) => false | true
number::lt(0!..1, -3.14) => false
number::lt(0!..1, -2) => false
number::lt(0!..1, -1) => false
number::lt(0!..1, -0.5) => false
number::lt(0!..1, 0) => false
number::lt(0!..1, 0.5) => false | true
number::lt(0!..1, 1) => false | true
number::lt(0!..1, 2) => true
number::lt(0!..1, 2.78) => true
number::lt(0!..1, 3) => true
number::lt(0!..1, 3.14) => true
number::lt(0!..1, 10) => true
number::lt(0!..1, 100) => true
number::lt(0!..1, -inf) => false
number::lt(0!..1, inf) => true
number::lt(0!..1, nan) => false
number::lt(0!..1, 0..1) => false | true
number::lt(0!..1, 0!..1) => false | true
number::lt(0!..1, 0..!1) => false | true
number::lt(0!..1, 0..2) => false | true
number::lt(0!..1, 0!..!2) => false | true
number::lt(0!..1, 0.5..1.5) => false | true
number::lt(0!..1, 0.5..2.5) => false | true
number::lt(0!..1, 0.5!..2.5) => false | true
number::lt(0!..1, 0.5..!2.5) => false | true
number::lt(0!..1, -2.56..3.35) => false | true
number::lt(0!..1, 0.5..0.75) => false | true
number::lt(0!..1, 1..2) => false | true
number::lt(0!..1, 0..inf) => false | true
number::lt(0!..1, 0!..inf) => false | true
number::lt(0!..1, 0..!inf) => false | true
number::lt(0!..1, 0!..!inf) => false | true
number::lt(0!..1, 1..inf) => false | true
number::lt(0!..1, 1!..inf) => true
number::lt(0!..1, 1..!inf) => false | true
number::lt(0!..1, 2..inf) => true
number::lt(0!..1, 2!..inf) => true
number::lt(0!..1, 2.5..inf) => true
number::lt(0!..1, -inf..0) => false
number::lt(0!..1, -inf..inf) => false | true
number::lt(0!..1, -inf!..inf) => false | true
number::lt(0!..1, -inf..!inf) => false | true
number::lt(0!..1, -inf!..!inf) => false | true
number::lt(0!..1, int(0..1)) => false | true
number::lt(0!..1, int(0..2)) => false | true
number::lt(0!..1, int(1..2)) => false | true
number::lt(0!..1, int(5..20)) => true
number::lt(0!..1, int(-20..-5)) => false
number::lt(0!..1, int(-10..10)) => false | true
number::lt(0!..1, int(0..inf)) => false | true
number::lt(0!..1, int(1..inf)) => false | true
number::lt(0!..1, int(-inf..0)) => false
number::lt(0!..1, int(-inf..1)) => false | true
number::lt(0!..1, int(-inf..inf)) => false | true
number::lt(0!..1, nonInt(0..1)) => false | true
number::lt(0!..1, nonInt(0..2)) => false | true
number::lt(0!..1, nonInt(-1..2)) => false | true
number::lt(0!..1, nonInt(0..inf)) => false | true
number::lt(0!..1, nonInt(-1..inf)) => false | true
number::lt(0!..1, nonInt(-inf..0)) => false
number::lt(0!..1, nonInt(-inf..1)) => false | true
number::lt(0!..1, nonInt(-inf..inf)) => false | true
number::lt(0!..1, 1 | int(3..4)) => false | true
number::lt(0..!1, number) => false | true
number::lt(0..!1, -3.14) => false
number::lt(0..!1, -2) => false
number::lt(0..!1, -1) => false
number::lt(0..!1, -0.5) => false
number::lt(0..!1, 0) => false
number::lt(0..!1, 0.5) => false | true
number::lt(0..!1, 1) => true
number::lt(0..!1, 2) => true
number::lt(0..!1, 2.78) => true
number::lt(0..!1, 3) => true
number::lt(0..!1, 3.14) => true
number::lt(0..!1, 10) => true
number::lt(0..!1, 100) => true
number::lt(0..!1, -inf) => false
number::lt(0..!1, inf) => true
number::lt(0..!1, nan) => false
number::lt(0..!1, 0..1) => false | true
number::lt(0..!1, 0!..1) => false | true
number::lt(0..!1, 0..!1) => false | true
number::lt(0..!1, 0..2) => false | true
number::lt(0..!1, 0!..!2) => false | true
number::lt(0..!1, 0.5..1.5) => false | true
number::lt(0..!1, 0.5..2.5) => false | true
number::lt(0..!1, 0.5!..2.5) => false | true
number::lt(0..!1, 0.5..!2.5) => false | true
number::lt(0..!1, -2.56..3.35) => false | true
number::lt(0..!1, 0.5..0.75) => false | true
number::lt(0..!1, 1..2) => true
number::lt(0..!1, 0..inf) => false | true
number::lt(0..!1, 0!..inf) => false | true
number::lt(0..!1, 0..!inf) => false | true
number::lt(0..!1, 0!..!inf) => false | true
number::lt(0..!1, 1..inf) => true
number::lt(0..!1, 1!..inf) => true
number::lt(0..!1, 1..!inf) => true
number::lt(0..!1, 2..inf) => true
number::lt(0..!1, 2!..inf) => true
number::lt(0..!1, 2.5..inf) => true
number::lt(0..!1, -inf..0) => false
number::lt(0..!1, -inf..inf) => false | true
number::lt(0..!1, -inf!..inf) => false | true
number::lt(0..!1, -inf..!inf) => false | true
number::lt(0..!1, -inf!..!inf) => false | true
number::lt(0..!1, int(0..1)) => false | true
number::lt(0..!1, int(0..2)) => false | true
number::lt(0..!1, int(1..2)) => true
number::lt(0..!1, int(5..20)) => true
number::lt(0..!1, int(-20..-5)) => false
number::lt(0..!1, int(-10..10)) => false | true
number::lt(0..!1, int(0..inf)) => false | true
number::lt(0..!1, int(1..inf)) => true
number::lt(0..!1, int(-inf..0)) => false
number::lt(0..!1, int(-inf..1)) => false | true
number::lt(0..!1, int(-inf..inf)) => false | true
number::lt(0..!1, nonInt(0..1)) => false | true
number::lt(0..!1, nonInt(0..2)) => false | true
number::lt(0..!1, nonInt(-1..2)) => false | true
number::lt(0..!1, nonInt(0..inf)) => false | true
number::lt(0..!1, nonInt(-1..inf)) => false | true
number::lt(0..!1, nonInt(-inf..0)) => false
number::lt(0..!1, nonInt(-inf..1)) => false | true
number::lt(0..!1, nonInt(-inf..inf)) => false | true
number::lt(0..!1, 1 | int(3..4)) => true
number::lt(0..2, number) => false | true
number::lt(0..2, -3.14) => false
number::lt(0..2, -2) => false
number::lt(0..2, -1) => false
number::lt(0..2, -0.5) => false
number::lt(0..2, 0) => false
number::lt(0..2, 0.5) => false | true
number::lt(0..2, 1) => false | true
number::lt(0..2, 2) => false | true
number::lt(0..2, 2.78) => true
number::lt(0..2, 3) => true
number::lt(0..2, 3.14) => true
number::lt(0..2, 10) => true
number::lt(0..2, 100) => true
number::lt(0..2, -inf) => false
number::lt(0..2, inf) => true
number::lt(0..2, nan) => false
number::lt(0..2, 0..1) => false | true
number::lt(0..2, 0!..1) => false | true
number::lt(0..2, 0..!1) => false | true
number::lt(0..2, 0..2) => false | true
number::lt(0..2, 0!..!2) => false | true
number::lt(0..2, 0.5..1.5) => false | true
number::lt(0..2, 0.5..2.5) => false | true
number::lt(0..2, 0.5!..2.5) => false | true
number::lt(0..2, 0.5..!2.5) => false | true
number::lt(0..2, -2.56..3.35) => false | true
number::lt(0..2, 0.5..0.75) => false | true
number::lt(0..2, 1..2) => false | true
number::lt(0..2, 0..inf) => false | true
number::lt(0..2, 0!..inf) => false | true
number::lt(0..2, 0..!inf) => false | true
number::lt(0..2, 0!..!inf) => false | true
number::lt(0..2, 1..inf) => false | true
number::lt(0..2, 1!..inf) => false | true
number::lt(0..2, 1..!inf) => false | true
number::lt(0..2, 2..inf) => false | true
number::lt(0..2, 2!..inf) => true
number::lt(0..2, 2.5..inf) => true
number::lt(0..2, -inf..0) => false
number::lt(0..2, -inf..inf) => false | true
number::lt(0..2, -inf!..inf) => false | true
number::lt(0..2, -inf..!inf) => false | true
number::lt(0..2, -inf!..!inf) => false | true
number::lt(0..2, int(0..1)) => false | true
number::lt(0..2, int(0..2)) => false | true
number::lt(0..2, int(1..2)) => false | true
number::lt(0..2, int(5..20)) => true
number::lt(0..2, int(-20..-5)) => false
number::lt(0..2, int(-10..10)) => false | true
number::lt(0..2, int(0..inf)) => false | true
number::lt(0..2, int(1..inf)) => false | true
number::lt(0..2, int(-inf..0)) => false
number::lt(0..2, int(-inf..1)) => false | true
number::lt(0..2, int(-inf..inf)) => false | true
number::lt(0..2, nonInt(0..1)) => false | true
number::lt(0..2, nonInt(0..2)) => false | true
number::lt(0..2, nonInt(-1..2)) => false | true
number::lt(0..2, nonInt(0..inf)) => false | true
number::lt(0..2, nonInt(-1..inf)) => false | true
number::lt(0..2, nonInt(-inf..0)) => false
number::lt(0..2, nonInt(-inf..1)) => false | true
number::lt(0..2, nonInt(-inf..inf)) => false | true
number::lt(0..2, 1 | int(3..4)) => false | true
number::lt(0!..!2, number) => false | true
number::lt(0!..!2, -3.14) => false
number::lt(0!..!2, -2) => false
number::lt(0!..!2, -1) => false
number::lt(0!..!2, -0.5) => false
number::lt(0!..!2, 0) => false
number::lt(0!..!2, 0.5) => false | true
number::lt(0!..!2, 1) => false | true
number::lt(0!..!2, 2) => true
number::lt(0!..!2, 2.78) => true
number::lt(0!..!2, 3) => true
number::lt(0!..!2, 3.14) => true
number::lt(0!..!2, 10) => true
number::lt(0!..!2, 100) => true
number::lt(0!..!2, -inf) => false
number::lt(0!..!2, inf) => true
number::lt(0!..!2, nan) => false
number::lt(0!..!2, 0..1) => false | true
number::lt(0!..!2, 0!..1) => false | true
number::lt(0!..!2, 0..!1) => false | true
number::lt(0!..!2, 0..2) => false | true
number::lt(0!..!2, 0!..!2) => false | true
number::lt(0!..!2, 0.5..1.5) => false | true
number::lt(0!..!2, 0.5..2.5) => false | true
number::lt(0!..!2, 0.5!..2.5) => false | true
number::lt(0!..!2, 0.5..!2.5) => false | true
number::lt(0!..!2, -2.56..3.35) => false | true
number::lt(0!..!2, 0.5..0.75) => false | true
number::lt(0!..!2, 1..2) => false | true
number::lt(0!..!2, 0..inf) => false | true
number::lt(0!..!2, 0!..inf) => false | true
number::lt(0!..!2, 0..!inf) => false | true
number::lt(0!..!2, 0!..!inf) => false | true
number::lt(0!..!2, 1..inf) => false | true
number::lt(0!..!2, 1!..inf) => false | true
number::lt(0!..!2, 1..!inf) => false | true
number::lt(0!..!2, 2..inf) => true
number::lt(0!..!2, 2!..inf) => true
number::lt(0!..!2, 2.5..inf) => true
number::lt(0!..!2, -inf..0) => false
number::lt(0!..!2, -inf..inf) => false | true
number::lt(0!..!2, -inf!..inf) => false | true
number::lt(0!..!2, -inf..!inf) => false | true
number::lt(0!..!2, -inf!..!inf) => false | true
number::lt(0!..!2, int(0..1)) => false | true
number::lt(0!..!2, int(0..2)) => false | true
number::lt(0!..!2, int(1..2)) => false | true
number::lt(0!..!2, int(5..20)) => true
number::lt(0!..!2, int(-20..-5)) => false
number::lt(0!..!2, int(-10..10)) => false | true
number::lt(0!..!2, int(0..inf)) => false | true
number::lt(0!..!2, int(1..inf)) => false | true
number::lt(0!..!2, int(-inf..0)) => false
number::lt(0!..!2, int(-inf..1)) => false | true
number::lt(0!..!2, int(-inf..inf)) => false | true
number::lt(0!..!2, nonInt(0..1)) => false | true
number::lt(0!..!2, nonInt(0..2)) => false | true
number::lt(0!..!2, nonInt(-1..2)) => false | true
number::lt(0!..!2, nonInt(0..inf)) => false | true
number::lt(0!..!2, nonInt(-1..inf)) => false | true
number::lt(0!..!2, nonInt(-inf..0)) => false
number::lt(0!..!2, nonInt(-inf..1)) => false | true
number::lt(0!..!2, nonInt(-inf..inf)) => false | true
number::lt(0!..!2, 1 | int(3..4)) => false | true
number::lt(0.5..1.5, number) => false | true
number::lt(0.5..1.5, -3.14) => false
number::lt(0.5..1.5, -2) => false
number::lt(0.5..1.5, -1) => false
number::lt(0.5..1.5, -0.5) => false
number::lt(0.5..1.5, 0) => false
number::lt(0.5..1.5, 0.5) => false
number::lt(0.5..1.5, 1) => false | true
number::lt(0.5..1.5, 2) => true
number::lt(0.5..1.5, 2.78) => true
number::lt(0.5..1.5, 3) => true
number::lt(0.5..1.5, 3.14) => true
number::lt(0.5..1.5, 10) => true
number::lt(0.5..1.5, 100) => true
number::lt(0.5..1.5, -inf) => false
number::lt(0.5..1.5, inf) => true
number::lt(0.5..1.5, nan) => false
number::lt(0.5..1.5, 0..1) => false | true
number::lt(0.5..1.5, 0!..1) => false | true
number::lt(0.5..1.5, 0..!1) => false | true
number::lt(0.5..1.5, 0..2) => false | true
number::lt(0.5..1.5, 0!..!2) => false | true
number::lt(0.5..1.5, 0.5..1.5) => false | true
number::lt(0.5..1.5, 0.5..2.5) => false | true
number::lt(0.5..1.5, 0.5!..2.5) => false | true
number::lt(0.5..1.5, 0.5..!2.5) => false | true
number::lt(0.5..1.5, -2.56..3.35) => false | true
number::lt(0.5..1.5, 0.5..0.75) => false | true
number::lt(0.5..1.5, 1..2) => false | true
number::lt(0.5..1.5, 0..inf) => false | true
number::lt(0.5..1.5, 0!..inf) => false | true
number::lt(0.5..1.5, 0..!inf) => false | true
number::lt(0.5..1.5, 0!..!inf) => false | true
number::lt(0.5..1.5, 1..inf) => false | true
number::lt(0.5..1.5, 1!..inf) => false | true
number::lt(0.5..1.5, 1..!inf) => false | true
number::lt(0.5..1.5, 2..inf) => true
number::lt(0.5..1.5, 2!..inf) => true
number::lt(0.5..1.5, 2.5..inf) => true
number::lt(0.5..1.5, -inf..0) => false
number::lt(0.5..1.5, -inf..inf) => false | true
number::lt(0.5..1.5, -inf!..inf) => false | true
number::lt(0.5..1.5, -inf..!inf) => false | true
number::lt(0.5..1.5, -inf!..!inf) => false | true
number::lt(0.5..1.5, int(0..1)) => false | true
number::lt(0.5..1.5, int(0..2)) => false | true
number::lt(0.5..1.5, int(1..2)) => false | true
number::lt(0.5..1.5, int(5..20)) => true
number::lt(0.5..1.5, int(-20..-5)) => false
number::lt(0.5..1.5, int(-10..10)) => false | true
number::lt(0.5..1.5, int(0..inf)) => false | true
number::lt(0.5..1.5, int(1..inf)) => false | true
number::lt(0.5..1.5, int(-inf..0)) => false
number::lt(0.5..1.5, int(-inf..1)) => false | true
number::lt(0.5..1.5, int(-inf..inf)) => false | true
number::lt(0.5..1.5, nonInt(0..1)) => false | true
number::lt(0.5..1.5, nonInt(0..2)) => false | true
number::lt(0.5..1.5, nonInt(-1..2)) => false | true
number::lt(0.5..1.5, nonInt(0..inf)) => false | true
number::lt(0.5..1.5, nonInt(-1..inf)) => false | true
number::lt(0.5..1.5, nonInt(-inf..0)) => false
number::lt(0.5..1.5, nonInt(-inf..1)) => false | true
number::lt(0.5..1.5, nonInt(-inf..inf)) => false | true
number::lt(0.5..1.5, 1 | int(3..4)) => false | true
number::lt(0.5..2.5, number) => false | true
number::lt(0.5..2.5, -3.14) => false
number::lt(0.5..2.5, -2) => false
number::lt(0.5..2.5, -1) => false
number::lt(0.5..2.5, -0.5) => false
number::lt(0.5..2.5, 0) => false
number::lt(0.5..2.5, 0.5) => false
number::lt(0.5..2.5, 1) => false | true
number::lt(0.5..2.5, 2) => false | true
number::lt(0.5..2.5, 2.78) => true
number::lt(0.5..2.5, 3) => true
number::lt(0.5..2.5, 3.14) => true
number::lt(0.5..2.5, 10) => true
number::lt(0.5..2.5, 100) => true
number::lt(0.5..2.5, -inf) => false
number::lt(0.5..2.5, inf) => true
number::lt(0.5..2.5, nan) => false
number::lt(0.5..2.5, 0..1) => false | true
number::lt(0.5..2.5, 0!..1) => false | true
number::lt(0.5..2.5, 0..!1) => false | true
number::lt(0.5..2.5, 0..2) => false | true
number::lt(0.5..2.5, 0!..!2) => false | true
number::lt(0.5..2.5, 0.5..1.5) => false | true
number::lt(0.5..2.5, 0.5..2.5) => false | true
number::lt(0.5..2.5, 0.5!..2.5) => false | true
number::lt(0.5..2.5, 0.5..!2.5) => false | true
number::lt(0.5..2.5, -2.56..3.35) => false | true
number::lt(0.5..2.5, 0.5..0.75) => false | true
number::lt(0.5..2.5, 1..2) => false | true
number::lt(0.5..2.5, 0..inf) => false | true
number::lt(0.5..2.5, 0!..inf) => false | true
number::lt(0.5..2.5, 0..!inf) => false | true
number::lt(0.5..2.5, 0!..!inf) => false | true
number::lt(0.5..2.5, 1..inf) => false | true
number::lt(0.5..2.5, 1!..inf) => false | true
number::lt(0.5..2.5, 1..!inf) => false | true
number::lt(0.5..2.5, 2..inf) => false | true
number::lt(0.5..2.5, 2!..inf) => false | true
number::lt(0.5..2.5, 2.5..inf) => false | true
number::lt(0.5..2.5, -inf..0) => false
number::lt(0.5..2.5, -inf..inf) => false | true
number::lt(0.5..2.5, -inf!..inf) => false | true
number::lt(0.5..2.5, -inf..!inf) => false | true
number::lt(0.5..2.5, -inf!..!inf) => false | true
number::lt(0.5..2.5, int(0..1)) => false | true
number::lt(0.5..2.5, int(0..2)) => false | true
number::lt(0.5..2.5, int(1..2)) => false | true
number::lt(0.5..2.5, int(5..20)) => true
number::lt(0.5..2.5, int(-20..-5)) => false
number::lt(0.5..2.5, int(-10..10)) => false | true
number::lt(0.5..2.5, int(0..inf)) => false | true
number::lt(0.5..2.5, int(1..inf)) => false | true
number::lt(0.5..2.5, int(-inf..0)) => false
number::lt(0.5..2.5, int(-inf..1)) => false | true
number::lt(0.5..2.5, int(-inf..inf)) => false | true
number::lt(0.5..2.5, nonInt(0..1)) => false | true
number::lt(0.5..2.5, nonInt(0..2)) => false | true
number::lt(0.5..2.5, nonInt(-1..2)) => false | true
number::lt(0.5..2.5, nonInt(0..inf)) => false | true
number::lt(0.5..2.5, nonInt(-1..inf)) => false | true
number::lt(0.5..2.5, nonInt(-inf..0)) => false
number::lt(0.5..2.5, nonInt(-inf..1)) => false | true
number::lt(0.5..2.5, nonInt(-inf..inf)) => false | true
number::lt(0.5..2.5, 1 | int(3..4)) => false | true
number::lt(0.5!..2.5, number) => false | true
number::lt(0.5!..2.5, -3.14) => false
number::lt(0.5!..2.5, -2) => false
number::lt(0.5!..2.5, -1) => false
number::lt(0.5!..2.5, -0.5) => false
number::lt(0.5!..2.5, 0) => false
number::lt(0.5!..2.5, 0.5) => false
number::lt(0.5!..2.5, 1) => false | true
number::lt(0.5!..2.5, 2) => false | true
number::lt(0.5!..2.5, 2.78) => true
number::lt(0.5!..2.5, 3) => true
number::lt(0.5!..2.5, 3.14) => true
number::lt(0.5!..2.5, 10) => true
number::lt(0.5!..2.5, 100) => true
number::lt(0.5!..2.5, -inf) => false
number::lt(0.5!..2.5, inf) => true
number::lt(0.5!..2.5, nan) => false
number::lt(0.5!..2.5, 0..1) => false | true
number::lt(0.5!..2.5, 0!..1) => false | true
number::lt(0.5!..2.5, 0..!1) => false | true
number::lt(0.5!..2.5, 0..2) => false | true
number::lt(0.5!..2.5, 0!..!2) => false | true
number::lt(0.5!..2.5, 0.5..1.5) => false | true
number::lt(0.5!..2.5, 0.5..2.5) => false | true
number::lt(0.5!..2.5, 0.5!..2.5) => false | true
number::lt(0.5!..2.5, 0.5..!2.5) => false | true
number::lt(0.5!..2.5, -2.56..3.35) => false | true
number::lt(0.5!..2.5, 0.5..0.75) => false | true
number::lt(0.5!..2.5, 1..2) => false | true
number::lt(0.5!..2.5, 0..inf) => false | true
number::lt(0.5!..2.5, 0!..inf) => false | true
number::lt(0.5!..2.5, 0..!inf) => false | true
number::lt(0.5!..2.5, 0!..!inf) => false | true
number::lt(0.5!..2.5, 1..inf) => false | true
number::lt(0.5!..2.5, 1!..inf) => false | true
number::lt(0.5!..2.5, 1..!inf) => false | true
number::lt(0.5!..2.5, 2..inf) => false | true
number::lt(0.5!..2.5, 2!..inf) => false | true
number::lt(0.5!..2.5, 2.5..inf) => false | true
number::lt(0.5!..2.5, -inf..0) => false
number::lt(0.5!..2.5, -inf..inf) => false | true
number::lt(0.5!..2.5, -inf!..inf) => false | true
number::lt(0.5!..2.5, -inf..!inf) => false | true
number::lt(0.5!..2.5, -inf!..!inf) => false | true
number::lt(0.5!..2.5, int(0..1)) => false | true
number::lt(0.5!..2.5, int(0..2)) => false | true
number::lt(0.5!..2.5, int(1..2)) => false | true
number::lt(0.5!..2.5, int(5..20)) => true
number::lt(0.5!..2.5, int(-20..-5)) => false
number::lt(0.5!..2.5, int(-10..10)) => false | true
number::lt(0.5!..2.5, int(0..inf)) => false | true
number::lt(0.5!..2.5, int(1..inf)) => false | true
number::lt(0.5!..2.5, int(-inf..0)) => false
number::lt(0.5!..2.5, int(-inf..1)) => false | true
number::lt(0.5!..2.5, int(-inf..inf)) => false | true
number::lt(0.5!..2.5, nonInt(0..1)) => false | true
number::lt(0.5!..2.5, nonInt(0..2)) => false | true
number::lt(0.5!..2.5, nonInt(-1..2)) => false | true
number::lt(0.5!..2.5, nonInt(0..inf)) => false | true
number::lt(0.5!..2.5, nonInt(-1..inf)) => false | true
number::lt(0.5!..2.5, nonInt(-inf..0)) => false
number::lt(0.5!..2.5, nonInt(-inf..1)) => false | true
number::lt(0.5!..2.5, nonInt(-inf..inf)) => false | true
number::lt(0.5!..2.5, 1 | int(3..4)) => false | true
number::lt(0.5..!2.5, number) => false | true
number::lt(0.5..!2.5, -3.14) => false
number::lt(0.5..!2.5, -2) => false
number::lt(0.5..!2.5, -1) => false
number::lt(0.5..!2.5, -0.5) => false
number::lt(0.5..!2.5, 0) => false
number::lt(0.5..!2.5, 0.5) => false
number::lt(0.5..!2.5, 1) => false | true
number::lt(0.5..!2.5, 2) => false | true
number::lt(0.5..!2.5, 2.78) => true
number::lt(0.5..!2.5, 3) => true
number::lt(0.5..!2.5, 3.14) => true
number::lt(0.5..!2.5, 10) => true
number::lt(0.5..!2.5, 100) => true
number::lt(0.5..!2.5, -inf) => false
number::lt(0.5..!2.5, inf) => true
number::lt(0.5..!2.5, nan) => false
number::lt(0.5..!2.5, 0..1) => false | true
number::lt(0.5..!2.5, 0!..1) => false | true
number::lt(0.5..!2.5, 0..!1) => false | true
number::lt(0.5..!2.5, 0..2) => false | true
number::lt(0.5..!2.5, 0!..!2) => false | true
number::lt(0.5..!2.5, 0.5..1.5) => false | true
number::lt(0.5..!2.5, 0.5..2.5) => false | true
number::lt(0.5..!2.5, 0.5!..2.5) => false | true
number::lt(0.5..!2.5, 0.5..!2.5) => false | true
number::lt(0.5..!2.5, -2.56..3.35) => false | true
number::lt(0.5..!2.5, 0.5..0.75) => false | true
number::lt(0.5..!2.5, 1..2) => false | true
number::lt(0.5..!2.5, 0..inf) => false | true
number::lt(0.5..!2.5, 0!..inf) => false | true
number::lt(0.5..!2.5, 0..!inf) => false | true
number::lt(0.5..!2.5, 0!..!inf) => false | true
number::lt(0.5..!2.5, 1..inf) => false | true
number::lt(0.5..!2.5, 1!..inf) => false | true
number::lt(0.5..!2.5, 1..!inf) => false | true
number::lt(0.5..!2.5, 2..inf) => false | true
number::lt(0.5..!2.5, 2!..inf) => false | true
number::lt(0.5..!2.5, 2.5..inf) => true
number::lt(0.5..!2.5, -inf..0) => false
number::lt(0.5..!2.5, -inf..inf) => false | true
number::lt(0.5..!2.5, -inf!..inf) => false | true
number::lt(0.5..!2.5, -inf..!inf) => false | true
number::lt(0.5..!2.5, -inf!..!inf) => false | true
number::lt(0.5..!2.5, int(0..1)) => false | true
number::lt(0.5..!2.5, int(0..2)) => false | true
number::lt(0.5..!2.5, int(1..2)) => false | true
number::lt(0.5..!2.5, int(5..20)) => true
number::lt(0.5..!2.5, int(-20..-5)) => false
number::lt(0.5..!2.5, int(-10..10)) => false | true
number::lt(0.5..!2.5, int(0..inf)) => false | true
number::lt(0.5..!2.5, int(1..inf)) => false | true
number::lt(0.5..!2.5, int(-inf..0)) => false
number::lt(0.5..!2.5, int(-inf..1)) => false | true
number::lt(0.5..!2.5, int(-inf..inf)) => false | true
number::lt(0.5..!2.5, nonInt(0..1)) => false | true
number::lt(0.5..!2.5, nonInt(0..2)) => false | true
number::lt(0.5..!2.5, nonInt(-1..2)) => false | true
number::lt(0.5..!2.5, nonInt(0..inf)) => false | true
number::lt(0.5..!2.5, nonInt(-1..inf)) => false | true
number::lt(0.5..!2.5, nonInt(-inf..0)) => false
number::lt(0.5..!2.5, nonInt(-inf..1)) => false | true
number::lt(0.5..!2.5, nonInt(-inf..inf)) => false | true
number::lt(0.5..!2.5, 1 | int(3..4)) => false | true
number::lt(-2.56..3.35, number) => false | true
number::lt(-2.56..3.35, -3.14) => false
number::lt(-2.56..3.35, -2) => false | true
number::lt(-2.56..3.35, -1) => false | true
number::lt(-2.56..3.35, -0.5) => false | true
number::lt(-2.56..3.35, 0) => false | true
number::lt(-2.56..3.35, 0.5) => false | true
number::lt(-2.56..3.35, 1) => false | true
number::lt(-2.56..3.35, 2) => false | true
number::lt(-2.56..3.35, 2.78) => false | true
number::lt(-2.56..3.35, 3) => false | true
number::lt(-2.56..3.35, 3.14) => false | true
number::lt(-2.56..3.35, 10) => true
number::lt(-2.56..3.35, 100) => true
number::lt(-2.56..3.35, -inf) => false
number::lt(-2.56..3.35, inf) => true
number::lt(-2.56..3.35, nan) => false
number::lt(-2.56..3.35, 0..1) => false | true
number::lt(-2.56..3.35, 0!..1) => false | true
number::lt(-2.56..3.35, 0..!1) => false | true
number::lt(-2.56..3.35, 0..2) => false | true
number::lt(-2.56..3.35, 0!..!2) => false | true
number::lt(-2.56..3.35, 0.5..1.5) => false | true
number::lt(-2.56..3.35, 0.5..2.5) => false | true
number::lt(-2.56..3.35, 0.5!..2.5) => false | true
number::lt(-2.56..3.35, 0.5..!2.5) => false | true
number::lt(-2.56..3.35, -2.56..3.35) => false | true
number::lt(-2.56..3.35, 0.5..0.75) => false | true
number::lt(-2.56..3.35, 1..2) => false | true
number::lt(-2.56..3.35, 0..inf) => false | true
number::lt(-2.56..3.35, 0!..inf) => false | true
number::lt(-2.56..3.35, 0..!inf) => false | true
number::lt(-2.56..3.35, 0!..!inf) => false | true
number::lt(-2.56..3.35, 1..inf) => false | true
number::lt(-2.56..3.35, 1!..inf) => false | true
number::lt(-2.56..3.35, 1..!inf) => false | true
number::lt(-2.56..3.35, 2..inf) => false | true
number::lt(-2.56..3.35, 2!..inf) => false | true
number::lt(-2.56..3.35, 2.5..inf) => false | true
number::lt(-2.56..3.35, -inf..0) => false | true
number::lt(-2.56..3.35, -inf..inf) => false | true
number::lt(-2.56..3.35, -inf!..inf) => false | true
number::lt(-2.56..3.35, -inf..!inf) => false | true
number::lt(-2.56..3.35, -inf!..!inf) => false | true
number::lt(-2.56..3.35, int(0..1)) => false | true
number::lt(-2.56..3.35, int(0..2)) => false | true
number::lt(-2.56..3.35, int(1..2)) => false | true
number::lt(-2.56..3.35, int(5..20)) => true
number::lt(-2.56..3.35, int(-20..-5)) => false
number::lt(-2.56..3.35, int(-10..10)) => false | true
number::lt(-2.56..3.35, int(0..inf)) => false | true
number::lt(-2.56..3.35, int(1..inf)) => false | true
number::lt(-2.56..3.35, int(-inf..0)) => false | true
number::lt(-2.56..3.35, int(-inf..1)) => false | true
number::lt(-2.56..3.35, int(-inf..inf)) => false | true
number::lt(-2.56..3.35, nonInt(0..1)) => false | true
number::lt(-2.56..3.35, nonInt(0..2)) => false | true
number::lt(-2.56..3.35, nonInt(-1..2)) => false | true
number::lt(-2.56..3.35, nonInt(0..inf)) => false | true
number::lt(-2.56..3.35, nonInt(-1..inf)) => false | true
number::lt(-2.56..3.35, nonInt(-inf..0)) => false | true
number::lt(-2.56..3.35, nonInt(-inf..1)) => false | true
number::lt(-2.56..3.35, nonInt(-inf..inf)) => false | true
number::lt(-2.56..3.35, 1 | int(3..4)) => false | true
number::lt(0.5..0.75, number) => false | true
number::lt(0.5..0.75, -3.14) => false
number::lt(0.5..0.75, -2) => false
number::lt(0.5..0.75, -1) => false
number::lt(0.5..0.75, -0.5) => false
number::lt(0.5..0.75, 0) => false
number::lt(0.5..0.75, 0.5) => false
number::lt(0.5..0.75, 1) => true
number::lt(0.5..0.75, 2) => true
number::lt(0.5..0.75, 2.78) => true
number::lt(0.5..0.75, 3) => true
number::lt(0.5..0.75, 3.14) => true
number::lt(0.5..0.75, 10) => true
number::lt(0.5..0.75, 100) => true
number::lt(0.5..0.75, -inf) => false
number::lt(0.5..0.75, inf) => true
number::lt(0.5..0.75, nan) => false
number::lt(0.5..0.75, 0..1) => false | true
number::lt(0.5..0.75, 0!..1) => false | true
number::lt(0.5..0.75, 0..!1) => false | true
number::lt(0.5..0.75, 0..2) => false | true
number::lt(0.5..0.75, 0!..!2) => false | true
number::lt(0.5..0.75, 0.5..1.5) => false | true
number::lt(0.5..0.75, 0.5..2.5) => false | true
number::lt(0.5..0.75, 0.5!..2.5) => false | true
number::lt(0.5..0.75, 0.5..!2.5) => false | true
number::lt(0.5..0.75, -2.56..3.35) => false | true
number::lt(0.5..0.75, 0.5..0.75) => false | true
number::lt(0.5..0.75, 1..2) => true
number::lt(0.5..0.75, 0..inf) => false | true
number::lt(0.5..0.75, 0!..inf) => false | true
number::lt(0.5..0.75, 0..!inf) => false | true
number::lt(0.5..0.75, 0!..!inf) => false | true
number::lt(0.5..0.75, 1..inf) => true
number::lt(0.5..0.75, 1!..inf) => true
number::lt(0.5..0.75, 1..!inf) => true
number::lt(0.5..0.75, 2..inf) => true
number::lt(0.5..0.75, 2!..inf) => true
number::lt(0.5..0.75, 2.5..inf) => true
number::lt(0.5..0.75, -inf..0) => false
number::lt(0.5..0.75, -inf..inf) => false | true
number::lt(0.5..0.75, -inf!..inf) => false | true
number::lt(0.5..0.75, -inf..!inf) => false | true
number::lt(0.5..0.75, -inf!..!inf) => false | true
number::lt(0.5..0.75, int(0..1)) => false | true
number::lt(0.5..0.75, int(0..2)) => false | true
number::lt(0.5..0.75, int(1..2)) => true
number::lt(0.5..0.75, int(5..20)) => true
number::lt(0.5..0.75, int(-20..-5)) => false
number::lt(0.5..0.75, int(-10..10)) => false | true
number::lt(0.5..0.75, int(0..inf)) => false | true
number::lt(0.5..0.75, int(1..inf)) => true
number::lt(0.5..0.75, int(-inf..0)) => false
number::lt(0.5..0.75, int(-inf..1)) => false | true
number::lt(0.5..0.75, int(-inf..inf)) => false | true
number::lt(0.5..0.75, nonInt(0..1)) => false | true
number::lt(0.5..0.75, nonInt(0..2)) => false | true
number::lt(0.5..0.75, nonInt(-1..2)) => false | true
number::lt(0.5..0.75, nonInt(0..inf)) => false | true
number::lt(0.5..0.75, nonInt(-1..inf)) => false | true
number::lt(0.5..0.75, nonInt(-inf..0)) => false
number::lt(0.5..0.75, nonInt(-inf..1)) => false | true
number::lt(0.5..0.75, nonInt(-inf..inf)) => false | true
number::lt(0.5..0.75, 1 | int(3..4)) => true
number::lt(1..2, number) => false | true
number::lt(1..2, -3.14) => false
number::lt(1..2, -2) => false
number::lt(1..2, -1) => false
number::lt(1..2, -0.5) => false
number::lt(1..2, 0) => false
number::lt(1..2, 0.5) => false
number::lt(1..2, 1) => false
number::lt(1..2, 2) => false | true
number::lt(1..2, 2.78) => true
number::lt(1..2, 3) => true
number::lt(1..2, 3.14) => true
number::lt(1..2, 10) => true
number::lt(1..2, 100) => true
number::lt(1..2, -inf) => false
number::lt(1..2, inf) => true
number::lt(1..2, nan) => false
number::lt(1..2, 0..1) => false
number::lt(1..2, 0!..1) => false
number::lt(1..2, 0..!1) => false
number::lt(1..2, 0..2) => false | true
number::lt(1..2, 0!..!2) => false | true
number::lt(1..2, 0.5..1.5) => false | true
number::lt(1..2, 0.5..2.5) => false | true
number::lt(1..2, 0.5!..2.5) => false | true
number::lt(1..2, 0.5..!2.5) => false | true
number::lt(1..2, -2.56..3.35) => false | true
number::lt(1..2, 0.5..0.75) => false
number::lt(1..2, 1..2) => false | true
number::lt(1..2, 0..inf) => false | true
number::lt(1..2, 0!..inf) => false | true
number::lt(1..2, 0..!inf) => false | true
number::lt(1..2, 0!..!inf) => false | true
number::lt(1..2, 1..inf) => false | true
number::lt(1..2, 1!..inf) => false | true
number::lt(1..2, 1..!inf) => false | true
number::lt(1..2, 2..inf) => false | true
number::lt(1..2, 2!..inf) => true
number::lt(1..2, 2.5..inf) => true
number::lt(1..2, -inf..0) => false
number::lt(1..2, -inf..inf) => false | true
number::lt(1..2, -inf!..inf) => false | true
number::lt(1..2, -inf..!inf) => false | true
number::lt(1..2, -inf!..!inf) => false | true
number::lt(1..2, int(0..1)) => false
number::lt(1..2, int(0..2)) => false | true
number::lt(1..2, int(1..2)) => false | true
number::lt(1..2, int(5..20)) => true
number::lt(1..2, int(-20..-5)) => false
number::lt(1..2, int(-10..10)) => false | true
number::lt(1..2, int(0..inf)) => false | true
number::lt(1..2, int(1..inf)) => false | true
number::lt(1..2, int(-inf..0)) => false
number::lt(1..2, int(-inf..1)) => false
number::lt(1..2, int(-inf..inf)) => false | true
number::lt(1..2, nonInt(0..1)) => false
number::lt(1..2, nonInt(0..2)) => false | true
number::lt(1..2, nonInt(-1..2)) => false | true
number::lt(1..2, nonInt(0..inf)) => false | true
number::lt(1..2, nonInt(-1..inf)) => false | true
number::lt(1..2, nonInt(-inf..0)) => false
number::lt(1..2, nonInt(-inf..1)) => false
number::lt(1..2, nonInt(-inf..inf)) => false | true
number::lt(1..2, 1 | int(3..4)) => false | true
number::lt(0..inf, number) => false | true
number::lt(0..inf, -3.14) => false
number::lt(0..inf, -2) => false
number::lt(0..inf, -1) => false
number::lt(0..inf, -0.5) => false
number::lt(0..inf, 0) => false
number::lt(0..inf, 0.5) => false | true
number::lt(0..inf, 1) => false | true
number::lt(0..inf, 2) => false | true
number::lt(0..inf, 2.78) => false | true
number::lt(0..inf, 3) => false | true
number::lt(0..inf, 3.14) => false | true
number::lt(0..inf, 10) => false | true
number::lt(0..inf, 100) => false | true
number::lt(0..inf, -inf) => false
number::lt(0..inf, inf) => false | true
number::lt(0..inf, nan) => false
number::lt(0..inf, 0..1) => false | true
number::lt(0..inf, 0!..1) => false | true
number::lt(0..inf, 0..!1) => false | true
number::lt(0..inf, 0..2) => false | true
number::lt(0..inf, 0!..!2) => false | true
number::lt(0..inf, 0.5..1.5) => false | true
number::lt(0..inf, 0.5..2.5) => false | true
number::lt(0..inf, 0.5!..2.5) => false | true
number::lt(0..inf, 0.5..!2.5) => false | true
number::lt(0..inf, -2.56..3.35) => false | true
number::lt(0..inf, 0.5..0.75) => false | true
number::lt(0..inf, 1..2) => false | true
number::lt(0..inf, 0..inf) => false | true
number::lt(0..inf, 0!..inf) => false | true
number::lt(0..inf, 0..!inf) => false | true
number::lt(0..inf, 0!..!inf) => false | true
number::lt(0..inf, 1..inf) => false | true
number::lt(0..inf, 1!..inf) => false | true
number::lt(0..inf, 1..!inf) => false | true
number::lt(0..inf, 2..inf) => false | true
number::lt(0..inf, 2!..inf) => false | true
number::lt(0..inf, 2.5..inf) => false | true
number::lt(0..inf, -inf..0) => false
number::lt(0..inf, -inf..inf) => false | true
number::lt(0..inf, -inf!..inf) => false | true
number::lt(0..inf, -inf..!inf) => false | true
number::lt(0..inf, -inf!..!inf) => false | true
number::lt(0..inf, int(0..1)) => false | true
number::lt(0..inf, int(0..2)) => false | true
number::lt(0..inf, int(1..2)) => false | true
number::lt(0..inf, int(5..20)) => false | true
number::lt(0..inf, int(-20..-5)) => false
number::lt(0..inf, int(-10..10)) => false | true
number::lt(0..inf, int(0..inf)) => false | true
number::lt(0..inf, int(1..inf)) => false | true
number::lt(0..inf, int(-inf..0)) => false
number::lt(0..inf, int(-inf..1)) => false | true
number::lt(0..inf, int(-inf..inf)) => false | true
number::lt(0..inf, nonInt(0..1)) => false | true
number::lt(0..inf, nonInt(0..2)) => false | true
number::lt(0..inf, nonInt(-1..2)) => false | true
number::lt(0..inf, nonInt(0..inf)) => false | true
number::lt(0..inf, nonInt(-1..inf)) => false | true
number::lt(0..inf, nonInt(-inf..0)) => false
number::lt(0..inf, nonInt(-inf..1)) => false | true
number::lt(0..inf, nonInt(-inf..inf)) => false | true
number::lt(0..inf, 1 | int(3..4)) => false | true
number::lt(0!..inf, number) => false | true
number::lt(0!..inf, -3.14) => false
number::lt(0!..inf, -2) => false
number::lt(0!..inf, -1) => false
number::lt(0!..inf, -0.5) => false
number::lt(0!..inf, 0) => false
number::lt(0!..inf, 0.5) => false | true
number::lt(0!..inf, 1) => false | true
number::lt(0!..inf, 2) => false | true
number::lt(0!..inf, 2.78) => false | true
number::lt(0!..inf, 3) => false | true
number::lt(0!..inf, 3.14) => false | true
number::lt(0!..inf, 10) => false | true
number::lt(0!..inf, 100) => false | true
number::lt(0!..inf, -inf) => false
number::lt(0!..inf, inf) => false | true
number::lt(0!..inf, nan) => false
number::lt(0!..inf, 0..1) => false | true
number::lt(0!..inf, 0!..1) => false | true
number::lt(0!..inf, 0..!1) => false | true
number::lt(0!..inf, 0..2) => false | true
number::lt(0!..inf, 0!..!2) => false | true
number::lt(0!..inf, 0.5..1.5) => false | true
number::lt(0!..inf, 0.5..2.5) => false | true
number::lt(0!..inf, 0.5!..2.5) => false | true
number::lt(0!..inf, 0.5..!2.5) => false | true
number::lt(0!..inf, -2.56..3.35) => false | true
number::lt(0!..inf, 0.5..0.75) => false | true
number::lt(0!..inf, 1..2) => false | true
number::lt(0!..inf, 0..inf) => false | true
number::lt(0!..inf, 0!..inf) => false | true
number::lt(0!..inf, 0..!inf) => false | true
number::lt(0!..inf, 0!..!inf) => false | true
number::lt(0!..inf, 1..inf) => false | true
number::lt(0!..inf, 1!..inf) => false | true
number::lt(0!..inf, 1..!inf) => false | true
number::lt(0!..inf, 2..inf) => false | true
number::lt(0!..inf, 2!..inf) => false | true
number::lt(0!..inf, 2.5..inf) => false | true
number::lt(0!..inf, -inf..0) => false
number::lt(0!..inf, -inf..inf) => false | true
number::lt(0!..inf, -inf!..inf) => false | true
number::lt(0!..inf, -inf..!inf) => false | true
number::lt(0!..inf, -inf!..!inf) => false | true
number::lt(0!..inf, int(0..1)) => false | true
number::lt(0!..inf, int(0..2)) => false | true
number::lt(0!..inf, int(1..2)) => false | true
number::lt(0!..inf, int(5..20)) => false | true
number::lt(0!..inf, int(-20..-5)) => false
number::lt(0!..inf, int(-10..10)) => false | true
number::lt(0!..inf, int(0..inf)) => false | true
number::lt(0!..inf, int(1..inf)) => false | true
number::lt(0!..inf, int(-inf..0)) => false
number::lt(0!..inf, int(-inf..1)) => false | true
number::lt(0!..inf, int(-inf..inf)) => false | true
number::lt(0!..inf, nonInt(0..1)) => false | true
number::lt(0!..inf, nonInt(0..2)) => false | true
number::lt(0!..inf, nonInt(-1..2)) => false | true
number::lt(0!..inf, nonInt(0..inf)) => false | true
number::lt(0!..inf, nonInt(-1..inf)) => false | true
number::lt(0!..inf, nonInt(-inf..0)) => false
number::lt(0!..inf, nonInt(-inf..1)) => false | true
number::lt(0!..inf, nonInt(-inf..inf)) => false | true
number::lt(0!..inf, 1 | int(3..4)) => false | true
number::lt(0..!inf, number) => false | true
number::lt(0..!inf, -3.14) => false
number::lt(0..!inf, -2) => false
number::lt(0..!inf, -1) => false
number::lt(0..!inf, -0.5) => false
number::lt(0..!inf, 0) => false
number::lt(0..!inf, 0.5) => false | true
number::lt(0..!inf, 1) => false | true
number::lt(0..!inf, 2) => false | true
number::lt(0..!inf, 2.78) => false | true
number::lt(0..!inf, 3) => false | true
number::lt(0..!inf, 3.14) => false | true
number::lt(0..!inf, 10) => false | true
number::lt(0..!inf, 100) => false | true
number::lt(0..!inf, -inf) => false
number::lt(0..!inf, inf) => true
number::lt(0..!inf, nan) => false
number::lt(0..!inf, 0..1) => false | true
number::lt(0..!inf, 0!..1) => false | true
number::lt(0..!inf, 0..!1) => false | true
number::lt(0..!inf, 0..2) => false | true
number::lt(0..!inf, 0!..!2) => false | true
number::lt(0..!inf, 0.5..1.5) => false | true
number::lt(0..!inf, 0.5..2.5) => false | true
number::lt(0..!inf, 0.5!..2.5) => false | true
number::lt(0..!inf, 0.5..!2.5) => false | true
number::lt(0..!inf, -2.56..3.35) => false | true
number::lt(0..!inf, 0.5..0.75) => false | true
number::lt(0..!inf, 1..2) => false | true
number::lt(0..!inf, 0..inf) => false | true
number::lt(0..!inf, 0!..inf) => false | true
number::lt(0..!inf, 0..!inf) => false | true
number::lt(0..!inf, 0!..!inf) => false | true
number::lt(0..!inf, 1..inf) => false | true
number::lt(0..!inf, 1!..inf) => false | true
number::lt(0..!inf, 1..!inf) => false | true
number::lt(0..!inf, 2..inf) => false | true
number::lt(0..!inf, 2!..inf) => false | true
number::lt(0..!inf, 2.5..inf) => false | true
number::lt(0..!inf, -inf..0) => false
number::lt(0..!inf, -inf..inf) => false | true
number::lt(0..!inf, -inf!..inf) => false | true
number::lt(0..!inf, -inf..!inf) => false | true
number::lt(0..!inf, -inf!..!inf) => false | true
number::lt(0..!inf, int(0..1)) => false | true
number::lt(0..!inf, int(0..2)) => false | true
number::lt(0..!inf, int(1..2)) => false | true
number::lt(0..!inf, int(5..20)) => false | true
number::lt(0..!inf, int(-20..-5)) => false
number::lt(0..!inf, int(-10..10)) => false | true
number::lt(0..!inf, int(0..inf)) => false | true
number::lt(0..!inf, int(1..inf)) => false | true
number::lt(0..!inf, int(-inf..0)) => false
number::lt(0..!inf, int(-inf..1)) => false | true
number::lt(0..!inf, int(-inf..inf)) => false | true
number::lt(0..!inf, nonInt(0..1)) => false | true
number::lt(0..!inf, nonInt(0..2)) => false | true
number::lt(0..!inf, nonInt(-1..2)) => false | true
number::lt(0..!inf, nonInt(0..inf)) => false | true
number::lt(0..!inf, nonInt(-1..inf)) => false | true
number::lt(0..!inf, nonInt(-inf..0)) => false
number::lt(0..!inf, nonInt(-inf..1)) => false | true
number::lt(0..!inf, nonInt(-inf..inf)) => false | true
number::lt(0..!inf, 1 | int(3..4)) => false | true
number::lt(0!..!inf, number) => false | true
number::lt(0!..!inf, -3.14) => false
number::lt(0!..!inf, -2) => false
number::lt(0!..!inf, -1) => false
number::lt(0!..!inf, -0.5) => false
number::lt(0!..!inf, 0) => false
number::lt(0!..!inf, 0.5) => false | true
number::lt(0!..!inf, 1) => false | true
number::lt(0!..!inf, 2) => false | true
number::lt(0!..!inf, 2.78) => false | true
number::lt(0!..!inf, 3) => false | true
number::lt(0!..!inf, 3.14) => false | true
number::lt(0!..!inf, 10) => false | true
number::lt(0!..!inf, 100) => false | true
number::lt(0!..!inf, -inf) => false
number::lt(0!..!inf, inf) => true
number::lt(0!..!inf, nan) => false
number::lt(0!..!inf, 0..1) => false | true
number::lt(0!..!inf, 0!..1) => false | true
number::lt(0!..!inf, 0..!1) => false | true
number::lt(0!..!inf, 0..2) => false | true
number::lt(0!..!inf, 0!..!2) => false | true
number::lt(0!..!inf, 0.5..1.5) => false | true
number::lt(0!..!inf, 0.5..2.5) => false | true
number::lt(0!..!inf, 0.5!..2.5) => false | true
number::lt(0!..!inf, 0.5..!2.5) => false | true
number::lt(0!..!inf, -2.56..3.35) => false | true
number::lt(0!..!inf, 0.5..0.75) => false | true
number::lt(0!..!inf, 1..2) => false | true
number::lt(0!..!inf, 0..inf) => false | true
number::lt(0!..!inf, 0!..inf) => false | true
number::lt(0!..!inf, 0..!inf) => false | true
number::lt(0!..!inf, 0!..!inf) => false | true
number::lt(0!..!inf, 1..inf) => false | true
number::lt(0!..!inf, 1!..inf) => false | true
number::lt(0!..!inf, 1..!inf) => false | true
number::lt(0!..!inf, 2..inf) => false | true
number::lt(0!..!inf, 2!..inf) => false | true
number::lt(0!..!inf, 2.5..inf) => false | true
number::lt(0!..!inf, -inf..0) => false
number::lt(0!..!inf, -inf..inf) => false | true
number::lt(0!..!inf, -inf!..inf) => false | true
number::lt(0!..!inf, -inf..!inf) => false | true
number::lt(0!..!inf, -inf!..!inf) => false | true
number::lt(0!..!inf, int(0..1)) => false | true
number::lt(0!..!inf, int(0..2)) => false | true
number::lt(0!..!inf, int(1..2)) => false | true
number::lt(0!..!inf, int(5..20)) => false | true
number::lt(0!..!inf, int(-20..-5)) => false
number::lt(0!..!inf, int(-10..10)) => false | true
number::lt(0!..!inf, int(0..inf)) => false | true
number::lt(0!..!inf, int(1..inf)) => false | true
number::lt(0!..!inf, int(-inf..0)) => false
number::lt(0!..!inf, int(-inf..1)) => false | true
number::lt(0!..!inf, int(-inf..inf)) => false | true
number::lt(0!..!inf, nonInt(0..1)) => false | true
number::lt(0!..!inf, nonInt(0..2)) => false | true
number::lt(0!..!inf, nonInt(-1..2)) => false | true
number::lt(0!..!inf, nonInt(0..inf)) => false | true
number::lt(0!..!inf, nonInt(-1..inf)) => false | true
number::lt(0!..!inf, nonInt(-inf..0)) => false
number::lt(0!..!inf, nonInt(-inf..1)) => false | true
number::lt(0!..!inf, nonInt(-inf..inf)) => false | true
number::lt(0!..!inf, 1 | int(3..4)) => false | true
number::lt(1..inf, number) => false | true
number::lt(1..inf, -3.14) => false
number::lt(1..inf, -2) => false
number::lt(1..inf, -1) => false
number::lt(1..inf, -0.5) => false
number::lt(1..inf, 0) => false
number::lt(1..inf, 0.5) => false
number::lt(1..inf, 1) => false
number::lt(1..inf, 2) => false | true
number::lt(1..inf, 2.78) => false | true
number::lt(1..inf, 3) => false | true
number::lt(1..inf, 3.14) => false | true
number::lt(1..inf, 10) => false | true
number::lt(1..inf, 100) => false | true
number::lt(1..inf, -inf) => false
number::lt(1..inf, inf) => false | true
number::lt(1..inf, nan) => false
number::lt(1..inf, 0..1) => false
number::lt(1..inf, 0!..1) => false
number::lt(1..inf, 0..!1) => false
number::lt(1..inf, 0..2) => false | true
number::lt(1..inf, 0!..!2) => false | true
number::lt(1..inf, 0.5..1.5) => false | true
number::lt(1..inf, 0.5..2.5) => false | true
number::lt(1..inf, 0.5!..2.5) => false | true
number::lt(1..inf, 0.5..!2.5) => false | true
number::lt(1..inf, -2.56..3.35) => false | true
number::lt(1..inf, 0.5..0.75) => false
number::lt(1..inf, 1..2) => false | true
number::lt(1..inf, 0..inf) => false | true
number::lt(1..inf, 0!..inf) => false | true
number::lt(1..inf, 0..!inf) => false | true
number::lt(1..inf, 0!..!inf) => false | true
number::lt(1..inf, 1..inf) => false | true
number::lt(1..inf, 1!..inf) => false | true
number::lt(1..inf, 1..!inf) => false | true
number::lt(1..inf, 2..inf) => false | true
number::lt(1..inf, 2!..inf) => false | true
number::lt(1..inf, 2.5..inf) => false | true
number::lt(1..inf, -inf..0) => false
number::lt(1..inf, -inf..inf) => false | true
number::lt(1..inf, -inf!..inf) => false | true
number::lt(1..inf, -inf..!inf) => false | true
number::lt(1..inf, -inf!..!inf) => false | true
number::lt(1..inf, int(0..1)) => false
number::lt(1..inf, int(0..2)) => false | true
number::lt(1..inf, int(1..2)) => false | true
number::lt(1..inf, int(5..20)) => false | true
number::lt(1..inf, int(-20..-5)) => false
number::lt(1..inf, int(-10..10)) => false | true
number::lt(1..inf, int(0..inf)) => false | true
number::lt(1..inf, int(1..inf)) => false | true
number::lt(1..inf, int(-inf..0)) => false
number::lt(1..inf, int(-inf..1)) => false
number::lt(1..inf, int(-inf..inf)) => false | true
number::lt(1..inf, nonInt(0..1)) => false
number::lt(1..inf, nonInt(0..2)) => false | true
number::lt(1..inf, nonInt(-1..2)) => false | true
number::lt(1..inf, nonInt(0..inf)) => false | true
number::lt(1..inf, nonInt(-1..inf)) => false | true
number::lt(1..inf, nonInt(-inf..0)) => false
number::lt(1..inf, nonInt(-inf..1)) => false
number::lt(1..inf, nonInt(-inf..inf)) => false | true
number::lt(1..inf, 1 | int(3..4)) => false | true
number::lt(1!..inf, number) => false | true
number::lt(1!..inf, -3.14) => false
number::lt(1!..inf, -2) => false
number::lt(1!..inf, -1) => false
number::lt(1!..inf, -0.5) => false
number::lt(1!..inf, 0) => false
number::lt(1!..inf, 0.5) => false
number::lt(1!..inf, 1) => false
number::lt(1!..inf, 2) => false | true
number::lt(1!..inf, 2.78) => false | true
number::lt(1!..inf, 3) => false | true
number::lt(1!..inf, 3.14) => false | true
number::lt(1!..inf, 10) => false | true
number::lt(1!..inf, 100) => false | true
number::lt(1!..inf, -inf) => false
number::lt(1!..inf, inf) => false | true
number::lt(1!..inf, nan) => false
number::lt(1!..inf, 0..1) => false
number::lt(1!..inf, 0!..1) => false
number::lt(1!..inf, 0..!1) => false
number::lt(1!..inf, 0..2) => false | true
number::lt(1!..inf, 0!..!2) => false | true
number::lt(1!..inf, 0.5..1.5) => false | true
number::lt(1!..inf, 0.5..2.5) => false | true
number::lt(1!..inf, 0.5!..2.5) => false | true
number::lt(1!..inf, 0.5..!2.5) => false | true
number::lt(1!..inf, -2.56..3.35) => false | true
number::lt(1!..inf, 0.5..0.75) => false
number::lt(1!..inf, 1..2) => false | true
number::lt(1!..inf, 0..inf) => false | true
number::lt(1!..inf, 0!..inf) => false | true
number::lt(1!..inf, 0..!inf) => false | true
number::lt(1!..inf, 0!..!inf) => false | true
number::lt(1!..inf, 1..inf) => false | true
number::lt(1!..inf, 1!..inf) => false | true
number::lt(1!..inf, 1..!inf) => false | true
number::lt(1!..inf, 2..inf) => false | true
number::lt(1!..inf, 2!..inf) => false | true
number::lt(1!..inf, 2.5..inf) => false | true
number::lt(1!..inf, -inf..0) => false
number::lt(1!..inf, -inf..inf) => false | true
number::lt(1!..inf, -inf!..inf) => false | true
number::lt(1!..inf, -inf..!inf) => false | true
number::lt(1!..inf, -inf!..!inf) => false | true
number::lt(1!..inf, int(0..1)) => false
number::lt(1!..inf, int(0..2)) => false | true
number::lt(1!..inf, int(1..2)) => false | true
number::lt(1!..inf, int(5..20)) => false | true
number::lt(1!..inf, int(-20..-5)) => false
number::lt(1!..inf, int(-10..10)) => false | true
number::lt(1!..inf, int(0..inf)) => false | true
number::lt(1!..inf, int(1..inf)) => false | true
number::lt(1!..inf, int(-inf..0)) => false
number::lt(1!..inf, int(-inf..1)) => false
number::lt(1!..inf, int(-inf..inf)) => false | true
number::lt(1!..inf, nonInt(0..1)) => false
number::lt(1!..inf, nonInt(0..2)) => false | true
number::lt(1!..inf, nonInt(-1..2)) => false | true
number::lt(1!..inf, nonInt(0..inf)) => false | true
number::lt(1!..inf, nonInt(-1..inf)) => false | true
number::lt(1!..inf, nonInt(-inf..0)) => false
number::lt(1!..inf, nonInt(-inf..1)) => false
number::lt(1!..inf, nonInt(-inf..inf)) => false | true
number::lt(1!..inf, 1 | int(3..4)) => false | true
number::lt(1..!inf, number) => false | true
number::lt(1..!inf, -3.14) => false
number::lt(1..!inf, -2) => false
number::lt(1..!inf, -1) => false
number::lt(1..!inf, -0.5) => false
number::lt(1..!inf, 0) => false
number::lt(1..!inf, 0.5) => false
number::lt(1..!inf, 1) => false
number::lt(1..!inf, 2) => false | true
number::lt(1..!inf, 2.78) => false | true
number::lt(1..!inf, 3) => false | true
number::lt(1..!inf, 3.14) => false | true
number::lt(1..!inf, 10) => false | true
number::lt(1..!inf, 100) => false | true
number::lt(1..!inf, -inf) => false
number::lt(1..!inf, inf) => true
number::lt(1..!inf, nan) => false
number::lt(1..!inf, 0..1) => false
number::lt(1..!inf, 0!..1) => false
number::lt(1..!inf, 0..!1) => false
number::lt(1..!inf, 0..2) => false | true
number::lt(1..!inf, 0!..!2) => false | true
number::lt(1..!inf, 0.5..1.5) => false | true
number::lt(1..!inf, 0.5..2.5) => false | true
number::lt(1..!inf, 0.5!..2.5) => false | true
number::lt(1..!inf, 0.5..!2.5) => false | true
number::lt(1..!inf, -2.56..3.35) => false | true
number::lt(1..!inf, 0.5..0.75) => false
number::lt(1..!inf, 1..2) => false | true
number::lt(1..!inf, 0..inf) => false | true
number::lt(1..!inf, 0!..inf) => false | true
number::lt(1..!inf, 0..!inf) => false | true
number::lt(1..!inf, 0!..!inf) => false | true
number::lt(1..!inf, 1..inf) => false | true
number::lt(1..!inf, 1!..inf) => false | true
number::lt(1..!inf, 1..!inf) => false | true
number::lt(1..!inf, 2..inf) => false | true
number::lt(1..!inf, 2!..inf) => false | true
number::lt(1..!inf, 2.5..inf) => false | true
number::lt(1..!inf, -inf..0) => false
number::lt(1..!inf, -inf..inf) => false | true
number::lt(1..!inf, -inf!..inf) => false | true
number::lt(1..!inf, -inf..!inf) => false | true
number::lt(1..!inf, -inf!..!inf) => false | true
number::lt(1..!inf, int(0..1)) => false
number::lt(1..!inf, int(0..2)) => false | true
number::lt(1..!inf, int(1..2)) => false | true
number::lt(1..!inf, int(5..20)) => false | true
number::lt(1..!inf, int(-20..-5)) => false
number::lt(1..!inf, int(-10..10)) => false | true
number::lt(1..!inf, int(0..inf)) => false | true
number::lt(1..!inf, int(1..inf)) => false | true
number::lt(1..!inf, int(-inf..0)) => false
number::lt(1..!inf, int(-inf..1)) => false
number::lt(1..!inf, int(-inf..inf)) => false | true
number::lt(1..!inf, nonInt(0..1)) => false
number::lt(1..!inf, nonInt(0..2)) => false | true
number::lt(1..!inf, nonInt(-1..2)) => false | true
number::lt(1..!inf, nonInt(0..inf)) => false | true
number::lt(1..!inf, nonInt(-1..inf)) => false | true
number::lt(1..!inf, nonInt(-inf..0)) => false
number::lt(1..!inf, nonInt(-inf..1)) => false
number::lt(1..!inf, nonInt(-inf..inf)) => false | true
number::lt(1..!inf, 1 | int(3..4)) => false | true
number::lt(2..inf, number) => false | true
number::lt(2..inf, -3.14) => false
number::lt(2..inf, -2) => false
number::lt(2..inf, -1) => false
number::lt(2..inf, -0.5) => false
number::lt(2..inf, 0) => false
number::lt(2..inf, 0.5) => false
number::lt(2..inf, 1) => false
number::lt(2..inf, 2) => false
number::lt(2..inf, 2.78) => false | true
number::lt(2..inf, 3) => false | true
number::lt(2..inf, 3.14) => false | true
number::lt(2..inf, 10) => false | true
number::lt(2..inf, 100) => false | true
number::lt(2..inf, -inf) => false
number::lt(2..inf, inf) => false | true
number::lt(2..inf, nan) => false
number::lt(2..inf, 0..1) => false
number::lt(2..inf, 0!..1) => false
number::lt(2..inf, 0..!1) => false
number::lt(2..inf, 0..2) => false
number::lt(2..inf, 0!..!2) => false
number::lt(2..inf, 0.5..1.5) => false
number::lt(2..inf, 0.5..2.5) => false | true
number::lt(2..inf, 0.5!..2.5) => false | true
number::lt(2..inf, 0.5..!2.5) => false | true
number::lt(2..inf, -2.56..3.35) => false | true
number::lt(2..inf, 0.5..0.75) => false
number::lt(2..inf, 1..2) => false
number::lt(2..inf, 0..inf) => false | true
number::lt(2..inf, 0!..inf) => false | true
number::lt(2..inf, 0..!inf) => false | true
number::lt(2..inf, 0!..!inf) => false | true
number::lt(2..inf, 1..inf) => false | true
number::lt(2..inf, 1!..inf) => false | true
number::lt(2..inf, 1..!inf) => false | true
number::lt(2..inf, 2..inf) => false | true
number::lt(2..inf, 2!..inf) => false | true
number::lt(2..inf, 2.5..inf) => false | true
number::lt(2..inf, -inf..0) => false
number::lt(2..inf, -inf..inf) => false | true
number::lt(2..inf, -inf!..inf) => false | true
number::lt(2..inf, -inf..!inf) => false | true
number::lt(2..inf, -inf!..!inf) => false | true
number::lt(2..inf, int(0..1)) => false
number::lt(2..inf, int(0..2)) => false
number::lt(2..inf, int(1..2)) => false
number::lt(2..inf, int(5..20)) => false | true
number::lt(2..inf, int(-20..-5)) => false
number::lt(2..inf, int(-10..10)) => false | true
number::lt(2..inf, int(0..inf)) => false | true
number::lt(2..inf, int(1..inf)) => false | true
number::lt(2..inf, int(-inf..0)) => false
number::lt(2..inf, int(-inf..1)) => false
number::lt(2..inf, int(-inf..inf)) => false | true
number::lt(2..inf, nonInt(0..1)) => false
number::lt(2..inf, nonInt(0..2)) => false
number::lt(2..inf, nonInt(-1..2)) => false
number::lt(2..inf, nonInt(0..inf)) => false | true
number::lt(2..inf, nonInt(-1..inf)) => false | true
number::lt(2..inf, nonInt(-inf..0)) => false
number::lt(2..inf, nonInt(-inf..1)) => false
number::lt(2..inf, nonInt(-inf..inf)) => false | true
number::lt(2..inf, 1 | int(3..4)) => false | true
number::lt(2!..inf, number) => false | true
number::lt(2!..inf, -3.14) => false
number::lt(2!..inf, -2) => false
number::lt(2!..inf, -1) => false
number::lt(2!..inf, -0.5) => false
number::lt(2!..inf, 0) => false
number::lt(2!..inf, 0.5) => false
number::lt(2!..inf, 1) => false
number::lt(2!..inf, 2) => false
number::lt(2!..inf, 2.78) => false | true
number::lt(2!..inf, 3) => false | true
number::lt(2!..inf, 3.14) => false | true
number::lt(2!..inf, 10) => false | true
number::lt(2!..inf, 100) => false | true
number::lt(2!..inf, -inf) => false
number::lt(2!..inf, inf) => false | true
number::lt(2!..inf, nan) => false
number::lt(2!..inf, 0..1) => false
number::lt(2!..inf, 0!..1) => false
number::lt(2!..inf, 0..!1) => false
number::lt(2!..inf, 0..2) => false
number::lt(2!..inf, 0!..!2) => false
number::lt(2!..inf, 0.5..1.5) => false
number::lt(2!..inf, 0.5..2.5) => false | true
number::lt(2!..inf, 0.5!..2.5) => false | true
number::lt(2!..inf, 0.5..!2.5) => false | true
number::lt(2!..inf, -2.56..3.35) => false | true
number::lt(2!..inf, 0.5..0.75) => false
number::lt(2!..inf, 1..2) => false
number::lt(2!..inf, 0..inf) => false | true
number::lt(2!..inf, 0!..inf) => false | true
number::lt(2!..inf, 0..!inf) => false | true
number::lt(2!..inf, 0!..!inf) => false | true
number::lt(2!..inf, 1..inf) => false | true
number::lt(2!..inf, 1!..inf) => false | true
number::lt(2!..inf, 1..!inf) => false | true
number::lt(2!..inf, 2..inf) => false | true
number::lt(2!..inf, 2!..inf) => false | true
number::lt(2!..inf, 2.5..inf) => false | true
number::lt(2!..inf, -inf..0) => false
number::lt(2!..inf, -inf..inf) => false | true
number::lt(2!..inf, -inf!..inf) => false | true
number::lt(2!..inf, -inf..!inf) => false | true
number::lt(2!..inf, -inf!..!inf) => false | true
number::lt(2!..inf, int(0..1)) => false
number::lt(2!..inf, int(0..2)) => false
number::lt(2!..inf, int(1..2)) => false
number::lt(2!..inf, int(5..20)) => false | true
number::lt(2!..inf, int(-20..-5)) => false
number::lt(2!..inf, int(-10..10)) => false | true
number::lt(2!..inf, int(0..inf)) => false | true
number::lt(2!..inf, int(1..inf)) => false | true
number::lt(2!..inf, int(-inf..0)) => false
number::lt(2!..inf, int(-inf..1)) => false
number::lt(2!..inf, int(-inf..inf)) => false | true
number::lt(2!..inf, nonInt(0..1)) => false
number::lt(2!..inf, nonInt(0..2)) => false
number::lt(2!..inf, nonInt(-1..2)) => false
number::lt(2!..inf, nonInt(0..inf)) => false | true
number::lt(2!..inf, nonInt(-1..inf)) => false | true
number::lt(2!..inf, nonInt(-inf..0)) => false
number::lt(2!..inf, nonInt(-inf..1)) => false
number::lt(2!..inf, nonInt(-inf..inf)) => false | true
number::lt(2!..inf, 1 | int(3..4)) => false | true
number::lt(2.5..inf, number) => false | true
number::lt(2.5..inf, -3.14) => false
number::lt(2.5..inf, -2) => false
number::lt(2.5..inf, -1) => false
number::lt(2.5..inf, -0.5) => false
number::lt(2.5..inf, 0) => false
number::lt(2.5..inf, 0.5) => false
number::lt(2.5..inf, 1) => false
number::lt(2.5..inf, 2) => false
number::lt(2.5..inf, 2.78) => false | true
number::lt(2.5..inf, 3) => false | true
number::lt(2.5..inf, 3.14) => false | true
number::lt(2.5..inf, 10) => false | true
number::lt(2.5..inf, 100) => false | true
number::lt(2.5..inf, -inf) => false
number::lt(2.5..inf, inf) => false | true
number::lt(2.5..inf, nan) => false
number::lt(2.5..inf, 0..1) => false
number::lt(2.5..inf, 0!..1) => false
number::lt(2.5..inf, 0..!1) => false
number::lt(2.5..inf, 0..2) => false
number::lt(2.5..inf, 0!..!2) => false
number::lt(2.5..inf, 0.5..1.5) => false
number::lt(2.5..inf, 0.5..2.5) => false
number::lt(2.5..inf, 0.5!..2.5) => false
number::lt(2.5..inf, 0.5..!2.5) => false
number::lt(2.5..inf, -2.56..3.35) => false | true
number::lt(2.5..inf, 0.5..0.75) => false
number::lt(2.5..inf, 1..2) => false
number::lt(2.5..inf, 0..inf) => false | true
number::lt(2.5..inf, 0!..inf) => false | true
number::lt(2.5..inf, 0..!inf) => false | true
number::lt(2.5..inf, 0!..!inf) => false | true
number::lt(2.5..inf, 1..inf) => false | true
number::lt(2.5..inf, 1!..inf) => false | true
number::lt(2.5..inf, 1..!inf) => false | true
number::lt(2.5..inf, 2..inf) => false | true
number::lt(2.5..inf, 2!..inf) => false | true
number::lt(2.5..inf, 2.5..inf) => false | true
number::lt(2.5..inf, -inf..0) => false
number::lt(2.5..inf, -inf..inf) => false | true
number::lt(2.5..inf, -inf!..inf) => false | true
number::lt(2.5..inf, -inf..!inf) => false | true
number::lt(2.5..inf, -inf!..!inf) => false | true
number::lt(2.5..inf, int(0..1)) => false
number::lt(2.5..inf, int(0..2)) => false
number::lt(2.5..inf, int(1..2)) => false
number::lt(2.5..inf, int(5..20)) => false | true
number::lt(2.5..inf, int(-20..-5)) => false
number::lt(2.5..inf, int(-10..10)) => false | true
number::lt(2.5..inf, int(0..inf)) => false | true
number::lt(2.5..inf, int(1..inf)) => false | true
number::lt(2.5..inf, int(-inf..0)) => false
number::lt(2.5..inf, int(-inf..1)) => false
number::lt(2.5..inf, int(-inf..inf)) => false | true
number::lt(2.5..inf, nonInt(0..1)) => false
number::lt(2.5..inf, nonInt(0..2)) => false
number::lt(2.5..inf, nonInt(-1..2)) => false
number::lt(2.5..inf, nonInt(0..inf)) => false | true
number::lt(2.5..inf, nonInt(-1..inf)) => false | true
number::lt(2.5..inf, nonInt(-inf..0)) => false
number::lt(2.5..inf, nonInt(-inf..1)) => false
number::lt(2.5..inf, nonInt(-inf..inf)) => false | true
number::lt(2.5..inf, 1 | int(3..4)) => false | true
number::lt(-inf..0, number) => false | true
number::lt(-inf..0, -3.14) => false | true
number::lt(-inf..0, -2) => false | true
number::lt(-inf..0, -1) => false | true
number::lt(-inf..0, -0.5) => false | true
number::lt(-inf..0, 0) => false | true
number::lt(-inf..0, 0.5) => true
number::lt(-inf..0, 1) => true
number::lt(-inf..0, 2) => true
number::lt(-inf..0, 2.78) => true
number::lt(-inf..0, 3) => true
number::lt(-inf..0, 3.14) => true
number::lt(-inf..0, 10) => true
number::lt(-inf..0, 100) => true
number::lt(-inf..0, -inf) => false
number::lt(-inf..0, inf) => true
number::lt(-inf..0, nan) => false
number::lt(-inf..0, 0..1) => false | true
number::lt(-inf..0, 0!..1) => true
number::lt(-inf..0, 0..!1) => false | true
number::lt(-inf..0, 0..2) => false | true
number::lt(-inf..0, 0!..!2) => true
number::lt(-inf..0, 0.5..1.5) => true
number::lt(-inf..0, 0.5..2.5) => true
number::lt(-inf..0, 0.5!..2.5) => true
number::lt(-inf..0, 0.5..!2.5) => true
number::lt(-inf..0, -2.56..3.35) => false | true
number::lt(-inf..0, 0.5..0.75) => true
number::lt(-inf..0, 1..2) => true
number::lt(-inf..0, 0..inf) => false | true
number::lt(-inf..0, 0!..inf) => true
number::lt(-inf..0, 0..!inf) => false | true
number::lt(-inf..0, 0!..!inf) => true
number::lt(-inf..0, 1..inf) => true
number::lt(-inf..0, 1!..inf) => true
number::lt(-inf..0, 1..!inf) => true
number::lt(-inf..0, 2..inf) => true
number::lt(-inf..0, 2!..inf) => true
number::lt(-inf..0, 2.5..inf) => true
number::lt(-inf..0, -inf..0) => false | true
number::lt(-inf..0, -inf..inf) => false | true
number::lt(-inf..0, -inf!..inf) => false | true
number::lt(-inf..0, -inf..!inf) => false | true
number::lt(-inf..0, -inf!..!inf) => false | true
number::lt(-inf..0, int(0..1)) => false | true
number::lt(-inf..0, int(0..2)) => false | true
number::lt(-inf..0, int(1..2)) => true
number::lt(-inf..0, int(5..20)) => true
number::lt(-inf..0, int(-20..-5)) => false | true
number::lt(-inf..0, int(-10..10)) => false | true
number::lt(-inf..0, int(0..inf)) => false | true
number::lt(-inf..0, int(1..inf)) => true
number::lt(-inf..0, int(-inf..0)) => false | true
number::lt(-inf..0, int(-inf..1)) => false | true
number::lt(-inf..0, int(-inf..inf)) => false | true
number::lt(-inf..0, nonInt(0..1)) => true
number::lt(-inf..0, nonInt(0..2)) => true
number::lt(-inf..0, nonInt(-1..2)) => false | true
number::lt(-inf..0, nonInt(0..inf)) => true
number::lt(-inf..0, nonInt(-1..inf)) => false | true
number::lt(-inf..0, nonInt(-inf..0)) => false | true
number::lt(-inf..0, nonInt(-inf..1)) => false | true
number::lt(-inf..0, nonInt(-inf..inf)) => false | true
number::lt(-inf..0, 1 | int(3..4)) => true
number::lt(-inf..inf, number) => false | true
number::lt(-inf..inf, -3.14) => false | true
number::lt(-inf..inf, -2) => false | true
number::lt(-inf..inf, -1) => false | true
number::lt(-inf..inf, -0.5) => false | true
number::lt(-inf..inf, 0) => false | true
number::lt(-inf..inf, 0.5) => false | true
number::lt(-inf..inf, 1) => false | true
number::lt(-inf..inf, 2) => false | true
number::lt(-inf..inf, 2.78) => false | true
number::lt(-inf..inf, 3) => false | true
number::lt(-inf..inf, 3.14) => false | true
number::lt(-inf..inf, 10) => false | true
number::lt(-inf..inf, 100) => false | true
number::lt(-inf..inf, -inf) => false
number::lt(-inf..inf, inf) => false | true
number::lt(-inf..inf, nan) => false
number::lt(-inf..inf, 0..1) => false | true
number::lt(-inf..inf, 0!..1) => false | true
number::lt(-inf..inf, 0..!1) => false | true
number::lt(-inf..inf, 0..2) => false | true
number::lt(-inf..inf, 0!..!2) => false | true
number::lt(-inf..inf, 0.5..1.5) => false | true
number::lt(-inf..inf, 0.5..2.5) => false | true
number::lt(-inf..inf, 0.5!..2.5) => false | true
number::lt(-inf..inf, 0.5..!2.5) => false | true
number::lt(-inf..inf, -2.56..3.35) => false | true
number::lt(-inf..inf, 0.5..0.75) => false | true
number::lt(-inf..inf, 1..2) => false | true
number::lt(-inf..inf, 0..inf) => false | true
number::lt(-inf..inf, 0!..inf) => false | true
number::lt(-inf..inf, 0..!inf) => false | true
number::lt(-inf..inf, 0!..!inf) => false | true
number::lt(-inf..inf, 1..inf) => false | true
number::lt(-inf..inf, 1!..inf) => false | true
number::lt(-inf..inf, 1..!inf) => false | true
number::lt(-inf..inf, 2..inf) => false | true
number::lt(-inf..inf, 2!..inf) => false | true
number::lt(-inf..inf, 2.5..inf) => false | true
number::lt(-inf..inf, -inf..0) => false | true
number::lt(-inf..inf, -inf..inf) => false | true
number::lt(-inf..inf, -inf!..inf) => false | true
number::lt(-inf..inf, -inf..!inf) => false | true
number::lt(-inf..inf, -inf!..!inf) => false | true
number::lt(-inf..inf, int(0..1)) => false | true
number::lt(-inf..inf, int(0..2)) => false | true
number::lt(-inf..inf, int(1..2)) => false | true
number::lt(-inf..inf, int(5..20)) => false | true
number::lt(-inf..inf, int(-20..-5)) => false | true
number::lt(-inf..inf, int(-10..10)) => false | true
number::lt(-inf..inf, int(0..inf)) => false | true
number::lt(-inf..inf, int(1..inf)) => false | true
number::lt(-inf..inf, int(-inf..0)) => false | true
number::lt(-inf..inf, int(-inf..1)) => false | true
number::lt(-inf..inf, int(-inf..inf)) => false | true
number::lt(-inf..inf, nonInt(0..1)) => false | true
number::lt(-inf..inf, nonInt(0..2)) => false | true
number::lt(-inf..inf, nonInt(-1..2)) => false | true
number::lt(-inf..inf, nonInt(0..inf)) => false | true
number::lt(-inf..inf, nonInt(-1..inf)) => false | true
number::lt(-inf..inf, nonInt(-inf..0)) => false | true
number::lt(-inf..inf, nonInt(-inf..1)) => false | true
number::lt(-inf..inf, nonInt(-inf..inf)) => false | true
number::lt(-inf..inf, 1 | int(3..4)) => false | true
number::lt(-inf!..inf, number) => false | true
number::lt(-inf!..inf, -3.14) => false | true
number::lt(-inf!..inf, -2) => false | true
number::lt(-inf!..inf, -1) => false | true
number::lt(-inf!..inf, -0.5) => false | true
number::lt(-inf!..inf, 0) => false | true
number::lt(-inf!..inf, 0.5) => false | true
number::lt(-inf!..inf, 1) => false | true
number::lt(-inf!..inf, 2) => false | true
number::lt(-inf!..inf, 2.78) => false | true
number::lt(-inf!..inf, 3) => false | true
number::lt(-inf!..inf, 3.14) => false | true
number::lt(-inf!..inf, 10) => false | true
number::lt(-inf!..inf, 100) => false | true
number::lt(-inf!..inf, -inf) => false
number::lt(-inf!..inf, inf) => false | true
number::lt(-inf!..inf, nan) => false
number::lt(-inf!..inf, 0..1) => false | true
number::lt(-inf!..inf, 0!..1) => false | true
number::lt(-inf!..inf, 0..!1) => false | true
number::lt(-inf!..inf, 0..2) => false | true
number::lt(-inf!..inf, 0!..!2) => false | true
number::lt(-inf!..inf, 0.5..1.5) => false | true
number::lt(-inf!..inf, 0.5..2.5) => false | true
number::lt(-inf!..inf, 0.5!..2.5) => false | true
number::lt(-inf!..inf, 0.5..!2.5) => false | true
number::lt(-inf!..inf, -2.56..3.35) => false | true
number::lt(-inf!..inf, 0.5..0.75) => false | true
number::lt(-inf!..inf, 1..2) => false | true
number::lt(-inf!..inf, 0..inf) => false | true
number::lt(-inf!..inf, 0!..inf) => false | true
number::lt(-inf!..inf, 0..!inf) => false | true
number::lt(-inf!..inf, 0!..!inf) => false | true
number::lt(-inf!..inf, 1..inf) => false | true
number::lt(-inf!..inf, 1!..inf) => false | true
number::lt(-inf!..inf, 1..!inf) => false | true
number::lt(-inf!..inf, 2..inf) => false | true
number::lt(-inf!..inf, 2!..inf) => false | true
number::lt(-inf!..inf, 2.5..inf) => false | true
number::lt(-inf!..inf, -inf..0) => false | true
number::lt(-inf!..inf, -inf..inf) => false | true
number::lt(-inf!..inf, -inf!..inf) => false | true
number::lt(-inf!..inf, -inf..!inf) => false | true
number::lt(-inf!..inf, -inf!..!inf) => false | true
number::lt(-inf!..inf, int(0..1)) => false | true
number::lt(-inf!..inf, int(0..2)) => false | true
number::lt(-inf!..inf, int(1..2)) => false | true
number::lt(-inf!..inf, int(5..20)) => false | true
number::lt(-inf!..inf, int(-20..-5)) => false | true
number::lt(-inf!..inf, int(-10..10)) => false | true
number::lt(-inf!..inf, int(0..inf)) => false | true
number::lt(-inf!..inf, int(1..inf)) => false | true
number::lt(-inf!..inf, int(-inf..0)) => false | true
number::lt(-inf!..inf, int(-inf..1)) => false | true
number::lt(-inf!..inf, int(-inf..inf)) => false | true
number::lt(-inf!..inf, nonInt(0..1)) => false | true
number::lt(-inf!..inf, nonInt(0..2)) => false | true
number::lt(-inf!..inf, nonInt(-1..2)) => false | true
number::lt(-inf!..inf, nonInt(0..inf)) => false | true
number::lt(-inf!..inf, nonInt(-1..inf)) => false | true
number::lt(-inf!..inf, nonInt(-inf..0)) => false | true
number::lt(-inf!..inf, nonInt(-inf..1)) => false | true
number::lt(-inf!..inf, nonInt(-inf..inf)) => false | true
number::lt(-inf!..inf, 1 | int(3..4)) => false | true
number::lt(-inf..!inf, number) => false | true
number::lt(-inf..!inf, -3.14) => false | true
number::lt(-inf..!inf, -2) => false | true
number::lt(-inf..!inf, -1) => false | true
number::lt(-inf..!inf, -0.5) => false | true
number::lt(-inf..!inf, 0) => false | true
number::lt(-inf..!inf, 0.5) => false | true
number::lt(-inf..!inf, 1) => false | true
number::lt(-inf..!inf, 2) => false | true
number::lt(-inf..!inf, 2.78) => false | true
number::lt(-inf..!inf, 3) => false | true
number::lt(-inf..!inf, 3.14) => false | true
number::lt(-inf..!inf, 10) => false | true
number::lt(-inf..!inf, 100) => false | true
number::lt(-inf..!inf, -inf) => false
number::lt(-inf..!inf, inf) => true
number::lt(-inf..!inf, nan) => false
number::lt(-inf..!inf, 0..1) => false | true
number::lt(-inf..!inf, 0!..1) => false | true
number::lt(-inf..!inf, 0..!1) => false | true
number::lt(-inf..!inf, 0..2) => false | true
number::lt(-inf..!inf, 0!..!2) => false | true
number::lt(-inf..!inf, 0.5..1.5) => false | true
number::lt(-inf..!inf, 0.5..2.5) => false | true
number::lt(-inf..!inf, 0.5!..2.5) => false | true
number::lt(-inf..!inf, 0.5..!2.5) => false | true
number::lt(-inf..!inf, -2.56..3.35) => false | true
number::lt(-inf..!inf, 0.5..0.75) => false | true
number::lt(-inf..!inf, 1..2) => false | true
number::lt(-inf..!inf, 0..inf) => false | true
number::lt(-inf..!inf, 0!..inf) => false | true
number::lt(-inf..!inf, 0..!inf) => false | true
number::lt(-inf..!inf, 0!..!inf) => false | true
number::lt(-inf..!inf, 1..inf) => false | true
number::lt(-inf..!inf, 1!..inf) => false | true
number::lt(-inf..!inf, 1..!inf) => false | true
number::lt(-inf..!inf, 2..inf) => false | true
number::lt(-inf..!inf, 2!..inf) => false | true
number::lt(-inf..!inf, 2.5..inf) => false | true
number::lt(-inf..!inf, -inf..0) => false | true
number::lt(-inf..!inf, -inf..inf) => false | true
number::lt(-inf..!inf, -inf!..inf) => false | true
number::lt(-inf..!inf, -inf..!inf) => false | true
number::lt(-inf..!inf, -inf!..!inf) => false | true
number::lt(-inf..!inf, int(0..1)) => false | true
number::lt(-inf..!inf, int(0..2)) => false | true
number::lt(-inf..!inf, int(1..2)) => false | true
number::lt(-inf..!inf, int(5..20)) => false | true
number::lt(-inf..!inf, int(-20..-5)) => false | true
number::lt(-inf..!inf, int(-10..10)) => false | true
number::lt(-inf..!inf, int(0..inf)) => false | true
number::lt(-inf..!inf, int(1..inf)) => false | true
number::lt(-inf..!inf, int(-inf..0)) => false | true
number::lt(-inf..!inf, int(-inf..1)) => false | true
number::lt(-inf..!inf, int(-inf..inf)) => false | true
number::lt(-inf..!inf, nonInt(0..1)) => false | true
number::lt(-inf..!inf, nonInt(0..2)) => false | true
number::lt(-inf..!inf, nonInt(-1..2)) => false | true
number::lt(-inf..!inf, nonInt(0..inf)) => false | true
number::lt(-inf..!inf, nonInt(-1..inf)) => false | true
number::lt(-inf..!inf, nonInt(-inf..0)) => false | true
number::lt(-inf..!inf, nonInt(-inf..1)) => false | true
number::lt(-inf..!inf, nonInt(-inf..inf)) => false | true
number::lt(-inf..!inf, 1 | int(3..4)) => false | true
number::lt(-inf!..!inf, number) => false | true
number::lt(-inf!..!inf, -3.14) => false | true
number::lt(-inf!..!inf, -2) => false | true
number::lt(-inf!..!inf, -1) => false | true
number::lt(-inf!..!inf, -0.5) => false | true
number::lt(-inf!..!inf, 0) => false | true
number::lt(-inf!..!inf, 0.5) => false | true
number::lt(-inf!..!inf, 1) => false | true
number::lt(-inf!..!inf, 2) => false | true
number::lt(-inf!..!inf, 2.78) => false | true
number::lt(-inf!..!inf, 3) => false | true
number::lt(-inf!..!inf, 3.14) => false | true
number::lt(-inf!..!inf, 10) => false | true
number::lt(-inf!..!inf, 100) => false | true
number::lt(-inf!..!inf, -inf) => false
number::lt(-inf!..!inf, inf) => true
number::lt(-inf!..!inf, nan) => false
number::lt(-inf!..!inf, 0..1) => false | true
number::lt(-inf!..!inf, 0!..1) => false | true
number::lt(-inf!..!inf, 0..!1) => false | true
number::lt(-inf!..!inf, 0..2) => false | true
number::lt(-inf!..!inf, 0!..!2) => false | true
number::lt(-inf!..!inf, 0.5..1.5) => false | true
number::lt(-inf!..!inf, 0.5..2.5) => false | true
number::lt(-inf!..!inf, 0.5!..2.5) => false | true
number::lt(-inf!..!inf, 0.5..!2.5) => false | true
number::lt(-inf!..!inf, -2.56..3.35) => false | true
number::lt(-inf!..!inf, 0.5..0.75) => false | true
number::lt(-inf!..!inf, 1..2) => false | true
number::lt(-inf!..!inf, 0..inf) => false | true
number::lt(-inf!..!inf, 0!..inf) => false | true
number::lt(-inf!..!inf, 0..!inf) => false | true
number::lt(-inf!..!inf, 0!..!inf) => false | true
number::lt(-inf!..!inf, 1..inf) => false | true
number::lt(-inf!..!inf, 1!..inf) => false | true
number::lt(-inf!..!inf, 1..!inf) => false | true
number::lt(-inf!..!inf, 2..inf) => false | true
number::lt(-inf!..!inf, 2!..inf) => false | true
number::lt(-inf!..!inf, 2.5..inf) => false | true
number::lt(-inf!..!inf, -inf..0) => false | true
number::lt(-inf!..!inf, -inf..inf) => false | true
number::lt(-inf!..!inf, -inf!..inf) => false | true
number::lt(-inf!..!inf, -inf..!inf) => false | true
number::lt(-inf!..!inf, -inf!..!inf) => false | true
number::lt(-inf!..!inf, int(0..1)) => false | true
number::lt(-inf!..!inf, int(0..2)) => false | true
number::lt(-inf!..!inf, int(1..2)) => false | true
number::lt(-inf!..!inf, int(5..20)) => false | true
number::lt(-inf!..!inf, int(-20..-5)) => false | true
number::lt(-inf!..!inf, int(-10..10)) => false | true
number::lt(-inf!..!inf, int(0..inf)) => false | true
number::lt(-inf!..!inf, int(1..inf)) => false | true
number::lt(-inf!..!inf, int(-inf..0)) => false | true
number::lt(-inf!..!inf, int(-inf..1)) => false | true
number::lt(-inf!..!inf, int(-inf..inf)) => false | true
number::lt(-inf!..!inf, nonInt(0..1)) => false | true
number::lt(-inf!..!inf, nonInt(0..2)) => false | true
number::lt(-inf!..!inf, nonInt(-1..2)) => false | true
number::lt(-inf!..!inf, nonInt(0..inf)) => false | true
number::lt(-inf!..!inf, nonInt(-1..inf)) => false | true
number::lt(-inf!..!inf, nonInt(-inf..0)) => false | true
number::lt(-inf!..!inf, nonInt(-inf..1)) => false | true
number::lt(-inf!..!inf, nonInt(-inf..inf)) => false | true
number::lt(-inf!..!inf, 1 | int(3..4)) => false | true
number::lt(int(0..1), number) => false | true
number::lt(int(0..1), -3.14) => false
number::lt(int(0..1), -2) => false
number::lt(int(0..1), -1) => false
number::lt(int(0..1), -0.5) => false
number::lt(int(0..1), 0) => false
number::lt(int(0..1), 0.5) => false | true
number::lt(int(0..1), 1) => false | true
number::lt(int(0..1), 2) => true
number::lt(int(0..1), 2.78) => true
number::lt(int(0..1), 3) => true
number::lt(int(0..1), 3.14) => true
number::lt(int(0..1), 10) => true
number::lt(int(0..1), 100) => true
number::lt(int(0..1), -inf) => false
number::lt(int(0..1), inf) => true
number::lt(int(0..1), nan) => false
number::lt(int(0..1), 0..1) => false | true
number::lt(int(0..1), 0!..1) => false | true
number::lt(int(0..1), 0..!1) => false | true
number::lt(int(0..1), 0..2) => false | true
number::lt(int(0..1), 0!..!2) => false | true
number::lt(int(0..1), 0.5..1.5) => false | true
number::lt(int(0..1), 0.5..2.5) => false | true
number::lt(int(0..1), 0.5!..2.5) => false | true
number::lt(int(0..1), 0.5..!2.5) => false | true
number::lt(int(0..1), -2.56..3.35) => false | true
number::lt(int(0..1), 0.5..0.75) => false | true
number::lt(int(0..1), 1..2) => false | true
number::lt(int(0..1), 0..inf) => false | true
number::lt(int(0..1), 0!..inf) => false | true
number::lt(int(0..1), 0..!inf) => false | true
number::lt(int(0..1), 0!..!inf) => false | true
number::lt(int(0..1), 1..inf) => false | true
number::lt(int(0..1), 1!..inf) => true
number::lt(int(0..1), 1..!inf) => false | true
number::lt(int(0..1), 2..inf) => true
number::lt(int(0..1), 2!..inf) => true
number::lt(int(0..1), 2.5..inf) => true
number::lt(int(0..1), -inf..0) => false
number::lt(int(0..1), -inf..inf) => false | true
number::lt(int(0..1), -inf!..inf) => false | true
number::lt(int(0..1), -inf..!inf) => false | true
number::lt(int(0..1), -inf!..!inf) => false | true
number::lt(int(0..1), int(0..1)) => false | true
number::lt(int(0..1), int(0..2)) => false | true
number::lt(int(0..1), int(1..2)) => false | true
number::lt(int(0..1), int(5..20)) => true
number::lt(int(0..1), int(-20..-5)) => false
number::lt(int(0..1), int(-10..10)) => false | true
number::lt(int(0..1), int(0..inf)) => false | true
number::lt(int(0..1), int(1..inf)) => false | true
number::lt(int(0..1), int(-inf..0)) => false
number::lt(int(0..1), int(-inf..1)) => false | true
number::lt(int(0..1), int(-inf..inf)) => false | true
number::lt(int(0..1), nonInt(0..1)) => false | true
number::lt(int(0..1), nonInt(0..2)) => false | true
number::lt(int(0..1), nonInt(-1..2)) => false | true
number::lt(int(0..1), nonInt(0..inf)) => false | true
number::lt(int(0..1), nonInt(-1..inf)) => false | true
number::lt(int(0..1), nonInt(-inf..0)) => false
number::lt(int(0..1), nonInt(-inf..1)) => false | true
number::lt(int(0..1), nonInt(-inf..inf)) => false | true
number::lt(int(0..1), 1 | int(3..4)) => false | true
number::lt(int(0..2), number) => false | true
number::lt(int(0..2), -3.14) => false
number::lt(int(0..2), -2) => false
number::lt(int(0..2), -1) => false
number::lt(int(0..2), -0.5) => false
number::lt(int(0..2), 0) => false
number::lt(int(0..2), 0.5) => false | true
number::lt(int(0..2), 1) => false | true
number::lt(int(0..2), 2) => false | true
number::lt(int(0..2), 2.78) => true
number::lt(int(0..2), 3) => true
number::lt(int(0..2), 3.14) => true
number::lt(int(0..2), 10) => true
number::lt(int(0..2), 100) => true
number::lt(int(0..2), -inf) => false
number::lt(int(0..2), inf) => true
number::lt(int(0..2), nan) => false
number::lt(int(0..2), 0..1) => false | true
number::lt(int(0..2), 0!..1) => false | true
number::lt(int(0..2), 0..!1) => false | true
number::lt(int(0..2), 0..2) => false | true
number::lt(int(0..2), 0!..!2) => false | true
number::lt(int(0..2), 0.5..1.5) => false | true
number::lt(int(0..2), 0.5..2.5) => false | true
number::lt(int(0..2), 0.5!..2.5) => false | true
number::lt(int(0..2), 0.5..!2.5) => false | true
number::lt(int(0..2), -2.56..3.35) => false | true
number::lt(int(0..2), 0.5..0.75) => false | true
number::lt(int(0..2), 1..2) => false | true
number::lt(int(0..2), 0..inf) => false | true
number::lt(int(0..2), 0!..inf) => false | true
number::lt(int(0..2), 0..!inf) => false | true
number::lt(int(0..2), 0!..!inf) => false | true
number::lt(int(0..2), 1..inf) => false | true
number::lt(int(0..2), 1!..inf) => false | true
number::lt(int(0..2), 1..!inf) => false | true
number::lt(int(0..2), 2..inf) => false | true
number::lt(int(0..2), 2!..inf) => true
number::lt(int(0..2), 2.5..inf) => true
number::lt(int(0..2), -inf..0) => false
number::lt(int(0..2), -inf..inf) => false | true
number::lt(int(0..2), -inf!..inf) => false | true
number::lt(int(0..2), -inf..!inf) => false | true
number::lt(int(0..2), -inf!..!inf) => false | true
number::lt(int(0..2), int(0..1)) => false | true
number::lt(int(0..2), int(0..2)) => false | true
number::lt(int(0..2), int(1..2)) => false | true
number::lt(int(0..2), int(5..20)) => true
number::lt(int(0..2), int(-20..-5)) => false
number::lt(int(0..2), int(-10..10)) => false | true
number::lt(int(0..2), int(0..inf)) => false | true
number::lt(int(0..2), int(1..inf)) => false | true
number::lt(int(0..2), int(-inf..0)) => false
number::lt(int(0..2), int(-inf..1)) => false | true
number::lt(int(0..2), int(-inf..inf)) => false | true
number::lt(int(0..2), nonInt(0..1)) => false | true
number::lt(int(0..2), nonInt(0..2)) => false | true
number::lt(int(0..2), nonInt(-1..2)) => false | true
number::lt(int(0..2), nonInt(0..inf)) => false | true
number::lt(int(0..2), nonInt(-1..inf)) => false | true
number::lt(int(0..2), nonInt(-inf..0)) => false
number::lt(int(0..2), nonInt(-inf..1)) => false | true
number::lt(int(0..2), nonInt(-inf..inf)) => false | true
number::lt(int(0..2), 1 | int(3..4)) => false | true
number::lt(int(1..2), number) => false | true
number::lt(int(1..2), -3.14) => false
number::lt(int(1..2), -2) => false
number::lt(int(1..2), -1) => false
number::lt(int(1..2), -0.5) => false
number::lt(int(1..2), 0) => false
number::lt(int(1..2), 0.5) => false
number::lt(int(1..2), 1) => false
number::lt(int(1..2), 2) => false | true
number::lt(int(1..2), 2.78) => true
number::lt(int(1..2), 3) => true
number::lt(int(1..2), 3.14) => true
number::lt(int(1..2), 10) => true
number::lt(int(1..2), 100) => true
number::lt(int(1..2), -inf) => false
number::lt(int(1..2), inf) => true
number::lt(int(1..2), nan) => false
number::lt(int(1..2), 0..1) => false
number::lt(int(1..2), 0!..1) => false
number::lt(int(1..2), 0..!1) => false
number::lt(int(1..2), 0..2) => false | true
number::lt(int(1..2), 0!..!2) => false | true
number::lt(int(1..2), 0.5..1.5) => false | true
number::lt(int(1..2), 0.5..2.5) => false | true
number::lt(int(1..2), 0.5!..2.5) => false | true
number::lt(int(1..2), 0.5..!2.5) => false | true
number::lt(int(1..2), -2.56..3.35) => false | true
number::lt(int(1..2), 0.5..0.75) => false
number::lt(int(1..2), 1..2) => false | true
number::lt(int(1..2), 0..inf) => false | true
number::lt(int(1..2), 0!..inf) => false | true
number::lt(int(1..2), 0..!inf) => false | true
number::lt(int(1..2), 0!..!inf) => false | true
number::lt(int(1..2), 1..inf) => false | true
number::lt(int(1..2), 1!..inf) => false | true
number::lt(int(1..2), 1..!inf) => false | true
number::lt(int(1..2), 2..inf) => false | true
number::lt(int(1..2), 2!..inf) => true
number::lt(int(1..2), 2.5..inf) => true
number::lt(int(1..2), -inf..0) => false
number::lt(int(1..2), -inf..inf) => false | true
number::lt(int(1..2), -inf!..inf) => false | true
number::lt(int(1..2), -inf..!inf) => false | true
number::lt(int(1..2), -inf!..!inf) => false | true
number::lt(int(1..2), int(0..1)) => false
number::lt(int(1..2), int(0..2)) => false | true
number::lt(int(1..2), int(1..2)) => false | true
number::lt(int(1..2), int(5..20)) => true
number::lt(int(1..2), int(-20..-5)) => false
number::lt(int(1..2), int(-10..10)) => false | true
number::lt(int(1..2), int(0..inf)) => false | true
number::lt(int(1..2), int(1..inf)) => false | true
number::lt(int(1..2), int(-inf..0)) => false
number::lt(int(1..2), int(-inf..1)) => false
number::lt(int(1..2), int(-inf..inf)) => false | true
number::lt(int(1..2), nonInt(0..1)) => false
number::lt(int(1..2), nonInt(0..2)) => false | true
number::lt(int(1..2), nonInt(-1..2)) => false | true
number::lt(int(1..2), nonInt(0..inf)) => false | true
number::lt(int(1..2), nonInt(-1..inf)) => false | true
number::lt(int(1..2), nonInt(-inf..0)) => false
number::lt(int(1..2), nonInt(-inf..1)) => false
number::lt(int(1..2), nonInt(-inf..inf)) => false | true
number::lt(int(1..2), 1 | int(3..4)) => false | true
number::lt(int(5..20), number) => false | true
number::lt(int(5..20), -3.14) => false
number::lt(int(5..20), -2) => false
number::lt(int(5..20), -1) => false
number::lt(int(5..20), -0.5) => false
number::lt(int(5..20), 0) => false
number::lt(int(5..20), 0.5) => false
number::lt(int(5..20), 1) => false
number::lt(int(5..20), 2) => false
number::lt(int(5..20), 2.78) => false
number::lt(int(5..20), 3) => false
number::lt(int(5..20), 3.14) => false
number::lt(int(5..20), 10) => false | true
number::lt(int(5..20), 100) => true
number::lt(int(5..20), -inf) => false
number::lt(int(5..20), inf) => true
number::lt(int(5..20), nan) => false
number::lt(int(5..20), 0..1) => false
number::lt(int(5..20), 0!..1) => false
number::lt(int(5..20), 0..!1) => false
number::lt(int(5..20), 0..2) => false
number::lt(int(5..20), 0!..!2) => false
number::lt(int(5..20), 0.5..1.5) => false
number::lt(int(5..20), 0.5..2.5) => false
number::lt(int(5..20), 0.5!..2.5) => false
number::lt(int(5..20), 0.5..!2.5) => false
number::lt(int(5..20), -2.56..3.35) => false
number::lt(int(5..20), 0.5..0.75) => false
number::lt(int(5..20), 1..2) => false
number::lt(int(5..20), 0..inf) => false | true
number::lt(int(5..20), 0!..inf) => false | true
number::lt(int(5..20), 0..!inf) => false | true
number::lt(int(5..20), 0!..!inf) => false | true
number::lt(int(5..20), 1..inf) => false | true
number::lt(int(5..20), 1!..inf) => false | true
number::lt(int(5..20), 1..!inf) => false | true
number::lt(int(5..20), 2..inf) => false | true
number::lt(int(5..20), 2!..inf) => false | true
number::lt(int(5..20), 2.5..inf) => false | true
number::lt(int(5..20), -inf..0) => false
number::lt(int(5..20), -inf..inf) => false | true
number::lt(int(5..20), -inf!..inf) => false | true
number::lt(int(5..20), -inf..!inf) => false | true
number::lt(int(5..20), -inf!..!inf) => false | true
number::lt(int(5..20), int(0..1)) => false
number::lt(int(5..20), int(0..2)) => false
number::lt(int(5..20), int(1..2)) => false
number::lt(int(5..20), int(5..20)) => false | true
number::lt(int(5..20), int(-20..-5)) => false
number::lt(int(5..20), int(-10..10)) => false | true
number::lt(int(5..20), int(0..inf)) => false | true
number::lt(int(5..20), int(1..inf)) => false | true
number::lt(int(5..20), int(-inf..0)) => false
number::lt(int(5..20), int(-inf..1)) => false
number::lt(int(5..20), int(-inf..inf)) => false | true
number::lt(int(5..20), nonInt(0..1)) => false
number::lt(int(5..20), nonInt(0..2)) => false
number::lt(int(5..20), nonInt(-1..2)) => false
number::lt(int(5..20), nonInt(0..inf)) => false | true
number::lt(int(5..20), nonInt(-1..inf)) => false | true
number::lt(int(5..20), nonInt(-inf..0)) => false
number::lt(int(5..20), nonInt(-inf..1)) => false
number::lt(int(5..20), nonInt(-inf..inf)) => false | true
number::lt(int(5..20), 1 | int(3..4)) => false
number::lt(int(-20..-5), number) => false | true
number::lt(int(-20..-5), -3.14) => true
number::lt(int(-20..-5), -2) => true
number::lt(int(-20..-5), -1) => true
number::lt(int(-20..-5), -0.5) => true
number::lt(int(-20..-5), 0) => true
number::lt(int(-20..-5), 0.5) => true
number::lt(int(-20..-5), 1) => true
number::lt(int(-20..-5), 2) => true
number::lt(int(-20..-5), 2.78) => true
number::lt(int(-20..-5), 3) => true
number::lt(int(-20..-5), 3.14) => true
number::lt(int(-20..-5), 10) => true
number::lt(int(-20..-5), 100) => true
number::lt(int(-20..-5), -inf) => false
number::lt(int(-20..-5), inf) => true
number::lt(int(-20..-5), nan) => false
number::lt(int(-20..-5), 0..1) => true
number::lt(int(-20..-5), 0!..1) => true
number::lt(int(-20..-5), 0..!1) => true
number::lt(int(-20..-5), 0..2) => true
number::lt(int(-20..-5), 0!..!2) => true
number::lt(int(-20..-5), 0.5..1.5) => true
number::lt(int(-20..-5), 0.5..2.5) => true
number::lt(int(-20..-5), 0.5!..2.5) => true
number::lt(int(-20..-5), 0.5..!2.5) => true
number::lt(int(-20..-5), -2.56..3.35) => true
number::lt(int(-20..-5), 0.5..0.75) => true
number::lt(int(-20..-5), 1..2) => true
number::lt(int(-20..-5), 0..inf) => true
number::lt(int(-20..-5), 0!..inf) => true
number::lt(int(-20..-5), 0..!inf) => true
number::lt(int(-20..-5), 0!..!inf) => true
number::lt(int(-20..-5), 1..inf) => true
number::lt(int(-20..-5), 1!..inf) => true
number::lt(int(-20..-5), 1..!inf) => true
number::lt(int(-20..-5), 2..inf) => true
number::lt(int(-20..-5), 2!..inf) => true
number::lt(int(-20..-5), 2.5..inf) => true
number::lt(int(-20..-5), -inf..0) => false | true
number::lt(int(-20..-5), -inf..inf) => false | true
number::lt(int(-20..-5), -inf!..inf) => false | true
number::lt(int(-20..-5), -inf..!inf) => false | true
number::lt(int(-20..-5), -inf!..!inf) => false | true
number::lt(int(-20..-5), int(0..1)) => true
number::lt(int(-20..-5), int(0..2)) => true
number::lt(int(-20..-5), int(1..2)) => true
number::lt(int(-20..-5), int(5..20)) => true
number::lt(int(-20..-5), int(-20..-5)) => false | true
number::lt(int(-20..-5), int(-10..10)) => false | true
number::lt(int(-20..-5), int(0..inf)) => true
number::lt(int(-20..-5), int(1..inf)) => true
number::lt(int(-20..-5), int(-inf..0)) => false | true
number::lt(int(-20..-5), int(-inf..1)) => false | true
number::lt(int(-20..-5), int(-inf..inf)) => false | true
number::lt(int(-20..-5), nonInt(0..1)) => true
number::lt(int(-20..-5), nonInt(0..2)) => true
number::lt(int(-20..-5), nonInt(-1..2)) => true
number::lt(int(-20..-5), nonInt(0..inf)) => true
number::lt(int(-20..-5), nonInt(-1..inf)) => true
number::lt(int(-20..-5), nonInt(-inf..0)) => false | true
number::lt(int(-20..-5), nonInt(-inf..1)) => false | true
number::lt(int(-20..-5), nonInt(-inf..inf)) => false | true
number::lt(int(-20..-5), 1 | int(3..4)) => true
number::lt(int(-10..10), number) => false | true
number::lt(int(-10..10), -3.14) => false | true
number::lt(int(-10..10), -2) => false | true
number::lt(int(-10..10), -1) => false | true
number::lt(int(-10..10), -0.5) => false | true
number::lt(int(-10..10), 0) => false | true
number::lt(int(-10..10), 0.5) => false | true
number::lt(int(-10..10), 1) => false | true
number::lt(int(-10..10), 2) => false | true
number::lt(int(-10..10), 2.78) => false | true
number::lt(int(-10..10), 3) => false | true
number::lt(int(-10..10), 3.14) => false | true
number::lt(int(-10..10), 10) => false | true
number::lt(int(-10..10), 100) => true
number::lt(int(-10..10), -inf) => false
number::lt(int(-10..10), inf) => true
number::lt(int(-10..10), nan) => false
number::lt(int(-10..10), 0..1) => false | true
number::lt(int(-10..10), 0!..1) => false | true
number::lt(int(-10..10), 0..!1) => false | true
number::lt(int(-10..10), 0..2) => false | true
number::lt(int(-10..10), 0!..!2) => false | true
number::lt(int(-10..10), 0.5..1.5) => false | true
number::lt(int(-10..10), 0.5..2.5) => false | true
number::lt(int(-10..10), 0.5!..2.5) => false | true
number::lt(int(-10..10), 0.5..!2.5) => false | true
number::lt(int(-10..10), -2.56..3.35) => false | true
number::lt(int(-10..10), 0.5..0.75) => false | true
number::lt(int(-10..10), 1..2) => false | true
number::lt(int(-10..10), 0..inf) => false | true
number::lt(int(-10..10), 0!..inf) => false | true
number::lt(int(-10..10), 0..!inf) => false | true
number::lt(int(-10..10), 0!..!inf) => false | true
number::lt(int(-10..10), 1..inf) => false | true
number::lt(int(-10..10), 1!..inf) => false | true
number::lt(int(-10..10), 1..!inf) => false | true
number::lt(int(-10..10), 2..inf) => false | true
number::lt(int(-10..10), 2!..inf) => false | true
number::lt(int(-10..10), 2.5..inf) => false | true
number::lt(int(-10..10), -inf..0) => false | true
number::lt(int(-10..10), -inf..inf) => false | true
number::lt(int(-10..10), -inf!..inf) => false | true
number::lt(int(-10..10), -inf..!inf) => false | true
number::lt(int(-10..10), -inf!..!inf) => false | true
number::lt(int(-10..10), int(0..1)) => false | true
number::lt(int(-10..10), int(0..2)) => false | true
number::lt(int(-10..10), int(1..2)) => false | true
number::lt(int(-10..10), int(5..20)) => false | true
number::lt(int(-10..10), int(-20..-5)) => false | true
number::lt(int(-10..10), int(-10..10)) => false | true
number::lt(int(-10..10), int(0..inf)) => false | true
number::lt(int(-10..10), int(1..inf)) => false | true
number::lt(int(-10..10), int(-inf..0)) => false | true
number::lt(int(-10..10), int(-inf..1)) => false | true
number::lt(int(-10..10), int(-inf..inf)) => false | true
number::lt(int(-10..10), nonInt(0..1)) => false | true
number::lt(int(-10..10), nonInt(0..2)) => false | true
number::lt(int(-10..10), nonInt(-1..2)) => false | true
number::lt(int(-10..10), nonInt(0..inf)) => false | true
number::lt(int(-10..10), nonInt(-1..inf)) => false | true
number::lt(int(-10..10), nonInt(-inf..0)) => false | true
number::lt(int(-10..10), nonInt(-inf..1)) => false | true
number::lt(int(-10..10), nonInt(-inf..inf)) => false | true
number::lt(int(-10..10), 1 | int(3..4)) => false | true
number::lt(int(0..inf), number) => false | true
number::lt(int(0..inf), -3.14) => false
number::lt(int(0..inf), -2) => false
number::lt(int(0..inf), -1) => false
number::lt(int(0..inf), -0.5) => false
number::lt(int(0..inf), 0) => false
number::lt(int(0..inf), 0.5) => false | true
number::lt(int(0..inf), 1) => false | true
number::lt(int(0..inf), 2) => false | true
number::lt(int(0..inf), 2.78) => false | true
number::lt(int(0..inf), 3) => false | true
number::lt(int(0..inf), 3.14) => false | true
number::lt(int(0..inf), 10) => false | true
number::lt(int(0..inf), 100) => false | true
number::lt(int(0..inf), -inf) => false
number::lt(int(0..inf), inf) => true
number::lt(int(0..inf), nan) => false
number::lt(int(0..inf), 0..1) => false | true
number::lt(int(0..inf), 0!..1) => false | true
number::lt(int(0..inf), 0..!1) => false | true
number::lt(int(0..inf), 0..2) => false | true
number::lt(int(0..inf), 0!..!2) => false | true
number::lt(int(0..inf), 0.5..1.5) => false | true
number::lt(int(0..inf), 0.5..2.5) => false | true
number::lt(int(0..inf), 0.5!..2.5) => false | true
number::lt(int(0..inf), 0.5..!2.5) => false | true
number::lt(int(0..inf), -2.56..3.35) => false | true
number::lt(int(0..inf), 0.5..0.75) => false | true
number::lt(int(0..inf), 1..2) => false | true
number::lt(int(0..inf), 0..inf) => false | true
number::lt(int(0..inf), 0!..inf) => false | true
number::lt(int(0..inf), 0..!inf) => false | true
number::lt(int(0..inf), 0!..!inf) => false | true
number::lt(int(0..inf), 1..inf) => false | true
number::lt(int(0..inf), 1!..inf) => false | true
number::lt(int(0..inf), 1..!inf) => false | true
number::lt(int(0..inf), 2..inf) => false | true
number::lt(int(0..inf), 2!..inf) => false | true
number::lt(int(0..inf), 2.5..inf) => false | true
number::lt(int(0..inf), -inf..0) => false
number::lt(int(0..inf), -inf..inf) => false | true
number::lt(int(0..inf), -inf!..inf) => false | true
number::lt(int(0..inf), -inf..!inf) => false | true
number::lt(int(0..inf), -inf!..!inf) => false | true
number::lt(int(0..inf), int(0..1)) => false | true
number::lt(int(0..inf), int(0..2)) => false | true
number::lt(int(0..inf), int(1..2)) => false | true
number::lt(int(0..inf), int(5..20)) => false | true
number::lt(int(0..inf), int(-20..-5)) => false
number::lt(int(0..inf), int(-10..10)) => false | true
number::lt(int(0..inf), int(0..inf)) => false | true
number::lt(int(0..inf), int(1..inf)) => false | true
number::lt(int(0..inf), int(-inf..0)) => false
number::lt(int(0..inf), int(-inf..1)) => false | true
number::lt(int(0..inf), int(-inf..inf)) => false | true
number::lt(int(0..inf), nonInt(0..1)) => false | true
number::lt(int(0..inf), nonInt(0..2)) => false | true
number::lt(int(0..inf), nonInt(-1..2)) => false | true
number::lt(int(0..inf), nonInt(0..inf)) => false | true
number::lt(int(0..inf), nonInt(-1..inf)) => false | true
number::lt(int(0..inf), nonInt(-inf..0)) => false
number::lt(int(0..inf), nonInt(-inf..1)) => false | true
number::lt(int(0..inf), nonInt(-inf..inf)) => false | true
number::lt(int(0..inf), 1 | int(3..4)) => false | true
number::lt(int(1..inf), number) => false | true
number::lt(int(1..inf), -3.14) => false
number::lt(int(1..inf), -2) => false
number::lt(int(1..inf), -1) => false
number::lt(int(1..inf), -0.5) => false
number::lt(int(1..inf), 0) => false
number::lt(int(1..inf), 0.5) => false
number::lt(int(1..inf), 1) => false
number::lt(int(1..inf), 2) => false | true
number::lt(int(1..inf), 2.78) => false | true
number::lt(int(1..inf), 3) => false | true
number::lt(int(1..inf), 3.14) => false | true
number::lt(int(1..inf), 10) => false | true
number::lt(int(1..inf), 100) => false | true
number::lt(int(1..inf), -inf) => false
number::lt(int(1..inf), inf) => true
number::lt(int(1..inf), nan) => false
number::lt(int(1..inf), 0..1) => false
number::lt(int(1..inf), 0!..1) => false
number::lt(int(1..inf), 0..!1) => false
number::lt(int(1..inf), 0..2) => false | true
number::lt(int(1..inf), 0!..!2) => false | true
number::lt(int(1..inf), 0.5..1.5) => false | true
number::lt(int(1..inf), 0.5..2.5) => false | true
number::lt(int(1..inf), 0.5!..2.5) => false | true
number::lt(int(1..inf), 0.5..!2.5) => false | true
number::lt(int(1..inf), -2.56..3.35) => false | true
number::lt(int(1..inf), 0.5..0.75) => false
number::lt(int(1..inf), 1..2) => false | true
number::lt(int(1..inf), 0..inf) => false | true
number::lt(int(1..inf), 0!..inf) => false | true
number::lt(int(1..inf), 0..!inf) => false | true
number::lt(int(1..inf), 0!..!inf) => false | true
number::lt(int(1..inf), 1..inf) => false | true
number::lt(int(1..inf), 1!..inf) => false | true
number::lt(int(1..inf), 1..!inf) => false | true
number::lt(int(1..inf), 2..inf) => false | true
number::lt(int(1..inf), 2!..inf) => false | true
number::lt(int(1..inf), 2.5..inf) => false | true
number::lt(int(1..inf), -inf..0) => false
number::lt(int(1..inf), -inf..inf) => false | true
number::lt(int(1..inf), -inf!..inf) => false | true
number::lt(int(1..inf), -inf..!inf) => false | true
number::lt(int(1..inf), -inf!..!inf) => false | true
number::lt(int(1..inf), int(0..1)) => false
number::lt(int(1..inf), int(0..2)) => false | true
number::lt(int(1..inf), int(1..2)) => false | true
number::lt(int(1..inf), int(5..20)) => false | true
number::lt(int(1..inf), int(-20..-5)) => false
number::lt(int(1..inf), int(-10..10)) => false | true
number::lt(int(1..inf), int(0..inf)) => false | true
number::lt(int(1..inf), int(1..inf)) => false | true
number::lt(int(1..inf), int(-inf..0)) => false
number::lt(int(1..inf), int(-inf..1)) => false
number::lt(int(1..inf), int(-inf..inf)) => false | true
number::lt(int(1..inf), nonInt(0..1)) => false
number::lt(int(1..inf), nonInt(0..2)) => false | true
number::lt(int(1..inf), nonInt(-1..2)) => false | true
number::lt(int(1..inf), nonInt(0..inf)) => false | true
number::lt(int(1..inf), nonInt(-1..inf)) => false | true
number::lt(int(1..inf), nonInt(-inf..0)) => false
number::lt(int(1..inf), nonInt(-inf..1)) => false
number::lt(int(1..inf), nonInt(-inf..inf)) => false | true
number::lt(int(1..inf), 1 | int(3..4)) => false | true
number::lt(int(-inf..0), number) => false | true
number::lt(int(-inf..0), -3.14) => false | true
number::lt(int(-inf..0), -2) => false | true
number::lt(int(-inf..0), -1) => false | true
number::lt(int(-inf..0), -0.5) => false | true
number::lt(int(-inf..0), 0) => false | true
number::lt(int(-inf..0), 0.5) => true
number::lt(int(-inf..0), 1) => true
number::lt(int(-inf..0), 2) => true
number::lt(int(-inf..0), 2.78) => true
number::lt(int(-inf..0), 3) => true
number::lt(int(-inf..0), 3.14) => true
number::lt(int(-inf..0), 10) => true
number::lt(int(-inf..0), 100) => true
number::lt(int(-inf..0), -inf) => false
number::lt(int(-inf..0), inf) => true
number::lt(int(-inf..0), nan) => false
number::lt(int(-inf..0), 0..1) => false | true
number::lt(int(-inf..0), 0!..1) => true
number::lt(int(-inf..0), 0..!1) => false | true
number::lt(int(-inf..0), 0..2) => false | true
number::lt(int(-inf..0), 0!..!2) => true
number::lt(int(-inf..0), 0.5..1.5) => true
number::lt(int(-inf..0), 0.5..2.5) => true
number::lt(int(-inf..0), 0.5!..2.5) => true
number::lt(int(-inf..0), 0.5..!2.5) => true
number::lt(int(-inf..0), -2.56..3.35) => false | true
number::lt(int(-inf..0), 0.5..0.75) => true
number::lt(int(-inf..0), 1..2) => true
number::lt(int(-inf..0), 0..inf) => false | true
number::lt(int(-inf..0), 0!..inf) => true
number::lt(int(-inf..0), 0..!inf) => false | true
number::lt(int(-inf..0), 0!..!inf) => true
number::lt(int(-inf..0), 1..inf) => true
number::lt(int(-inf..0), 1!..inf) => true
number::lt(int(-inf..0), 1..!inf) => true
number::lt(int(-inf..0), 2..inf) => true
number::lt(int(-inf..0), 2!..inf) => true
number::lt(int(-inf..0), 2.5..inf) => true
number::lt(int(-inf..0), -inf..0) => false | true
number::lt(int(-inf..0), -inf..inf) => false | true
number::lt(int(-inf..0), -inf!..inf) => false | true
number::lt(int(-inf..0), -inf..!inf) => false | true
number::lt(int(-inf..0), -inf!..!inf) => false | true
number::lt(int(-inf..0), int(0..1)) => false | true
number::lt(int(-inf..0), int(0..2)) => false | true
number::lt(int(-inf..0), int(1..2)) => true
number::lt(int(-inf..0), int(5..20)) => true
number::lt(int(-inf..0), int(-20..-5)) => false | true
number::lt(int(-inf..0), int(-10..10)) => false | true
number::lt(int(-inf..0), int(0..inf)) => false | true
number::lt(int(-inf..0), int(1..inf)) => true
number::lt(int(-inf..0), int(-inf..0)) => false | true
number::lt(int(-inf..0), int(-inf..1)) => false | true
number::lt(int(-inf..0), int(-inf..inf)) => false | true
number::lt(int(-inf..0), nonInt(0..1)) => true
number::lt(int(-inf..0), nonInt(0..2)) => true
number::lt(int(-inf..0), nonInt(-1..2)) => false | true
number::lt(int(-inf..0), nonInt(0..inf)) => true
number::lt(int(-inf..0), nonInt(-1..inf)) => false | true
number::lt(int(-inf..0), nonInt(-inf..0)) => false | true
number::lt(int(-inf..0), nonInt(-inf..1)) => false | true
number::lt(int(-inf..0), nonInt(-inf..inf)) => false | true
number::lt(int(-inf..0), 1 | int(3..4)) => true
number::lt(int(-inf..1), number) => false | true
number::lt(int(-inf..1), -3.14) => false | true
number::lt(int(-inf..1), -2) => false | true
number::lt(int(-inf..1), -1) => false | true
number::lt(int(-inf..1), -0.5) => false | true
number::lt(int(-inf..1), 0) => false | true
number::lt(int(-inf..1), 0.5) => false | true
number::lt(int(-inf..1), 1) => false | true
number::lt(int(-inf..1), 2) => true
number::lt(int(-inf..1), 2.78) => true
number::lt(int(-inf..1), 3) => true
number::lt(int(-inf..1), 3.14) => true
number::lt(int(-inf..1), 10) => true
number::lt(int(-inf..1), 100) => true
number::lt(int(-inf..1), -inf) => false
number::lt(int(-inf..1), inf) => true
number::lt(int(-inf..1), nan) => false
number::lt(int(-inf..1), 0..1) => false | true
number::lt(int(-inf..1), 0!..1) => false | true
number::lt(int(-inf..1), 0..!1) => false | true
number::lt(int(-inf..1), 0..2) => false | true
number::lt(int(-inf..1), 0!..!2) => false | true
number::lt(int(-inf..1), 0.5..1.5) => false | true
number::lt(int(-inf..1), 0.5..2.5) => false | true
number::lt(int(-inf..1), 0.5!..2.5) => false | true
number::lt(int(-inf..1), 0.5..!2.5) => false | true
number::lt(int(-inf..1), -2.56..3.35) => false | true
number::lt(int(-inf..1), 0.5..0.75) => false | true
number::lt(int(-inf..1), 1..2) => false | true
number::lt(int(-inf..1), 0..inf) => false | true
number::lt(int(-inf..1), 0!..inf) => false | true
number::lt(int(-inf..1), 0..!inf) => false | true
number::lt(int(-inf..1), 0!..!inf) => false | true
number::lt(int(-inf..1), 1..inf) => false | true
number::lt(int(-inf..1), 1!..inf) => true
number::lt(int(-inf..1), 1..!inf) => false | true
number::lt(int(-inf..1), 2..inf) => true
number::lt(int(-inf..1), 2!..inf) => true
number::lt(int(-inf..1), 2.5..inf) => true
number::lt(int(-inf..1), -inf..0) => false | true
number::lt(int(-inf..1), -inf..inf) => false | true
number::lt(int(-inf..1), -inf!..inf) => false | true
number::lt(int(-inf..1), -inf..!inf) => false | true
number::lt(int(-inf..1), -inf!..!inf) => false | true
number::lt(int(-inf..1), int(0..1)) => false | true
number::lt(int(-inf..1), int(0..2)) => false | true
number::lt(int(-inf..1), int(1..2)) => false | true
number::lt(int(-inf..1), int(5..20)) => true
number::lt(int(-inf..1), int(-20..-5)) => false | true
number::lt(int(-inf..1), int(-10..10)) => false | true
number::lt(int(-inf..1), int(0..inf)) => false | true
number::lt(int(-inf..1), int(1..inf)) => false | true
number::lt(int(-inf..1), int(-inf..0)) => false | true
number::lt(int(-inf..1), int(-inf..1)) => false | true
number::lt(int(-inf..1), int(-inf..inf)) => false | true
number::lt(int(-inf..1), nonInt(0..1)) => false | true
number::lt(int(-inf..1), nonInt(0..2)) => false | true
number::lt(int(-inf..1), nonInt(-1..2)) => false | true
number::lt(int(-inf..1), nonInt(0..inf)) => false | true
number::lt(int(-inf..1), nonInt(-1..inf)) => false | true
number::lt(int(-inf..1), nonInt(-inf..0)) => false | true
number::lt(int(-inf..1), nonInt(-inf..1)) => false | true
number::lt(int(-inf..1), nonInt(-inf..inf)) => false | true
number::lt(int(-inf..1), 1 | int(3..4)) => false | true
number::lt(int(-inf..inf), number) => false | true
number::lt(int(-inf..inf), -3.14) => false | true
number::lt(int(-inf..inf), -2) => false | true
number::lt(int(-inf..inf), -1) => false | true
number::lt(int(-inf..inf), -0.5) => false | true
number::lt(int(-inf..inf), 0) => false | true
number::lt(int(-inf..inf), 0.5) => false | true
number::lt(int(-inf..inf), 1) => false | true
number::lt(int(-inf..inf), 2) => false | true
number::lt(int(-inf..inf), 2.78) => false | true
number::lt(int(-inf..inf), 3) => false | true
number::lt(int(-inf..inf), 3.14) => false | true
number::lt(int(-inf..inf), 10) => false | true
number::lt(int(-inf..inf), 100) => false | true
number::lt(int(-inf..inf), -inf) => false
number::lt(int(-inf..inf), inf) => true
number::lt(int(-inf..inf), nan) => false
number::lt(int(-inf..inf), 0..1) => false | true
number::lt(int(-inf..inf), 0!..1) => false | true
number::lt(int(-inf..inf), 0..!1) => false | true
number::lt(int(-inf..inf), 0..2) => false | true
number::lt(int(-inf..inf), 0!..!2) => false | true
number::lt(int(-inf..inf), 0.5..1.5) => false | true
number::lt(int(-inf..inf), 0.5..2.5) => false | true
number::lt(int(-inf..inf), 0.5!..2.5) => false | true
number::lt(int(-inf..inf), 0.5..!2.5) => false | true
number::lt(int(-inf..inf), -2.56..3.35) => false | true
number::lt(int(-inf..inf), 0.5..0.75) => false | true
number::lt(int(-inf..inf), 1..2) => false | true
number::lt(int(-inf..inf), 0..inf) => false | true
number::lt(int(-inf..inf), 0!..inf) => false | true
number::lt(int(-inf..inf), 0..!inf) => false | true
number::lt(int(-inf..inf), 0!..!inf) => false | true
number::lt(int(-inf..inf), 1..inf) => false | true
number::lt(int(-inf..inf), 1!..inf) => false | true
number::lt(int(-inf..inf), 1..!inf) => false | true
number::lt(int(-inf..inf), 2..inf) => false | true
number::lt(int(-inf..inf), 2!..inf) => false | true
number::lt(int(-inf..inf), 2.5..inf) => false | true
number::lt(int(-inf..inf), -inf..0) => false | true
number::lt(int(-inf..inf), -inf..inf) => false | true
number::lt(int(-inf..inf), -inf!..inf) => false | true
number::lt(int(-inf..inf), -inf..!inf) => false | true
number::lt(int(-inf..inf), -inf!..!inf) => false | true
number::lt(int(-inf..inf), int(0..1)) => false | true
number::lt(int(-inf..inf), int(0..2)) => false | true
number::lt(int(-inf..inf), int(1..2)) => false | true
number::lt(int(-inf..inf), int(5..20)) => false | true
number::lt(int(-inf..inf), int(-20..-5)) => false | true
number::lt(int(-inf..inf), int(-10..10)) => false | true
number::lt(int(-inf..inf), int(0..inf)) => false | true
number::lt(int(-inf..inf), int(1..inf)) => false | true
number::lt(int(-inf..inf), int(-inf..0)) => false | true
number::lt(int(-inf..inf), int(-inf..1)) => false | true
number::lt(int(-inf..inf), int(-inf..inf)) => false | true
number::lt(int(-inf..inf), nonInt(0..1)) => false | true
number::lt(int(-inf..inf), nonInt(0..2)) => false | true
number::lt(int(-inf..inf), nonInt(-1..2)) => false | true
number::lt(int(-inf..inf), nonInt(0..inf)) => false | true
number::lt(int(-inf..inf), nonInt(-1..inf)) => false | true
number::lt(int(-inf..inf), nonInt(-inf..0)) => false | true
number::lt(int(-inf..inf), nonInt(-inf..1)) => false | true
number::lt(int(-inf..inf), nonInt(-inf..inf)) => false | true
number::lt(int(-inf..inf), 1 | int(3..4)) => false | true
number::lt(nonInt(0..1), number) => false | true
number::lt(nonInt(0..1), -3.14) => false
number::lt(nonInt(0..1), -2) => false
number::lt(nonInt(0..1), -1) => false
number::lt(nonInt(0..1), -0.5) => false
number::lt(nonInt(0..1), 0) => false
number::lt(nonInt(0..1), 0.5) => false | true
number::lt(nonInt(0..1), 1) => true
number::lt(nonInt(0..1), 2) => true
number::lt(nonInt(0..1), 2.78) => true
number::lt(nonInt(0..1), 3) => true
number::lt(nonInt(0..1), 3.14) => true
number::lt(nonInt(0..1), 10) => true
number::lt(nonInt(0..1), 100) => true
number::lt(nonInt(0..1), -inf) => false
number::lt(nonInt(0..1), inf) => true
number::lt(nonInt(0..1), nan) => false
number::lt(nonInt(0..1), 0..1) => false | true
number::lt(nonInt(0..1), 0!..1) => false | true
number::lt(nonInt(0..1), 0..!1) => false | true
number::lt(nonInt(0..1), 0..2) => false | true
number::lt(nonInt(0..1), 0!..!2) => false | true
number::lt(nonInt(0..1), 0.5..1.5) => false | true
number::lt(nonInt(0..1), 0.5..2.5) => false | true
number::lt(nonInt(0..1), 0.5!..2.5) => false | true
number::lt(nonInt(0..1), 0.5..!2.5) => false | true
number::lt(nonInt(0..1), -2.56..3.35) => false | true
number::lt(nonInt(0..1), 0.5..0.75) => false | true
number::lt(nonInt(0..1), 1..2) => true
number::lt(nonInt(0..1), 0..inf) => false | true
number::lt(nonInt(0..1), 0!..inf) => false | true
number::lt(nonInt(0..1), 0..!inf) => false | true
number::lt(nonInt(0..1), 0!..!inf) => false | true
number::lt(nonInt(0..1), 1..inf) => true
number::lt(nonInt(0..1), 1!..inf) => true
number::lt(nonInt(0..1), 1..!inf) => true
number::lt(nonInt(0..1), 2..inf) => true
number::lt(nonInt(0..1), 2!..inf) => true
number::lt(nonInt(0..1), 2.5..inf) => true
number::lt(nonInt(0..1), -inf..0) => false
number::lt(nonInt(0..1), -inf..inf) => false | true
number::lt(nonInt(0..1), -inf!..inf) => false | true
number::lt(nonInt(0..1), -inf..!inf) => false | true
number::lt(nonInt(0..1), -inf!..!inf) => false | true
number::lt(nonInt(0..1), int(0..1)) => false | true
number::lt(nonInt(0..1), int(0..2)) => false | true
number::lt(nonInt(0..1), int(1..2)) => true
number::lt(nonInt(0..1), int(5..20)) => true
number::lt(nonInt(0..1), int(-20..-5)) => false
number::lt(nonInt(0..1), int(-10..10)) => false | true
number::lt(nonInt(0..1), int(0..inf)) => false | true
number::lt(nonInt(0..1), int(1..inf)) => true
number::lt(nonInt(0..1), int(-inf..0)) => false
number::lt(nonInt(0..1), int(-inf..1)) => false | true
number::lt(nonInt(0..1), int(-inf..inf)) => false | true
number::lt(nonInt(0..1), nonInt(0..1)) => false | true
number::lt(nonInt(0..1), nonInt(0..2)) => false | true
number::lt(nonInt(0..1), nonInt(-1..2)) => false | true
number::lt(nonInt(0..1), nonInt(0..inf)) => false | true
number::lt(nonInt(0..1), nonInt(-1..inf)) => false | true
number::lt(nonInt(0..1), nonInt(-inf..0)) => false
number::lt(nonInt(0..1), nonInt(-inf..1)) => false | true
number::lt(nonInt(0..1), nonInt(-inf..inf)) => false | true
number::lt(nonInt(0..1), 1 | int(3..4)) => true
number::lt(nonInt(0..2), number) => false | true
number::lt(nonInt(0..2), -3.14) => false
number::lt(nonInt(0..2), -2) => false
number::lt(nonInt(0..2), -1) => false
number::lt(nonInt(0..2), -0.5) => false
number::lt(nonInt(0..2), 0) => false
number::lt(nonInt(0..2), 0.5) => false | true
number::lt(nonInt(0..2), 1) => false | true
number::lt(nonInt(0..2), 2) => true
number::lt(nonInt(0..2), 2.78) => true
number::lt(nonInt(0..2), 3) => true
number::lt(nonInt(0..2), 3.14) => true
number::lt(nonInt(0..2), 10) => true
number::lt(nonInt(0..2), 100) => true
number::lt(nonInt(0..2), -inf) => false
number::lt(nonInt(0..2), inf) => true
number::lt(nonInt(0..2), nan) => false
number::lt(nonInt(0..2), 0..1) => false | true
number::lt(nonInt(0..2), 0!..1) => false | true
number::lt(nonInt(0..2), 0..!1) => false | true
number::lt(nonInt(0..2), 0..2) => false | true
number::lt(nonInt(0..2), 0!..!2) => false | true
number::lt(nonInt(0..2), 0.5..1.5) => false | true
number::lt(nonInt(0..2), 0.5..2.5) => false | true
number::lt(nonInt(0..2), 0.5!..2.5) => false | true
number::lt(nonInt(0..2), 0.5..!2.5) => false | true
number::lt(nonInt(0..2), -2.56..3.35) => false | true
number::lt(nonInt(0..2), 0.5..0.75) => false | true
number::lt(nonInt(0..2), 1..2) => false | true
number::lt(nonInt(0..2), 0..inf) => false | true
number::lt(nonInt(0..2), 0!..inf) => false | true
number::lt(nonInt(0..2), 0..!inf) => false | true
number::lt(nonInt(0..2), 0!..!inf) => false | true
number::lt(nonInt(0..2), 1..inf) => false | true
number::lt(nonInt(0..2), 1!..inf) => false | true
number::lt(nonInt(0..2), 1..!inf) => false | true
number::lt(nonInt(0..2), 2..inf) => true
number::lt(nonInt(0..2), 2!..inf) => true
number::lt(nonInt(0..2), 2.5..inf) => true
number::lt(nonInt(0..2), -inf..0) => false
number::lt(nonInt(0..2), -inf..inf) => false | true
number::lt(nonInt(0..2), -inf!..inf) => false | true
number::lt(nonInt(0..2), -inf..!inf) => false | true
number::lt(nonInt(0..2), -inf!..!inf) => false | true
number::lt(nonInt(0..2), int(0..1)) => false | true
number::lt(nonInt(0..2), int(0..2)) => false | true
number::lt(nonInt(0..2), int(1..2)) => false | true
number::lt(nonInt(0..2), int(5..20)) => true
number::lt(nonInt(0..2), int(-20..-5)) => false
number::lt(nonInt(0..2), int(-10..10)) => false | true
number::lt(nonInt(0..2), int(0..inf)) => false | true
number::lt(nonInt(0..2), int(1..inf)) => false | true
number::lt(nonInt(0..2), int(-inf..0)) => false
number::lt(nonInt(0..2), int(-inf..1)) => false | true
number::lt(nonInt(0..2), int(-inf..inf)) => false | true
number::lt(nonInt(0..2), nonInt(0..1)) => false | true
number::lt(nonInt(0..2), nonInt(0..2)) => false | true
number::lt(nonInt(0..2), nonInt(-1..2)) => false | true
number::lt(nonInt(0..2), nonInt(0..inf)) => false | true
number::lt(nonInt(0..2), nonInt(-1..inf)) => false | true
number::lt(nonInt(0..2), nonInt(-inf..0)) => false
number::lt(nonInt(0..2), nonInt(-inf..1)) => false | true
number::lt(nonInt(0..2), nonInt(-inf..inf)) => false | true
number::lt(nonInt(0..2), 1 | int(3..4)) => false | true
number::lt(nonInt(-1..2), number) => false | true
number::lt(nonInt(-1..2), -3.14) => false
number::lt(nonInt(-1..2), -2) => false
number::lt(nonInt(-1..2), -1) => false
number::lt(nonInt(-1..2), -0.5) => false | true
number::lt(nonInt(-1..2), 0) => false | true
number::lt(nonInt(-1..2), 0.5) => false | true
number::lt(nonInt(-1..2), 1) => false | true
number::lt(nonInt(-1..2), 2) => true
number::lt(nonInt(-1..2), 2.78) => true
number::lt(nonInt(-1..2), 3) => true
number::lt(nonInt(-1..2), 3.14) => true
number::lt(nonInt(-1..2), 10) => true
number::lt(nonInt(-1..2), 100) => true
number::lt(nonInt(-1..2), -inf) => false
number::lt(nonInt(-1..2), inf) => true
number::lt(nonInt(-1..2), nan) => false
number::lt(nonInt(-1..2), 0..1) => false | true
number::lt(nonInt(-1..2), 0!..1) => false | true
number::lt(nonInt(-1..2), 0..!1) => false | true
number::lt(nonInt(-1..2), 0..2) => false | true
number::lt(nonInt(-1..2), 0!..!2) => false | true
number::lt(nonInt(-1..2), 0.5..1.5) => false | true
number::lt(nonInt(-1..2), 0.5..2.5) => false | true
number::lt(nonInt(-1..2), 0.5!..2.5) => false | true
number::lt(nonInt(-1..2), 0.5..!2.5) => false | true
number::lt(nonInt(-1..2), -2.56..3.35) => false | true
number::lt(nonInt(-1..2), 0.5..0.75) => false | true
number::lt(nonInt(-1..2), 1..2) => false | true
number::lt(nonInt(-1..2), 0..inf) => false | true
number::lt(nonInt(-1..2), 0!..inf) => false | true
number::lt(nonInt(-1..2), 0..!inf) => false | true
number::lt(nonInt(-1..2), 0!..!inf) => false | true
number::lt(nonInt(-1..2), 1..inf) => false | true
number::lt(nonInt(-1..2), 1!..inf) => false | true
number::lt(nonInt(-1..2), 1..!inf) => false | true
number::lt(nonInt(-1..2), 2..inf) => true
number::lt(nonInt(-1..2), 2!..inf) => true
number::lt(nonInt(-1..2), 2.5..inf) => true
number::lt(nonInt(-1..2), -inf..0) => false | true
number::lt(nonInt(-1..2), -inf..inf) => false | true
number::lt(nonInt(-1..2), -inf!..inf) => false | true
number::lt(nonInt(-1..2), -inf..!inf) => false | true
number::lt(nonInt(-1..2), -inf!..!inf) => false | true
number::lt(nonInt(-1..2), int(0..1)) => false | true
number::lt(nonInt(-1..2), int(0..2)) => false | true
number::lt(nonInt(-1..2), int(1..2)) => false | true
number::lt(nonInt(-1..2), int(5..20)) => true
number::lt(nonInt(-1..2), int(-20..-5)) => false
number::lt(nonInt(-1..2), int(-10..10)) => false | true
number::lt(nonInt(-1..2), int(0..inf)) => false | true
number::lt(nonInt(-1..2), int(1..inf)) => false | true
number::lt(nonInt(-1..2), int(-inf..0)) => false | true
number::lt(nonInt(-1..2), int(-inf..1)) => false | true
number::lt(nonInt(-1..2), int(-inf..inf)) => false | true
number::lt(nonInt(-1..2), nonInt(0..1)) => false | true
number::lt(nonInt(-1..2), nonInt(0..2)) => false | true
number::lt(nonInt(-1..2), nonInt(-1..2)) => false | true
number::lt(nonInt(-1..2), nonInt(0..inf)) => false | true
number::lt(nonInt(-1..2), nonInt(-1..inf)) => false | true
number::lt(nonInt(-1..2), nonInt(-inf..0)) => false | true
number::lt(nonInt(-1..2), nonInt(-inf..1)) => false | true
number::lt(nonInt(-1..2), nonInt(-inf..inf)) => false | true
number::lt(nonInt(-1..2), 1 | int(3..4)) => false | true
number::lt(nonInt(0..inf), number) => false | true
number::lt(nonInt(0..inf), -3.14) => false
number::lt(nonInt(0..inf), -2) => false
number::lt(nonInt(0..inf), -1) => false
number::lt(nonInt(0..inf), -0.5) => false
number::lt(nonInt(0..inf), 0) => false
number::lt(nonInt(0..inf), 0.5) => false | true
number::lt(nonInt(0..inf), 1) => false | true
number::lt(nonInt(0..inf), 2) => false | true
number::lt(nonInt(0..inf), 2.78) => false | true
number::lt(nonInt(0..inf), 3) => false | true
number::lt(nonInt(0..inf), 3.14) => false | true
number::lt(nonInt(0..inf), 10) => false | true
number::lt(nonInt(0..inf), 100) => false | true
number::lt(nonInt(0..inf), -inf) => false
number::lt(nonInt(0..inf), inf) => true
number::lt(nonInt(0..inf), nan) => false
number::lt(nonInt(0..inf), 0..1) => false | true
number::lt(nonInt(0..inf), 0!..1) => false | true
number::lt(nonInt(0..inf), 0..!1) => false | true
number::lt(nonInt(0..inf), 0..2) => false | true
number::lt(nonInt(0..inf), 0!..!2) => false | true
number::lt(nonInt(0..inf), 0.5..1.5) => false | true
number::lt(nonInt(0..inf), 0.5..2.5) => false | true
number::lt(nonInt(0..inf), 0.5!..2.5) => false | true
number::lt(nonInt(0..inf), 0.5..!2.5) => false | true
number::lt(nonInt(0..inf), -2.56..3.35) => false | true
number::lt(nonInt(0..inf), 0.5..0.75) => false | true
number::lt(nonInt(0..inf), 1..2) => false | true
number::lt(nonInt(0..inf), 0..inf) => false | true
number::lt(nonInt(0..inf), 0!..inf) => false | true
number::lt(nonInt(0..inf), 0..!inf) => false | true
number::lt(nonInt(0..inf), 0!..!inf) => false | true
number::lt(nonInt(0..inf), 1..inf) => false | true
number::lt(nonInt(0..inf), 1!..inf) => false | true
number::lt(nonInt(0..inf), 1..!inf) => false | true
number::lt(nonInt(0..inf), 2..inf) => false | true
number::lt(nonInt(0..inf), 2!..inf) => false | true
number::lt(nonInt(0..inf), 2.5..inf) => false | true
number::lt(nonInt(0..inf), -inf..0) => false
number::lt(nonInt(0..inf), -inf..inf) => false | true
number::lt(nonInt(0..inf), -inf!..inf) => false | true
number::lt(nonInt(0..inf), -inf..!inf) => false | true
number::lt(nonInt(0..inf), -inf!..!inf) => false | true
number::lt(nonInt(0..inf), int(0..1)) => false | true
number::lt(nonInt(0..inf), int(0..2)) => false | true
number::lt(nonInt(0..inf), int(1..2)) => false | true
number::lt(nonInt(0..inf), int(5..20)) => false | true
number::lt(nonInt(0..inf), int(-20..-5)) => false
number::lt(nonInt(0..inf), int(-10..10)) => false | true
number::lt(nonInt(0..inf), int(0..inf)) => false | true
number::lt(nonInt(0..inf), int(1..inf)) => false | true
number::lt(nonInt(0..inf), int(-inf..0)) => false
number::lt(nonInt(0..inf), int(-inf..1)) => false | true
number::lt(nonInt(0..inf), int(-inf..inf)) => false | true
number::lt(nonInt(0..inf), nonInt(0..1)) => false | true
number::lt(nonInt(0..inf), nonInt(0..2)) => false | true
number::lt(nonInt(0..inf), nonInt(-1..2)) => false | true
number::lt(nonInt(0..inf), nonInt(0..inf)) => false | true
number::lt(nonInt(0..inf), nonInt(-1..inf)) => false | true
number::lt(nonInt(0..inf), nonInt(-inf..0)) => false
number::lt(nonInt(0..inf), nonInt(-inf..1)) => false | true
number::lt(nonInt(0..inf), nonInt(-inf..inf)) => false | true
number::lt(nonInt(0..inf), 1 | int(3..4)) => false | true
number::lt(nonInt(-1..inf), number) => false | true
number::lt(nonInt(-1..inf), -3.14) => false
number::lt(nonInt(-1..inf), -2) => false
number::lt(nonInt(-1..inf), -1) => false
number::lt(nonInt(-1..inf), -0.5) => false | true
number::lt(nonInt(-1..inf), 0) => false | true
number::lt(nonInt(-1..inf), 0.5) => false | true
number::lt(nonInt(-1..inf), 1) => false | true
number::lt(nonInt(-1..inf), 2) => false | true
number::lt(nonInt(-1..inf), 2.78) => false | true
number::lt(nonInt(-1..inf), 3) => false | true
number::lt(nonInt(-1..inf), 3.14) => false | true
number::lt(nonInt(-1..inf), 10) => false | true
number::lt(nonInt(-1..inf), 100) => false | true
number::lt(nonInt(-1..inf), -inf) => false
number::lt(nonInt(-1..inf), inf) => true
number::lt(nonInt(-1..inf), nan) => false
number::lt(nonInt(-1..inf), 0..1) => false | true
number::lt(nonInt(-1..inf), 0!..1) => false | true
number::lt(nonInt(-1..inf), 0..!1) => false | true
number::lt(nonInt(-1..inf), 0..2) => false | true
number::lt(nonInt(-1..inf), 0!..!2) => false | true
number::lt(nonInt(-1..inf), 0.5..1.5) => false | true
number::lt(nonInt(-1..inf), 0.5..2.5) => false | true
number::lt(nonInt(-1..inf), 0.5!..2.5) => false | true
number::lt(nonInt(-1..inf), 0.5..!2.5) => false | true
number::lt(nonInt(-1..inf), -2.56..3.35) => false | true
number::lt(nonInt(-1..inf), 0.5..0.75) => false | true
number::lt(nonInt(-1..inf), 1..2) => false | true
number::lt(nonInt(-1..inf), 0..inf) => false | true
number::lt(nonInt(-1..inf), 0!..inf) => false | true
number::lt(nonInt(-1..inf), 0..!inf) => false | true
number::lt(nonInt(-1..inf), 0!..!inf) => false | true
number::lt(nonInt(-1..inf), 1..inf) => false | true
number::lt(nonInt(-1..inf), 1!..inf) => false | true
number::lt(nonInt(-1..inf), 1..!inf) => false | true
number::lt(nonInt(-1..inf), 2..inf) => false | true
number::lt(nonInt(-1..inf), 2!..inf) => false | true
number::lt(nonInt(-1..inf), 2.5..inf) => false | true
number::lt(nonInt(-1..inf), -inf..0) => false | true
number::lt(nonInt(-1..inf), -inf..inf) => false | true
number::lt(nonInt(-1..inf), -inf!..inf) => false | true
number::lt(nonInt(-1..inf), -inf..!inf) => false | true
number::lt(nonInt(-1..inf), -inf!..!inf) => false | true
number::lt(nonInt(-1..inf), int(0..1)) => false | true
number::lt(nonInt(-1..inf), int(0..2)) => false | true
number::lt(nonInt(-1..inf), int(1..2)) => false | true
number::lt(nonInt(-1..inf), int(5..20)) => false | true
number::lt(nonInt(-1..inf), int(-20..-5)) => false
number::lt(nonInt(-1..inf), int(-10..10)) => false | true
number::lt(nonInt(-1..inf), int(0..inf)) => false | true
number::lt(nonInt(-1..inf), int(1..inf)) => false | true
number::lt(nonInt(-1..inf), int(-inf..0)) => false | true
number::lt(nonInt(-1..inf), int(-inf..1)) => false | true
number::lt(nonInt(-1..inf), int(-inf..inf)) => false | true
number::lt(nonInt(-1..inf), nonInt(0..1)) => false | true
number::lt(nonInt(-1..inf), nonInt(0..2)) => false | true
number::lt(nonInt(-1..inf), nonInt(-1..2)) => false | true
number::lt(nonInt(-1..inf), nonInt(0..inf)) => false | true
number::lt(nonInt(-1..inf), nonInt(-1..inf)) => false | true
number::lt(nonInt(-1..inf), nonInt(-inf..0)) => false | true
number::lt(nonInt(-1..inf), nonInt(-inf..1)) => false | true
number::lt(nonInt(-1..inf), nonInt(-inf..inf)) => false | true
number::lt(nonInt(-1..inf), 1 | int(3..4)) => false | true
number::lt(nonInt(-inf..0), number) => false | true
number::lt(nonInt(-inf..0), -3.14) => false | true
number::lt(nonInt(-inf..0), -2) => false | true
number::lt(nonInt(-inf..0), -1) => false | true
number::lt(nonInt(-inf..0), -0.5) => false | true
number::lt(nonInt(-inf..0), 0) => true
number::lt(nonInt(-inf..0), 0.5) => true
number::lt(nonInt(-inf..0), 1) => true
number::lt(nonInt(-inf..0), 2) => true
number::lt(nonInt(-inf..0), 2.78) => true
number::lt(nonInt(-inf..0), 3) => true
number::lt(nonInt(-inf..0), 3.14) => true
number::lt(nonInt(-inf..0), 10) => true
number::lt(nonInt(-inf..0), 100) => true
number::lt(nonInt(-inf..0), -inf) => false
number::lt(nonInt(-inf..0), inf) => true
number::lt(nonInt(-inf..0), nan) => false
number::lt(nonInt(-inf..0), 0..1) => true
number::lt(nonInt(-inf..0), 0!..1) => true
number::lt(nonInt(-inf..0), 0..!1) => true
number::lt(nonInt(-inf..0), 0..2) => true
number::lt(nonInt(-inf..0), 0!..!2) => true
number::lt(nonInt(-inf..0), 0.5..1.5) => true
number::lt(nonInt(-inf..0), 0.5..2.5) => true
number::lt(nonInt(-inf..0), 0.5!..2.5) => true
number::lt(nonInt(-inf..0), 0.5..!2.5) => true
number::lt(nonInt(-inf..0), -2.56..3.35) => false | true
number::lt(nonInt(-inf..0), 0.5..0.75) => true
number::lt(nonInt(-inf..0), 1..2) => true
number::lt(nonInt(-inf..0), 0..inf) => true
number::lt(nonInt(-inf..0), 0!..inf) => true
number::lt(nonInt(-inf..0), 0..!inf) => true
number::lt(nonInt(-inf..0), 0!..!inf) => true
number::lt(nonInt(-inf..0), 1..inf) => true
number::lt(nonInt(-inf..0), 1!..inf) => true
number::lt(nonInt(-inf..0), 1..!inf) => true
number::lt(nonInt(-inf..0), 2..inf) => true
number::lt(nonInt(-inf..0), 2!..inf) => true
number::lt(nonInt(-inf..0), 2.5..inf) => true
number::lt(nonInt(-inf..0), -inf..0) => false | true
number::lt(nonInt(-inf..0), -inf..inf) => false | true
number::lt(nonInt(-inf..0), -inf!..inf) => false | true
number::lt(nonInt(-inf..0), -inf..!inf) => false | true
number::lt(nonInt(-inf..0), -inf!..!inf) => false | true
number::lt(nonInt(-inf..0), int(0..1)) => true
number::lt(nonInt(-inf..0), int(0..2)) => true
number::lt(nonInt(-inf..0), int(1..2)) => true
number::lt(nonInt(-inf..0), int(5..20)) => true
number::lt(nonInt(-inf..0), int(-20..-5)) => false | true
number::lt(nonInt(-inf..0), int(-10..10)) => false | true
number::lt(nonInt(-inf..0), int(0..inf)) => true
number::lt(nonInt(-inf..0), int(1..inf)) => true
number::lt(nonInt(-inf..0), int(-inf..0)) => false | true
number::lt(nonInt(-inf..0), int(-inf..1)) => false | true
number::lt(nonInt(-inf..0), int(-inf..inf)) => false | true
number::lt(nonInt(-inf..0), nonInt(0..1)) => true
number::lt(nonInt(-inf..0), nonInt(0..2)) => true
number::lt(nonInt(-inf..0), nonInt(-1..2)) => false | true
number::lt(nonInt(-inf..0), nonInt(0..inf)) => true
number::lt(nonInt(-inf..0), nonInt(-1..inf)) => false | true
number::lt(nonInt(-inf..0), nonInt(-inf..0)) => false | true
number::lt(nonInt(-inf..0), nonInt(-inf..1)) => false | true
number::lt(nonInt(-inf..0), nonInt(-inf..inf)) => false | true
number::lt(nonInt(-inf..0), 1 | int(3..4)) => true
number::lt(nonInt(-inf..1), number) => false | true
number::lt(nonInt(-inf..1), -3.14) => false | true
number::lt(nonInt(-inf..1), -2) => false | true
number::lt(nonInt(-inf..1), -1) => false | true
number::lt(nonInt(-inf..1), -0.5) => false | true
number::lt(nonInt(-inf..1), 0) => false | true
number::lt(nonInt(-inf..1), 0.5) => false | true
number::lt(nonInt(-inf..1), 1) => true
number::lt(nonInt(-inf..1), 2) => true
number::lt(nonInt(-inf..1), 2.78) => true
number::lt(nonInt(-inf..1), 3) => true
number::lt(nonInt(-inf..1), 3.14) => true
number::lt(nonInt(-inf..1), 10) => true
number::lt(nonInt(-inf..1), 100) => true
number::lt(nonInt(-inf..1), -inf) => false
number::lt(nonInt(-inf..1), inf) => true
number::lt(nonInt(-inf..1), nan) => false
number::lt(nonInt(-inf..1), 0..1) => false | true
number::lt(nonInt(-inf..1), 0!..1) => false | true
number::lt(nonInt(-inf..1), 0..!1) => false | true
number::lt(nonInt(-inf..1), 0..2) => false | true
number::lt(nonInt(-inf..1), 0!..!2) => false | true
number::lt(nonInt(-inf..1), 0.5..1.5) => false | true
number::lt(nonInt(-inf..1), 0.5..2.5) => false | true
number::lt(nonInt(-inf..1), 0.5!..2.5) => false | true
number::lt(nonInt(-inf..1), 0.5..!2.5) => false | true
number::lt(nonInt(-inf..1), -2.56..3.35) => false | true
number::lt(nonInt(-inf..1), 0.5..0.75) => false | true
number::lt(nonInt(-inf..1), 1..2) => true
number::lt(nonInt(-inf..1), 0..inf) => false | true
number::lt(nonInt(-inf..1), 0!..inf) => false | true
number::lt(nonInt(-inf..1), 0..!inf) => false | true
number::lt(nonInt(-inf..1), 0!..!inf) => false | true
number::lt(nonInt(-inf..1), 1..inf) => true
number::lt(nonInt(-inf..1), 1!..inf) => true
number::lt(nonInt(-inf..1), 1..!inf) => true
number::lt(nonInt(-inf..1), 2..inf) => true
number::lt(nonInt(-inf..1), 2!..inf) => true
number::lt(nonInt(-inf..1), 2.5..inf) => true
number::lt(nonInt(-inf..1), -inf..0) => false | true
number::lt(nonInt(-inf..1), -inf..inf) => false | true
number::lt(nonInt(-inf..1), -inf!..inf) => false | true
number::lt(nonInt(-inf..1), -inf..!inf) => false | true
number::lt(nonInt(-inf..1), -inf!..!inf) => false | true
number::lt(nonInt(-inf..1), int(0..1)) => false | true
number::lt(nonInt(-inf..1), int(0..2)) => false | true
number::lt(nonInt(-inf..1), int(1..2)) => true
number::lt(nonInt(-inf..1), int(5..20)) => true
number::lt(nonInt(-inf..1), int(-20..-5)) => false | true
number::lt(nonInt(-inf..1), int(-10..10)) => false | true
number::lt(nonInt(-inf..1), int(0..inf)) => false | true
number::lt(nonInt(-inf..1), int(1..inf)) => true
number::lt(nonInt(-inf..1), int(-inf..0)) => false | true
number::lt(nonInt(-inf..1), int(-inf..1)) => false | true
number::lt(nonInt(-inf..1), int(-inf..inf)) => false | true
number::lt(nonInt(-inf..1), nonInt(0..1)) => false | true
number::lt(nonInt(-inf..1), nonInt(0..2)) => false | true
number::lt(nonInt(-inf..1), nonInt(-1..2)) => false | true
number::lt(nonInt(-inf..1), nonInt(0..inf)) => false | true
number::lt(nonInt(-inf..1), nonInt(-1..inf)) => false | true
number::lt(nonInt(-inf..1), nonInt(-inf..0)) => false | true
number::lt(nonInt(-inf..1), nonInt(-inf..1)) => false | true
number::lt(nonInt(-inf..1), nonInt(-inf..inf)) => false | true
number::lt(nonInt(-inf..1), 1 | int(3..4)) => true
number::lt(nonInt(-inf..inf), number) => false | true
number::lt(nonInt(-inf..inf), -3.14) => false | true
number::lt(nonInt(-inf..inf), -2) => false | true
number::lt(nonInt(-inf..inf), -1) => false | true
number::lt(nonInt(-inf..inf), -0.5) => false | true
number::lt(nonInt(-inf..inf), 0) => false | true
number::lt(nonInt(-inf..inf), 0.5) => false | true
number::lt(nonInt(-inf..inf), 1) => false | true
number::lt(nonInt(-inf..inf), 2) => false | true
number::lt(nonInt(-inf..inf), 2.78) => false | true
number::lt(nonInt(-inf..inf), 3) => false | true
number::lt(nonInt(-inf..inf), 3.14) => false | true
number::lt(nonInt(-inf..inf), 10) => false | true
number::lt(nonInt(-inf..inf), 100) => false | true
number::lt(nonInt(-inf..inf), -inf) => false
number::lt(nonInt(-inf..inf), inf) => true
number::lt(nonInt(-inf..inf), nan) => false
number::lt(nonInt(-inf..inf), 0..1) => false | true
number::lt(nonInt(-inf..inf), 0!..1) => false | true
number::lt(nonInt(-inf..inf), 0..!1) => false | true
number::lt(nonInt(-inf..inf), 0..2) => false | true
number::lt(nonInt(-inf..inf), 0!..!2) => false | true
number::lt(nonInt(-inf..inf), 0.5..1.5) => false | true
number::lt(nonInt(-inf..inf), 0.5..2.5) => false | true
number::lt(nonInt(-inf..inf), 0.5!..2.5) => false | true
number::lt(nonInt(-inf..inf), 0.5..!2.5) => false | true
number::lt(nonInt(-inf..inf), -2.56..3.35) => false | true
number::lt(nonInt(-inf..inf), 0.5..0.75) => false | true
number::lt(nonInt(-inf..inf), 1..2) => false | true
number::lt(nonInt(-inf..inf), 0..inf) => false | true
number::lt(nonInt(-inf..inf), 0!..inf) => false | true
number::lt(nonInt(-inf..inf), 0..!inf) => false | true
number::lt(nonInt(-inf..inf), 0!..!inf) => false | true
number::lt(nonInt(-inf..inf), 1..inf) => false | true
number::lt(nonInt(-inf..inf), 1!..inf) => false | true
number::lt(nonInt(-inf..inf), 1..!inf) => false | true
number::lt(nonInt(-inf..inf), 2..inf) => false | true
number::lt(nonInt(-inf..inf), 2!..inf) => false | true
number::lt(nonInt(-inf..inf), 2.5..inf) => false | true
number::lt(nonInt(-inf..inf), -inf..0) => false | true
number::lt(nonInt(-inf..inf), -inf..inf) => false | true
number::lt(nonInt(-inf..inf), -inf!..inf) => false | true
number::lt(nonInt(-inf..inf), -inf..!inf) => false | true
number::lt(nonInt(-inf..inf), -inf!..!inf) => false | true
number::lt(nonInt(-inf..inf), int(0..1)) => false | true
number::lt(nonInt(-inf..inf), int(0..2)) => false | true
number::lt(nonInt(-inf..inf), int(1..2)) => false | true
number::lt(nonInt(-inf..inf), int(5..20)) => false | true
number::lt(nonInt(-inf..inf), int(-20..-5)) => false | true
number::lt(nonInt(-inf..inf), int(-10..10)) => false | true
number::lt(nonInt(-inf..inf), int(0..inf)) => false | true
number::lt(nonInt(-inf..inf), int(1..inf)) => false | true
number::lt(nonInt(-inf..inf), int(-inf..0)) => false | true
number::lt(nonInt(-inf..inf), int(-inf..1)) => false | true
number::lt(nonInt(-inf..inf), int(-inf..inf)) => false | true
number::lt(nonInt(-inf..inf), nonInt(0..1)) => false | true
number::lt(nonInt(-inf..inf), nonInt(0..2)) => false | true
number::lt(nonInt(-inf..inf), nonInt(-1..2)) => false | true
number::lt(nonInt(-inf..inf), nonInt(0..inf)) => false | true
number::lt(nonInt(-inf..inf), nonInt(-1..inf)) => false | true
number::lt(nonInt(-inf..inf), nonInt(-inf..0)) => false | true
number::lt(nonInt(-inf..inf), nonInt(-inf..1)) => false | true
number::lt(nonInt(-inf..inf), nonInt(-inf..inf)) => false | true
number::lt(nonInt(-inf..inf), 1 | int(3..4)) => false | true
number::lt(1 | int(3..4), number) => false | true
number::lt(1 | int(3..4), -3.14) => false
number::lt(1 | int(3..4), -2) => false
number::lt(1 | int(3..4), -1) => false
number::lt(1 | int(3..4), -0.5) => false
number::lt(1 | int(3..4), 0) => false
number::lt(1 | int(3..4), 0.5) => false
number::lt(1 | int(3..4), 1) => false
number::lt(1 | int(3..4), 2) => false | true
number::lt(1 | int(3..4), 2.78) => false | true
number::lt(1 | int(3..4), 3) => false | true
number::lt(1 | int(3..4), 3.14) => false | true
number::lt(1 | int(3..4), 10) => true
number::lt(1 | int(3..4), 100) => true
number::lt(1 | int(3..4), -inf) => false
number::lt(1 | int(3..4), inf) => true
number::lt(1 | int(3..4), nan) => false
number::lt(1 | int(3..4), 0..1) => false
number::lt(1 | int(3..4), 0!..1) => false
number::lt(1 | int(3..4), 0..!1) => false
number::lt(1 | int(3..4), 0..2) => false | true
number::lt(1 | int(3..4), 0!..!2) => false | true
number::lt(1 | int(3..4), 0.5..1.5) => false | true
number::lt(1 | int(3..4), 0.5..2.5) => false | true
number::lt(1 | int(3..4), 0.5!..2.5) => false | true
number::lt(1 | int(3..4), 0.5..!2.5) => false | true
number::lt(1 | int(3..4), -2.56..3.35) => false | true
number::lt(1 | int(3..4), 0.5..0.75) => false
number::lt(1 | int(3..4), 1..2) => false | true
number::lt(1 | int(3..4), 0..inf) => false | true
number::lt(1 | int(3..4), 0!..inf) => false | true
number::lt(1 | int(3..4), 0..!inf) => false | true
number::lt(1 | int(3..4), 0!..!inf) => false | true
number::lt(1 | int(3..4), 1..inf) => false | true
number::lt(1 | int(3..4), 1!..inf) => false | true
number::lt(1 | int(3..4), 1..!inf) => false | true
number::lt(1 | int(3..4), 2..inf) => false | true
number::lt(1 | int(3..4), 2!..inf) => false | true
number::lt(1 | int(3..4), 2.5..inf) => false | true
number::lt(1 | int(3..4), -inf..0) => false
number::lt(1 | int(3..4), -inf..inf) => false | true
number::lt(1 | int(3..4), -inf!..inf) => false | true
number::lt(1 | int(3..4), -inf..!inf) => false | true
number::lt(1 | int(3..4), -inf!..!inf) => false | true
number::lt(1 | int(3..4), int(0..1)) => false
number::lt(1 | int(3..4), int(0..2)) => false | true
number::lt(1 | int(3..4), int(1..2)) => false | true
number::lt(1 | int(3..4), int(5..20)) => true
number::lt(1 | int(3..4), int(-20..-5)) => false
number::lt(1 | int(3..4), int(-10..10)) => false | true
number::lt(1 | int(3..4), int(0..inf)) => false | true
number::lt(1 | int(3..4), int(1..inf)) => false | true
number::lt(1 | int(3..4), int(-inf..0)) => false
number::lt(1 | int(3..4), int(-inf..1)) => false
number::lt(1 | int(3..4), int(-inf..inf)) => false | true
number::lt(1 | int(3..4), nonInt(0..1)) => false
number::lt(1 | int(3..4), nonInt(0..2)) => false | true
number::lt(1 | int(3..4), nonInt(-1..2)) => false | true
number::lt(1 | int(3..4), nonInt(0..inf)) => false | true
number::lt(1 | int(3..4), nonInt(-1..inf)) => false | true
number::lt(1 | int(3..4), nonInt(-inf..0)) => false
number::lt(1 | int(3..4), nonInt(-inf..1)) => false
number::lt(1 | int(3..4), nonInt(-inf..inf)) => false | true
number::lt(1 | int(3..4), 1 | int(3..4)) => false | true"
`;

exports[`Builtin functions number::lte evaluate 1`] = `
"number::lte(number, number) => false | true
number::lte(number, -3.14) => false | true
number::lte(number, -2) => false | true
number::lte(number, -1) => false | true
number::lte(number, -0.5) => false | true
number::lte(number, 0) => false | true
number::lte(number, 0.5) => false | true
number::lte(number, 1) => false | true
number::lte(number, 2) => false | true
number::lte(number, 2.78) => false | true
number::lte(number, 3) => false | true
number::lte(number, 3.14) => false | true
number::lte(number, 10) => false | true
number::lte(number, 100) => false | true
number::lte(number, -inf) => false | true
number::lte(number, inf) => false | true
number::lte(number, nan) => false
number::lte(number, 0..1) => false | true
number::lte(number, 0!..1) => false | true
number::lte(number, 0..!1) => false | true
number::lte(number, 0..2) => false | true
number::lte(number, 0!..!2) => false | true
number::lte(number, 0.5..1.5) => false | true
number::lte(number, 0.5..2.5) => false | true
number::lte(number, 0.5!..2.5) => false | true
number::lte(number, 0.5..!2.5) => false | true
number::lte(number, -2.56..3.35) => false | true
number::lte(number, 0.5..0.75) => false | true
number::lte(number, 1..2) => false | true
number::lte(number, 0..inf) => false | true
number::lte(number, 0!..inf) => false | true
number::lte(number, 0..!inf) => false | true
number::lte(number, 0!..!inf) => false | true
number::lte(number, 1..inf) => false | true
number::lte(number, 1!..inf) => false | true
number::lte(number, 1..!inf) => false | true
number::lte(number, 2..inf) => false | true
number::lte(number, 2!..inf) => false | true
number::lte(number, 2.5..inf) => false | true
number::lte(number, -inf..0) => false | true
number::lte(number, -inf..inf) => false | true
number::lte(number, -inf!..inf) => false | true
number::lte(number, -inf..!inf) => false | true
number::lte(number, -inf!..!inf) => false | true
number::lte(number, int(0..1)) => false | true
number::lte(number, int(0..2)) => false | true
number::lte(number, int(1..2)) => false | true
number::lte(number, int(5..20)) => false | true
number::lte(number, int(-20..-5)) => false | true
number::lte(number, int(-10..10)) => false | true
number::lte(number, int(0..inf)) => false | true
number::lte(number, int(1..inf)) => false | true
number::lte(number, int(-inf..0)) => false | true
number::lte(number, int(-inf..1)) => false | true
number::lte(number, int(-inf..inf)) => false | true
number::lte(number, nonInt(0..1)) => false | true
number::lte(number, nonInt(0..2)) => false | true
number::lte(number, nonInt(-1..2)) => false | true
number::lte(number, nonInt(0..inf)) => false | true
number::lte(number, nonInt(-1..inf)) => false | true
number::lte(number, nonInt(-inf..0)) => false | true
number::lte(number, nonInt(-inf..1)) => false | true
number::lte(number, nonInt(-inf..inf)) => false | true
number::lte(number, 1 | int(3..4)) => false | true
number::lte(-3.14, number) => false | true
number::lte(-3.14, -3.14) => true
number::lte(-3.14, -2) => true
number::lte(-3.14, -1) => true
number::lte(-3.14, -0.5) => true
number::lte(-3.14, 0) => true
number::lte(-3.14, 0.5) => true
number::lte(-3.14, 1) => true
number::lte(-3.14, 2) => true
number::lte(-3.14, 2.78) => true
number::lte(-3.14, 3) => true
number::lte(-3.14, 3.14) => true
number::lte(-3.14, 10) => true
number::lte(-3.14, 100) => true
number::lte(-3.14, -inf) => false
number::lte(-3.14, inf) => true
number::lte(-3.14, nan) => false
number::lte(-3.14, 0..1) => true
number::lte(-3.14, 0!..1) => true
number::lte(-3.14, 0..!1) => true
number::lte(-3.14, 0..2) => true
number::lte(-3.14, 0!..!2) => true
number::lte(-3.14, 0.5..1.5) => true
number::lte(-3.14, 0.5..2.5) => true
number::lte(-3.14, 0.5!..2.5) => true
number::lte(-3.14, 0.5..!2.5) => true
number::lte(-3.14, -2.56..3.35) => true
number::lte(-3.14, 0.5..0.75) => true
number::lte(-3.14, 1..2) => true
number::lte(-3.14, 0..inf) => true
number::lte(-3.14, 0!..inf) => true
number::lte(-3.14, 0..!inf) => true
number::lte(-3.14, 0!..!inf) => true
number::lte(-3.14, 1..inf) => true
number::lte(-3.14, 1!..inf) => true
number::lte(-3.14, 1..!inf) => true
number::lte(-3.14, 2..inf) => true
number::lte(-3.14, 2!..inf) => true
number::lte(-3.14, 2.5..inf) => true
number::lte(-3.14, -inf..0) => false | true
number::lte(-3.14, -inf..inf) => false | true
number::lte(-3.14, -inf!..inf) => false | true
number::lte(-3.14, -inf..!inf) => false | true
number::lte(-3.14, -inf!..!inf) => false | true
number::lte(-3.14, int(0..1)) => true
number::lte(-3.14, int(0..2)) => true
number::lte(-3.14, int(1..2)) => true
number::lte(-3.14, int(5..20)) => true
number::lte(-3.14, int(-20..-5)) => false
number::lte(-3.14, int(-10..10)) => false | true
number::lte(-3.14, int(0..inf)) => true
number::lte(-3.14, int(1..inf)) => true
number::lte(-3.14, int(-inf..0)) => false | true
number::lte(-3.14, int(-inf..1)) => false | true
number::lte(-3.14, int(-inf..inf)) => false | true
number::lte(-3.14, nonInt(0..1)) => true
number::lte(-3.14, nonInt(0..2)) => true
number::lte(-3.14, nonInt(-1..2)) => true
number::lte(-3.14, nonInt(0..inf)) => true
number::lte(-3.14, nonInt(-1..inf)) => true
number::lte(-3.14, nonInt(-inf..0)) => false | true
number::lte(-3.14, nonInt(-inf..1)) => false | true
number::lte(-3.14, nonInt(-inf..inf)) => false | true
number::lte(-3.14, 1 | int(3..4)) => true
number::lte(-2, number) => false | true
number::lte(-2, -3.14) => false
number::lte(-2, -2) => true
number::lte(-2, -1) => true
number::lte(-2, -0.5) => true
number::lte(-2, 0) => true
number::lte(-2, 0.5) => true
number::lte(-2, 1) => true
number::lte(-2, 2) => true
number::lte(-2, 2.78) => true
number::lte(-2, 3) => true
number::lte(-2, 3.14) => true
number::lte(-2, 10) => true
number::lte(-2, 100) => true
number::lte(-2, -inf) => false
number::lte(-2, inf) => true
number::lte(-2, nan) => false
number::lte(-2, 0..1) => true
number::lte(-2, 0!..1) => true
number::lte(-2, 0..!1) => true
number::lte(-2, 0..2) => true
number::lte(-2, 0!..!2) => true
number::lte(-2, 0.5..1.5) => true
number::lte(-2, 0.5..2.5) => true
number::lte(-2, 0.5!..2.5) => true
number::lte(-2, 0.5..!2.5) => true
number::lte(-2, -2.56..3.35) => false | true
number::lte(-2, 0.5..0.75) => true
number::lte(-2, 1..2) => true
number::lte(-2, 0..inf) => true
number::lte(-2, 0!..inf) => true
number::lte(-2, 0..!inf) => true
number::lte(-2, 0!..!inf) => true
number::lte(-2, 1..inf) => true
number::lte(-2, 1!..inf) => true
number::lte(-2, 1..!inf) => true
number::lte(-2, 2..inf) => true
number::lte(-2, 2!..inf) => true
number::lte(-2, 2.5..inf) => true
number::lte(-2, -inf..0) => false | true
number::lte(-2, -inf..inf) => false | true
number::lte(-2, -inf!..inf) => false | true
number::lte(-2, -inf..!inf) => false | true
number::lte(-2, -inf!..!inf) => false | true
number::lte(-2, int(0..1)) => true
number::lte(-2, int(0..2)) => true
number::lte(-2, int(1..2)) => true
number::lte(-2, int(5..20)) => true
number::lte(-2, int(-20..-5)) => false
number::lte(-2, int(-10..10)) => false | true
number::lte(-2, int(0..inf)) => true
number::lte(-2, int(1..inf)) => true
number::lte(-2, int(-inf..0)) => false | true
number::lte(-2, int(-inf..1)) => false | true
number::lte(-2, int(-inf..inf)) => false | true
number::lte(-2, nonInt(0..1)) => true
number::lte(-2, nonInt(0..2)) => true
number::lte(-2, nonInt(-1..2)) => true
number::lte(-2, nonInt(0..inf)) => true
number::lte(-2, nonInt(-1..inf)) => true
number::lte(-2, nonInt(-inf..0)) => false | true
number::lte(-2, nonInt(-inf..1)) => false | true
number::lte(-2, nonInt(-inf..inf)) => false | true
number::lte(-2, 1 | int(3..4)) => true
number::lte(-1, number) => false | true
number::lte(-1, -3.14) => false
number::lte(-1, -2) => false
number::lte(-1, -1) => true
number::lte(-1, -0.5) => true
number::lte(-1, 0) => true
number::lte(-1, 0.5) => true
number::lte(-1, 1) => true
number::lte(-1, 2) => true
number::lte(-1, 2.78) => true
number::lte(-1, 3) => true
number::lte(-1, 3.14) => true
number::lte(-1, 10) => true
number::lte(-1, 100) => true
number::lte(-1, -inf) => false
number::lte(-1, inf) => true
number::lte(-1, nan) => false
number::lte(-1, 0..1) => true
number::lte(-1, 0!..1) => true
number::lte(-1, 0..!1) => true
number::lte(-1, 0..2) => true
number::lte(-1, 0!..!2) => true
number::lte(-1, 0.5..1.5) => true
number::lte(-1, 0.5..2.5) => true
number::lte(-1, 0.5!..2.5) => true
number::lte(-1, 0.5..!2.5) => true
number::lte(-1, -2.56..3.35) => false | true
number::lte(-1, 0.5..0.75) => true
number::lte(-1, 1..2) => true
number::lte(-1, 0..inf) => true
number::lte(-1, 0!..inf) => true
number::lte(-1, 0..!inf) => true
number::lte(-1, 0!..!inf) => true
number::lte(-1, 1..inf) => true
number::lte(-1, 1!..inf) => true
number::lte(-1, 1..!inf) => true
number::lte(-1, 2..inf) => true
number::lte(-1, 2!..inf) => true
number::lte(-1, 2.5..inf) => true
number::lte(-1, -inf..0) => false | true
number::lte(-1, -inf..inf) => false | true
number::lte(-1, -inf!..inf) => false | true
number::lte(-1, -inf..!inf) => false | true
number::lte(-1, -inf!..!inf) => false | true
number::lte(-1, int(0..1)) => true
number::lte(-1, int(0..2)) => true
number::lte(-1, int(1..2)) => true
number::lte(-1, int(5..20)) => true
number::lte(-1, int(-20..-5)) => false
number::lte(-1, int(-10..10)) => false | true
number::lte(-1, int(0..inf)) => true
number::lte(-1, int(1..inf)) => true
number::lte(-1, int(-inf..0)) => false | true
number::lte(-1, int(-inf..1)) => false | true
number::lte(-1, int(-inf..inf)) => false | true
number::lte(-1, nonInt(0..1)) => true
number::lte(-1, nonInt(0..2)) => true
number::lte(-1, nonInt(-1..2)) => true
number::lte(-1, nonInt(0..inf)) => true
number::lte(-1, nonInt(-1..inf)) => true
number::lte(-1, nonInt(-inf..0)) => false | true
number::lte(-1, nonInt(-inf..1)) => false | true
number::lte(-1, nonInt(-inf..inf)) => false | true
number::lte(-1, 1 | int(3..4)) => true
number::lte(-0.5, number) => false | true
number::lte(-0.5, -3.14) => false
number::lte(-0.5, -2) => false
number::lte(-0.5, -1) => false
number::lte(-0.5, -0.5) => true
number::lte(-0.5, 0) => true
number::lte(-0.5, 0.5) => true
number::lte(-0.5, 1) => true
number::lte(-0.5, 2) => true
number::lte(-0.5, 2.78) => true
number::lte(-0.5, 3) => true
number::lte(-0.5, 3.14) => true
number::lte(-0.5, 10) => true
number::lte(-0.5, 100) => true
number::lte(-0.5, -inf) => false
number::lte(-0.5, inf) => true
number::lte(-0.5, nan) => false
number::lte(-0.5, 0..1) => true
number::lte(-0.5, 0!..1) => true
number::lte(-0.5, 0..!1) => true
number::lte(-0.5, 0..2) => true
number::lte(-0.5, 0!..!2) => true
number::lte(-0.5, 0.5..1.5) => true
number::lte(-0.5, 0.5..2.5) => true
number::lte(-0.5, 0.5!..2.5) => true
number::lte(-0.5, 0.5..!2.5) => true
number::lte(-0.5, -2.56..3.35) => false | true
number::lte(-0.5, 0.5..0.75) => true
number::lte(-0.5, 1..2) => true
number::lte(-0.5, 0..inf) => true
number::lte(-0.5, 0!..inf) => true
number::lte(-0.5, 0..!inf) => true
number::lte(-0.5, 0!..!inf) => true
number::lte(-0.5, 1..inf) => true
number::lte(-0.5, 1!..inf) => true
number::lte(-0.5, 1..!inf) => true
number::lte(-0.5, 2..inf) => true
number::lte(-0.5, 2!..inf) => true
number::lte(-0.5, 2.5..inf) => true
number::lte(-0.5, -inf..0) => false | true
number::lte(-0.5, -inf..inf) => false | true
number::lte(-0.5, -inf!..inf) => false | true
number::lte(-0.5, -inf..!inf) => false | true
number::lte(-0.5, -inf!..!inf) => false | true
number::lte(-0.5, int(0..1)) => true
number::lte(-0.5, int(0..2)) => true
number::lte(-0.5, int(1..2)) => true
number::lte(-0.5, int(5..20)) => true
number::lte(-0.5, int(-20..-5)) => false
number::lte(-0.5, int(-10..10)) => false | true
number::lte(-0.5, int(0..inf)) => true
number::lte(-0.5, int(1..inf)) => true
number::lte(-0.5, int(-inf..0)) => false | true
number::lte(-0.5, int(-inf..1)) => false | true
number::lte(-0.5, int(-inf..inf)) => false | true
number::lte(-0.5, nonInt(0..1)) => true
number::lte(-0.5, nonInt(0..2)) => true
number::lte(-0.5, nonInt(-1..2)) => false | true
number::lte(-0.5, nonInt(0..inf)) => true
number::lte(-0.5, nonInt(-1..inf)) => false | true
number::lte(-0.5, nonInt(-inf..0)) => false | true
number::lte(-0.5, nonInt(-inf..1)) => false | true
number::lte(-0.5, nonInt(-inf..inf)) => false | true
number::lte(-0.5, 1 | int(3..4)) => true
number::lte(0, number) => false | true
number::lte(0, -3.14) => false
number::lte(0, -2) => false
number::lte(0, -1) => false
number::lte(0, -0.5) => false
number::lte(0, 0) => true
number::lte(0, 0.5) => true
number::lte(0, 1) => true
number::lte(0, 2) => true
number::lte(0, 2.78) => true
number::lte(0, 3) => true
number::lte(0, 3.14) => true
number::lte(0, 10) => true
number::lte(0, 100) => true
number::lte(0, -inf) => false
number::lte(0, inf) => true
number::lte(0, nan) => false
number::lte(0, 0..1) => true
number::lte(0, 0!..1) => true
number::lte(0, 0..!1) => true
number::lte(0, 0..2) => true
number::lte(0, 0!..!2) => true
number::lte(0, 0.5..1.5) => true
number::lte(0, 0.5..2.5) => true
number::lte(0, 0.5!..2.5) => true
number::lte(0, 0.5..!2.5) => true
number::lte(0, -2.56..3.35) => false | true
number::lte(0, 0.5..0.75) => true
number::lte(0, 1..2) => true
number::lte(0, 0..inf) => true
number::lte(0, 0!..inf) => true
number::lte(0, 0..!inf) => true
number::lte(0, 0!..!inf) => true
number::lte(0, 1..inf) => true
number::lte(0, 1!..inf) => true
number::lte(0, 1..!inf) => true
number::lte(0, 2..inf) => true
number::lte(0, 2!..inf) => true
number::lte(0, 2.5..inf) => true
number::lte(0, -inf..0) => false | true
number::lte(0, -inf..inf) => false | true
number::lte(0, -inf!..inf) => false | true
number::lte(0, -inf..!inf) => false | true
number::lte(0, -inf!..!inf) => false | true
number::lte(0, int(0..1)) => true
number::lte(0, int(0..2)) => true
number::lte(0, int(1..2)) => true
number::lte(0, int(5..20)) => true
number::lte(0, int(-20..-5)) => false
number::lte(0, int(-10..10)) => false | true
number::lte(0, int(0..inf)) => true
number::lte(0, int(1..inf)) => true
number::lte(0, int(-inf..0)) => false | true
number::lte(0, int(-inf..1)) => false | true
number::lte(0, int(-inf..inf)) => false | true
number::lte(0, nonInt(0..1)) => true
number::lte(0, nonInt(0..2)) => true
number::lte(0, nonInt(-1..2)) => false | true
number::lte(0, nonInt(0..inf)) => true
number::lte(0, nonInt(-1..inf)) => false | true
number::lte(0, nonInt(-inf..0)) => false
number::lte(0, nonInt(-inf..1)) => false | true
number::lte(0, nonInt(-inf..inf)) => false | true
number::lte(0, 1 | int(3..4)) => true
number::lte(0.5, number) => false | true
number::lte(0.5, -3.14) => false
number::lte(0.5, -2) => false
number::lte(0.5, -1) => false
number::lte(0.5, -0.5) => false
number::lte(0.5, 0) => false
number::lte(0.5, 0.5) => true
number::lte(0.5, 1) => true
number::lte(0.5, 2) => true
number::lte(0.5, 2.78) => true
number::lte(0.5, 3) => true
number::lte(0.5, 3.14) => true
number::lte(0.5, 10) => true
number::lte(0.5, 100) => true
number::lte(0.5, -inf) => false
number::lte(0.5, inf) => true
number::lte(0.5, nan) => false
number::lte(0.5, 0..1) => false | true
number::lte(0.5, 0!..1) => false | true
number::lte(0.5, 0..!1) => false | true
number::lte(0.5, 0..2) => false | true
number::lte(0.5, 0!..!2) => false | true
number::lte(0.5, 0.5..1.5) => true
number::lte(0.5, 0.5..2.5) => true
number::lte(0.5, 0.5!..2.5) => true
number::lte(0.5, 0.5..!2.5) => true
number::lte(0.5, -2.56..3.35) => false | true
number::lte(0.5, 0.5..0.75) => true
number::lte(0.5, 1..2) => true
number::lte(0.5, 0..inf) => false | true
number::lte(0.5, 0!..inf) => false | true
number::lte(0.5, 0..!inf) => false | true
number::lte(0.5, 0!..!inf) => false | true
number::lte(0.5, 1..inf) => true
number::lte(0.5, 1!..inf) => true
number::lte(0.5, 1..!inf) => true
number::lte(0.5, 2..inf) => true
number::lte(0.5, 2!..inf) => true
number::lte(0.5, 2.5..inf) => true
number::lte(0.5, -inf..0) => false
number::lte(0.5, -inf..inf) => false | true
number::lte(0.5, -inf!..inf) => false | true
number::lte(0.5, -inf..!inf) => false | true
number::lte(0.5, -inf!..!inf) => false | true
number::lte(0.5, int(0..1)) => false | true
number::lte(0.5, int(0..2)) => false | true
number::lte(0.5, int(1..2)) => true
number::lte(0.5, int(5..20)) => true
number::lte(0.5, int(-20..-5)) => false
number::lte(0.5, int(-10..10)) => false | true
number::lte(0.5, int(0..inf)) => false | true
number::lte(0.5, int(1..inf)) => true
number::lte(0.5, int(-inf..0)) => false
number::lte(0.5, int(-inf..1)) => false | true
number::lte(0.5, int(-inf..inf)) => false | true
number::lte(0.5, nonInt(0..1)) => false | true
number::lte(0.5, nonInt(0..2)) => false | true
number::lte(0.5, nonInt(-1..2)) => false | true
number::lte(0.5, nonInt(0..inf)) => false | true
number::lte(0.5, nonInt(-1..inf)) => false | true
number::lte(0.5, nonInt(-inf..0)) => false
number::lte(0.5, nonInt(-inf..1)) => false | true
number::lte(0.5, nonInt(-inf..inf)) => false | true
number::lte(0.5, 1 | int(3..4)) => true
number::lte(1, number) => false | true
number::lte(1, -3.14) => false
number::lte(1, -2) => false
number::lte(1, -1) => false
number::lte(1, -0.5) => false
number::lte(1, 0) => false
number::lte(1, 0.5) => false
number::lte(1, 1) => true
number::lte(1, 2) => true
number::lte(1, 2.78) => true
number::lte(1, 3) => true
number::lte(1, 3.14) => true
number::lte(1, 10) => true
number::lte(1, 100) => true
number::lte(1, -inf) => false
number::lte(1, inf) => true
number::lte(1, nan) => false
number::lte(1, 0..1) => false | true
number::lte(1, 0!..1) => false | true
number::lte(1, 0..!1) => false
number::lte(1, 0..2) => false | true
number::lte(1, 0!..!2) => false | true
number::lte(1, 0.5..1.5) => false | true
number::lte(1, 0.5..2.5) => false | true
number::lte(1, 0.5!..2.5) => false | true
number::lte(1, 0.5..!2.5) => false | true
number::lte(1, -2.56..3.35) => false | true
number::lte(1, 0.5..0.75) => false
number::lte(1, 1..2) => true
number::lte(1, 0..inf) => false | true
number::lte(1, 0!..inf) => false | true
number::lte(1, 0..!inf) => false | true
number::lte(1, 0!..!inf) => false | true
number::lte(1, 1..inf) => true
number::lte(1, 1!..inf) => true
number::lte(1, 1..!inf) => true
number::lte(1, 2..inf) => true
number::lte(1, 2!..inf) => true
number::lte(1, 2.5..inf) => true
number::lte(1, -inf..0) => false
number::lte(1, -inf..inf) => false | true
number::lte(1, -inf!..inf) => false | true
number::lte(1, -inf..!inf) => false | true
number::lte(1, -inf!..!inf) => false | true
number::lte(1, int(0..1)) => false | true
number::lte(1, int(0..2)) => false | true
number::lte(1, int(1..2)) => true
number::lte(1, int(5..20)) => true
number::lte(1, int(-20..-5)) => false
number::lte(1, int(-10..10)) => false | true
number::lte(1, int(0..inf)) => false | true
number::lte(1, int(1..inf)) => true
number::lte(1, int(-inf..0)) => false
number::lte(1, int(-inf..1)) => false | true
number::lte(1, int(-inf..inf)) => false | true
number::lte(1, nonInt(0..1)) => false
number::lte(1, nonInt(0..2)) => false | true
number::lte(1, nonInt(-1..2)) => false | true
number::lte(1, nonInt(0..inf)) => false | true
number::lte(1, nonInt(-1..inf)) => false | true
number::lte(1, nonInt(-inf..0)) => false
number::lte(1, nonInt(-inf..1)) => false
number::lte(1, nonInt(-inf..inf)) => false | true
number::lte(1, 1 | int(3..4)) => true
number::lte(2, number) => false | true
number::lte(2, -3.14) => false
number::lte(2, -2) => false
number::lte(2, -1) => false
number::lte(2, -0.5) => false
number::lte(2, 0) => false
number::lte(2, 0.5) => false
number::lte(2, 1) => false
number::lte(2, 2) => true
number::lte(2, 2.78) => true
number::lte(2, 3) => true
number::lte(2, 3.14) => true
number::lte(2, 10) => true
number::lte(2, 100) => true
number::lte(2, -inf) => false
number::lte(2, inf) => true
number::lte(2, nan) => false
number::lte(2, 0..1) => false
number::lte(2, 0!..1) => false
number::lte(2, 0..!1) => false
number::lte(2, 0..2) => false | true
number::lte(2, 0!..!2) => false
number::lte(2, 0.5..1.5) => false
number::lte(2, 0.5..2.5) => false | true
number::lte(2, 0.5!..2.5) => false | true
number::lte(2, 0.5..!2.5) => false | true
number::lte(2, -2.56..3.35) => false | true
number::lte(2, 0.5..0.75) => false
number::lte(2, 1..2) => false | true
number::lte(2, 0..inf) => false | true
number::lte(2, 0!..inf) => false | true
number::lte(2, 0..!inf) => false | true
number::lte(2, 0!..!inf) => false | true
number::lte(2, 1..inf) => false | true
number::lte(2, 1!..inf) => false | true
number::lte(2, 1..!inf) => false | true
number::lte(2, 2..inf) => true
number::lte(2, 2!..inf) => true
number::lte(2, 2.5..inf) => true
number::lte(2, -inf..0) => false
number::lte(2, -inf..inf) => false | true
number::lte(2, -inf!..inf) => false | true
number::lte(2, -inf..!inf) => false | true
number::lte(2, -inf!..!inf) => false | true
number::lte(2, int(0..1)) => false
number::lte(2, int(0..2)) => false | true
number::lte(2, int(1..2)) => false | true
number::lte(2, int(5..20)) => true
number::lte(2, int(-20..-5)) => false
number::lte(2, int(-10..10)) => false | true
number::lte(2, int(0..inf)) => false | true
number::lte(2, int(1..inf)) => false | true
number::lte(2, int(-inf..0)) => false
number::lte(2, int(-inf..1)) => false
number::lte(2, int(-inf..inf)) => false | true
number::lte(2, nonInt(0..1)) => false
number::lte(2, nonInt(0..2)) => false
number::lte(2, nonInt(-1..2)) => false
number::lte(2, nonInt(0..inf)) => false | true
number::lte(2, nonInt(-1..inf)) => false | true
number::lte(2, nonInt(-inf..0)) => false
number::lte(2, nonInt(-inf..1)) => false
number::lte(2, nonInt(-inf..inf)) => false | true
number::lte(2, 1 | int(3..4)) => false | true
number::lte(2.78, number) => false | true
number::lte(2.78, -3.14) => false
number::lte(2.78, -2) => false
number::lte(2.78, -1) => false
number::lte(2.78, -0.5) => false
number::lte(2.78, 0) => false
number::lte(2.78, 0.5) => false
number::lte(2.78, 1) => false
number::lte(2.78, 2) => false
number::lte(2.78, 2.78) => true
number::lte(2.78, 3) => true
number::lte(2.78, 3.14) => true
number::lte(2.78, 10) => true
number::lte(2.78, 100) => true
number::lte(2.78, -inf) => false
number::lte(2.78, inf) => true
number::lte(2.78, nan) => false
number::lte(2.78, 0..1) => false
number::lte(2.78, 0!..1) => false
number::lte(2.78, 0..!1) => false
number::lte(2.78, 0..2) => false
number::lte(2.78, 0!..!2) => false
number::lte(2.78, 0.5..1.5) => false
number::lte(2.78, 0.5..2.5) => false
number::lte(2.78, 0.5!..2.5) => false
number::lte(2.78, 0.5..!2.5) => false
number::lte(2.78, -2.56..3.35) => false | true
number::lte(2.78, 0.5..0.75) => false
number::lte(2.78, 1..2) => false
number::lte(2.78, 0..inf) => false | true
number::lte(2.78, 0!..inf) => false | true
number::lte(2.78, 0..!inf) => false | true
number::lte(2.78, 0!..!inf) => false | true
number::lte(2.78, 1..inf) => false | true
number::lte(2.78, 1!..inf) => false | true
number::lte(2.78, 1..!inf) => false | true
number::lte(2.78, 2..inf) => false | true
number::lte(2.78, 2!..inf) => false | true
number::lte(2.78, 2.5..inf) => false | true
number::lte(2.78, -inf..0) => false
number::lte(2.78, -inf..inf) => false | true
number::lte(2.78, -inf!..inf) => false | true
number::lte(2.78, -inf..!inf) => false | true
number::lte(2.78, -inf!..!inf) => false | true
number::lte(2.78, int(0..1)) => false
number::lte(2.78, int(0..2)) => false
number::lte(2.78, int(1..2)) => false
number::lte(2.78, int(5..20)) => true
number::lte(2.78, int(-20..-5)) => false
number::lte(2.78, int(-10..10)) => false | true
number::lte(2.78, int(0..inf)) => false | true
number::lte(2.78, int(1..inf)) => false | true
number::lte(2.78, int(-inf..0)) => false
number::lte(2.78, int(-inf..1)) => false
number::lte(2.78, int(-inf..inf)) => false | true
number::lte(2.78, nonInt(0..1)) => false
number::lte(2.78, nonInt(0..2)) => false
number::lte(2.78, nonInt(-1..2)) => false
number::lte(2.78, nonInt(0..inf)) => false | true
number::lte(2.78, nonInt(-1..inf)) => false | true
number::lte(2.78, nonInt(-inf..0)) => false
number::lte(2.78, nonInt(-inf..1)) => false
number::lte(2.78, nonInt(-inf..inf)) => false | true
number::lte(2.78, 1 | int(3..4)) => false | true
number::lte(3, number) => false | true
number::lte(3, -3.14) => false
number::lte(3, -2) => false
number::lte(3, -1) => false
number::lte(3, -0.5) => false
number::lte(3, 0) => false
number::lte(3, 0.5) => false
number::lte(3, 1) => false
number::lte(3, 2) => false
number::lte(3, 2.78) => false
number::lte(3, 3) => true
number::lte(3, 3.14) => true
number::lte(3, 10) => true
number::lte(3, 100) => true
number::lte(3, -inf) => false
number::lte(3, inf) => true
number::lte(3, nan) => false
number::lte(3, 0..1) => false
number::lte(3, 0!..1) => false
number::lte(3, 0..!1) => false
number::lte(3, 0..2) => false
number::lte(3, 0!..!2) => false
number::lte(3, 0.5..1.5) => false
number::lte(3, 0.5..2.5) => false
number::lte(3, 0.5!..2.5) => false
number::lte(3, 0.5..!2.5) => false
number::lte(3, -2.56..3.35) => false | true
number::lte(3, 0.5..0.75) => false
number::lte(3, 1..2) => false
number::lte(3, 0..inf) => false | true
number::lte(3, 0!..inf) => false | true
number::lte(3, 0..!inf) => false | true
number::lte(3, 0!..!inf) => false | true
number::lte(3, 1..inf) => false | true
number::lte(3, 1!..inf) => false | true
number::lte(3, 1..!inf) => false | true
number::lte(3, 2..inf) => false | true
number::lte(3, 2!..inf) => false | true
number::lte(3, 2.5..inf) => false | true
number::lte(3, -inf..0) => false
number::lte(3, -inf..inf) => false | true
number::lte(3, -inf!..inf) => false | true
number::lte(3, -inf..!inf) => false | true
number::lte(3, -inf!..!inf) => false | true
number::lte(3, int(0..1)) => false
number::lte(3, int(0..2)) => false
number::lte(3, int(1..2)) => false
number::lte(3, int(5..20)) => true
number::lte(3, int(-20..-5)) => false
number::lte(3, int(-10..10)) => false | true
number::lte(3, int(0..inf)) => false | true
number::lte(3, int(1..inf)) => false | true
number::lte(3, int(-inf..0)) => false
number::lte(3, int(-inf..1)) => false
number::lte(3, int(-inf..inf)) => false | true
number::lte(3, nonInt(0..1)) => false
number::lte(3, nonInt(0..2)) => false
number::lte(3, nonInt(-1..2)) => false
number::lte(3, nonInt(0..inf)) => false | true
number::lte(3, nonInt(-1..inf)) => false | true
number::lte(3, nonInt(-inf..0)) => false
number::lte(3, nonInt(-inf..1)) => false
number::lte(3, nonInt(-inf..inf)) => false | true
number::lte(3, 1 | int(3..4)) => false | true
number::lte(3.14, number) => false | true
number::lte(3.14, -3.14) => false
number::lte(3.14, -2) => false
number::lte(3.14, -1) => false
number::lte(3.14, -0.5) => false
number::lte(3.14, 0) => false
number::lte(3.14, 0.5) => false
number::lte(3.14, 1) => false
number::lte(3.14, 2) => false
number::lte(3.14, 2.78) => false
number::lte(3.14, 3) => false
number::lte(3.14, 3.14) => true
number::lte(3.14, 10) => true
number::lte(3.14, 100) => true
number::lte(3.14, -inf) => false
number::lte(3.14, inf) => true
number::lte(3.14, nan) => false
number::lte(3.14, 0..1) => false
number::lte(3.14, 0!..1) => false
number::lte(3.14, 0..!1) => false
number::lte(3.14, 0..2) => false
number::lte(3.14, 0!..!2) => false
number::lte(3.14, 0.5..1.5) => false
number::lte(3.14, 0.5..2.5) => false
number::lte(3.14, 0.5!..2.5) => false
number::lte(3.14, 0.5..!2.5) => false
number::lte(3.14, -2.56..3.35) => false | true
number::lte(3.14, 0.5..0.75) => false
number::lte(3.14, 1..2) => false
number::lte(3.14, 0..inf) => false | true
number::lte(3.14, 0!..inf) => false | true
number::lte(3.14, 0..!inf) => false | true
number::lte(3.14, 0!..!inf) => false | true
number::lte(3.14, 1..inf) => false | true
number::lte(3.14, 1!..inf) => false | true
number::lte(3.14, 1..!inf) => false | true
number::lte(3.14, 2..inf) => false | true
number::lte(3.14, 2!..inf) => false | true
number::lte(3.14, 2.5..inf) => false | true
number::lte(3.14, -inf..0) => false
number::lte(3.14, -inf..inf) => false | true
number::lte(3.14, -inf!..inf) => false | true
number::lte(3.14, -inf..!inf) => false | true
number::lte(3.14, -inf!..!inf) => false | true
number::lte(3.14, int(0..1)) => false
number::lte(3.14, int(0..2)) => false
number::lte(3.14, int(1..2)) => false
number::lte(3.14, int(5..20)) => true
number::lte(3.14, int(-20..-5)) => false
number::lte(3.14, int(-10..10)) => false | true
number::lte(3.14, int(0..inf)) => false | true
number::lte(3.14, int(1..inf)) => false | true
number::lte(3.14, int(-inf..0)) => false
number::lte(3.14, int(-inf..1)) => false
number::lte(3.14, int(-inf..inf)) => false | true
number::lte(3.14, nonInt(0..1)) => false
number::lte(3.14, nonInt(0..2)) => false
number::lte(3.14, nonInt(-1..2)) => false
number::lte(3.14, nonInt(0..inf)) => false | true
number::lte(3.14, nonInt(-1..inf)) => false | true
number::lte(3.14, nonInt(-inf..0)) => false
number::lte(3.14, nonInt(-inf..1)) => false
number::lte(3.14, nonInt(-inf..inf)) => false | true
number::lte(3.14, 1 | int(3..4)) => false | true
number::lte(10, number) => false | true
number::lte(10, -3.14) => false
number::lte(10, -2) => false
number::lte(10, -1) => false
number::lte(10, -0.5) => false
number::lte(10, 0) => false
number::lte(10, 0.5) => false
number::lte(10, 1) => false
number::lte(10, 2) => false
number::lte(10, 2.78) => false
number::lte(10, 3) => false
number::lte(10, 3.14) => false
number::lte(10, 10) => true
number::lte(10, 100) => true
number::lte(10, -inf) => false
number::lte(10, inf) => true
number::lte(10, nan) => false
number::lte(10, 0..1) => false
number::lte(10, 0!..1) => false
number::lte(10, 0..!1) => false
number::lte(10, 0..2) => false
number::lte(10, 0!..!2) => false
number::lte(10, 0.5..1.5) => false
number::lte(10, 0.5..2.5) => false
number::lte(10, 0.5!..2.5) => false
number::lte(10, 0.5..!2.5) => false
number::lte(10, -2.56..3.35) => false
number::lte(10, 0.5..0.75) => false
number::lte(10, 1..2) => false
number::lte(10, 0..inf) => false | true
number::lte(10, 0!..inf) => false | true
number::lte(10, 0..!inf) => false | true
number::lte(10, 0!..!inf) => false | true
number::lte(10, 1..inf) => false | true
number::lte(10, 1!..inf) => false | true
number::lte(10, 1..!inf) => false | true
number::lte(10, 2..inf) => false | true
number::lte(10, 2!..inf) => false | true
number::lte(10, 2.5..inf) => false | true
number::lte(10, -inf..0) => false
number::lte(10, -inf..inf) => false | true
number::lte(10, -inf!..inf) => false | true
number::lte(10, -inf..!inf) => false | true
number::lte(10, -inf!..!inf) => false | true
number::lte(10, int(0..1)) => false
number::lte(10, int(0..2)) => false
number::lte(10, int(1..2)) => false
number::lte(10, int(5..20)) => false | true
number::lte(10, int(-20..-5)) => false
number::lte(10, int(-10..10)) => false | true
number::lte(10, int(0..inf)) => false | true
number::lte(10, int(1..inf)) => false | true
number::lte(10, int(-inf..0)) => false
number::lte(10, int(-inf..1)) => false
number::lte(10, int(-inf..inf)) => false | true
number::lte(10, nonInt(0..1)) => false
number::lte(10, nonInt(0..2)) => false
number::lte(10, nonInt(-1..2)) => false
number::lte(10, nonInt(0..inf)) => false | true
number::lte(10, nonInt(-1..inf)) => false | true
number::lte(10, nonInt(-inf..0)) => false
number::lte(10, nonInt(-inf..1)) => false
number::lte(10, nonInt(-inf..inf)) => false | true
number::lte(10, 1 | int(3..4)) => false
number::lte(100, number) => false | true
number::lte(100, -3.14) => false
number::lte(100, -2) => false
number::lte(100, -1) => false
number::lte(100, -0.5) => false
number::lte(100, 0) => false
number::lte(100, 0.5) => false
number::lte(100, 1) => false
number::lte(100, 2) => false
number::lte(100, 2.78) => false
number::lte(100, 3) => false
number::lte(100, 3.14) => false
number::lte(100, 10) => false
number::lte(100, 100) => true
number::lte(100, -inf) => false
number::lte(100, inf) => true
number::lte(100, nan) => false
number::lte(100, 0..1) => false
number::lte(100, 0!..1) => false
number::lte(100, 0..!1) => false
number::lte(100, 0..2) => false
number::lte(100, 0!..!2) => false
number::lte(100, 0.5..1.5) => false
number::lte(100, 0.5..2.5) => false
number::lte(100, 0.5!..2.5) => false
number::lte(100, 0.5..!2.5) => false
number::lte(100, -2.56..3.35) => false
number::lte(100, 0.5..0.75) => false
number::lte(100, 1..2) => false
number::lte(100, 0..inf) => false | true
number::lte(100, 0!..inf) => false | true
number::lte(100, 0..!inf) => false | true
number::lte(100, 0!..!inf) => false | true
number::lte(100, 1..inf) => false | true
number::lte(100, 1!..inf) => false | true
number::lte(100, 1..!inf) => false | true
number::lte(100, 2..inf) => false | true
number::lte(100, 2!..inf) => false | true
number::lte(100, 2.5..inf) => false | true
number::lte(100, -inf..0) => false
number::lte(100, -inf..inf) => false | true
number::lte(100, -inf!..inf) => false | true
number::lte(100, -inf..!inf) => false | true
number::lte(100, -inf!..!inf) => false | true
number::lte(100, int(0..1)) => false
number::lte(100, int(0..2)) => false
number::lte(100, int(1..2)) => false
number::lte(100, int(5..20)) => false
number::lte(100, int(-20..-5)) => false
number::lte(100, int(-10..10)) => false
number::lte(100, int(0..inf)) => false | true
number::lte(100, int(1..inf)) => false | true
number::lte(100, int(-inf..0)) => false
number::lte(100, int(-inf..1)) => false
number::lte(100, int(-inf..inf)) => false | true
number::lte(100, nonInt(0..1)) => false
number::lte(100, nonInt(0..2)) => false
number::lte(100, nonInt(-1..2)) => false
number::lte(100, nonInt(0..inf)) => false | true
number::lte(100, nonInt(-1..inf)) => false | true
number::lte(100, nonInt(-inf..0)) => false
number::lte(100, nonInt(-inf..1)) => false
number::lte(100, nonInt(-inf..inf)) => false | true
number::lte(100, 1 | int(3..4)) => false
number::lte(-inf, number) => false | true
number::lte(-inf, -3.14) => true
number::lte(-inf, -2) => true
number::lte(-inf, -1) => true
number::lte(-inf, -0.5) => true
number::lte(-inf, 0) => true
number::lte(-inf, 0.5) => true
number::lte(-inf, 1) => true
number::lte(-inf, 2) => true
number::lte(-inf, 2.78) => true
number::lte(-inf, 3) => true
number::lte(-inf, 3.14) => true
number::lte(-inf, 10) => true
number::lte(-inf, 100) => true
number::lte(-inf, -inf) => true
number::lte(-inf, inf) => true
number::lte(-inf, nan) => false
number::lte(-inf, 0..1) => true
number::lte(-inf, 0!..1) => true
number::lte(-inf, 0..!1) => true
number::lte(-inf, 0..2) => true
number::lte(-inf, 0!..!2) => true
number::lte(-inf, 0.5..1.5) => true
number::lte(-inf, 0.5..2.5) => true
number::lte(-inf, 0.5!..2.5) => true
number::lte(-inf, 0.5..!2.5) => true
number::lte(-inf, -2.56..3.35) => true
number::lte(-inf, 0.5..0.75) => true
number::lte(-inf, 1..2) => true
number::lte(-inf, 0..inf) => true
number::lte(-inf, 0!..inf) => true
number::lte(-inf, 0..!inf) => true
number::lte(-inf, 0!..!inf) => true
number::lte(-inf, 1..inf) => true
number::lte(-inf, 1!..inf) => true
number::lte(-inf, 1..!inf) => true
number::lte(-inf, 2..inf) => true
number::lte(-inf, 2!..inf) => true
number::lte(-inf, 2.5..inf) => true
number::lte(-inf, -inf..0) => true
number::lte(-inf, -inf..inf) => true
number::lte(-inf, -inf!..inf) => true
number::lte(-inf, -inf..!inf) => true
number::lte(-inf, -inf!..!inf) => true
number::lte(-inf, int(0..1)) => true
number::lte(-inf, int(0..2)) => true
number::lte(-inf, int(1..2)) => true
number::lte(-inf, int(5..20)) => true
number::lte(-inf, int(-20..-5)) => true
number::lte(-inf, int(-10..10)) => true
number::lte(-inf, int(0..inf)) => true
number::lte(-inf, int(1..inf)) => true
number::lte(-inf, int(-inf..0)) => true
number::lte(-inf, int(-inf..1)) => true
number::lte(-inf, int(-inf..inf)) => true
number::lte(-inf, nonInt(0..1)) => true
number::lte(-inf, nonInt(0..2)) => true
number::lte(-inf, nonInt(-1..2)) => true
number::lte(-inf, nonInt(0..inf)) => true
number::lte(-inf, nonInt(-1..inf)) => true
number::lte(-inf, nonInt(-inf..0)) => true
number::lte(-inf, nonInt(-inf..1)) => true
number::lte(-inf, nonInt(-inf..inf)) => true
number::lte(-inf, 1 | int(3..4)) => true
number::lte(inf, number) => false | true
number::lte(inf, -3.14) => false
number::lte(inf, -2) => false
number::lte(inf, -1) => false
number::lte(inf, -0.5) => false
number::lte(inf, 0) => false
number::lte(inf, 0.5) => false
number::lte(inf, 1) => false
number::lte(inf, 2) => false
number::lte(inf, 2.78) => false
number::lte(inf, 3) => false
number::lte(inf, 3.14) => false
number::lte(inf, 10) => false
number::lte(inf, 100) => false
number::lte(inf, -inf) => false
number::lte(inf, inf) => true
number::lte(inf, nan) => false
number::lte(inf, 0..1) => false
number::lte(inf, 0!..1) => false
number::lte(inf, 0..!1) => false
number::lte(inf, 0..2) => false
number::lte(inf, 0!..!2) => false
number::lte(inf, 0.5..1.5) => false
number::lte(inf, 0.5..2.5) => false
number::lte(inf, 0.5!..2.5) => false
number::lte(inf, 0.5..!2.5) => false
number::lte(inf, -2.56..3.35) => false
number::lte(inf, 0.5..0.75) => false
number::lte(inf, 1..2) => false
number::lte(inf, 0..inf) => false | true
number::lte(inf, 0!..inf) => false | true
number::lte(inf, 0..!inf) => false
number::lte(inf, 0!..!inf) => false
number::lte(inf, 1..inf) => false | true
number::lte(inf, 1!..inf) => false | true
number::lte(inf, 1..!inf) => false
number::lte(inf, 2..inf) => false | true
number::lte(inf, 2!..inf) => false | true
number::lte(inf, 2.5..inf) => false | true
number::lte(inf, -inf..0) => false
number::lte(inf, -inf..inf) => false | true
number::lte(inf, -inf!..inf) => false | true
number::lte(inf, -inf..!inf) => false
number::lte(inf, -inf!..!inf) => false
number::lte(inf, int(0..1)) => false
number::lte(inf, int(0..2)) => false
number::lte(inf, int(1..2)) => false
number::lte(inf, int(5..20)) => false
number::lte(inf, int(-20..-5)) => false
number::lte(inf, int(-10..10)) => false
number::lte(inf, int(0..inf)) => false
number::lte(inf, int(1..inf)) => false
number::lte(inf, int(-inf..0)) => false
number::lte(inf, int(-inf..1)) => false
number::lte(inf, int(-inf..inf)) => false
number::lte(inf, nonInt(0..1)) => false
number::lte(inf, nonInt(0..2)) => false
number::lte(inf, nonInt(-1..2)) => false
number::lte(inf, nonInt(0..inf)) => false
number::lte(inf, nonInt(-1..inf)) => false
number::lte(inf, nonInt(-inf..0)) => false
number::lte(inf, nonInt(-inf..1)) => false
number::lte(inf, nonInt(-inf..inf)) => false
number::lte(inf, 1 | int(3..4)) => false
number::lte(nan, number) => false
number::lte(nan, -3.14) => false
number::lte(nan, -2) => false
number::lte(nan, -1) => false
number::lte(nan, -0.5) => false
number::lte(nan, 0) => false
number::lte(nan, 0.5) => false
number::lte(nan, 1) => false
number::lte(nan, 2) => false
number::lte(nan, 2.78) => false
number::lte(nan, 3) => false
number::lte(nan, 3.14) => false
number::lte(nan, 10) => false
number::lte(nan, 100) => false
number::lte(nan, -inf) => false
number::lte(nan, inf) => false
number::lte(nan, nan) => false
number::lte(nan, 0..1) => false
number::lte(nan, 0!..1) => false
number::lte(nan, 0..!1) => false
number::lte(nan, 0..2) => false
number::lte(nan, 0!..!2) => false
number::lte(nan, 0.5..1.5) => false
number::lte(nan, 0.5..2.5) => false
number::lte(nan, 0.5!..2.5) => false
number::lte(nan, 0.5..!2.5) => false
number::lte(nan, -2.56..3.35) => false
number::lte(nan, 0.5..0.75) => false
number::lte(nan, 1..2) => false
number::lte(nan, 0..inf) => false
number::lte(nan, 0!..inf) => false
number::lte(nan, 0..!inf) => false
number::lte(nan, 0!..!inf) => false
number::lte(nan, 1..inf) => false
number::lte(nan, 1!..inf) => false
number::lte(nan, 1..!inf) => false
number::lte(nan, 2..inf) => false
number::lte(nan, 2!..inf) => false
number::lte(nan, 2.5..inf) => false
number::lte(nan, -inf..0) => false
number::lte(nan, -inf..inf) => false
number::lte(nan, -inf!..inf) => false
number::lte(nan, -inf..!inf) => false
number::lte(nan, -inf!..!inf) => false
number::lte(nan, int(0..1)) => false
number::lte(nan, int(0..2)) => false
number::lte(nan, int(1..2)) => false
number::lte(nan, int(5..20)) => false
number::lte(nan, int(-20..-5)) => false
number::lte(nan, int(-10..10)) => false
number::lte(nan, int(0..inf)) => false
number::lte(nan, int(1..inf)) => false
number::lte(nan, int(-inf..0)) => false
number::lte(nan, int(-inf..1)) => false
number::lte(nan, int(-inf..inf)) => false
number::lte(nan, nonInt(0..1)) => false
number::lte(nan, nonInt(0..2)) => false
number::lte(nan, nonInt(-1..2)) => false
number::lte(nan, nonInt(0..inf)) => false
number::lte(nan, nonInt(-1..inf)) => false
number::lte(nan, nonInt(-inf..0)) => false
number::lte(nan, nonInt(-inf..1)) => false
number::lte(nan, nonInt(-inf..inf)) => false
number::lte(nan, 1 | int(3..4)) => false
number::lte(0..1, number) => false | true
number::lte(0..1, -3.14) => false
number::lte(0..1, -2) => false
number::lte(0..1, -1) => false
number::lte(0..1, -0.5) => false
number::lte(0..1, 0) => false | true
number::lte(0..1, 0.5) => false | true
number::lte(0..1, 1) => true
number::lte(0..1, 2) => true
number::lte(0..1, 2.78) => true
number::lte(0..1, 3) => true
number::lte(0..1, 3.14) => true
number::lte(0..1, 10) => true
number::lte(0..1, 100) => true
number::lte(0..1, -inf) => false
number::lte(0..1, inf) => true
number::lte(0..1, nan) => false
number::lte(0..1, 0..1) => false | true
number::lte(0..1, 0!..1) => false | true
number::lte(0..1, 0..!1) => false | true
number::lte(0..1, 0..2) => false | true
number::lte(0..1, 0!..!2) => false | true
number::lte(0..1, 0.5..1.5) => false | true
number::lte(0..1, 0.5..2.5) => false | true
number::lte(0..1, 0.5!..2.5) => false | true
number::lte(0..1, 0.5..!2.5) => false | true
number::lte(0..1, -2.56..3.35) => false | true
number::lte(0..1, 0.5..0.75) => false | true
number::lte(0..1, 1..2) => true
number::lte(0..1, 0..inf) => false | true
number::lte(0..1, 0!..inf) => false | true
number::lte(0..1, 0..!inf) => false | true
number::lte(0..1, 0!..!inf) => false | true
number::lte(0..1, 1..inf) => true
number::lte(0..1, 1!..inf) => true
number::lte(0..1, 1..!inf) => true
number::lte(0..1, 2..inf) => true
number::lte(0..1, 2!..inf) => true
number::lte(0..1, 2.5..inf) => true
number::lte(0..1, -inf..0) => false | true
number::lte(0..1, -inf..inf) => false | true
number::lte(0..1, -inf!..inf) => false | true
number::lte(0..1, -inf..!inf) => false | true
number::lte(0..1, -inf!..!inf) => false | true
number::lte(0..1, int(0..1)) => false | true
number::lte(0..1, int(0..2)) => false | true
number::lte(0..1, int(1..2)) => true
number::lte(0..1, int(5..20)) => true
number::lte(0..1, int(-20..-5)) => false
number::lte(0..1, int(-10..10)) => false | true
number::lte(0..1, int(0..inf)) => false | true
number::lte(0..1, int(1..inf)) => true
number::lte(0..1, int(-inf..0)) => false | true
number::lte(0..1, int(-inf..1)) => false | true
number::lte(0..1, int(-inf..inf)) => false | true
number::lte(0..1, nonInt(0..1)) => false | true
number::lte(0..1, nonInt(0..2)) => false | true
number::lte(0..1, nonInt(-1..2)) => false | true
number::lte(0..1, nonInt(0..inf)) => false | true
number::lte(0..1, nonInt(-1..inf)) => false | true
number::lte(0..1, nonInt(-inf..0)) => false
number::lte(0..1, nonInt(-inf..1)) => false | true
number::lte(0..1, nonInt(-inf..inf)) => false | true
number::lte(0..1, 1 | int(3..4)) => true
number::lte(0!..1, number) => false | true
number::lte(0!..1, -3.14) => false
number::lte(0!..1, -2) => false
number::lte(0!..1, -1) => false
number::lte(0!..1, -0.5) => false
number::lte(0!..1, 0) => false
number::lte(0!..1, 0.5) => false | true
number::lte(0!..1, 1) => true
number::lte(0!..1, 2) => true
number::lte(0!..1, 2.78) => true
number::lte(0!..1, 3) => true
number::lte(0!..1, 3.14) => true
number::lte(0!..1, 10) => true
number::lte(0!..1, 100) => true
number::lte(0!..1, -inf) => false
number::lte(0!..1, inf) => true
number::lte(0!..1, nan) => false
number::lte(0!..1, 0..1) => false | true
number::lte(0!..1, 0!..1) => false | true
number::lte(0!..1, 0..!1) => false | true
number::lte(0!..1, 0..2) => false | true
number::lte(0!..1, 0!..!2) => false | true
number::lte(0!..1, 0.5..1.5) => false | true
number::lte(0!..1, 0.5..2.5) => false | true
number::lte(0!..1, 0.5!..2.5) => false | true
number::lte(0!..1, 0.5..!2.5) => false | true
number::lte(0!..1, -2.56..3.35) => false | true
number::lte(0!..1, 0.5..0.75) => false | true
number::lte(0!..1, 1..2) => true
number::lte(0!..1, 0..inf) => false | true
number::lte(0!..1, 0!..inf) => false | true
number::lte(0!..1, 0..!inf) => false | true
number::lte(0!..1, 0!..!inf) => false | true
number::lte(0!..1, 1..inf) => true
number::lte(0!..1, 1!..inf) => true
number::lte(0!..1, 1..!inf) => true
number::lte(0!..1, 2..inf) => true
number::lte(0!..1, 2!..inf) => true
number::lte(0!..1, 2.5..inf) => true
number::lte(0!..1, -inf..0) => false
number::lte(0!..1, -inf..inf) => false | true
number::lte(0!..1, -inf!..inf) => false | true
number::lte(0!..1, -inf..!inf) => false | true
number::lte(0!..1, -inf!..!inf) => false | true
number::lte(0!..1, int(0..1)) => false | true
number::lte(0!..1, int(0..2)) => false | true
number::lte(0!..1, int(1..2)) => true
number::lte(0!..1, int(5..20)) => true
number::lte(0!..1, int(-20..-5)) => false
number::lte(0!..1, int(-10..10)) => false | true
number::lte(0!..1, int(0..inf)) => false | true
number::lte(0!..1, int(1..inf)) => true
number::lte(0!..1, int(-inf..0)) => false
number::lte(0!..1, int(-inf..1)) => false | true
number::lte(0!..1, int(-inf..inf)) => false | true
number::lte(0!..1, nonInt(0..1)) => false | true
number::lte(0!..1, nonInt(0..2)) => false | true
number::lte(0!..1, nonInt(-1..2)) => false | true
number::lte(0!..1, nonInt(0..inf)) => false | true
number::lte(0!..1, nonInt(-1..inf)) => false | true
number::lte(0!..1, nonInt(-inf..0)) => false
number::lte(0!..1, nonInt(-inf..1)) => false | true
number::lte(0!..1, nonInt(-inf..inf)) => false | true
number::lte(0!..1, 1 | int(3..4)) => true
number::lte(0..!1, number) => false | true
number::lte(0..!1, -3.14) => false
number::lte(0..!1, -2) => false
number::lte(0..!1, -1) => false
number::lte(0..!1, -0.5) => false
number::lte(0..!1, 0) => false | true
number::lte(0..!1, 0.5) => false | true
number::lte(0..!1, 1) => true
number::lte(0..!1, 2) => true
number::lte(0..!1, 2.78) => true
number::lte(0..!1, 3) => true
number::lte(0..!1, 3.14) => true
number::lte(0..!1, 10) => true
number::lte(0..!1, 100) => true
number::lte(0..!1, -inf) => false
number::lte(0..!1, inf) => true
number::lte(0..!1, nan) => false
number::lte(0..!1, 0..1) => false | true
number::lte(0..!1, 0!..1) => false | true
number::lte(0..!1, 0..!1) => false | true
number::lte(0..!1, 0..2) => false | true
number::lte(0..!1, 0!..!2) => false | true
number::lte(0..!1, 0.5..1.5) => false | true
number::lte(0..!1, 0.5..2.5) => false | true
number::lte(0..!1, 0.5!..2.5) => false | true
number::lte(0..!1, 0.5..!2.5) => false | true
number::lte(0..!1, -2.56..3.35) => false | true
number::lte(0..!1, 0.5..0.75) => false | true
number::lte(0..!1, 1..2) => true
number::lte(0..!1, 0..inf) => false | true
number::lte(0..!1, 0!..inf) => false | true
number::lte(0..!1, 0..!inf) => false | true
number::lte(0..!1, 0!..!inf) => false | true
number::lte(0..!1, 1..inf) => true
number::lte(0..!1, 1!..inf) => true
number::lte(0..!1, 1..!inf) => true
number::lte(0..!1, 2..inf) => true
number::lte(0..!1, 2!..inf) => true
number::lte(0..!1, 2.5..inf) => true
number::lte(0..!1, -inf..0) => false | true
number::lte(0..!1, -inf..inf) => false | true
number::lte(0..!1, -inf!..inf) => false | true
number::lte(0..!1, -inf..!inf) => false | true
number::lte(0..!1, -inf!..!inf) => false | true
number::lte(0..!1, int(0..1)) => false | true
number::lte(0..!1, int(0..2)) => false | true
number::lte(0..!1, int(1..2)) => true
number::lte(0..!1, int(5..20)) => true
number::lte(0..!1, int(-20..-5)) => false
number::lte(0..!1, int(-10..10)) => false | true
number::lte(0..!1, int(0..inf)) => false | true
number::lte(0..!1, int(1..inf)) => true
number::lte(0..!1, int(-inf..0)) => false | true
number::lte(0..!1, int(-inf..1)) => false | true
number::lte(0..!1, int(-inf..inf)) => false | true
number::lte(0..!1, nonInt(0..1)) => false | true
number::lte(0..!1, nonInt(0..2)) => false | true
number::lte(0..!1, nonInt(-1..2)) => false | true
number::lte(0..!1, nonInt(0..inf)) => false | true
number::lte(0..!1, nonInt(-1..inf)) => false | true
number::lte(0..!1, nonInt(-inf..0)) => false
number::lte(0..!1, nonInt(-inf..1)) => false | true
number::lte(0..!1, nonInt(-inf..inf)) => false | true
number::lte(0..!1, 1 | int(3..4)) => true
number::lte(0..2, number) => false | true
number::lte(0..2, -3.14) => false
number::lte(0..2, -2) => false
number::lte(0..2, -1) => false
number::lte(0..2, -0.5) => false
number::lte(0..2, 0) => false | true
number::lte(0..2, 0.5) => false | true
number::lte(0..2, 1) => false | true
number::lte(0..2, 2) => true
number::lte(0..2, 2.78) => true
number::lte(0..2, 3) => true
number::lte(0..2, 3.14) => true
number::lte(0..2, 10) => true
number::lte(0..2, 100) => true
number::lte(0..2, -inf) => false
number::lte(0..2, inf) => true
number::lte(0..2, nan) => false
number::lte(0..2, 0..1) => false | true
number::lte(0..2, 0!..1) => false | true
number::lte(0..2, 0..!1) => false | true
number::lte(0..2, 0..2) => false | true
number::lte(0..2, 0!..!2) => false | true
number::lte(0..2, 0.5..1.5) => false | true
number::lte(0..2, 0.5..2.5) => false | true
number::lte(0..2, 0.5!..2.5) => false | true
number::lte(0..2, 0.5..!2.5) => false | true
number::lte(0..2, -2.56..3.35) => false | true
number::lte(0..2, 0.5..0.75) => false | true
number::lte(0..2, 1..2) => false | true
number::lte(0..2, 0..inf) => false | true
number::lte(0..2, 0!..inf) => false | true
number::lte(0..2, 0..!inf) => false | true
number::lte(0..2, 0!..!inf) => false | true
number::lte(0..2, 1..inf) => false | true
number::lte(0..2, 1!..inf) => false | true
number::lte(0..2, 1..!inf) => false | true
number::lte(0..2, 2..inf) => true
number::lte(0..2, 2!..inf) => true
number::lte(0..2, 2.5..inf) => true
number::lte(0..2, -inf..0) => false | true
number::lte(0..2, -inf..inf) => false | true
number::lte(0..2, -inf!..inf) => false | true
number::lte(0..2, -inf..!inf) => false | true
number::lte(0..2, -inf!..!inf) => false | true
number::lte(0..2, int(0..1)) => false | true
number::lte(0..2, int(0..2)) => false | true
number::lte(0..2, int(1..2)) => false | true
number::lte(0..2, int(5..20)) => true
number::lte(0..2, int(-20..-5)) => false
number::lte(0..2, int(-10..10)) => false | true
number::lte(0..2, int(0..inf)) => false | true
number::lte(0..2, int(1..inf)) => false | true
number::lte(0..2, int(-inf..0)) => false | true
number::lte(0..2, int(-inf..1)) => false | true
number::lte(0..2, int(-inf..inf)) => false | true
number::lte(0..2, nonInt(0..1)) => false | true
number::lte(0..2, nonInt(0..2)) => false | true
number::lte(0..2, nonInt(-1..2)) => false | true
number::lte(0..2, nonInt(0..inf)) => false | true
number::lte(0..2, nonInt(-1..inf)) => false | true
number::lte(0..2, nonInt(-inf..0)) => false
number::lte(0..2, nonInt(-inf..1)) => false | true
number::lte(0..2, nonInt(-inf..inf)) => false | true
number::lte(0..2, 1 | int(3..4)) => false | true
number::lte(0!..!2, number) => false | true
number::lte(0!..!2, -3.14) => false
number::lte(0!..!2, -2) => false
number::lte(0!..!2, -1) => false
number::lte(0!..!2, -0.5) => false
number::lte(0!..!2, 0) => false
number::lte(0!..!2, 0.5) => false | true
number::lte(0!..!2, 1) => false | true
number::lte(0!..!2, 2) => true
number::lte(0!..!2, 2.78) => true
number::lte(0!..!2, 3) => true
number::lte(0!..!2, 3.14) => true
number::lte(0!..!2, 10) => true
number::lte(0!..!2, 100) => true
number::lte(0!..!2, -inf) => false
number::lte(0!..!2, inf) => true
number::lte(0!..!2, nan) => false
number::lte(0!..!2, 0..1) => false | true
number::lte(0!..!2, 0!..1) => false | true
number::lte(0!..!2, 0..!1) => false | true
number::lte(0!..!2, 0..2) => false | true
number::lte(0!..!2, 0!..!2) => false | true
number::lte(0!..!2, 0.5..1.5) => false | true
number::lte(0!..!2, 0.5..2.5) => false | true
number::lte(0!..!2, 0.5!..2.5) => false | true
number::lte(0!..!2, 0.5..!2.5) => false | true
number::lte(0!..!2, -2.56..3.35) => false | true
number::lte(0!..!2, 0.5..0.75) => false | true
number::lte(0!..!2, 1..2) => false | true
number::lte(0!..!2, 0..inf) => false | true
number::lte(0!..!2, 0!..inf) => false | true
number::lte(0!..!2, 0..!inf) => false | true
number::lte(0!..!2, 0!..!inf) => false | true
number::lte(0!..!2, 1..inf) => false | true
number::lte(0!..!2, 1!..inf) => false | true
number::lte(0!..!2, 1..!inf) => false | true
number::lte(0!..!2, 2..inf) => true
number::lte(0!..!2, 2!..inf) => true
number::lte(0!..!2, 2.5..inf) => true
number::lte(0!..!2, -inf..0) => false
number::lte(0!..!2, -inf..inf) => false | true
number::lte(0!..!2, -inf!..inf) => false | true
number::lte(0!..!2, -inf..!inf) => false | true
number::lte(0!..!2, -inf!..!inf) => false | true
number::lte(0!..!2, int(0..1)) => false | true
number::lte(0!..!2, int(0..2)) => false | true
number::lte(0!..!2, int(1..2)) => false | true
number::lte(0!..!2, int(5..20)) => true
number::lte(0!..!2, int(-20..-5)) => false
number::lte(0!..!2, int(-10..10)) => false | true
number::lte(0!..!2, int(0..inf)) => false | true
number::lte(0!..!2, int(1..inf)) => false | true
number::lte(0!..!2, int(-inf..0)) => false
number::lte(0!..!2, int(-inf..1)) => false | true
number::lte(0!..!2, int(-inf..inf)) => false | true
number::lte(0!..!2, nonInt(0..1)) => false | true
number::lte(0!..!2, nonInt(0..2)) => false | true
number::lte(0!..!2, nonInt(-1..2)) => false | true
number::lte(0!..!2, nonInt(0..inf)) => false | true
number::lte(0!..!2, nonInt(-1..inf)) => false | true
number::lte(0!..!2, nonInt(-inf..0)) => false
number::lte(0!..!2, nonInt(-inf..1)) => false | true
number::lte(0!..!2, nonInt(-inf..inf)) => false | true
number::lte(0!..!2, 1 | int(3..4)) => false | true
number::lte(0.5..1.5, number) => false | true
number::lte(0.5..1.5, -3.14) => false
number::lte(0.5..1.5, -2) => false
number::lte(0.5..1.5, -1) => false
number::lte(0.5..1.5, -0.5) => false
number::lte(0.5..1.5, 0) => false
number::lte(0.5..1.5, 0.5) => false | true
number::lte(0.5..1.5, 1) => false | true
number::lte(0.5..1.5, 2) => true
number::lte(0.5..1.5, 2.78) => true
number::lte(0.5..1.5, 3) => true
number::lte(0.5..1.5, 3.14) => true
number::lte(0.5..1.5, 10) => true
number::lte(0.5..1.5, 100) => true
number::lte(0.5..1.5, -inf) => false
number::lte(0.5..1.5, inf) => true
number::lte(0.5..1.5, nan) => false
number::lte(0.5..1.5, 0..1) => false | true
number::lte(0.5..1.5, 0!..1) => false | true
number::lte(0.5..1.5, 0..!1) => false | true
number::lte(0.5..1.5, 0..2) => false | true
number::lte(0.5..1.5, 0!..!2) => false | true
number::lte(0.5..1.5, 0.5..1.5) => false | true
number::lte(0.5..1.5, 0.5..2.5) => false | true
number::lte(0.5..1.5, 0.5!..2.5) => false | true
number::lte(0.5..1.5, 0.5..!2.5) => false | true
number::lte(0.5..1.5, -2.56..3.35) => false | true
number::lte(0.5..1.5, 0.5..0.75) => false | true
number::lte(0.5..1.5, 1..2) => false | true
number::lte(0.5..1.5, 0..inf) => false | true
number::lte(0.5..1.5, 0!..inf) => false | true
number::lte(0.5..1.5, 0..!inf) => false | true
number::lte(0.5..1.5, 0!..!inf) => false | true
number::lte(0.5..1.5, 1..inf) => false | true
number::lte(0.5..1.5, 1!..inf) => false | true
number::lte(0.5..1.5, 1..!inf) => false | true
number::lte(0.5..1.5, 2..inf) => true
number::lte(0.5..1.5, 2!..inf) => true
number::lte(0.5..1.5, 2.5..inf) => true
number::lte(0.5..1.5, -inf..0) => false
number::lte(0.5..1.5, -inf..inf) => false | true
number::lte(0.5..1.5, -inf!..inf) => false | true
number::lte(0.5..1.5, -inf..!inf) => false | true
number::lte(0.5..1.5, -inf!..!inf) => false | true
number::lte(0.5..1.5, int(0..1)) => false | true
number::lte(0.5..1.5, int(0..2)) => false | true
number::lte(0.5..1.5, int(1..2)) => false | true
number::lte(0.5..1.5, int(5..20)) => true
number::lte(0.5..1.5, int(-20..-5)) => false
number::lte(0.5..1.5, int(-10..10)) => false | true
number::lte(0.5..1.5, int(0..inf)) => false | true
number::lte(0.5..1.5, int(1..inf)) => false | true
number::lte(0.5..1.5, int(-inf..0)) => false
number::lte(0.5..1.5, int(-inf..1)) => false | true
number::lte(0.5..1.5, int(-inf..inf)) => false | true
number::lte(0.5..1.5, nonInt(0..1)) => false | true
number::lte(0.5..1.5, nonInt(0..2)) => false | true
number::lte(0.5..1.5, nonInt(-1..2)) => false | true
number::lte(0.5..1.5, nonInt(0..inf)) => false | true
number::lte(0.5..1.5, nonInt(-1..inf)) => false | true
number::lte(0.5..1.5, nonInt(-inf..0)) => false
number::lte(0.5..1.5, nonInt(-inf..1)) => false | true
number::lte(0.5..1.5, nonInt(-inf..inf)) => false | true
number::lte(0.5..1.5, 1 | int(3..4)) => false | true
number::lte(0.5..2.5, number) => false | true
number::lte(0.5..2.5, -3.14) => false
number::lte(0.5..2.5, -2) => false
number::lte(0.5..2.5, -1) => false
number::lte(0.5..2.5, -0.5) => false
number::lte(0.5..2.5, 0) => false
number::lte(0.5..2.5, 0.5) => false | true
number::lte(0.5..2.5, 1) => false | true
number::lte(0.5..2.5, 2) => false | true
number::lte(0.5..2.5, 2.78) => true
number::lte(0.5..2.5, 3) => true
number::lte(0.5..2.5, 3.14) => true
number::lte(0.5..2.5, 10) => true
number::lte(0.5..2.5, 100) => true
number::lte(0.5..2.5, -inf) => false
number::lte(0.5..2.5, inf) => true
number::lte(0.5..2.5, nan) => false
number::lte(0.5..2.5, 0..1) => false | true
number::lte(0.5..2.5, 0!..1) => false | true
number::lte(0.5..2.5, 0..!1) => false | true
number::lte(0.5..2.5, 0..2) => false | true
number::lte(0.5..2.5, 0!..!2) => false | true
number::lte(0.5..2.5, 0.5..1.5) => false | true
number::lte(0.5..2.5, 0.5..2.5) => false | true
number::lte(0.5..2.5, 0.5!..2.5) => false | true
number::lte(0.5..2.5, 0.5..!2.5) => false | true
number::lte(0.5..2.5, -2.56..3.35) => false | true
number::lte(0.5..2.5, 0.5..0.75) => false | true
number::lte(0.5..2.5, 1..2) => false | true
number::lte(0.5..2.5, 0..inf) => false | true
number::lte(0.5..2.5, 0!..inf) => false | true
number::lte(0.5..2.5, 0..!inf) => false | true
number::lte(0.5..2.5, 0!..!inf) => false | true
number::lte(0.5..2.5, 1..inf) => false | true
number::lte(0.5..2.5, 1!..inf) => false | true
number::lte(0.5..2.5, 1..!inf) => false | true
number::lte(0.5..2.5, 2..inf) => false | true
number::lte(0.5..2.5, 2!..inf) => false | true
number::lte(0.5..2.5, 2.5..inf) => true
number::lte(0.5..2.5, -inf..0) => false
number::lte(0.5..2.5, -inf..inf) => false | true
number::lte(0.5..2.5, -inf!..inf) => false | true
number::lte(0.5..2.5, -inf..!inf) => false | true
number::lte(0.5..2.5, -inf!..!inf) => false | true
number::lte(0.5..2.5, int(0..1)) => false | true
number::lte(0.5..2.5, int(0..2)) => false | true
number::lte(0.5..2.5, int(1..2)) => false | true
number::lte(0.5..2.5, int(5..20)) => true
number::lte(0.5..2.5, int(-20..-5)) => false
number::lte(0.5..2.5, int(-10..10)) => false | true
number::lte(0.5..2.5, int(0..inf)) => false | true
number::lte(0.5..2.5, int(1..inf)) => false | true
number::lte(0.5..2.5, int(-inf..0)) => false
number::lte(0.5..2.5, int(-inf..1)) => false | true
number::lte(0.5..2.5, int(-inf..inf)) => false | true
number::lte(0.5..2.5, nonInt(0..1)) => false | true
number::lte(0.5..2.5, nonInt(0..2)) => false | true
number::lte(0.5..2.5, nonInt(-1..2)) => false | true
number::lte(0.5..2.5, nonInt(0..inf)) => false | true
number::lte(0.5..2.5, nonInt(-1..inf)) => false | true
number::lte(0.5..2.5, nonInt(-inf..0)) => false
number::lte(0.5..2.5, nonInt(-inf..1)) => false | true
number::lte(0.5..2.5, nonInt(-inf..inf)) => false | true
number::lte(0.5..2.5, 1 | int(3..4)) => false | true
number::lte(0.5!..2.5, number) => false | true
number::lte(0.5!..2.5, -3.14) => false
number::lte(0.5!..2.5, -2) => false
number::lte(0.5!..2.5, -1) => false
number::lte(0.5!..2.5, -0.5) => false
number::lte(0.5!..2.5, 0) => false
number::lte(0.5!..2.5, 0.5) => false
number::lte(0.5!..2.5, 1) => false | true
number::lte(0.5!..2.5, 2) => false | true
number::lte(0.5!..2.5, 2.78) => true
number::lte(0.5!..2.5, 3) => true
number::lte(0.5!..2.5, 3.14) => true
number::lte(0.5!..2.5, 10) => true
number::lte(0.5!..2.5, 100) => true
number::lte(0.5!..2.5, -inf) => false
number::lte(0.5!..2.5, inf) => true
number::lte(0.5!..2.5, nan) => false
number::lte(0.5!..2.5, 0..1) => false | true
number::lte(0.5!..2.5, 0!..1) => false | true
number::lte(0.5!..2.5, 0..!1) => false | true
number::lte(0.5!..2.5, 0..2) => false | true
number::lte(0.5!..2.5, 0!..!2) => false | true
number::lte(0.5!..2.5, 0.5..1.5) => false | true
number::lte(0.5!..2.5, 0.5..2.5) => false | true
number::lte(0.5!..2.5, 0.5!..2.5) => false | true
number::lte(0.5!..2.5, 0.5..!2.5) => false | true
number::lte(0.5!..2.5, -2.56..3.35) => false | true
number::lte(0.5!..2.5, 0.5..0.75) => false | true
number::lte(0.5!..2.5, 1..2) => false | true
number::lte(0.5!..2.5, 0..inf) => false | true
number::lte(0.5!..2.5, 0!..inf) => false | true
number::lte(0.5!..2.5, 0..!inf) => false | true
number::lte(0.5!..2.5, 0!..!inf) => false | true
number::lte(0.5!..2.5, 1..inf) => false | true
number::lte(0.5!..2.5, 1!..inf) => false | true
number::lte(0.5!..2.5, 1..!inf) => false | true
number::lte(0.5!..2.5, 2..inf) => false | true
number::lte(0.5!..2.5, 2!..inf) => false | true
number::lte(0.5!..2.5, 2.5..inf) => true
number::lte(0.5!..2.5, -inf..0) => false
number::lte(0.5!..2.5, -inf..inf) => false | true
number::lte(0.5!..2.5, -inf!..inf) => false | true
number::lte(0.5!..2.5, -inf..!inf) => false | true
number::lte(0.5!..2.5, -inf!..!inf) => false | true
number::lte(0.5!..2.5, int(0..1)) => false | true
number::lte(0.5!..2.5, int(0..2)) => false | true
number::lte(0.5!..2.5, int(1..2)) => false | true
number::lte(0.5!..2.5, int(5..20)) => true
number::lte(0.5!..2.5, int(-20..-5)) => false
number::lte(0.5!..2.5, int(-10..10)) => false | true
number::lte(0.5!..2.5, int(0..inf)) => false | true
number::lte(0.5!..2.5, int(1..inf)) => false | true
number::lte(0.5!..2.5, int(-inf..0)) => false
number::lte(0.5!..2.5, int(-inf..1)) => false | true
number::lte(0.5!..2.5, int(-inf..inf)) => false | true
number::lte(0.5!..2.5, nonInt(0..1)) => false | true
number::lte(0.5!..2.5, nonInt(0..2)) => false | true
number::lte(0.5!..2.5, nonInt(-1..2)) => false | true
number::lte(0.5!..2.5, nonInt(0..inf)) => false | true
number::lte(0.5!..2.5, nonInt(-1..inf)) => false | true
number::lte(0.5!..2.5, nonInt(-inf..0)) => false
number::lte(0.5!..2.5, nonInt(-inf..1)) => false | true
number::lte(0.5!..2.5, nonInt(-inf..inf)) => false | true
number::lte(0.5!..2.5, 1 | int(3..4)) => false | true
number::lte(0.5..!2.5, number) => false | true
number::lte(0.5..!2.5, -3.14) => false
number::lte(0.5..!2.5, -2) => false
number::lte(0.5..!2.5, -1) => false
number::lte(0.5..!2.5, -0.5) => false
number::lte(0.5..!2.5, 0) => false
number::lte(0.5..!2.5, 0.5) => false | true
number::lte(0.5..!2.5, 1) => false | true
number::lte(0.5..!2.5, 2) => false | true
number::lte(0.5..!2.5, 2.78) => true
number::lte(0.5..!2.5, 3) => true
number::lte(0.5..!2.5, 3.14) => true
number::lte(0.5..!2.5, 10) => true
number::lte(0.5..!2.5, 100) => true
number::lte(0.5..!2.5, -inf) => false
number::lte(0.5..!2.5, inf) => true
number::lte(0.5..!2.5, nan) => false
number::lte(0.5..!2.5, 0..1) => false | true
number::lte(0.5..!2.5, 0!..1) => false | true
number::lte(0.5..!2.5, 0..!1) => false | true
number::lte(0.5..!2.5, 0..2) => false | true
number::lte(0.5..!2.5, 0!..!2) => false | true
number::lte(0.5..!2.5, 0.5..1.5) => false | true
number::lte(0.5..!2.5, 0.5..2.5) => false | true
number::lte(0.5..!2.5, 0.5!..2.5) => false | true
number::lte(0.5..!2.5, 0.5..!2.5) => false | true
number::lte(0.5..!2.5, -2.56..3.35) => false | true
number::lte(0.5..!2.5, 0.5..0.75) => false | true
number::lte(0.5..!2.5, 1..2) => false | true
number::lte(0.5..!2.5, 0..inf) => false | true
number::lte(0.5..!2.5, 0!..inf) => false | true
number::lte(0.5..!2.5, 0..!inf) => false | true
number::lte(0.5..!2.5, 0!..!inf) => false | true
number::lte(0.5..!2.5, 1..inf) => false | true
number::lte(0.5..!2.5, 1!..inf) => false | true
number::lte(0.5..!2.5, 1..!inf) => false | true
number::lte(0.5..!2.5, 2..inf) => false | true
number::lte(0.5..!2.5, 2!..inf) => false | true
number::lte(0.5..!2.5, 2.5..inf) => true
number::lte(0.5..!2.5, -inf..0) => false
number::lte(0.5..!2.5, -inf..inf) => false | true
number::lte(0.5..!2.5, -inf!..inf) => false | true
number::lte(0.5..!2.5, -inf..!inf) => false | true
number::lte(0.5..!2.5, -inf!..!inf) => false | true
number::lte(0.5..!2.5, int(0..1)) => false | true
number::lte(0.5..!2.5, int(0..2)) => false | true
number::lte(0.5..!2.5, int(1..2)) => false | true
number::lte(0.5..!2.5, int(5..20)) => true
number::lte(0.5..!2.5, int(-20..-5)) => false
number::lte(0.5..!2.5, int(-10..10)) => false | true
number::lte(0.5..!2.5, int(0..inf)) => false | true
number::lte(0.5..!2.5, int(1..inf)) => false | true
number::lte(0.5..!2.5, int(-inf..0)) => false
number::lte(0.5..!2.5, int(-inf..1)) => false | true
number::lte(0.5..!2.5, int(-inf..inf)) => false | true
number::lte(0.5..!2.5, nonInt(0..1)) => false | true
number::lte(0.5..!2.5, nonInt(0..2)) => false | true
number::lte(0.5..!2.5, nonInt(-1..2)) => false | true
number::lte(0.5..!2.5, nonInt(0..inf)) => false | true
number::lte(0.5..!2.5, nonInt(-1..inf)) => false | true
number::lte(0.5..!2.5, nonInt(-inf..0)) => false
number::lte(0.5..!2.5, nonInt(-inf..1)) => false | true
number::lte(0.5..!2.5, nonInt(-inf..inf)) => false | true
number::lte(0.5..!2.5, 1 | int(3..4)) => false | true
number::lte(-2.56..3.35, number) => false | true
number::lte(-2.56..3.35, -3.14) => false
number::lte(-2.56..3.35, -2) => false | true
number::lte(-2.56..3.35, -1) => false | true
number::lte(-2.56..3.35, -0.5) => false | true
number::lte(-2.56..3.35, 0) => false | true
number::lte(-2.56..3.35, 0.5) => false | true
number::lte(-2.56..3.35, 1) => false | true
number::lte(-2.56..3.35, 2) => false | true
number::lte(-2.56..3.35, 2.78) => false | true
number::lte(-2.56..3.35, 3) => false | true
number::lte(-2.56..3.35, 3.14) => false | true
number::lte(-2.56..3.35, 10) => true
number::lte(-2.56..3.35, 100) => true
number::lte(-2.56..3.35, -inf) => false
number::lte(-2.56..3.35, inf) => true
number::lte(-2.56..3.35, nan) => false
number::lte(-2.56..3.35, 0..1) => false | true
number::lte(-2.56..3.35, 0!..1) => false | true
number::lte(-2.56..3.35, 0..!1) => false | true
number::lte(-2.56..3.35, 0..2) => false | true
number::lte(-2.56..3.35, 0!..!2) => false | true
number::lte(-2.56..3.35, 0.5..1.5) => false | true
number::lte(-2.56..3.35, 0.5..2.5) => false | true
number::lte(-2.56..3.35, 0.5!..2.5) => false | true
number::lte(-2.56..3.35, 0.5..!2.5) => false | true
number::lte(-2.56..3.35, -2.56..3.35) => false | true
number::lte(-2.56..3.35, 0.5..0.75) => false | true
number::lte(-2.56..3.35, 1..2) => false | true
number::lte(-2.56..3.35, 0..inf) => false | true
number::lte(-2.56..3.35, 0!..inf) => false | true
number::lte(-2.56..3.35, 0..!inf) => false | true
number::lte(-2.56..3.35, 0!..!inf) => false | true
number::lte(-2.56..3.35, 1..inf) => false | true
number::lte(-2.56..3.35, 1!..inf) => false | true
number::lte(-2.56..3.35, 1..!inf) => false | true
number::lte(-2.56..3.35, 2..inf) => false | true
number::lte(-2.56..3.35, 2!..inf) => false | true
number::lte(-2.56..3.35, 2.5..inf) => false | true
number::lte(-2.56..3.35, -inf..0) => false | true
number::lte(-2.56..3.35, -inf..inf) => false | true
number::lte(-2.56..3.35, -inf!..inf) => false | true
number::lte(-2.56..3.35, -inf..!inf) => false | true
number::lte(-2.56..3.35, -inf!..!inf) => false | true
number::lte(-2.56..3.35, int(0..1)) => false | true
number::lte(-2.56..3.35, int(0..2)) => false | true
number::lte(-2.56..3.35, int(1..2)) => false | true
number::lte(-2.56..3.35, int(5..20)) => true
number::lte(-2.56..3.35, int(-20..-5)) => false
number::lte(-2.56..3.35, int(-10..10)) => false | true
number::lte(-2.56..3.35, int(0..inf)) => false | true
number::lte(-2.56..3.35, int(1..inf)) => false | true
number::lte(-2.56..3.35, int(-inf..0)) => false | true
number::lte(-2.56..3.35, int(-inf..1)) => false | true
number::lte(-2.56..3.35, int(-inf..inf)) => false | true
number::lte(-2.56..3.35, nonInt(0..1)) => false | true
number::lte(-2.56..3.35, nonInt(0..2)) => false | true
number::lte(-2.56..3.35, nonInt(-1..2)) => false | true
number::lte(-2.56..3.35, nonInt(0..inf)) => false | true
number::lte(-2.56..3.35, nonInt(-1..inf)) => false | true
number::lte(-2.56..3.35, nonInt(-inf..0)) => false | true
number::lte(-2.56..3.35, nonInt(-inf..1)) => false | true
number::lte(-2.56..3.35, nonInt(-inf..inf)) => false | true
number::lte(-2.56..3.35, 1 | int(3..4)) => false | true
number::lte(0.5..0.75, number) => false | true
number::lte(0.5..0.75, -3.14) => false
number::lte(0.5..0.75, -2) => false
number::lte(0.5..0.75, -1) => false
number::lte(0.5..0.75, -0.5) => false
number::lte(0.5..0.75, 0) => false
number::lte(0.5..0.75, 0.5) => false | true
number::lte(0.5..0.75, 1) => true
number::lte(0.5..0.75, 2) => true
number::lte(0.5..0.75, 2.78) => true
number::lte(0.5..0.75, 3) => true
number::lte(0.5..0.75, 3.14) => true
number::lte(0.5..0.75, 10) => true
number::lte(0.5..0.75, 100) => true
number::lte(0.5..0.75, -inf) => false
number::lte(0.5..0.75, inf) => true
number::lte(0.5..0.75, nan) => false
number::lte(0.5..0.75, 0..1) => false | true
number::lte(0.5..0.75, 0!..1) => false | true
number::lte(0.5..0.75, 0..!1) => false | true
number::lte(0.5..0.75, 0..2) => false | true
number::lte(0.5..0.75, 0!..!2) => false | true
number::lte(0.5..0.75, 0.5..1.5) => false | true
number::lte(0.5..0.75, 0.5..2.5) => false | true
number::lte(0.5..0.75, 0.5!..2.5) => false | true
number::lte(0.5..0.75, 0.5..!2.5) => false | true
number::lte(0.5..0.75, -2.56..3.35) => false | true
number::lte(0.5..0.75, 0.5..0.75) => false | true
number::lte(0.5..0.75, 1..2) => true
number::lte(0.5..0.75, 0..inf) => false | true
number::lte(0.5..0.75, 0!..inf) => false | true
number::lte(0.5..0.75, 0..!inf) => false | true
number::lte(0.5..0.75, 0!..!inf) => false | true
number::lte(0.5..0.75, 1..inf) => true
number::lte(0.5..0.75, 1!..inf) => true
number::lte(0.5..0.75, 1..!inf) => true
number::lte(0.5..0.75, 2..inf) => true
number::lte(0.5..0.75, 2!..inf) => true
number::lte(0.5..0.75, 2.5..inf) => true
number::lte(0.5..0.75, -inf..0) => false
number::lte(0.5..0.75, -inf..inf) => false | true
number::lte(0.5..0.75, -inf!..inf) => false | true
number::lte(0.5..0.75, -inf..!inf) => false | true
number::lte(0.5..0.75, -inf!..!inf) => false | true
number::lte(0.5..0.75, int(0..1)) => false | true
number::lte(0.5..0.75, int(0..2)) => false | true
number::lte(0.5..0.75, int(1..2)) => true
number::lte(0.5..0.75, int(5..20)) => true
number::lte(0.5..0.75, int(-20..-5)) => false
number::lte(0.5..0.75, int(-10..10)) => false | true
number::lte(0.5..0.75, int(0..inf)) => false | true
number::lte(0.5..0.75, int(1..inf)) => true
number::lte(0.5..0.75, int(-inf..0)) => false
number::lte(0.5..0.75, int(-inf..1)) => false | true
number::lte(0.5..0.75, int(-inf..inf)) => false | true
number::lte(0.5..0.75, nonInt(0..1)) => false | true
number::lte(0.5..0.75, nonInt(0..2)) => false | true
number::lte(0.5..0.75, nonInt(-1..2)) => false | true
number::lte(0.5..0.75, nonInt(0..inf)) => false | true
number::lte(0.5..0.75, nonInt(-1..inf)) => false | true
number::lte(0.5..0.75, nonInt(-inf..0)) => false
number::lte(0.5..0.75, nonInt(-inf..1)) => false | true
number::lte(0.5..0.75, nonInt(-inf..inf)) => false | true
number::lte(0.5..0.75, 1 | int(3..4)) => true
number::lte(1..2, number) => false | true
number::lte(1..2, -3.14) => false
number::lte(1..2, -2) => false
number::lte(1..2, -1) => false
number::lte(1..2, -0.5) => false
number::lte(1..2, 0) => false
number::lte(1..2, 0.5) => false
number::lte(1..2, 1) => false | true
number::lte(1..2, 2) => true
number::lte(1..2, 2.78) => true
number::lte(1..2, 3) => true
number::lte(1..2, 3.14) => true
number::lte(1..2, 10) => true
number::lte(1..2, 100) => true
number::lte(1..2, -inf) => false
number::lte(1..2, inf) => true
number::lte(1..2, nan) => false
number::lte(1..2, 0..1) => false | true
number::lte(1..2, 0!..1) => false | true
number::lte(1..2, 0..!1) => false
number::lte(1..2, 0..2) => false | true
number::lte(1..2, 0!..!2) => false | true
number::lte(1..2, 0.5..1.5) => false | true
number::lte(1..2, 0.5..2.5) => false | true
number::lte(1..2, 0.5!..2.5) => false | true
number::lte(1..2, 0.5..!2.5) => false | true
number::lte(1..2, -2.56..3.35) => false | true
number::lte(1..2, 0.5..0.75) => false
number::lte(1..2, 1..2) => false | true
number::lte(1..2, 0..inf) => false | true
number::lte(1..2, 0!..inf) => false | true
number::lte(1..2, 0..!inf) => false | true
number::lte(1..2, 0!..!inf) => false | true
number::lte(1..2, 1..inf) => false | true
number::lte(1..2, 1!..inf) => false | true
number::lte(1..2, 1..!inf) => false | true
number::lte(1..2, 2..inf) => true
number::lte(1..2, 2!..inf) => true
number::lte(1..2, 2.5..inf) => true
number::lte(1..2, -inf..0) => false
number::lte(1..2, -inf..inf) => false | true
number::lte(1..2, -inf!..inf) => false | true
number::lte(1..2, -inf..!inf) => false | true
number::lte(1..2, -inf!..!inf) => false | true
number::lte(1..2, int(0..1)) => false | true
number::lte(1..2, int(0..2)) => false | true
number::lte(1..2, int(1..2)) => false | true
number::lte(1..2, int(5..20)) => true
number::lte(1..2, int(-20..-5)) => false
number::lte(1..2, int(-10..10)) => false | true
number::lte(1..2, int(0..inf)) => false | true
number::lte(1..2, int(1..inf)) => false | true
number::lte(1..2, int(-inf..0)) => false
number::lte(1..2, int(-inf..1)) => false | true
number::lte(1..2, int(-inf..inf)) => false | true
number::lte(1..2, nonInt(0..1)) => false
number::lte(1..2, nonInt(0..2)) => false | true
number::lte(1..2, nonInt(-1..2)) => false | true
number::lte(1..2, nonInt(0..inf)) => false | true
number::lte(1..2, nonInt(-1..inf)) => false | true
number::lte(1..2, nonInt(-inf..0)) => false
number::lte(1..2, nonInt(-inf..1)) => false
number::lte(1..2, nonInt(-inf..inf)) => false | true
number::lte(1..2, 1 | int(3..4)) => false | true
number::lte(0..inf, number) => false | true
number::lte(0..inf, -3.14) => false
number::lte(0..inf, -2) => false
number::lte(0..inf, -1) => false
number::lte(0..inf, -0.5) => false
number::lte(0..inf, 0) => false | true
number::lte(0..inf, 0.5) => false | true
number::lte(0..inf, 1) => false | true
number::lte(0..inf, 2) => false | true
number::lte(0..inf, 2.78) => false | true
number::lte(0..inf, 3) => false | true
number::lte(0..inf, 3.14) => false | true
number::lte(0..inf, 10) => false | true
number::lte(0..inf, 100) => false | true
number::lte(0..inf, -inf) => false
number::lte(0..inf, inf) => true
number::lte(0..inf, nan) => false
number::lte(0..inf, 0..1) => false | true
number::lte(0..inf, 0!..1) => false | true
number::lte(0..inf, 0..!1) => false | true
number::lte(0..inf, 0..2) => false | true
number::lte(0..inf, 0!..!2) => false | true
number::lte(0..inf, 0.5..1.5) => false | true
number::lte(0..inf, 0.5..2.5) => false | true
number::lte(0..inf, 0.5!..2.5) => false | true
number::lte(0..inf, 0.5..!2.5) => false | true
number::lte(0..inf, -2.56..3.35) => false | true
number::lte(0..inf, 0.5..0.75) => false | true
number::lte(0..inf, 1..2) => false | true
number::lte(0..inf, 0..inf) => false | true
number::lte(0..inf, 0!..inf) => false | true
number::lte(0..inf, 0..!inf) => false | true
number::lte(0..inf, 0!..!inf) => false | true
number::lte(0..inf, 1..inf) => false | true
number::lte(0..inf, 1!..inf) => false | true
number::lte(0..inf, 1..!inf) => false | true
number::lte(0..inf, 2..inf) => false | true
number::lte(0..inf, 2!..inf) => false | true
number::lte(0..inf, 2.5..inf) => false | true
number::lte(0..inf, -inf..0) => false | true
number::lte(0..inf, -inf..inf) => false | true
number::lte(0..inf, -inf!..inf) => false | true
number::lte(0..inf, -inf..!inf) => false | true
number::lte(0..inf, -inf!..!inf) => false | true
number::lte(0..inf, int(0..1)) => false | true
number::lte(0..inf, int(0..2)) => false | true
number::lte(0..inf, int(1..2)) => false | true
number::lte(0..inf, int(5..20)) => false | true
number::lte(0..inf, int(-20..-5)) => false
number::lte(0..inf, int(-10..10)) => false | true
number::lte(0..inf, int(0..inf)) => false | true
number::lte(0..inf, int(1..inf)) => false | true
number::lte(0..inf, int(-inf..0)) => false | true
number::lte(0..inf, int(-inf..1)) => false | true
number::lte(0..inf, int(-inf..inf)) => false | true
number::lte(0..inf, nonInt(0..1)) => false | true
number::lte(0..inf, nonInt(0..2)) => false | true
number::lte(0..inf, nonInt(-1..2)) => false | true
number::lte(0..inf, nonInt(0..inf)) => false | true
number::lte(0..inf, nonInt(-1..inf)) => false | true
number::lte(0..inf, nonInt(-inf..0)) => false
number::lte(0..inf, nonInt(-inf..1)) => false | true
number::lte(0..inf, nonInt(-inf..inf)) => false | true
number::lte(0..inf, 1 | int(3..4)) => false | true
number::lte(0!..inf, number) => false | true
number::lte(0!..inf, -3.14) => false
number::lte(0!..inf, -2) => false
number::lte(0!..inf, -1) => false
number::lte(0!..inf, -0.5) => false
number::lte(0!..inf, 0) => false
number::lte(0!..inf, 0.5) => false | true
number::lte(0!..inf, 1) => false | true
number::lte(0!..inf, 2) => false | true
number::lte(0!..inf, 2.78) => false | true
number::lte(0!..inf, 3) => false | true
number::lte(0!..inf, 3.14) => false | true
number::lte(0!..inf, 10) => false | true
number::lte(0!..inf, 100) => false | true
number::lte(0!..inf, -inf) => false
number::lte(0!..inf, inf) => true
number::lte(0!..inf, nan) => false
number::lte(0!..inf, 0..1) => false | true
number::lte(0!..inf, 0!..1) => false | true
number::lte(0!..inf, 0..!1) => false | true
number::lte(0!..inf, 0..2) => false | true
number::lte(0!..inf, 0!..!2) => false | true
number::lte(0!..inf, 0.5..1.5) => false | true
number::lte(0!..inf, 0.5..2.5) => false | true
number::lte(0!..inf, 0.5!..2.5) => false | true
number::lte(0!..inf, 0.5..!2.5) => false | true
number::lte(0!..inf, -2.56..3.35) => false | true
number::lte(0!..inf, 0.5..0.75) => false | true
number::lte(0!..inf, 1..2) => false | true
number::lte(0!..inf, 0..inf) => false | true
number::lte(0!..inf, 0!..inf) => false | true
number::lte(0!..inf, 0..!inf) => false | true
number::lte(0!..inf, 0!..!inf) => false | true
number::lte(0!..inf, 1..inf) => false | true
number::lte(0!..inf, 1!..inf) => false | true
number::lte(0!..inf, 1..!inf) => false | true
number::lte(0!..inf, 2..inf) => false | true
number::lte(0!..inf, 2!..inf) => false | true
number::lte(0!..inf, 2.5..inf) => false | true
number::lte(0!..inf, -inf..0) => false
number::lte(0!..inf, -inf..inf) => false | true
number::lte(0!..inf, -inf!..inf) => false | true
number::lte(0!..inf, -inf..!inf) => false | true
number::lte(0!..inf, -inf!..!inf) => false | true
number::lte(0!..inf, int(0..1)) => false | true
number::lte(0!..inf, int(0..2)) => false | true
number::lte(0!..inf, int(1..2)) => false | true
number::lte(0!..inf, int(5..20)) => false | true
number::lte(0!..inf, int(-20..-5)) => false
number::lte(0!..inf, int(-10..10)) => false | true
number::lte(0!..inf, int(0..inf)) => false | true
number::lte(0!..inf, int(1..inf)) => false | true
number::lte(0!..inf, int(-inf..0)) => false
number::lte(0!..inf, int(-inf..1)) => false | true
number::lte(0!..inf, int(-inf..inf)) => false | true
number::lte(0!..inf, nonInt(0..1)) => false | true
number::lte(0!..inf, nonInt(0..2)) => false | true
number::lte(0!..inf, nonInt(-1..2)) => false | true
number::lte(0!..inf, nonInt(0..inf)) => false | true
number::lte(0!..inf, nonInt(-1..inf)) => false | true
number::lte(0!..inf, nonInt(-inf..0)) => false
number::lte(0!..inf, nonInt(-inf..1)) => false | true
number::lte(0!..inf, nonInt(-inf..inf)) => false | true
number::lte(0!..inf, 1 | int(3..4)) => false | true
number::lte(0..!inf, number) => false | true
number::lte(0..!inf, -3.14) => false
number::lte(0..!inf, -2) => false
number::lte(0..!inf, -1) => false
number::lte(0..!inf, -0.5) => false
number::lte(0..!inf, 0) => false | true
number::lte(0..!inf, 0.5) => false | true
number::lte(0..!inf, 1) => false | true
number::lte(0..!inf, 2) => false | true
number::lte(0..!inf, 2.78) => false | true
number::lte(0..!inf, 3) => false | true
number::lte(0..!inf, 3.14) => false | true
number::lte(0..!inf, 10) => false | true
number::lte(0..!inf, 100) => false | true
number::lte(0..!inf, -inf) => false
number::lte(0..!inf, inf) => true
number::lte(0..!inf, nan) => false
number::lte(0..!inf, 0..1) => false | true
number::lte(0..!inf, 0!..1) => false | true
number::lte(0..!inf, 0..!1) => false | true
number::lte(0..!inf, 0..2) => false | true
number::lte(0..!inf, 0!..!2) => false | true
number::lte(0..!inf, 0.5..1.5) => false | true
number::lte(0..!inf, 0.5..2.5) => false | true
number::lte(0..!inf, 0.5!..2.5) => false | true
number::lte(0..!inf, 0.5..!2.5) => false | true
number::lte(0..!inf, -2.56..3.35) => false | true
number::lte(0..!inf, 0.5..0.75) => false | true
number::lte(0..!inf, 1..2) => false | true
number::lte(0..!inf, 0..inf) => false | true
number::lte(0..!inf, 0!..inf) => false | true
number::lte(0..!inf, 0..!inf) => false | true
number::lte(0..!inf, 0!..!inf) => false | true
number::lte(0..!inf, 1..inf) => false | true
number::lte(0..!inf, 1!..inf) => false | true
number::lte(0..!inf, 1..!inf) => false | true
number::lte(0..!inf, 2..inf) => false | true
number::lte(0..!inf, 2!..inf) => false | true
number::lte(0..!inf, 2.5..inf) => false | true
number::lte(0..!inf, -inf..0) => false | true
number::lte(0..!inf, -inf..inf) => false | true
number::lte(0..!inf, -inf!..inf) => false | true
number::lte(0..!inf, -inf..!inf) => false | true
number::lte(0..!inf, -inf!..!inf) => false | true
number::lte(0..!inf, int(0..1)) => false | true
number::lte(0..!inf, int(0..2)) => false | true
number::lte(0..!inf, int(1..2)) => false | true
number::lte(0..!inf, int(5..20)) => false | true
number::lte(0..!inf, int(-20..-5)) => false
number::lte(0..!inf, int(-10..10)) => false | true
number::lte(0..!inf, int(0..inf)) => false | true
number::lte(0..!inf, int(1..inf)) => false | true
number::lte(0..!inf, int(-inf..0)) => false | true
number::lte(0..!inf, int(-inf..1)) => false | true
number::lte(0..!inf, int(-inf..inf)) => false | true
number::lte(0..!inf, nonInt(0..1)) => false | true
number::lte(0..!inf, nonInt(0..2)) => false | true
number::lte(0..!inf, nonInt(-1..2)) => false | true
number::lte(0..!inf, nonInt(0..inf)) => false | true
number::lte(0..!inf, nonInt(-1..inf)) => false | true
number::lte(0..!inf, nonInt(-inf..0)) => false
number::lte(0..!inf, nonInt(-inf..1)) => false | true
number::lte(0..!inf, nonInt(-inf..inf)) => false | true
number::lte(0..!inf, 1 | int(3..4)) => false | true
number::lte(0!..!inf, number) => false | true
number::lte(0!..!inf, -3.14) => false
number::lte(0!..!inf, -2) => false
number::lte(0!..!inf, -1) => false
number::lte(0!..!inf, -0.5) => false
number::lte(0!..!inf, 0) => false
number::lte(0!..!inf, 0.5) => false | true
number::lte(0!..!inf, 1) => false | true
number::lte(0!..!inf, 2) => false | true
number::lte(0!..!inf, 2.78) => false | true
number::lte(0!..!inf, 3) => false | true
number::lte(0!..!inf, 3.14) => false | true
number::lte(0!..!inf, 10) => false | true
number::lte(0!..!inf, 100) => false | true
number::lte(0!..!inf, -inf) => false
number::lte(0!..!inf, inf) => true
number::lte(0!..!inf, nan) => false
number::lte(0!..!inf, 0..1) => false | true
number::lte(0!..!inf, 0!..1) => false | true
number::lte(0!..!inf, 0..!1) => false | true
number::lte(0!..!inf, 0..2) => false | true
number::lte(0!..!inf, 0!..!2) => false | true
number::lte(0!..!inf, 0.5..1.5) => false | true
number::lte(0!..!inf, 0.5..2.5) => false | true
number::lte(0!..!inf, 0.5!..2.5) => false | true
number::lte(0!..!inf, 0.5..!2.5) => false | true
number::lte(0!..!inf, -2.56..3.35) => false | true
number::lte(0!..!inf, 0.5..0.75) => false | true
number::lte(0!..!inf, 1..2) => false | true
number::lte(0!..!inf, 0..inf) => false | true
number::lte(0!..!inf, 0!..inf) => false | true
number::lte(0!..!inf, 0..!inf) => false | true
number::lte(0!..!inf, 0!..!inf) => false | true
number::lte(0!..!inf, 1..inf) => false | true
number::lte(0!..!inf, 1!..inf) => false | true
number::lte(0!..!inf, 1..!inf) => false | true
number::lte(0!..!inf, 2..inf) => false | true
number::lte(0!..!inf, 2!..inf) => false | true
number::lte(0!..!inf, 2.5..inf) => false | true
number::lte(0!..!inf, -inf..0) => false
number::lte(0!..!inf, -inf..inf) => false | true
number::lte(0!..!inf, -inf!..inf) => false | true
number::lte(0!..!inf, -inf..!inf) => false | true
number::lte(0!..!inf, -inf!..!inf) => false | true
number::lte(0!..!inf, int(0..1)) => false | true
number::lte(0!..!inf, int(0..2)) => false | true
number::lte(0!..!inf, int(1..2)) => false | true
number::lte(0!..!inf, int(5..20)) => false | true
number::lte(0!..!inf, int(-20..-5)) => false
number::lte(0!..!inf, int(-10..10)) => false | true
number::lte(0!..!inf, int(0..inf)) => false | true
number::lte(0!..!inf, int(1..inf)) => false | true
number::lte(0!..!inf, int(-inf..0)) => false
number::lte(0!..!inf, int(-inf..1)) => false | true
number::lte(0!..!inf, int(-inf..inf)) => false | true
number::lte(0!..!inf, nonInt(0..1)) => false | true
number::lte(0!..!inf, nonInt(0..2)) => false | true
number::lte(0!..!inf, nonInt(-1..2)) => false | true
number::lte(0!..!inf, nonInt(0..inf)) => false | true
number::lte(0!..!inf, nonInt(-1..inf)) => false | true
number::lte(0!..!inf, nonInt(-inf..0)) => false
number::lte(0!..!inf, nonInt(-inf..1)) => false | true
number::lte(0!..!inf, nonInt(-inf..inf)) => false | true
number::lte(0!..!inf, 1 | int(3..4)) => false | true
number::lte(1..inf, number) => false | true
number::lte(1..inf, -3.14) => false
number::lte(1..inf, -2) => false
number::lte(1..inf, -1) => false
number::lte(1..inf, -0.5) => false
number::lte(1..inf, 0) => false
number::lte(1..inf, 0.5) => false
number::lte(1..inf, 1) => false | true
number::lte(1..inf, 2) => false | true
number::lte(1..inf, 2.78) => false | true
number::lte(1..inf, 3) => false | true
number::lte(1..inf, 3.14) => false | true
number::lte(1..inf, 10) => false | true
number::lte(1..inf, 100) => false | true
number::lte(1..inf, -inf) => false
number::lte(1..inf, inf) => true
number::lte(1..inf, nan) => false
number::lte(1..inf, 0..1) => false | true
number::lte(1..inf, 0!..1) => false | true
number::lte(1..inf, 0..!1) => false
number::lte(1..inf, 0..2) => false | true
number::lte(1..inf, 0!..!2) => false | true
number::lte(1..inf, 0.5..1.5) => false | true
number::lte(1..inf, 0.5..2.5) => false | true
number::lte(1..inf, 0.5!..2.5) => false | true
number::lte(1..inf, 0.5..!2.5) => false | true
number::lte(1..inf, -2.56..3.35) => false | true
number::lte(1..inf, 0.5..0.75) => false
number::lte(1..inf, 1..2) => false | true
number::lte(1..inf, 0..inf) => false | true
number::lte(1..inf, 0!..inf) => false | true
number::lte(1..inf, 0..!inf) => false | true
number::lte(1..inf, 0!..!inf) => false | true
number::lte(1..inf, 1..inf) => false | true
number::lte(1..inf, 1!..inf) => false | true
number::lte(1..inf, 1..!inf) => false | true
number::lte(1..inf, 2..inf) => false | true
number::lte(1..inf, 2!..inf) => false | true
number::lte(1..inf, 2.5..inf) => false | true
number::lte(1..inf, -inf..0) => false
number::lte(1..inf, -inf..inf) => false | true
number::lte(1..inf, -inf!..inf) => false | true
number::lte(1..inf, -inf..!inf) => false | true
number::lte(1..inf, -inf!..!inf) => false | true
number::lte(1..inf, int(0..1)) => false | true
number::lte(1..inf, int(0..2)) => false | true
number::lte(1..inf, int(1..2)) => false | true
number::lte(1..inf, int(5..20)) => false | true
number::lte(1..inf, int(-20..-5)) => false
number::lte(1..inf, int(-10..10)) => false | true
number::lte(1..inf, int(0..inf)) => false | true
number::lte(1..inf, int(1..inf)) => false | true
number::lte(1..inf, int(-inf..0)) => false
number::lte(1..inf, int(-inf..1)) => false | true
number::lte(1..inf, int(-inf..inf)) => false | true
number::lte(1..inf, nonInt(0..1)) => false
number::lte(1..inf, nonInt(0..2)) => false | true
number::lte(1..inf, nonInt(-1..2)) => false | true
number::lte(1..inf, nonInt(0..inf)) => false | true
number::lte(1..inf, nonInt(-1..inf)) => false | true
number::lte(1..inf, nonInt(-inf..0)) => false
number::lte(1..inf, nonInt(-inf..1)) => false
number::lte(1..inf, nonInt(-inf..inf)) => false | true
number::lte(1..inf, 1 | int(3..4)) => false | true
number::lte(1!..inf, number) => false | true
number::lte(1!..inf, -3.14) => false
number::lte(1!..inf, -2) => false
number::lte(1!..inf, -1) => false
number::lte(1!..inf, -0.5) => false
number::lte(1!..inf, 0) => false
number::lte(1!..inf, 0.5) => false
number::lte(1!..inf, 1) => false
number::lte(1!..inf, 2) => false | true
number::lte(1!..inf, 2.78) => false | true
number::lte(1!..inf, 3) => false | true
number::lte(1!..inf, 3.14) => false | true
number::lte(1!..inf, 10) => false | true
number::lte(1!..inf, 100) => false | true
number::lte(1!..inf, -inf) => false
number::lte(1!..inf, inf) => true
number::lte(1!..inf, nan) => false
number::lte(1!..inf, 0..1) => false
number::lte(1!..inf, 0!..1) => false
number::lte(1!..inf, 0..!1) => false
number::lte(1!..inf, 0..2) => false | true
number::lte(1!..inf, 0!..!2) => false | true
number::lte(1!..inf, 0.5..1.5) => false | true
number::lte(1!..inf, 0.5..2.5) => false | true
number::lte(1!..inf, 0.5!..2.5) => false | true
number::lte(1!..inf, 0.5..!2.5) => false | true
number::lte(1!..inf, -2.56..3.35) => false | true
number::lte(1!..inf, 0.5..0.75) => false
number::lte(1!..inf, 1..2) => false | true
number::lte(1!..inf, 0..inf) => false | true
number::lte(1!..inf, 0!..inf) => false | true
number::lte(1!..inf, 0..!inf) => false | true
number::lte(1!..inf, 0!..!inf) => false | true
number::lte(1!..inf, 1..inf) => false | true
number::lte(1!..inf, 1!..inf) => false | true
number::lte(1!..inf, 1..!inf) => false | true
number::lte(1!..inf, 2..inf) => false | true
number::lte(1!..inf, 2!..inf) => false | true
number::lte(1!..inf, 2.5..inf) => false | true
number::lte(1!..inf, -inf..0) => false
number::lte(1!..inf, -inf..inf) => false | true
number::lte(1!..inf, -inf!..inf) => false | true
number::lte(1!..inf, -inf..!inf) => false | true
number::lte(1!..inf, -inf!..!inf) => false | true
number::lte(1!..inf, int(0..1)) => false
number::lte(1!..inf, int(0..2)) => false | true
number::lte(1!..inf, int(1..2)) => false | true
number::lte(1!..inf, int(5..20)) => false | true
number::lte(1!..inf, int(-20..-5)) => false
number::lte(1!..inf, int(-10..10)) => false | true
number::lte(1!..inf, int(0..inf)) => false | true
number::lte(1!..inf, int(1..inf)) => false | true
number::lte(1!..inf, int(-inf..0)) => false
number::lte(1!..inf, int(-inf..1)) => false
number::lte(1!..inf, int(-inf..inf)) => false | true
number::lte(1!..inf, nonInt(0..1)) => false
number::lte(1!..inf, nonInt(0..2)) => false | true
number::lte(1!..inf, nonInt(-1..2)) => false | true
number::lte(1!..inf, nonInt(0..inf)) => false | true
number::lte(1!..inf, nonInt(-1..inf)) => false | true
number::lte(1!..inf, nonInt(-inf..0)) => false
number::lte(1!..inf, nonInt(-inf..1)) => false
number::lte(1!..inf, nonInt(-inf..inf)) => false | true
number::lte(1!..inf, 1 | int(3..4)) => false | true
number::lte(1..!inf, number) => false | true
number::lte(1..!inf, -3.14) => false
number::lte(1..!inf, -2) => false
number::lte(1..!inf, -1) => false
number::lte(1..!inf, -0.5) => false
number::lte(1..!inf, 0) => false
number::lte(1..!inf, 0.5) => false
number::lte(1..!inf, 1) => false | true
number::lte(1..!inf, 2) => false | true
number::lte(1..!inf, 2.78) => false | true
number::lte(1..!inf, 3) => false | true
number::lte(1..!inf, 3.14) => false | true
number::lte(1..!inf, 10) => false | true
number::lte(1..!inf, 100) => false | true
number::lte(1..!inf, -inf) => false
number::lte(1..!inf, inf) => true
number::lte(1..!inf, nan) => false
number::lte(1..!inf, 0..1) => false | true
number::lte(1..!inf, 0!..1) => false | true
number::lte(1..!inf, 0..!1) => false
number::lte(1..!inf, 0..2) => false | true
number::lte(1..!inf, 0!..!2) => false | true
number::lte(1..!inf, 0.5..1.5) => false | true
number::lte(1..!inf, 0.5..2.5) => false | true
number::lte(1..!inf, 0.5!..2.5) => false | true
number::lte(1..!inf, 0.5..!2.5) => false | true
number::lte(1..!inf, -2.56..3.35) => false | true
number::lte(1..!inf, 0.5..0.75) => false
number::lte(1..!inf, 1..2) => false | true
number::lte(1..!inf, 0..inf) => false | true
number::lte(1..!inf, 0!..inf) => false | true
number::lte(1..!inf, 0..!inf) => false | true
number::lte(1..!inf, 0!..!inf) => false | true
number::lte(1..!inf, 1..inf) => false | true
number::lte(1..!inf, 1!..inf) => false | true
number::lte(1..!inf, 1..!inf) => false | true
number::lte(1..!inf, 2..inf) => false | true
number::lte(1..!inf, 2!..inf) => false | true
number::lte(1..!inf, 2.5..inf) => false | true
number::lte(1..!inf, -inf..0) => false
number::lte(1..!inf, -inf..inf) => false | true
number::lte(1..!inf, -inf!..inf) => false | true
number::lte(1..!inf, -inf..!inf) => false | true
number::lte(1..!inf, -inf!..!inf) => false | true
number::lte(1..!inf, int(0..1)) => false | true
number::lte(1..!inf, int(0..2)) => false | true
number::lte(1..!inf, int(1..2)) => false | true
number::lte(1..!inf, int(5..20)) => false | true
number::lte(1..!inf, int(-20..-5)) => false
number::lte(1..!inf, int(-10..10)) => false | true
number::lte(1..!inf, int(0..inf)) => false | true
number::lte(1..!inf, int(1..inf)) => false | true
number::lte(1..!inf, int(-inf..0)) => false
number::lte(1..!inf, int(-inf..1)) => false | true
number::lte(1..!inf, int(-inf..inf)) => false | true
number::lte(1..!inf, nonInt(0..1)) => false
number::lte(1..!inf, nonInt(0..2)) => false | true
number::lte(1..!inf, nonInt(-1..2)) => false | true
number::lte(1..!inf, nonInt(0..inf)) => false | true
number::lte(1..!inf, nonInt(-1..inf)) => false | true
number::lte(1..!inf, nonInt(-inf..0)) => false
number::lte(1..!inf, nonInt(-inf..1)) => false
number::lte(1..!inf, nonInt(-inf..inf)) => false | true
number::lte(1..!inf, 1 | int(3..4)) => false | true
number::lte(2..inf, number) => false | true
number::lte(2..inf, -3.14) => false
number::lte(2..inf, -2) => false
number::lte(2..inf, -1) => false
number::lte(2..inf, -0.5) => false
number::lte(2..inf, 0) => false
number::lte(2..inf, 0.5) => false
number::lte(2..inf, 1) => false
number::lte(2..inf, 2) => false | true
number::lte(2..inf, 2.78) => false | true
number::lte(2..inf, 3) => false | true
number::lte(2..inf, 3.14) => false | true
number::lte(2..inf, 10) => false | true
number::lte(2..inf, 100) => false | true
number::lte(2..inf, -inf) => false
number::lte(2..inf, inf) => true
number::lte(2..inf, nan) => false
number::lte(2..inf, 0..1) => false
number::lte(2..inf, 0!..1) => false
number::lte(2..inf, 0..!1) => false
number::lte(2..inf, 0..2) => false | true
number::lte(2..inf, 0!..!2) => false
number::lte(2..inf, 0.5..1.5) => false
number::lte(2..inf, 0.5..2.5) => false | true
number::lte(2..inf, 0.5!..2.5) => false | true
number::lte(2..inf, 0.5..!2.5) => false | true
number::lte(2..inf, -2.56..3.35) => false | true
number::lte(2..inf, 0.5..0.75) => false
number::lte(2..inf, 1..2) => false | true
number::lte(2..inf, 0..inf) => false | true
number::lte(2..inf, 0!..inf) => false | true
number::lte(2..inf, 0..!inf) => false | true
number::lte(2..inf, 0!..!inf) => false | true
number::lte(2..inf, 1..inf) => false | true
number::lte(2..inf, 1!..inf) => false | true
number::lte(2..inf, 1..!inf) => false | true
number::lte(2..inf, 2..inf) => false | true
number::lte(2..inf, 2!..inf) => false | true
number::lte(2..inf, 2.5..inf) => false | true
number::lte(2..inf, -inf..0) => false
number::lte(2..inf, -inf..inf) => false | true
number::lte(2..inf, -inf!..inf) => false | true
number::lte(2..inf, -inf..!inf) => false | true
number::lte(2..inf, -inf!..!inf) => false | true
number::lte(2..inf, int(0..1)) => false
number::lte(2..inf, int(0..2)) => false | true
number::lte(2..inf, int(1..2)) => false | true
number::lte(2..inf, int(5..20)) => false | true
number::lte(2..inf, int(-20..-5)) => false
number::lte(2..inf, int(-10..10)) => false | true
number::lte(2..inf, int(0..inf)) => false | true
number::lte(2..inf, int(1..inf)) => false | true
number::lte(2..inf, int(-inf..0)) => false
number::lte(2..inf, int(-inf..1)) => false
number::lte(2..inf, int(-inf..inf)) => false | true
number::lte(2..inf, nonInt(0..1)) => false
number::lte(2..inf, nonInt(0..2)) => false
number::lte(2..inf, nonInt(-1..2)) => false
number::lte(2..inf, nonInt(0..inf)) => false | true
number::lte(2..inf, nonInt(-1..inf)) => false | true
number::lte(2..inf, nonInt(-inf..0)) => false
number::lte(2..inf, nonInt(-inf..1)) => false
number::lte(2..inf, nonInt(-inf..inf)) => false | true
number::lte(2..inf, 1 | int(3..4)) => false | true
number::lte(2!..inf, number) => false | true
number::lte(2!..inf, -3.14) => false
number::lte(2!..inf, -2) => false
number::lte(2!..inf, -1) => false
number::lte(2!..inf, -0.5) => false
number::lte(2!..inf, 0) => false
number::lte(2!..inf, 0.5) => false
number::lte(2!..inf, 1) => false
number::lte(2!..inf, 2) => false
number::lte(2!..inf, 2.78) => false | true
number::lte(2!..inf, 3) => false | true
number::lte(2!..inf, 3.14) => false | true
number::lte(2!..inf, 10) => false | true
number::lte(2!..inf, 100) => false | true
number::lte(2!..inf, -inf) => false
number::lte(2!..inf, inf) => true
number::lte(2!..inf, nan) => false
number::lte(2!..inf, 0..1) => false
number::lte(2!..inf, 0!..1) => false
number::lte(2!..inf, 0..!1) => false
number::lte(2!..inf, 0..2) => false
number::lte(2!..inf, 0!..!2) => false
number::lte(2!..inf, 0.5..1.5) => false
number::lte(2!..inf, 0.5..2.5) => false | true
number::lte(2!..inf, 0.5!..2.5) => false | true
number::lte(2!..inf, 0.5..!2.5) => false | true
number::lte(2!..inf, -2.56..3.35) => false | true
number::lte(2!..inf, 0.5..0.75) => false
number::lte(2!..inf, 1..2) => false
number::lte(2!..inf, 0..inf) => false | true
number::lte(2!..inf, 0!..inf) => false | true
number::lte(2!..inf, 0..!inf) => false | true
number::lte(2!..inf, 0!..!inf) => false | true
number::lte(2!..inf, 1..inf) => false | true
number::lte(2!..inf, 1!..inf) => false | true
number::lte(2!..inf, 1..!inf) => false | true
number::lte(2!..inf, 2..inf) => false | true
number::lte(2!..inf, 2!..inf) => false | true
number::lte(2!..inf, 2.5..inf) => false | true
number::lte(2!..inf, -inf..0) => false
number::lte(2!..inf, -inf..inf) => false | true
number::lte(2!..inf, -inf!..inf) => false | true
number::lte(2!..inf, -inf..!inf) => false | true
number::lte(2!..inf, -inf!..!inf) => false | true
number::lte(2!..inf, int(0..1)) => false
number::lte(2!..inf, int(0..2)) => false
number::lte(2!..inf, int(1..2)) => false
number::lte(2!..inf, int(5..20)) => false | true
number::lte(2!..inf, int(-20..-5)) => false
number::lte(2!..inf, int(-10..10)) => false | true
number::lte(2!..inf, int(0..inf)) => false | true
number::lte(2!..inf, int(1..inf)) => false | true
number::lte(2!..inf, int(-inf..0)) => false
number::lte(2!..inf, int(-inf..1)) => false
number::lte(2!..inf, int(-inf..inf)) => false | true
number::lte(2!..inf, nonInt(0..1)) => false
number::lte(2!..inf, nonInt(0..2)) => false
number::lte(2!..inf, nonInt(-1..2)) => false
number::lte(2!..inf, nonInt(0..inf)) => false | true
number::lte(2!..inf, nonInt(-1..inf)) => false | true
number::lte(2!..inf, nonInt(-inf..0)) => false
number::lte(2!..inf, nonInt(-inf..1)) => false
number::lte(2!..inf, nonInt(-inf..inf)) => false | true
number::lte(2!..inf, 1 | int(3..4)) => false | true
number::lte(2.5..inf, number) => false | true
number::lte(2.5..inf, -3.14) => false
number::lte(2.5..inf, -2) => false
number::lte(2.5..inf, -1) => false
number::lte(2.5..inf, -0.5) => false
number::lte(2.5..inf, 0) => false
number::lte(2.5..inf, 0.5) => false
number::lte(2.5..inf, 1) => false
number::lte(2.5..inf, 2) => false
number::lte(2.5..inf, 2.78) => false | true
number::lte(2.5..inf, 3) => false | true
number::lte(2.5..inf, 3.14) => false | true
number::lte(2.5..inf, 10) => false | true
number::lte(2.5..inf, 100) => false | true
number::lte(2.5..inf, -inf) => false
number::lte(2.5..inf, inf) => true
number::lte(2.5..inf, nan) => false
number::lte(2.5..inf, 0..1) => false
number::lte(2.5..inf, 0!..1) => false
number::lte(2.5..inf, 0..!1) => false
number::lte(2.5..inf, 0..2) => false
number::lte(2.5..inf, 0!..!2) => false
number::lte(2.5..inf, 0.5..1.5) => false
number::lte(2.5..inf, 0.5..2.5) => false | true
number::lte(2.5..inf, 0.5!..2.5) => false | true
number::lte(2.5..inf, 0.5..!2.5) => false
number::lte(2.5..inf, -2.56..3.35) => false | true
number::lte(2.5..inf, 0.5..0.75) => false
number::lte(2.5..inf, 1..2) => false
number::lte(2.5..inf, 0..inf) => false | true
number::lte(2.5..inf, 0!..inf) => false | true
number::lte(2.5..inf, 0..!inf) => false | true
number::lte(2.5..inf, 0!..!inf) => false | true
number::lte(2.5..inf, 1..inf) => false | true
number::lte(2.5..inf, 1!..inf) => false | true
number::lte(2.5..inf, 1..!inf) => false | true
number::lte(2.5..inf, 2..inf) => false | true
number::lte(2.5..inf, 2!..inf) => false | true
number::lte(2.5..inf, 2.5..inf) => false | true
number::lte(2.5..inf, -inf..0) => false
number::lte(2.5..inf, -inf..inf) => false | true
number::lte(2.5..inf, -inf!..inf) => false | true
number::lte(2.5..inf, -inf..!inf) => false | true
number::lte(2.5..inf, -inf!..!inf) => false | true
number::lte(2.5..inf, int(0..1)) => false
number::lte(2.5..inf, int(0..2)) => false
number::lte(2.5..inf, int(1..2)) => false
number::lte(2.5..inf, int(5..20)) => false | true
number::lte(2.5..inf, int(-20..-5)) => false
number::lte(2.5..inf, int(-10..10)) => false | true
number::lte(2.5..inf, int(0..inf)) => false | true
number::lte(2.5..inf, int(1..inf)) => false | true
number::lte(2.5..inf, int(-inf..0)) => false
number::lte(2.5..inf, int(-inf..1)) => false
number::lte(2.5..inf, int(-inf..inf)) => false | true
number::lte(2.5..inf, nonInt(0..1)) => false
number::lte(2.5..inf, nonInt(0..2)) => false
number::lte(2.5..inf, nonInt(-1..2)) => false
number::lte(2.5..inf, nonInt(0..inf)) => false | true
number::lte(2.5..inf, nonInt(-1..inf)) => false | true
number::lte(2.5..inf, nonInt(-inf..0)) => false
number::lte(2.5..inf, nonInt(-inf..1)) => false
number::lte(2.5..inf, nonInt(-inf..inf)) => false | true
number::lte(2.5..inf, 1 | int(3..4)) => false | true
number::lte(-inf..0, number) => false | true
number::lte(-inf..0, -3.14) => false | true
number::lte(-inf..0, -2) => false | true
number::lte(-inf..0, -1) => false | true
number::lte(-inf..0, -0.5) => false | true
number::lte(-inf..0, 0) => true
number::lte(-inf..0, 0.5) => true
number::lte(-inf..0, 1) => true
number::lte(-inf..0, 2) => true
number::lte(-inf..0, 2.78) => true
number::lte(-inf..0, 3) => true
number::lte(-inf..0, 3.14) => true
number::lte(-inf..0, 10) => true
number::lte(-inf..0, 100) => true
number::lte(-inf..0, -inf) => false | true
number::lte(-inf..0, inf) => true
number::lte(-inf..0, nan) => false
number::lte(-inf..0, 0..1) => true
number::lte(-inf..0, 0!..1) => true
number::lte(-inf..0, 0..!1) => true
number::lte(-inf..0, 0..2) => true
number::lte(-inf..0, 0!..!2) => true
number::lte(-inf..0, 0.5..1.5) => true
number::lte(-inf..0, 0.5..2.5) => true
number::lte(-inf..0, 0.5!..2.5) => true
number::lte(-inf..0, 0.5..!2.5) => true
number::lte(-inf..0, -2.56..3.35) => false | true
number::lte(-inf..0, 0.5..0.75) => true
number::lte(-inf..0, 1..2) => true
number::lte(-inf..0, 0..inf) => true
number::lte(-inf..0, 0!..inf) => true
number::lte(-inf..0, 0..!inf) => true
number::lte(-inf..0, 0!..!inf) => true
number::lte(-inf..0, 1..inf) => true
number::lte(-inf..0, 1!..inf) => true
number::lte(-inf..0, 1..!inf) => true
number::lte(-inf..0, 2..inf) => true
number::lte(-inf..0, 2!..inf) => true
number::lte(-inf..0, 2.5..inf) => true
number::lte(-inf..0, -inf..0) => false | true
number::lte(-inf..0, -inf..inf) => false | true
number::lte(-inf..0, -inf!..inf) => false | true
number::lte(-inf..0, -inf..!inf) => false | true
number::lte(-inf..0, -inf!..!inf) => false | true
number::lte(-inf..0, int(0..1)) => true
number::lte(-inf..0, int(0..2)) => true
number::lte(-inf..0, int(1..2)) => true
number::lte(-inf..0, int(5..20)) => true
number::lte(-inf..0, int(-20..-5)) => false | true
number::lte(-inf..0, int(-10..10)) => false | true
number::lte(-inf..0, int(0..inf)) => true
number::lte(-inf..0, int(1..inf)) => true
number::lte(-inf..0, int(-inf..0)) => false | true
number::lte(-inf..0, int(-inf..1)) => false | true
number::lte(-inf..0, int(-inf..inf)) => false | true
number::lte(-inf..0, nonInt(0..1)) => true
number::lte(-inf..0, nonInt(0..2)) => true
number::lte(-inf..0, nonInt(-1..2)) => false | true
number::lte(-inf..0, nonInt(0..inf)) => true
number::lte(-inf..0, nonInt(-1..inf)) => false | true
number::lte(-inf..0, nonInt(-inf..0)) => false | true
number::lte(-inf..0, nonInt(-inf..1)) => false | true
number::lte(-inf..0, nonInt(-inf..inf)) => false | true
number::lte(-inf..0, 1 | int(3..4)) => true
number::lte(-inf..inf, number) => false | true
number::lte(-inf..inf, -3.14) => false | true
number::lte(-inf..inf, -2) => false | true
number::lte(-inf..inf, -1) => false | true
number::lte(-inf..inf, -0.5) => false | true
number::lte(-inf..inf, 0) => false | true
number::lte(-inf..inf, 0.5) => false | true
number::lte(-inf..inf, 1) => false | true
number::lte(-inf..inf, 2) => false | true
number::lte(-inf..inf, 2.78) => false | true
number::lte(-inf..inf, 3) => false | true
number::lte(-inf..inf, 3.14) => false | true
number::lte(-inf..inf, 10) => false | true
number::lte(-inf..inf, 100) => false | true
number::lte(-inf..inf, -inf) => false | true
number::lte(-inf..inf, inf) => true
number::lte(-inf..inf, nan) => false
number::lte(-inf..inf, 0..1) => false | true
number::lte(-inf..inf, 0!..1) => false | true
number::lte(-inf..inf, 0..!1) => false | true
number::lte(-inf..inf, 0..2) => false | true
number::lte(-inf..inf, 0!..!2) => false | true
number::lte(-inf..inf, 0.5..1.5) => false | true
number::lte(-inf..inf, 0.5..2.5) => false | true
number::lte(-inf..inf, 0.5!..2.5) => false | true
number::lte(-inf..inf, 0.5..!2.5) => false | true
number::lte(-inf..inf, -2.56..3.35) => false | true
number::lte(-inf..inf, 0.5..0.75) => false | true
number::lte(-inf..inf, 1..2) => false | true
number::lte(-inf..inf, 0..inf) => false | true
number::lte(-inf..inf, 0!..inf) => false | true
number::lte(-inf..inf, 0..!inf) => false | true
number::lte(-inf..inf, 0!..!inf) => false | true
number::lte(-inf..inf, 1..inf) => false | true
number::lte(-inf..inf, 1!..inf) => false | true
number::lte(-inf..inf, 1..!inf) => false | true
number::lte(-inf..inf, 2..inf) => false | true
number::lte(-inf..inf, 2!..inf) => false | true
number::lte(-inf..inf, 2.5..inf) => false | true
number::lte(-inf..inf, -inf..0) => false | true
number::lte(-inf..inf, -inf..inf) => false | true
number::lte(-inf..inf, -inf!..inf) => false | true
number::lte(-inf..inf, -inf..!inf) => false | true
number::lte(-inf..inf, -inf!..!inf) => false | true
number::lte(-inf..inf, int(0..1)) => false | true
number::lte(-inf..inf, int(0..2)) => false | true
number::lte(-inf..inf, int(1..2)) => false | true
number::lte(-inf..inf, int(5..20)) => false | true
number::lte(-inf..inf, int(-20..-5)) => false | true
number::lte(-inf..inf, int(-10..10)) => false | true
number::lte(-inf..inf, int(0..inf)) => false | true
number::lte(-inf..inf, int(1..inf)) => false | true
number::lte(-inf..inf, int(-inf..0)) => false | true
number::lte(-inf..inf, int(-inf..1)) => false | true
number::lte(-inf..inf, int(-inf..inf)) => false | true
number::lte(-inf..inf, nonInt(0..1)) => false | true
number::lte(-inf..inf, nonInt(0..2)) => false | true
number::lte(-inf..inf, nonInt(-1..2)) => false | true
number::lte(-inf..inf, nonInt(0..inf)) => false | true
number::lte(-inf..inf, nonInt(-1..inf)) => false | true
number::lte(-inf..inf, nonInt(-inf..0)) => false | true
number::lte(-inf..inf, nonInt(-inf..1)) => false | true
number::lte(-inf..inf, nonInt(-inf..inf)) => false | true
number::lte(-inf..inf, 1 | int(3..4)) => false | true
number::lte(-inf!..inf, number) => false | true
number::lte(-inf!..inf, -3.14) => false | true
number::lte(-inf!..inf, -2) => false | true
number::lte(-inf!..inf, -1) => false | true
number::lte(-inf!..inf, -0.5) => false | true
number::lte(-inf!..inf, 0) => false | true
number::lte(-inf!..inf, 0.5) => false | true
number::lte(-inf!..inf, 1) => false | true
number::lte(-inf!..inf, 2) => false | true
number::lte(-inf!..inf, 2.78) => false | true
number::lte(-inf!..inf, 3) => false | true
number::lte(-inf!..inf, 3.14) => false | true
number::lte(-inf!..inf, 10) => false | true
number::lte(-inf!..inf, 100) => false | true
number::lte(-inf!..inf, -inf) => false
number::lte(-inf!..inf, inf) => true
number::lte(-inf!..inf, nan) => false
number::lte(-inf!..inf, 0..1) => false | true
number::lte(-inf!..inf, 0!..1) => false | true
number::lte(-inf!..inf, 0..!1) => false | true
number::lte(-inf!..inf, 0..2) => false | true
number::lte(-inf!..inf, 0!..!2) => false | true
number::lte(-inf!..inf, 0.5..1.5) => false | true
number::lte(-inf!..inf, 0.5..2.5) => false | true
number::lte(-inf!..inf, 0.5!..2.5) => false | true
number::lte(-inf!..inf, 0.5..!2.5) => false | true
number::lte(-inf!..inf, -2.56..3.35) => false | true
number::lte(-inf!..inf, 0.5..0.75) => false | true
number::lte(-inf!..inf, 1..2) => false | true
number::lte(-inf!..inf, 0..inf) => false | true
number::lte(-inf!..inf, 0!..inf) => false | true
number::lte(-inf!..inf, 0..!inf) => false | true
number::lte(-inf!..inf, 0!..!inf) => false | true
number::lte(-inf!..inf, 1..inf) => false | true
number::lte(-inf!..inf, 1!..inf) => false | true
number::lte(-inf!..inf, 1..!inf) => false | true
number::lte(-inf!..inf, 2..inf) => false | true
number::lte(-inf!..inf, 2!..inf) => false | true
number::lte(-inf!..inf, 2.5..inf) => false | true
number::lte(-inf!..inf, -inf..0) => false | true
number::lte(-inf!..inf, -inf..inf) => false | true
number::lte(-inf!..inf, -inf!..inf) => false | true
number::lte(-inf!..inf, -inf..!inf) => false | true
number::lte(-inf!..inf, -inf!..!inf) => false | true
number::lte(-inf!..inf, int(0..1)) => false | true
number::lte(-inf!..inf, int(0..2)) => false | true
number::lte(-inf!..inf, int(1..2)) => false | true
number::lte(-inf!..inf, int(5..20)) => false | true
number::lte(-inf!..inf, int(-20..-5)) => false | true
number::lte(-inf!..inf, int(-10..10)) => false | true
number::lte(-inf!..inf, int(0..inf)) => false | true
number::lte(-inf!..inf, int(1..inf)) => false | true
number::lte(-inf!..inf, int(-inf..0)) => false | true
number::lte(-inf!..inf, int(-inf..1)) => false | true
number::lte(-inf!..inf, int(-inf..inf)) => false | true
number::lte(-inf!..inf, nonInt(0..1)) => false | true
number::lte(-inf!..inf, nonInt(0..2)) => false | true
number::lte(-inf!..inf, nonInt(-1..2)) => false | true
number::lte(-inf!..inf, nonInt(0..inf)) => false | true
number::lte(-inf!..inf, nonInt(-1..inf)) => false | true
number::lte(-inf!..inf, nonInt(-inf..0)) => false | true
number::lte(-inf!..inf, nonInt(-inf..1)) => false | true
number::lte(-inf!..inf, nonInt(-inf..inf)) => false | true
number::lte(-inf!..inf, 1 | int(3..4)) => false | true
number::lte(-inf..!inf, number) => false | true
number::lte(-inf..!inf, -3.14) => false | true
number::lte(-inf..!inf, -2) => false | true
number::lte(-inf..!inf, -1) => false | true
number::lte(-inf..!inf, -0.5) => false | true
number::lte(-inf..!inf, 0) => false | true
number::lte(-inf..!inf, 0.5) => false | true
number::lte(-inf..!inf, 1) => false | true
number::lte(-inf..!inf, 2) => false | true
number::lte(-inf..!inf, 2.78) => false | true
number::lte(-inf..!inf, 3) => false | true
number::lte(-inf..!inf, 3.14) => false | true
number::lte(-inf..!inf, 10) => false | true
number::lte(-inf..!inf, 100) => false | true
number::lte(-inf..!inf, -inf) => false | true
number::lte(-inf..!inf, inf) => true
number::lte(-inf..!inf, nan) => false
number::lte(-inf..!inf, 0..1) => false | true
number::lte(-inf..!inf, 0!..1) => false | true
number::lte(-inf..!inf, 0..!1) => false | true
number::lte(-inf..!inf, 0..2) => false | true
number::lte(-inf..!inf, 0!..!2) => false | true
number::lte(-inf..!inf, 0.5..1.5) => false | true
number::lte(-inf..!inf, 0.5..2.5) => false | true
number::lte(-inf..!inf, 0.5!..2.5) => false | true
number::lte(-inf..!inf, 0.5..!2.5) => false | true
number::lte(-inf..!inf, -2.56..3.35) => false | true
number::lte(-inf..!inf, 0.5..0.75) => false | true
number::lte(-inf..!inf, 1..2) => false | true
number::lte(-inf..!inf, 0..inf) => false | true
number::lte(-inf..!inf, 0!..inf) => false | true
number::lte(-inf..!inf, 0..!inf) => false | true
number::lte(-inf..!inf, 0!..!inf) => false | true
number::lte(-inf..!inf, 1..inf) => false | true
number::lte(-inf..!inf, 1!..inf) => false | true
number::lte(-inf..!inf, 1..!inf) => false | true
number::lte(-inf..!inf, 2..inf) => false | true
number::lte(-inf..!inf, 2!..inf) => false | true
number::lte(-inf..!inf, 2.5..inf) => false | true
number::lte(-inf..!inf, -inf..0) => false | true
number::lte(-inf..!inf, -inf..inf) => false | true
number::lte(-inf..!inf, -inf!..inf) => false | true
number::lte(-inf..!inf, -inf..!inf) => false | true
number::lte(-inf..!inf, -inf!..!inf) => false | true
number::lte(-inf..!inf, int(0..1)) => false | true
number::lte(-inf..!inf, int(0..2)) => false | true
number::lte(-inf..!inf, int(1..2)) => false | true
number::lte(-inf..!inf, int(5..20)) => false | true
number::lte(-inf..!inf, int(-20..-5)) => false | true
number::lte(-inf..!inf, int(-10..10)) => false | true
number::lte(-inf..!inf, int(0..inf)) => false | true
number::lte(-inf..!inf, int(1..inf)) => false | true
number::lte(-inf..!inf, int(-inf..0)) => false | true
number::lte(-inf..!inf, int(-inf..1)) => false | true
number::lte(-inf..!inf, int(-inf..inf)) => false | true
number::lte(-inf..!inf, nonInt(0..1)) => false | true
number::lte(-inf..!inf, nonInt(0..2)) => false | true
number::lte(-inf..!inf, nonInt(-1..2)) => false | true
number::lte(-inf..!inf, nonInt(0..inf)) => false | true
number::lte(-inf..!inf, nonInt(-1..inf)) => false | true
number::lte(-inf..!inf, nonInt(-inf..0)) => false | true
number::lte(-inf..!inf, nonInt(-inf..1)) => false | true
number::lte(-inf..!inf, nonInt(-inf..inf)) => false | true
number::lte(-inf..!inf, 1 | int(3..4)) => false | true
number::lte(-inf!..!inf, number) => false | true
number::lte(-inf!..!inf, -3.14) => false | true
number::lte(-inf!..!inf, -2) => false | true
number::lte(-inf!..!inf, -1) => false | true
number::lte(-inf!..!inf, -0.5) => false | true
number::lte(-inf!..!inf, 0) => false | true
number::lte(-inf!..!inf, 0.5) => false | true
number::lte(-inf!..!inf, 1) => false | true
number::lte(-inf!..!inf, 2) => false | true
number::lte(-inf!..!inf, 2.78) => false | true
number::lte(-inf!..!inf, 3) => false | true
number::lte(-inf!..!inf, 3.14) => false | true
number::lte(-inf!..!inf, 10) => false | true
number::lte(-inf!..!inf, 100) => false | true
number::lte(-inf!..!inf, -inf) => false
number::lte(-inf!..!inf, inf) => true
number::lte(-inf!..!inf, nan) => false
number::lte(-inf!..!inf, 0..1) => false | true
number::lte(-inf!..!inf, 0!..1) => false | true
number::lte(-inf!..!inf, 0..!1) => false | true
number::lte(-inf!..!inf, 0..2) => false | true
number::lte(-inf!..!inf, 0!..!2) => false | true
number::lte(-inf!..!inf, 0.5..1.5) => false | true
number::lte(-inf!..!inf, 0.5..2.5) => false | true
number::lte(-inf!..!inf, 0.5!..2.5) => false | true
number::lte(-inf!..!inf, 0.5..!2.5) => false | true
number::lte(-inf!..!inf, -2.56..3.35) => false | true
number::lte(-inf!..!inf, 0.5..0.75) => false | true
number::lte(-inf!..!inf, 1..2) => false | true
number::lte(-inf!..!inf, 0..inf) => false | true
number::lte(-inf!..!inf, 0!..inf) => false | true
number::lte(-inf!..!inf, 0..!inf) => false | true
number::lte(-inf!..!inf, 0!..!inf) => false | true
number::lte(-inf!..!inf, 1..inf) => false | true
number::lte(-inf!..!inf, 1!..inf) => false | true
number::lte(-inf!..!inf, 1..!inf) => false | true
number::lte(-inf!..!inf, 2..inf) => false | true
number::lte(-inf!..!inf, 2!..inf) => false | true
number::lte(-inf!..!inf, 2.5..inf) => false | true
number::lte(-inf!..!inf, -inf..0) => false | true
number::lte(-inf!..!inf, -inf..inf) => false | true
number::lte(-inf!..!inf, -inf!..inf) => false | true
number::lte(-inf!..!inf, -inf..!inf) => false | true
number::lte(-inf!..!inf, -inf!..!inf) => false | true
number::lte(-inf!..!inf, int(0..1)) => false | true
number::lte(-inf!..!inf, int(0..2)) => false | true
number::lte(-inf!..!inf, int(1..2)) => false | true
number::lte(-inf!..!inf, int(5..20)) => false | true
number::lte(-inf!..!inf, int(-20..-5)) => false | true
number::lte(-inf!..!inf, int(-10..10)) => false | true
number::lte(-inf!..!inf, int(0..inf)) => false | true
number::lte(-inf!..!inf, int(1..inf)) => false | true
number::lte(-inf!..!inf, int(-inf..0)) => false | true
number::lte(-inf!..!inf, int(-inf..1)) => false | true
number::lte(-inf!..!inf, int(-inf..inf)) => false | true
number::lte(-inf!..!inf, nonInt(0..1)) => false | true
number::lte(-inf!..!inf, nonInt(0..2)) => false | true
number::lte(-inf!..!inf, nonInt(-1..2)) => false | true
number::lte(-inf!..!inf, nonInt(0..inf)) => false | true
number::lte(-inf!..!inf, nonInt(-1..inf)) => false | true
number::lte(-inf!..!inf, nonInt(-inf..0)) => false | true
number::lte(-inf!..!inf, nonInt(-inf..1)) => false | true
number::lte(-inf!..!inf, nonInt(-inf..inf)) => false | true
number::lte(-inf!..!inf, 1 | int(3..4)) => false | true
number::lte(int(0..1), number) => false | true
number::lte(int(0..1), -3.14) => false
number::lte(int(0..1), -2) => false
number::lte(int(0..1), -1) => false
number::lte(int(0..1), -0.5) => false
number::lte(int(0..1), 0) => false | true
number::lte(int(0..1), 0.5) => false | true
number::lte(int(0..1), 1) => true
number::lte(int(0..1), 2) => true
number::lte(int(0..1), 2.78) => true
number::lte(int(0..1), 3) => true
number::lte(int(0..1), 3.14) => true
number::lte(int(0..1), 10) => true
number::lte(int(0..1), 100) => true
number::lte(int(0..1), -inf) => false
number::lte(int(0..1), inf) => true
number::lte(int(0..1), nan) => false
number::lte(int(0..1), 0..1) => false | true
number::lte(int(0..1), 0!..1) => false | true
number::lte(int(0..1), 0..!1) => false | true
number::lte(int(0..1), 0..2) => false | true
number::lte(int(0..1), 0!..!2) => false | true
number::lte(int(0..1), 0.5..1.5) => false | true
number::lte(int(0..1), 0.5..2.5) => false | true
number::lte(int(0..1), 0.5!..2.5) => false | true
number::lte(int(0..1), 0.5..!2.5) => false | true
number::lte(int(0..1), -2.56..3.35) => false | true
number::lte(int(0..1), 0.5..0.75) => false | true
number::lte(int(0..1), 1..2) => true
number::lte(int(0..1), 0..inf) => false | true
number::lte(int(0..1), 0!..inf) => false | true
number::lte(int(0..1), 0..!inf) => false | true
number::lte(int(0..1), 0!..!inf) => false | true
number::lte(int(0..1), 1..inf) => true
number::lte(int(0..1), 1!..inf) => true
number::lte(int(0..1), 1..!inf) => true
number::lte(int(0..1), 2..inf) => true
number::lte(int(0..1), 2!..inf) => true
number::lte(int(0..1), 2.5..inf) => true
number::lte(int(0..1), -inf..0) => false | true
number::lte(int(0..1), -inf..inf) => false | true
number::lte(int(0..1), -inf!..inf) => false | true
number::lte(int(0..1), -inf..!inf) => false | true
number::lte(int(0..1), -inf!..!inf) => false | true
number::lte(int(0..1), int(0..1)) => false | true
number::lte(int(0..1), int(0..2)) => false | true
number::lte(int(0..1), int(1..2)) => true
number::lte(int(0..1), int(5..20)) => true
number::lte(int(0..1), int(-20..-5)) => false
number::lte(int(0..1), int(-10..10)) => false | true
number::lte(int(0..1), int(0..inf)) => false | true
number::lte(int(0..1), int(1..inf)) => true
number::lte(int(0..1), int(-inf..0)) => false | true
number::lte(int(0..1), int(-inf..1)) => false | true
number::lte(int(0..1), int(-inf..inf)) => false | true
number::lte(int(0..1), nonInt(0..1)) => false | true
number::lte(int(0..1), nonInt(0..2)) => false | true
number::lte(int(0..1), nonInt(-1..2)) => false | true
number::lte(int(0..1), nonInt(0..inf)) => false | true
number::lte(int(0..1), nonInt(-1..inf)) => false | true
number::lte(int(0..1), nonInt(-inf..0)) => false
number::lte(int(0..1), nonInt(-inf..1)) => false | true
number::lte(int(0..1), nonInt(-inf..inf)) => false | true
number::lte(int(0..1), 1 | int(3..4)) => true
number::lte(int(0..2), number) => false | true
number::lte(int(0..2), -3.14) => false
number::lte(int(0..2), -2) => false
number::lte(int(0..2), -1) => false
number::lte(int(0..2), -0.5) => false
number::lte(int(0..2), 0) => false | true
number::lte(int(0..2), 0.5) => false | true
number::lte(int(0..2), 1) => false | true
number::lte(int(0..2), 2) => true
number::lte(int(0..2), 2.78) => true
number::lte(int(0..2), 3) => true
number::lte(int(0..2), 3.14) => true
number::lte(int(0..2), 10) => true
number::lte(int(0..2), 100) => true
number::lte(int(0..2), -inf) => false
number::lte(int(0..2), inf) => true
number::lte(int(0..2), nan) => false
number::lte(int(0..2), 0..1) => false | true
number::lte(int(0..2), 0!..1) => false | true
number::lte(int(0..2), 0..!1) => false | true
number::lte(int(0..2), 0..2) => false | true
number::lte(int(0..2), 0!..!2) => false | true
number::lte(int(0..2), 0.5..1.5) => false | true
number::lte(int(0..2), 0.5..2.5) => false | true
number::lte(int(0..2), 0.5!..2.5) => false | true
number::lte(int(0..2), 0.5..!2.5) => false | true
number::lte(int(0..2), -2.56..3.35) => false | true
number::lte(int(0..2), 0.5..0.75) => false | true
number::lte(int(0..2), 1..2) => false | true
number::lte(int(0..2), 0..inf) => false | true
number::lte(int(0..2), 0!..inf) => false | true
number::lte(int(0..2), 0..!inf) => false | true
number::lte(int(0..2), 0!..!inf) => false | true
number::lte(int(0..2), 1..inf) => false | true
number::lte(int(0..2), 1!..inf) => false | true
number::lte(int(0..2), 1..!inf) => false | true
number::lte(int(0..2), 2..inf) => true
number::lte(int(0..2), 2!..inf) => true
number::lte(int(0..2), 2.5..inf) => true
number::lte(int(0..2), -inf..0) => false | true
number::lte(int(0..2), -inf..inf) => false | true
number::lte(int(0..2), -inf!..inf) => false | true
number::lte(int(0..2), -inf..!inf) => false | true
number::lte(int(0..2), -inf!..!inf) => false | true
number::lte(int(0..2), int(0..1)) => false | true
number::lte(int(0..2), int(0..2)) => false | true
number::lte(int(0..2), int(1..2)) => false | true
number::lte(int(0..2), int(5..20)) => true
number::lte(int(0..2), int(-20..-5)) => false
number::lte(int(0..2), int(-10..10)) => false | true
number::lte(int(0..2), int(0..inf)) => false | true
number::lte(int(0..2), int(1..inf)) => false | true
number::lte(int(0..2), int(-inf..0)) => false | true
number::lte(int(0..2), int(-inf..1)) => false | true
number::lte(int(0..2), int(-inf..inf)) => false | true
number::lte(int(0..2), nonInt(0..1)) => false | true
number::lte(int(0..2), nonInt(0..2)) => false | true
number::lte(int(0..2), nonInt(-1..2)) => false | true
number::lte(int(0..2), nonInt(0..inf)) => false | true
number::lte(int(0..2), nonInt(-1..inf)) => false | true
number::lte(int(0..2), nonInt(-inf..0)) => false
number::lte(int(0..2), nonInt(-inf..1)) => false | true
number::lte(int(0..2), nonInt(-inf..inf)) => false | true
number::lte(int(0..2), 1 | int(3..4)) => false | true
number::lte(int(1..2), number) => false | true
number::lte(int(1..2), -3.14) => false
number::lte(int(1..2), -2) => false
number::lte(int(1..2), -1) => false
number::lte(int(1..2), -0.5) => false
number::lte(int(1..2), 0) => false
number::lte(int(1..2), 0.5) => false
number::lte(int(1..2), 1) => false | true
number::lte(int(1..2), 2) => true
number::lte(int(1..2), 2.78) => true
number::lte(int(1..2), 3) => true
number::lte(int(1..2), 3.14) => true
number::lte(int(1..2), 10) => true
number::lte(int(1..2), 100) => true
number::lte(int(1..2), -inf) => false
number::lte(int(1..2), inf) => true
number::lte(int(1..2), nan) => false
number::lte(int(1..2), 0..1) => false | true
number::lte(int(1..2), 0!..1) => false | true
number::lte(int(1..2), 0..!1) => false
number::lte(int(1..2), 0..2) => false | true
number::lte(int(1..2), 0!..!2) => false | true
number::lte(int(1..2), 0.5..1.5) => false | true
number::lte(int(1..2), 0.5..2.5) => false | true
number::lte(int(1..2), 0.5!..2.5) => false | true
number::lte(int(1..2), 0.5..!2.5) => false | true
number::lte(int(1..2), -2.56..3.35) => false | true
number::lte(int(1..2), 0.5..0.75) => false
number::lte(int(1..2), 1..2) => false | true
number::lte(int(1..2), 0..inf) => false | true
number::lte(int(1..2), 0!..inf) => false | true
number::lte(int(1..2), 0..!inf) => false | true
number::lte(int(1..2), 0!..!inf) => false | true
number::lte(int(1..2), 1..inf) => false | true
number::lte(int(1..2), 1!..inf) => false | true
number::lte(int(1..2), 1..!inf) => false | true
number::lte(int(1..2), 2..inf) => true
number::lte(int(1..2), 2!..inf) => true
number::lte(int(1..2), 2.5..inf) => true
number::lte(int(1..2), -inf..0) => false
number::lte(int(1..2), -inf..inf) => false | true
number::lte(int(1..2), -inf!..inf) => false | true
number::lte(int(1..2), -inf..!inf) => false | true
number::lte(int(1..2), -inf!..!inf) => false | true
number::lte(int(1..2), int(0..1)) => false | true
number::lte(int(1..2), int(0..2)) => false | true
number::lte(int(1..2), int(1..2)) => false | true
number::lte(int(1..2), int(5..20)) => true
number::lte(int(1..2), int(-20..-5)) => false
number::lte(int(1..2), int(-10..10)) => false | true
number::lte(int(1..2), int(0..inf)) => false | true
number::lte(int(1..2), int(1..inf)) => false | true
number::lte(int(1..2), int(-inf..0)) => false
number::lte(int(1..2), int(-inf..1)) => false | true
number::lte(int(1..2), int(-inf..inf)) => false | true
number::lte(int(1..2), nonInt(0..1)) => false
number::lte(int(1..2), nonInt(0..2)) => false | true
number::lte(int(1..2), nonInt(-1..2)) => false | true
number::lte(int(1..2), nonInt(0..inf)) => false | true
number::lte(int(1..2), nonInt(-1..inf)) => false | true
number::lte(int(1..2), nonInt(-inf..0)) => false
number::lte(int(1..2), nonInt(-inf..1)) => false
number::lte(int(1..2), nonInt(-inf..inf)) => false | true
number::lte(int(1..2), 1 | int(3..4)) => false | true
number::lte(int(5..20), number) => false | true
number::lte(int(5..20), -3.14) => false
number::lte(int(5..20), -2) => false
number::lte(int(5..20), -1) => false
number::lte(int(5..20), -0.5) => false
number::lte(int(5..20), 0) => false
number::lte(int(5..20), 0.5) => false
number::lte(int(5..20), 1) => false
number::lte(int(5..20), 2) => false
number::lte(int(5..20), 2.78) => false
number::lte(int(5..20), 3) => false
number::lte(int(5..20), 3.14) => false
number::lte(int(5..20), 10) => false | true
number::lte(int(5..20), 100) => true
number::lte(int(5..20), -inf) => false
number::lte(int(5..20), inf) => true
number::lte(int(5..20), nan) => false
number::lte(int(5..20), 0..1) => false
number::lte(int(5..20), 0!..1) => false
number::lte(int(5..20), 0..!1) => false
number::lte(int(5..20), 0..2) => false
number::lte(int(5..20), 0!..!2) => false
number::lte(int(5..20), 0.5..1.5) => false
number::lte(int(5..20), 0.5..2.5) => false
number::lte(int(5..20), 0.5!..2.5) => false
number::lte(int(5..20), 0.5..!2.5) => false
number::lte(int(5..20), -2.56..3.35) => false
number::lte(int(5..20), 0.5..0.75) => false
number::lte(int(5..20), 1..2) => false
number::lte(int(5..20), 0..inf) => false | true
number::lte(int(5..20), 0!..inf) => false | true
number::lte(int(5..20), 0..!inf) => false | true
number::lte(int(5..20), 0!..!inf) => false | true
number::lte(int(5..20), 1..inf) => false | true
number::lte(int(5..20), 1!..inf) => false | true
number::lte(int(5..20), 1..!inf) => false | true
number::lte(int(5..20), 2..inf) => false | true
number::lte(int(5..20), 2!..inf) => false | true
number::lte(int(5..20), 2.5..inf) => false | true
number::lte(int(5..20), -inf..0) => false
number::lte(int(5..20), -inf..inf) => false | true
number::lte(int(5..20), -inf!..inf) => false | true
number::lte(int(5..20), -inf..!inf) => false | true
number::lte(int(5..20), -inf!..!inf) => false | true
number::lte(int(5..20), int(0..1)) => false
number::lte(int(5..20), int(0..2)) => false
number::lte(int(5..20), int(1..2)) => false
number::lte(int(5..20), int(5..20)) => false | true
number::lte(int(5..20), int(-20..-5)) => false
number::lte(int(5..20), int(-10..10)) => false | true
number::lte(int(5..20), int(0..inf)) => false | true
number::lte(int(5..20), int(1..inf)) => false | true
number::lte(int(5..20), int(-inf..0)) => false
number::lte(int(5..20), int(-inf..1)) => false
number::lte(int(5..20), int(-inf..inf)) => false | true
number::lte(int(5..20), nonInt(0..1)) => false
number::lte(int(5..20), nonInt(0..2)) => false
number::lte(int(5..20), nonInt(-1..2)) => false
number::lte(int(5..20), nonInt(0..inf)) => false | true
number::lte(int(5..20), nonInt(-1..inf)) => false | true
number::lte(int(5..20), nonInt(-inf..0)) => false
number::lte(int(5..20), nonInt(-inf..1)) => false
number::lte(int(5..20), nonInt(-inf..inf)) => false | true
number::lte(int(5..20), 1 | int(3..4)) => false
number::lte(int(-20..-5), number) => false | true
number::lte(int(-20..-5), -3.14) => true
number::lte(int(-20..-5), -2) => true
number::lte(int(-20..-5), -1) => true
number::lte(int(-20..-5), -0.5) => true
number::lte(int(-20..-5), 0) => true
number::lte(int(-20..-5), 0.5) => true
number::lte(int(-20..-5), 1) => true
number::lte(int(-20..-5), 2) => true
number::lte(int(-20..-5), 2.78) => true
number::lte(int(-20..-5), 3) => true
number::lte(int(-20..-5), 3.14) => true
number::lte(int(-20..-5), 10) => true
number::lte(int(-20..-5), 100) => true
number::lte(int(-20..-5), -inf) => false
number::lte(int(-20..-5), inf) => true
number::lte(int(-20..-5), nan) => false
number::lte(int(-20..-5), 0..1) => true
number::lte(int(-20..-5), 0!..1) => true
number::lte(int(-20..-5), 0..!1) => true
number::lte(int(-20..-5), 0..2) => true
number::lte(int(-20..-5), 0!..!2) => true
number::lte(int(-20..-5), 0.5..1.5) => true
number::lte(int(-20..-5), 0.5..2.5) => true
number::lte(int(-20..-5), 0.5!..2.5) => true
number::lte(int(-20..-5), 0.5..!2.5) => true
number::lte(int(-20..-5), -2.56..3.35) => true
number::lte(int(-20..-5), 0.5..0.75) => true
number::lte(int(-20..-5), 1..2) => true
number::lte(int(-20..-5), 0..inf) => true
number::lte(int(-20..-5), 0!..inf) => true
number::lte(int(-20..-5), 0..!inf) => true
number::lte(int(-20..-5), 0!..!inf) => true
number::lte(int(-20..-5), 1..inf) => true
number::lte(int(-20..-5), 1!..inf) => true
number::lte(int(-20..-5), 1..!inf) => true
number::lte(int(-20..-5), 2..inf) => true
number::lte(int(-20..-5), 2!..inf) => true
number::lte(int(-20..-5), 2.5..inf) => true
number::lte(int(-20..-5), -inf..0) => false | true
number::lte(int(-20..-5), -inf..inf) => false | true
number::lte(int(-20..-5), -inf!..inf) => false | true
number::lte(int(-20..-5), -inf..!inf) => false | true
number::lte(int(-20..-5), -inf!..!inf) => false | true
number::lte(int(-20..-5), int(0..1)) => true
number::lte(int(-20..-5), int(0..2)) => true
number::lte(int(-20..-5), int(1..2)) => true
number::lte(int(-20..-5), int(5..20)) => true
number::lte(int(-20..-5), int(-20..-5)) => false | true
number::lte(int(-20..-5), int(-10..10)) => false | true
number::lte(int(-20..-5), int(0..inf)) => true
number::lte(int(-20..-5), int(1..inf)) => true
number::lte(int(-20..-5), int(-inf..0)) => false | true
number::lte(int(-20..-5), int(-inf..1)) => false | true
number::lte(int(-20..-5), int(-inf..inf)) => false | true
number::lte(int(-20..-5), nonInt(0..1)) => true
number::lte(int(-20..-5), nonInt(0..2)) => true
number::lte(int(-20..-5), nonInt(-1..2)) => true
number::lte(int(-20..-5), nonInt(0..inf)) => true
number::lte(int(-20..-5), nonInt(-1..inf)) => true
number::lte(int(-20..-5), nonInt(-inf..0)) => false | true
number::lte(int(-20..-5), nonInt(-inf..1)) => false | true
number::lte(int(-20..-5), nonInt(-inf..inf)) => false | true
number::lte(int(-20..-5), 1 | int(3..4)) => true
number::lte(int(-10..10), number) => false | true
number::lte(int(-10..10), -3.14) => false | true
number::lte(int(-10..10), -2) => false | true
number::lte(int(-10..10), -1) => false | true
number::lte(int(-10..10), -0.5) => false | true
number::lte(int(-10..10), 0) => false | true
number::lte(int(-10..10), 0.5) => false | true
number::lte(int(-10..10), 1) => false | true
number::lte(int(-10..10), 2) => false | true
number::lte(int(-10..10), 2.78) => false | true
number::lte(int(-10..10), 3) => false | true
number::lte(int(-10..10), 3.14) => false | true
number::lte(int(-10..10), 10) => true
number::lte(int(-10..10), 100) => true
number::lte(int(-10..10), -inf) => false
number::lte(int(-10..10), inf) => true
number::lte(int(-10..10), nan) => false
number::lte(int(-10..10), 0..1) => false | true
number::lte(int(-10..10), 0!..1) => false | true
number::lte(int(-10..10), 0..!1) => false | true
number::lte(int(-10..10), 0..2) => false | true
number::lte(int(-10..10), 0!..!2) => false | true
number::lte(int(-10..10), 0.5..1.5) => false | true
number::lte(int(-10..10), 0.5..2.5) => false | true
number::lte(int(-10..10), 0.5!..2.5) => false | true
number::lte(int(-10..10), 0.5..!2.5) => false | true
number::lte(int(-10..10), -2.56..3.35) => false | true
number::lte(int(-10..10), 0.5..0.75) => false | true
number::lte(int(-10..10), 1..2) => false | true
number::lte(int(-10..10), 0..inf) => false | true
number::lte(int(-10..10), 0!..inf) => false | true
number::lte(int(-10..10), 0..!inf) => false | true
number::lte(int(-10..10), 0!..!inf) => false | true
number::lte(int(-10..10), 1..inf) => false | true
number::lte(int(-10..10), 1!..inf) => false | true
number::lte(int(-10..10), 1..!inf) => false | true
number::lte(int(-10..10), 2..inf) => false | true
number::lte(int(-10..10), 2!..inf) => false | true
number::lte(int(-10..10), 2.5..inf) => false | true
number::lte(int(-10..10), -inf..0) => false | true
number::lte(int(-10..10), -inf..inf) => false | true
number::lte(int(-10..10), -inf!..inf) => false | true
number::lte(int(-10..10), -inf..!inf) => false | true
number::lte(int(-10..10), -inf!..!inf) => false | true
number::lte(int(-10..10), int(0..1)) => false | true
number::lte(int(-10..10), int(0..2)) => false | true
number::lte(int(-10..10), int(1..2)) => false | true
number::lte(int(-10..10), int(5..20)) => false | true
number::lte(int(-10..10), int(-20..-5)) => false | true
number::lte(int(-10..10), int(-10..10)) => false | true
number::lte(int(-10..10), int(0..inf)) => false | true
number::lte(int(-10..10), int(1..inf)) => false | true
number::lte(int(-10..10), int(-inf..0)) => false | true
number::lte(int(-10..10), int(-inf..1)) => false | true
number::lte(int(-10..10), int(-inf..inf)) => false | true
number::lte(int(-10..10), nonInt(0..1)) => false | true
number::lte(int(-10..10), nonInt(0..2)) => false | true
number::lte(int(-10..10), nonInt(-1..2)) => false | true
number::lte(int(-10..10), nonInt(0..inf)) => false | true
number::lte(int(-10..10), nonInt(-1..inf)) => false | true
number::lte(int(-10..10), nonInt(-inf..0)) => false | true
number::lte(int(-10..10), nonInt(-inf..1)) => false | true
number::lte(int(-10..10), nonInt(-inf..inf)) => false | true
number::lte(int(-10..10), 1 | int(3..4)) => false | true
number::lte(int(0..inf), number) => false | true
number::lte(int(0..inf), -3.14) => false
number::lte(int(0..inf), -2) => false
number::lte(int(0..inf), -1) => false
number::lte(int(0..inf), -0.5) => false
number::lte(int(0..inf), 0) => false | true
number::lte(int(0..inf), 0.5) => false | true
number::lte(int(0..inf), 1) => false | true
number::lte(int(0..inf), 2) => false | true
number::lte(int(0..inf), 2.78) => false | true
number::lte(int(0..inf), 3) => false | true
number::lte(int(0..inf), 3.14) => false | true
number::lte(int(0..inf), 10) => false | true
number::lte(int(0..inf), 100) => false | true
number::lte(int(0..inf), -inf) => false
number::lte(int(0..inf), inf) => true
number::lte(int(0..inf), nan) => false
number::lte(int(0..inf), 0..1) => false | true
number::lte(int(0..inf), 0!..1) => false | true
number::lte(int(0..inf), 0..!1) => false | true
number::lte(int(0..inf), 0..2) => false | true
number::lte(int(0..inf), 0!..!2) => false | true
number::lte(int(0..inf), 0.5..1.5) => false | true
number::lte(int(0..inf), 0.5..2.5) => false | true
number::lte(int(0..inf), 0.5!..2.5) => false | true
number::lte(int(0..inf), 0.5..!2.5) => false | true
number::lte(int(0..inf), -2.56..3.35) => false | true
number::lte(int(0..inf), 0.5..0.75) => false | true
number::lte(int(0..inf), 1..2) => false | true
number::lte(int(0..inf), 0..inf) => false | true
number::lte(int(0..inf), 0!..inf) => false | true
number::lte(int(0..inf), 0..!inf) => false | true
number::lte(int(0..inf), 0!..!inf) => false | true
number::lte(int(0..inf), 1..inf) => false | true
number::lte(int(0..inf), 1!..inf) => false | true
number::lte(int(0..inf), 1..!inf) => false | true
number::lte(int(0..inf), 2..inf) => false | true
number::lte(int(0..inf), 2!..inf) => false | true
number::lte(int(0..inf), 2.5..inf) => false | true
number::lte(int(0..inf), -inf..0) => false | true
number::lte(int(0..inf), -inf..inf) => false | true
number::lte(int(0..inf), -inf!..inf) => false | true
number::lte(int(0..inf), -inf..!inf) => false | true
number::lte(int(0..inf), -inf!..!inf) => false | true
number::lte(int(0..inf), int(0..1)) => false | true
number::lte(int(0..inf), int(0..2)) => false | true
number::lte(int(0..inf), int(1..2)) => false | true
number::lte(int(0..inf), int(5..20)) => false | true
number::lte(int(0..inf), int(-20..-5)) => false
number::lte(int(0..inf), int(-10..10)) => false | true
number::lte(int(0..inf), int(0..inf)) => false | true
number::lte(int(0..inf), int(1..inf)) => false | true
number::lte(int(0..inf), int(-inf..0)) => false | true
number::lte(int(0..inf), int(-inf..1)) => false | true
number::lte(int(0..inf), int(-inf..inf)) => false | true
number::lte(int(0..inf), nonInt(0..1)) => false | true
number::lte(int(0..inf), nonInt(0..2)) => false | true
number::lte(int(0..inf), nonInt(-1..2)) => false | true
number::lte(int(0..inf), nonInt(0..inf)) => false | true
number::lte(int(0..inf), nonInt(-1..inf)) => false | true
number::lte(int(0..inf), nonInt(-inf..0)) => false
number::lte(int(0..inf), nonInt(-inf..1)) => false | true
number::lte(int(0..inf), nonInt(-inf..inf)) => false | true
number::lte(int(0..inf), 1 | int(3..4)) => false | true
number::lte(int(1..inf), number) => false | true
number::lte(int(1..inf), -3.14) => false
number::lte(int(1..inf), -2) => false
number::lte(int(1..inf), -1) => false
number::lte(int(1..inf), -0.5) => false
number::lte(int(1..inf), 0) => false
number::lte(int(1..inf), 0.5) => false
number::lte(int(1..inf), 1) => false | true
number::lte(int(1..inf), 2) => false | true
number::lte(int(1..inf), 2.78) => false | true
number::lte(int(1..inf), 3) => false | true
number::lte(int(1..inf), 3.14) => false | true
number::lte(int(1..inf), 10) => false | true
number::lte(int(1..inf), 100) => false | true
number::lte(int(1..inf), -inf) => false
number::lte(int(1..inf), inf) => true
number::lte(int(1..inf), nan) => false
number::lte(int(1..inf), 0..1) => false | true
number::lte(int(1..inf), 0!..1) => false | true
number::lte(int(1..inf), 0..!1) => false
number::lte(int(1..inf), 0..2) => false | true
number::lte(int(1..inf), 0!..!2) => false | true
number::lte(int(1..inf), 0.5..1.5) => false | true
number::lte(int(1..inf), 0.5..2.5) => false | true
number::lte(int(1..inf), 0.5!..2.5) => false | true
number::lte(int(1..inf), 0.5..!2.5) => false | true
number::lte(int(1..inf), -2.56..3.35) => false | true
number::lte(int(1..inf), 0.5..0.75) => false
number::lte(int(1..inf), 1..2) => false | true
number::lte(int(1..inf), 0..inf) => false | true
number::lte(int(1..inf), 0!..inf) => false | true
number::lte(int(1..inf), 0..!inf) => false | true
number::lte(int(1..inf), 0!..!inf) => false | true
number::lte(int(1..inf), 1..inf) => false | true
number::lte(int(1..inf), 1!..inf) => false | true
number::lte(int(1..inf), 1..!inf) => false | true
number::lte(int(1..inf), 2..inf) => false | true
number::lte(int(1..inf), 2!..inf) => false | true
number::lte(int(1..inf), 2.5..inf) => false | true
number::lte(int(1..inf), -inf..0) => false
number::lte(int(1..inf), -inf..inf) => false | true
number::lte(int(1..inf), -inf!..inf) => false | true
number::lte(int(1..inf), -inf..!inf) => false | true
number::lte(int(1..inf), -inf!..!inf) => false | true
number::lte(int(1..inf), int(0..1)) => false | true
number::lte(int(1..inf), int(0..2)) => false | true
number::lte(int(1..inf), int(1..2)) => false | true
number::lte(int(1..inf), int(5..20)) => false | true
number::lte(int(1..inf), int(-20..-5)) => false
number::lte(int(1..inf), int(-10..10)) => false | true
number::lte(int(1..inf), int(0..inf)) => false | true
number::lte(int(1..inf), int(1..inf)) => false | true
number::lte(int(1..inf), int(-inf..0)) => false
number::lte(int(1..inf), int(-inf..1)) => false | true
number::lte(int(1..inf), int(-inf..inf)) => false | true
number::lte(int(1..inf), nonInt(0..1)) => false
number::lte(int(1..inf), nonInt(0..2)) => false | true
number::lte(int(1..inf), nonInt(-1..2)) => false | true
number::lte(int(1..inf), nonInt(0..inf)) => false | true
number::lte(int(1..inf), nonInt(-1..inf)) => false | true
number::lte(int(1..inf), nonInt(-inf..0)) => false
number::lte(int(1..inf), nonInt(-inf..1)) => false
number::lte(int(1..inf), nonInt(-inf..inf)) => false | true
number::lte(int(1..inf), 1 | int(3..4)) => false | true
number::lte(int(-inf..0), number) => false | true
number::lte(int(-inf..0), -3.14) => false | true
number::lte(int(-inf..0), -2) => false | true
number::lte(int(-inf..0), -1) => false | true
number::lte(int(-inf..0), -0.5) => false | true
number::lte(int(-inf..0), 0) => true
number::lte(int(-inf..0), 0.5) => true
number::lte(int(-inf..0), 1) => true
number::lte(int(-inf..0), 2) => true
number::lte(int(-inf..0), 2.78) => true
number::lte(int(-inf..0), 3) => true
number::lte(int(-inf..0), 3.14) => true
number::lte(int(-inf..0), 10) => true
number::lte(int(-inf..0), 100) => true
number::lte(int(-inf..0), -inf) => false
number::lte(int(-inf..0), inf) => true
number::lte(int(-inf..0), nan) => false
number::lte(int(-inf..0), 0..1) => true
number::lte(int(-inf..0), 0!..1) => true
number::lte(int(-inf..0), 0..!1) => true
number::lte(int(-inf..0), 0..2) => true
number::lte(int(-inf..0), 0!..!2) => true
number::lte(int(-inf..0), 0.5..1.5) => true
number::lte(int(-inf..0), 0.5..2.5) => true
number::lte(int(-inf..0), 0.5!..2.5) => true
number::lte(int(-inf..0), 0.5..!2.5) => true
number::lte(int(-inf..0), -2.56..3.35) => false | true
number::lte(int(-inf..0), 0.5..0.75) => true
number::lte(int(-inf..0), 1..2) => true
number::lte(int(-inf..0), 0..inf) => true
number::lte(int(-inf..0), 0!..inf) => true
number::lte(int(-inf..0), 0..!inf) => true
number::lte(int(-inf..0), 0!..!inf) => true
number::lte(int(-inf..0), 1..inf) => true
number::lte(int(-inf..0), 1!..inf) => true
number::lte(int(-inf..0), 1..!inf) => true
number::lte(int(-inf..0), 2..inf) => true
number::lte(int(-inf..0), 2!..inf) => true
number::lte(int(-inf..0), 2.5..inf) => true
number::lte(int(-inf..0), -inf..0) => false | true
number::lte(int(-inf..0), -inf..inf) => false | true
number::lte(int(-inf..0), -inf!..inf) => false | true
number::lte(int(-inf..0), -inf..!inf) => false | true
number::lte(int(-inf..0), -inf!..!inf) => false | true
number::lte(int(-inf..0), int(0..1)) => true
number::lte(int(-inf..0), int(0..2)) => true
number::lte(int(-inf..0), int(1..2)) => true
number::lte(int(-inf..0), int(5..20)) => true
number::lte(int(-inf..0), int(-20..-5)) => false | true
number::lte(int(-inf..0), int(-10..10)) => false | true
number::lte(int(-inf..0), int(0..inf)) => true
number::lte(int(-inf..0), int(1..inf)) => true
number::lte(int(-inf..0), int(-inf..0)) => false | true
number::lte(int(-inf..0), int(-inf..1)) => false | true
number::lte(int(-inf..0), int(-inf..inf)) => false | true
number::lte(int(-inf..0), nonInt(0..1)) => true
number::lte(int(-inf..0), nonInt(0..2)) => true
number::lte(int(-inf..0), nonInt(-1..2)) => false | true
number::lte(int(-inf..0), nonInt(0..inf)) => true
number::lte(int(-inf..0), nonInt(-1..inf)) => false | true
number::lte(int(-inf..0), nonInt(-inf..0)) => false | true
number::lte(int(-inf..0), nonInt(-inf..1)) => false | true
number::lte(int(-inf..0), nonInt(-inf..inf)) => false | true
number::lte(int(-inf..0), 1 | int(3..4)) => true
number::lte(int(-inf..1), number) => false | true
number::lte(int(-inf..1), -3.14) => false | true
number::lte(int(-inf..1), -2) => false | true
number::lte(int(-inf..1), -1) => false | true
number::lte(int(-inf..1), -0.5) => false | true
number::lte(int(-inf..1), 0) => false | true
number::lte(int(-inf..1), 0.5) => false | true
number::lte(int(-inf..1), 1) => true
number::lte(int(-inf..1), 2) => true
number::lte(int(-inf..1), 2.78) => true
number::lte(int(-inf..1), 3) => true
number::lte(int(-inf..1), 3.14) => true
number::lte(int(-inf..1), 10) => true
number::lte(int(-inf..1), 100) => true
number::lte(int(-inf..1), -inf) => false
number::lte(int(-inf..1), inf) => true
number::lte(int(-inf..1), nan) => false
number::lte(int(-inf..1), 0..1) => false | true
number::lte(int(-inf..1), 0!..1) => false | true
number::lte(int(-inf..1), 0..!1) => false | true
number::lte(int(-inf..1), 0..2) => false | true
number::lte(int(-inf..1), 0!..!2) => false | true
number::lte(int(-inf..1), 0.5..1.5) => false | true
number::lte(int(-inf..1), 0.5..2.5) => false | true
number::lte(int(-inf..1), 0.5!..2.5) => false | true
number::lte(int(-inf..1), 0.5..!2.5) => false | true
number::lte(int(-inf..1), -2.56..3.35) => false | true
number::lte(int(-inf..1), 0.5..0.75) => false | true
number::lte(int(-inf..1), 1..2) => true
number::lte(int(-inf..1), 0..inf) => false | true
number::lte(int(-inf..1), 0!..inf) => false | true
number::lte(int(-inf..1), 0..!inf) => false | true
number::lte(int(-inf..1), 0!..!inf) => false | true
number::lte(int(-inf..1), 1..inf) => true
number::lte(int(-inf..1), 1!..inf) => true
number::lte(int(-inf..1), 1..!inf) => true
number::lte(int(-inf..1), 2..inf) => true
number::lte(int(-inf..1), 2!..inf) => true
number::lte(int(-inf..1), 2.5..inf) => true
number::lte(int(-inf..1), -inf..0) => false | true
number::lte(int(-inf..1), -inf..inf) => false | true
number::lte(int(-inf..1), -inf!..inf) => false | true
number::lte(int(-inf..1), -inf..!inf) => false | true
number::lte(int(-inf..1), -inf!..!inf) => false | true
number::lte(int(-inf..1), int(0..1)) => false | true
number::lte(int(-inf..1), int(0..2)) => false | true
number::lte(int(-inf..1), int(1..2)) => true
number::lte(int(-inf..1), int(5..20)) => true
number::lte(int(-inf..1), int(-20..-5)) => false | true
number::lte(int(-inf..1), int(-10..10)) => false | true
number::lte(int(-inf..1), int(0..inf)) => false | true
number::lte(int(-inf..1), int(1..inf)) => true
number::lte(int(-inf..1), int(-inf..0)) => false | true
number::lte(int(-inf..1), int(-inf..1)) => false | true
number::lte(int(-inf..1), int(-inf..inf)) => false | true
number::lte(int(-inf..1), nonInt(0..1)) => false | true
number::lte(int(-inf..1), nonInt(0..2)) => false | true
number::lte(int(-inf..1), nonInt(-1..2)) => false | true
number::lte(int(-inf..1), nonInt(0..inf)) => false | true
number::lte(int(-inf..1), nonInt(-1..inf)) => false | true
number::lte(int(-inf..1), nonInt(-inf..0)) => false | true
number::lte(int(-inf..1), nonInt(-inf..1)) => false | true
number::lte(int(-inf..1), nonInt(-inf..inf)) => false | true
number::lte(int(-inf..1), 1 | int(3..4)) => true
number::lte(int(-inf..inf), number) => false | true
number::lte(int(-inf..inf), -3.14) => false | true
number::lte(int(-inf..inf), -2) => false | true
number::lte(int(-inf..inf), -1) => false | true
number::lte(int(-inf..inf), -0.5) => false | true
number::lte(int(-inf..inf), 0) => false | true
number::lte(int(-inf..inf), 0.5) => false | true
number::lte(int(-inf..inf), 1) => false | true
number::lte(int(-inf..inf), 2) => false | true
number::lte(int(-inf..inf), 2.78) => false | true
number::lte(int(-inf..inf), 3) => false | true
number::lte(int(-inf..inf), 3.14) => false | true
number::lte(int(-inf..inf), 10) => false | true
number::lte(int(-inf..inf), 100) => false | true
number::lte(int(-inf..inf), -inf) => false
number::lte(int(-inf..inf), inf) => true
number::lte(int(-inf..inf), nan) => false
number::lte(int(-inf..inf), 0..1) => false | true
number::lte(int(-inf..inf), 0!..1) => false | true
number::lte(int(-inf..inf), 0..!1) => false | true
number::lte(int(-inf..inf), 0..2) => false | true
number::lte(int(-inf..inf), 0!..!2) => false | true
number::lte(int(-inf..inf), 0.5..1.5) => false | true
number::lte(int(-inf..inf), 0.5..2.5) => false | true
number::lte(int(-inf..inf), 0.5!..2.5) => false | true
number::lte(int(-inf..inf), 0.5..!2.5) => false | true
number::lte(int(-inf..inf), -2.56..3.35) => false | true
number::lte(int(-inf..inf), 0.5..0.75) => false | true
number::lte(int(-inf..inf), 1..2) => false | true
number::lte(int(-inf..inf), 0..inf) => false | true
number::lte(int(-inf..inf), 0!..inf) => false | true
number::lte(int(-inf..inf), 0..!inf) => false | true
number::lte(int(-inf..inf), 0!..!inf) => false | true
number::lte(int(-inf..inf), 1..inf) => false | true
number::lte(int(-inf..inf), 1!..inf) => false | true
number::lte(int(-inf..inf), 1..!inf) => false | true
number::lte(int(-inf..inf), 2..inf) => false | true
number::lte(int(-inf..inf), 2!..inf) => false | true
number::lte(int(-inf..inf), 2.5..inf) => false | true
number::lte(int(-inf..inf), -inf..0) => false | true
number::lte(int(-inf..inf), -inf..inf) => false | true
number::lte(int(-inf..inf), -inf!..inf) => false | true
number::lte(int(-inf..inf), -inf..!inf) => false | true
number::lte(int(-inf..inf), -inf!..!inf) => false | true
number::lte(int(-inf..inf), int(0..1)) => false | true
number::lte(int(-inf..inf), int(0..2)) => false | true
number::lte(int(-inf..inf), int(1..2)) => false | true
number::lte(int(-inf..inf), int(5..20)) => false | true
number::lte(int(-inf..inf), int(-20..-5)) => false | true
number::lte(int(-inf..inf), int(-10..10)) => false | true
number::lte(int(-inf..inf), int(0..inf)) => false | true
number::lte(int(-inf..inf), int(1..inf)) => false | true
number::lte(int(-inf..inf), int(-inf..0)) => false | true
number::lte(int(-inf..inf), int(-inf..1)) => false | true
number::lte(int(-inf..inf), int(-inf..inf)) => false | true
number::lte(int(-inf..inf), nonInt(0..1)) => false | true
number::lte(int(-inf..inf), nonInt(0..2)) => false | true
number::lte(int(-inf..inf), nonInt(-1..2)) => false | true
number::lte(int(-inf..inf), nonInt(0..inf)) => false | true
number::lte(int(-inf..inf), nonInt(-1..inf)) => false | true
number::lte(int(-inf..inf), nonInt(-inf..0)) => false | true
number::lte(int(-inf..inf), nonInt(-inf..1)) => false | true
number::lte(int(-inf..inf), nonInt(-inf..inf)) => false | true
number::lte(int(-inf..inf), 1 | int(3..4)) => false | true
number::lte(nonInt(0..1), number) => false | true
number::lte(nonInt(0..1), -3.14) => false
number::lte(nonInt(0..1), -2) => false
number::lte(nonInt(0..1), -1) => false
number::lte(nonInt(0..1), -0.5) => false
number::lte(nonInt(0..1), 0) => false
number::lte(nonInt(0..1), 0.5) => false | true
number::lte(nonInt(0..1), 1) => true
number::lte(nonInt(0..1), 2) => true
number::lte(nonInt(0..1), 2.78) => true
number::lte(nonInt(0..1), 3) => true
number::lte(nonInt(0..1), 3.14) => true
number::lte(nonInt(0..1), 10) => true
number::lte(nonInt(0..1), 100) => true
number::lte(nonInt(0..1), -inf) => false
number::lte(nonInt(0..1), inf) => true
number::lte(nonInt(0..1), nan) => false
number::lte(nonInt(0..1), 0..1) => false | true
number::lte(nonInt(0..1), 0!..1) => false | true
number::lte(nonInt(0..1), 0..!1) => false | true
number::lte(nonInt(0..1), 0..2) => false | true
number::lte(nonInt(0..1), 0!..!2) => false | true
number::lte(nonInt(0..1), 0.5..1.5) => false | true
number::lte(nonInt(0..1), 0.5..2.5) => false | true
number::lte(nonInt(0..1), 0.5!..2.5) => false | true
number::lte(nonInt(0..1), 0.5..!2.5) => false | true
number::lte(nonInt(0..1), -2.56..3.35) => false | true
number::lte(nonInt(0..1), 0.5..0.75) => false | true
number::lte(nonInt(0..1), 1..2) => true
number::lte(nonInt(0..1), 0..inf) => false | true
number::lte(nonInt(0..1), 0!..inf) => false | true
number::lte(nonInt(0..1), 0..!inf) => false | true
number::lte(nonInt(0..1), 0!..!inf) => false | true
number::lte(nonInt(0..1), 1..inf) => true
number::lte(nonInt(0..1), 1!..inf) => true
number::lte(nonInt(0..1), 1..!inf) => true
number::lte(nonInt(0..1), 2..inf) => true
number::lte(nonInt(0..1), 2!..inf) => true
number::lte(nonInt(0..1), 2.5..inf) => true
number::lte(nonInt(0..1), -inf..0) => false
number::lte(nonInt(0..1), -inf..inf) => false | true
number::lte(nonInt(0..1), -inf!..inf) => false | true
number::lte(nonInt(0..1), -inf..!inf) => false | true
number::lte(nonInt(0..1), -inf!..!inf) => false | true
number::lte(nonInt(0..1), int(0..1)) => false | true
number::lte(nonInt(0..1), int(0..2)) => false | true
number::lte(nonInt(0..1), int(1..2)) => true
number::lte(nonInt(0..1), int(5..20)) => true
number::lte(nonInt(0..1), int(-20..-5)) => false
number::lte(nonInt(0..1), int(-10..10)) => false | true
number::lte(nonInt(0..1), int(0..inf)) => false | true
number::lte(nonInt(0..1), int(1..inf)) => true
number::lte(nonInt(0..1), int(-inf..0)) => false
number::lte(nonInt(0..1), int(-inf..1)) => false | true
number::lte(nonInt(0..1), int(-inf..inf)) => false | true
number::lte(nonInt(0..1), nonInt(0..1)) => false | true
number::lte(nonInt(0..1), nonInt(0..2)) => false | true
number::lte(nonInt(0..1), nonInt(-1..2)) => false | true
number::lte(nonInt(0..1), nonInt(0..inf)) => false | true
number::lte(nonInt(0..1), nonInt(-1..inf)) => false | true
number::lte(nonInt(0..1), nonInt(-inf..0)) => false
number::lte(nonInt(0..1), nonInt(-inf..1)) => false | true
number::lte(nonInt(0..1), nonInt(-inf..inf)) => false | true
number::lte(nonInt(0..1), 1 | int(3..4)) => true
number::lte(nonInt(0..2), number) => false | true
number::lte(nonInt(0..2), -3.14) => false
number::lte(nonInt(0..2), -2) => false
number::lte(nonInt(0..2), -1) => false
number::lte(nonInt(0..2), -0.5) => false
number::lte(nonInt(0..2), 0) => false
number::lte(nonInt(0..2), 0.5) => false | true
number::lte(nonInt(0..2), 1) => false | true
number::lte(nonInt(0..2), 2) => true
number::lte(nonInt(0..2), 2.78) => true
number::lte(nonInt(0..2), 3) => true
number::lte(nonInt(0..2), 3.14) => true
number::lte(nonInt(0..2), 10) => true
number::lte(nonInt(0..2), 100) => true
number::lte(nonInt(0..2), -inf) => false
number::lte(nonInt(0..2), inf) => true
number::lte(nonInt(0..2), nan) => false
number::lte(nonInt(0..2), 0..1) => false | true
number::lte(nonInt(0..2), 0!..1) => false | true
number::lte(nonInt(0..2), 0..!1) => false | true
number::lte(nonInt(0..2), 0..2) => false | true
number::lte(nonInt(0..2), 0!..!2) => false | true
number::lte(nonInt(0..2), 0.5..1.5) => false | true
number::lte(nonInt(0..2), 0.5..2.5) => false | true
number::lte(nonInt(0..2), 0.5!..2.5) => false | true
number::lte(nonInt(0..2), 0.5..!2.5) => false | true
number::lte(nonInt(0..2), -2.56..3.35) => false | true
number::lte(nonInt(0..2), 0.5..0.75) => false | true
number::lte(nonInt(0..2), 1..2) => false | true
number::lte(nonInt(0..2), 0..inf) => false | true
number::lte(nonInt(0..2), 0!..inf) => false | true
number::lte(nonInt(0..2), 0..!inf) => false | true
number::lte(nonInt(0..2), 0!..!inf) => false | true
number::lte(nonInt(0..2), 1..inf) => false | true
number::lte(nonInt(0..2), 1!..inf) => false | true
number::lte(nonInt(0..2), 1..!inf) => false | true
number::lte(nonInt(0..2), 2..inf) => true
number::lte(nonInt(0..2), 2!..inf) => true
number::lte(nonInt(0..2), 2.5..inf) => true
number::lte(nonInt(0..2), -inf..0) => false
number::lte(nonInt(0..2), -inf..inf) => false | true
number::lte(nonInt(0..2), -inf!..inf) => false | true
number::lte(nonInt(0..2), -inf..!inf) => false | true
number::lte(nonInt(0..2), -inf!..!inf) => false | true
number::lte(nonInt(0..2), int(0..1)) => false | true
number::lte(nonInt(0..2), int(0..2)) => false | true
number::lte(nonInt(0..2), int(1..2)) => false | true
number::lte(nonInt(0..2), int(5..20)) => true
number::lte(nonInt(0..2), int(-20..-5)) => false
number::lte(nonInt(0..2), int(-10..10)) => false | true
number::lte(nonInt(0..2), int(0..inf)) => false | true
number::lte(nonInt(0..2), int(1..inf)) => false | true
number::lte(nonInt(0..2), int(-inf..0)) => false
number::lte(nonInt(0..2), int(-inf..1)) => false | true
number::lte(nonInt(0..2), int(-inf..inf)) => false | true
number::lte(nonInt(0..2), nonInt(0..1)) => false | true
number::lte(nonInt(0..2), nonInt(0..2)) => false | true
number::lte(nonInt(0..2), nonInt(-1..2)) => false | true
number::lte(nonInt(0..2), nonInt(0..inf)) => false | true
number::lte(nonInt(0..2), nonInt(-1..inf)) => false | true
number::lte(nonInt(0..2), nonInt(-inf..0)) => false
number::lte(nonInt(0..2), nonInt(-inf..1)) => false | true
number::lte(nonInt(0..2), nonInt(-inf..inf)) => false | true
number::lte(nonInt(0..2), 1 | int(3..4)) => false | true
number::lte(nonInt(-1..2), number) => false | true
number::lte(nonInt(-1..2), -3.14) => false
number::lte(nonInt(-1..2), -2) => false
number::lte(nonInt(-1..2), -1) => false
number::lte(nonInt(-1..2), -0.5) => false | true
number::lte(nonInt(-1..2), 0) => false | true
number::lte(nonInt(-1..2), 0.5) => false | true
number::lte(nonInt(-1..2), 1) => false | true
number::lte(nonInt(-1..2), 2) => true
number::lte(nonInt(-1..2), 2.78) => true
number::lte(nonInt(-1..2), 3) => true
number::lte(nonInt(-1..2), 3.14) => true
number::lte(nonInt(-1..2), 10) => true
number::lte(nonInt(-1..2), 100) => true
number::lte(nonInt(-1..2), -inf) => false
number::lte(nonInt(-1..2), inf) => true
number::lte(nonInt(-1..2), nan) => false
number::lte(nonInt(-1..2), 0..1) => false | true
number::lte(nonInt(-1..2), 0!..1) => false | true
number::lte(nonInt(-1..2), 0..!1) => false | true
number::lte(nonInt(-1..2), 0..2) => false | true
number::lte(nonInt(-1..2), 0!..!2) => false | true
number::lte(nonInt(-1..2), 0.5..1.5) => false | true
number::lte(nonInt(-1..2), 0.5..2.5) => false | true
number::lte(nonInt(-1..2), 0.5!..2.5) => false | true
number::lte(nonInt(-1..2), 0.5..!2.5) => false | true
number::lte(nonInt(-1..2), -2.56..3.35) => false | true
number::lte(nonInt(-1..2), 0.5..0.75) => false | true
number::lte(nonInt(-1..2), 1..2) => false | true
number::lte(nonInt(-1..2), 0..inf) => false | true
number::lte(nonInt(-1..2), 0!..inf) => false | true
number::lte(nonInt(-1..2), 0..!inf) => false | true
number::lte(nonInt(-1..2), 0!..!inf) => false | true
number::lte(nonInt(-1..2), 1..inf) => false | true
number::lte(nonInt(-1..2), 1!..inf) => false | true
number::lte(nonInt(-1..2), 1..!inf) => false | true
number::lte(nonInt(-1..2), 2..inf) => true
number::lte(nonInt(-1..2), 2!..inf) => true
number::lte(nonInt(-1..2), 2.5..inf) => true
number::lte(nonInt(-1..2), -inf..0) => false | true
number::lte(nonInt(-1..2), -inf..inf) => false | true
number::lte(nonInt(-1..2), -inf!..inf) => false | true
number::lte(nonInt(-1..2), -inf..!inf) => false | true
number::lte(nonInt(-1..2), -inf!..!inf) => false | true
number::lte(nonInt(-1..2), int(0..1)) => false | true
number::lte(nonInt(-1..2), int(0..2)) => false | true
number::lte(nonInt(-1..2), int(1..2)) => false | true
number::lte(nonInt(-1..2), int(5..20)) => true
number::lte(nonInt(-1..2), int(-20..-5)) => false
number::lte(nonInt(-1..2), int(-10..10)) => false | true
number::lte(nonInt(-1..2), int(0..inf)) => false | true
number::lte(nonInt(-1..2), int(1..inf)) => false | true
number::lte(nonInt(-1..2), int(-inf..0)) => false | true
number::lte(nonInt(-1..2), int(-inf..1)) => false | true
number::lte(nonInt(-1..2), int(-inf..inf)) => false | true
number::lte(nonInt(-1..2), nonInt(0..1)) => false | true
number::lte(nonInt(-1..2), nonInt(0..2)) => false | true
number::lte(nonInt(-1..2), nonInt(-1..2)) => false | true
number::lte(nonInt(-1..2), nonInt(0..inf)) => false | true
number::lte(nonInt(-1..2), nonInt(-1..inf)) => false | true
number::lte(nonInt(-1..2), nonInt(-inf..0)) => false | true
number::lte(nonInt(-1..2), nonInt(-inf..1)) => false | true
number::lte(nonInt(-1..2), nonInt(-inf..inf)) => false | true
number::lte(nonInt(-1..2), 1 | int(3..4)) => false | true
number::lte(nonInt(0..inf), number) => false | true
number::lte(nonInt(0..inf), -3.14) => false
number::lte(nonInt(0..inf), -2) => false
number::lte(nonInt(0..inf), -1) => false
number::lte(nonInt(0..inf), -0.5) => false
number::lte(nonInt(0..inf), 0) => false
number::lte(nonInt(0..inf), 0.5) => false | true
number::lte(nonInt(0..inf), 1) => false | true
number::lte(nonInt(0..inf), 2) => false | true
number::lte(nonInt(0..inf), 2.78) => false | true
number::lte(nonInt(0..inf), 3) => false | true
number::lte(nonInt(0..inf), 3.14) => false | true
number::lte(nonInt(0..inf), 10) => false | true
number::lte(nonInt(0..inf), 100) => false | true
number::lte(nonInt(0..inf), -inf) => false
number::lte(nonInt(0..inf), inf) => true
number::lte(nonInt(0..inf), nan) => false
number::lte(nonInt(0..inf), 0..1) => false | true
number::lte(nonInt(0..inf), 0!..1) => false | true
number::lte(nonInt(0..inf), 0..!1) => false | true
number::lte(nonInt(0..inf), 0..2) => false | true
number::lte(nonInt(0..inf), 0!..!2) => false | true
number::lte(nonInt(0..inf), 0.5..1.5) => false | true
number::lte(nonInt(0..inf), 0.5..2.5) => false | true
number::lte(nonInt(0..inf), 0.5!..2.5) => false | true
number::lte(nonInt(0..inf), 0.5..!2.5) => false | true
number::lte(nonInt(0..inf), -2.56..3.35) => false | true
number::lte(nonInt(0..inf), 0.5..0.75) => false | true
number::lte(nonInt(0..inf), 1..2) => false | true
number::lte(nonInt(0..inf), 0..inf) => false | true
number::lte(nonInt(0..inf), 0!..inf) => false | true
number::lte(nonInt(0..inf), 0..!inf) => false | true
number::lte(nonInt(0..inf), 0!..!inf) => false | true
number::lte(nonInt(0..inf), 1..inf) => false | true
number::lte(nonInt(0..inf), 1!..inf) => false | true
number::lte(nonInt(0..inf), 1..!inf) => false | true
number::lte(nonInt(0..inf), 2..inf) => false | true
number::lte(nonInt(0..inf), 2!..inf) => false | true
number::lte(nonInt(0..inf), 2.5..inf) => false | true
number::lte(nonInt(0..inf), -inf..0) => false
number::lte(nonInt(0..inf), -inf..inf) => false | true
number::lte(nonInt(0..inf), -inf!..inf) => false | true
number::lte(nonInt(0..inf), -inf..!inf) => false | true
number::lte(nonInt(0..inf), -inf!..!inf) => false | true
number::lte(nonInt(0..inf), int(0..1)) => false | true
number::lte(nonInt(0..inf), int(0..2)) => false | true
number::lte(nonInt(0..inf), int(1..2)) => false | true
number::lte(nonInt(0..inf), int(5..20)) => false | true
number::lte(nonInt(0..inf), int(-20..-5)) => false
number::lte(nonInt(0..inf), int(-10..10)) => false | true
number::lte(nonInt(0..inf), int(0..inf)) => false | true
number::lte(nonInt(0..inf), int(1..inf)) => false | true
number::lte(nonInt(0..inf), int(-inf..0)) => false
number::lte(nonInt(0..inf), int(-inf..1)) => false | true
number::lte(nonInt(0..inf), int(-inf..inf)) => false | true
number::lte(nonInt(0..inf), nonInt(0..1)) => false | true
number::lte(nonInt(0..inf), nonInt(0..2)) => false | true
number::lte(nonInt(0..inf), nonInt(-1..2)) => false | true
number::lte(nonInt(0..inf), nonInt(0..inf)) => false | true
number::lte(nonInt(0..inf), nonInt(-1..inf)) => false | true
number::lte(nonInt(0..inf), nonInt(-inf..0)) => false
number::lte(nonInt(0..inf), nonInt(-inf..1)) => false | true
number::lte(nonInt(0..inf), nonInt(-inf..inf)) => false | true
number::lte(nonInt(0..inf), 1 | int(3..4)) => false | true
number::lte(nonInt(-1..inf), number) => false | true
number::lte(nonInt(-1..inf), -3.14) => false
number::lte(nonInt(-1..inf), -2) => false
number::lte(nonInt(-1..inf), -1) => false
number::lte(nonInt(-1..inf), -0.5) => false | true
number::lte(nonInt(-1..inf), 0) => false | true
number::lte(nonInt(-1..inf), 0.5) => false | true
number::lte(nonInt(-1..inf), 1) => false | true
number::lte(nonInt(-1..inf), 2) => false | true
number::lte(nonInt(-1..inf), 2.78) => false | true
number::lte(nonInt(-1..inf), 3) => false | true
number::lte(nonInt(-1..inf), 3.14) => false | true
number::lte(nonInt(-1..inf), 10) => false | true
number::lte(nonInt(-1..inf), 100) => false | true
number::lte(nonInt(-1..inf), -inf) => false
number::lte(nonInt(-1..inf), inf) => true
number::lte(nonInt(-1..inf), nan) => false
number::lte(nonInt(-1..inf), 0..1) => false | true
number::lte(nonInt(-1..inf), 0!..1) => false | true
number::lte(nonInt(-1..inf), 0..!1) => false | true
number::lte(nonInt(-1..inf), 0..2) => false | true
number::lte(nonInt(-1..inf), 0!..!2) => false | true
number::lte(nonInt(-1..inf), 0.5..1.5) => false | true
number::lte(nonInt(-1..inf), 0.5..2.5) => false | true
number::lte(nonInt(-1..inf), 0.5!..2.5) => false | true
number::lte(nonInt(-1..inf), 0.5..!2.5) => false | true
number::lte(nonInt(-1..inf), -2.56..3.35) => false | true
number::lte(nonInt(-1..inf), 0.5..0.75) => false | true
number::lte(nonInt(-1..inf), 1..2) => false | true
number::lte(nonInt(-1..inf), 0..inf) => false | true
number::lte(nonInt(-1..inf), 0!..inf) => false | true
number::lte(nonInt(-1..inf), 0..!inf) => false | true
number::lte(nonInt(-1..inf), 0!..!inf) => false | true
number::lte(nonInt(-1..inf), 1..inf) => false | true
number::lte(nonInt(-1..inf), 1!..inf) => false | true
number::lte(nonInt(-1..inf), 1..!inf) => false | true
number::lte(nonInt(-1..inf), 2..inf) => false | true
number::lte(nonInt(-1..inf), 2!..inf) => false | true
number::lte(nonInt(-1..inf), 2.5..inf) => false | true
number::lte(nonInt(-1..inf), -inf..0) => false | true
number::lte(nonInt(-1..inf), -inf..inf) => false | true
number::lte(nonInt(-1..inf), -inf!..inf) => false | true
number::lte(nonInt(-1..inf), -inf..!inf) => false | true
number::lte(nonInt(-1..inf), -inf!..!inf) => false | true
number::lte(nonInt(-1..inf), int(0..1)) => false | true
number::lte(nonInt(-1..inf), int(0..2)) => false | true
number::lte(nonInt(-1..inf), int(1..2)) => false | true
number::lte(nonInt(-1..inf), int(5..20)) => false | true
number::lte(nonInt(-1..inf), int(-20..-5)) => false
number::lte(nonInt(-1..inf), int(-10..10)) => false | true
number::lte(nonInt(-1..inf), int(0..inf)) => false | true
number::lte(nonInt(-1..inf), int(1..inf)) => false | true
number::lte(nonInt(-1..inf), int(-inf..0)) => false | true
number::lte(nonInt(-1..inf), int(-inf..1)) => false | true
number::lte(nonInt(-1..inf), int(-inf..inf)) => false | true
number::lte(nonInt(-1..inf), nonInt(0..1)) => false | true
number::lte(nonInt(-1..inf), nonInt(0..2)) => false | true
number::lte(nonInt(-1..inf), nonInt(-1..2)) => false | true
number::lte(nonInt(-1..inf), nonInt(0..inf)) => false | true
number::lte(nonInt(-1..inf), nonInt(-1..inf)) => false | true
number::lte(nonInt(-1..inf), nonInt(-inf..0)) => false | true
number::lte(nonInt(-1..inf), nonInt(-inf..1)) => false | true
number::lte(nonInt(-1..inf), nonInt(-inf..inf)) => false | true
number::lte(nonInt(-1..inf), 1 | int(3..4)) => false | true
number::lte(nonInt(-inf..0), number) => false | true
number::lte(nonInt(-inf..0), -3.14) => false | true
number::lte(nonInt(-inf..0), -2) => false | true
number::lte(nonInt(-inf..0), -1) => false | true
number::lte(nonInt(-inf..0), -0.5) => false | true
number::lte(nonInt(-inf..0), 0) => true
number::lte(nonInt(-inf..0), 0.5) => true
number::lte(nonInt(-inf..0), 1) => true
number::lte(nonInt(-inf..0), 2) => true
number::lte(nonInt(-inf..0), 2.78) => true
number::lte(nonInt(-inf..0), 3) => true
number::lte(nonInt(-inf..0), 3.14) => true
number::lte(nonInt(-inf..0), 10) => true
number::lte(nonInt(-inf..0), 100) => true
number::lte(nonInt(-inf..0), -inf) => false
number::lte(nonInt(-inf..0), inf) => true
number::lte(nonInt(-inf..0), nan) => false
number::lte(nonInt(-inf..0), 0..1) => true
number::lte(nonInt(-inf..0), 0!..1) => true
number::lte(nonInt(-inf..0), 0..!1) => true
number::lte(nonInt(-inf..0), 0..2) => true
number::lte(nonInt(-inf..0), 0!..!2) => true
number::lte(nonInt(-inf..0), 0.5..1.5) => true
number::lte(nonInt(-inf..0), 0.5..2.5) => true
number::lte(nonInt(-inf..0), 0.5!..2.5) => true
number::lte(nonInt(-inf..0), 0.5..!2.5) => true
number::lte(nonInt(-inf..0), -2.56..3.35) => false | true
number::lte(nonInt(-inf..0), 0.5..0.75) => true
number::lte(nonInt(-inf..0), 1..2) => true
number::lte(nonInt(-inf..0), 0..inf) => true
number::lte(nonInt(-inf..0), 0!..inf) => true
number::lte(nonInt(-inf..0), 0..!inf) => true
number::lte(nonInt(-inf..0), 0!..!inf) => true
number::lte(nonInt(-inf..0), 1..inf) => true
number::lte(nonInt(-inf..0), 1!..inf) => true
number::lte(nonInt(-inf..0), 1..!inf) => true
number::lte(nonInt(-inf..0), 2..inf) => true
number::lte(nonInt(-inf..0), 2!..inf) => true
number::lte(nonInt(-inf..0), 2.5..inf) => true
number::lte(nonInt(-inf..0), -inf..0) => false | true
number::lte(nonInt(-inf..0), -inf..inf) => false | true
number::lte(nonInt(-inf..0), -inf!..inf) => false | true
number::lte(nonInt(-inf..0), -inf..!inf) => false | true
number::lte(nonInt(-inf..0), -inf!..!inf) => false | true
number::lte(nonInt(-inf..0), int(0..1)) => true
number::lte(nonInt(-inf..0), int(0..2)) => true
number::lte(nonInt(-inf..0), int(1..2)) => true
number::lte(nonInt(-inf..0), int(5..20)) => true
number::lte(nonInt(-inf..0), int(-20..-5)) => false | true
number::lte(nonInt(-inf..0), int(-10..10)) => false | true
number::lte(nonInt(-inf..0), int(0..inf)) => true
number::lte(nonInt(-inf..0), int(1..inf)) => true
number::lte(nonInt(-inf..0), int(-inf..0)) => false | true
number::lte(nonInt(-inf..0), int(-inf..1)) => false | true
number::lte(nonInt(-inf..0), int(-inf..inf)) => false | true
number::lte(nonInt(-inf..0), nonInt(0..1)) => true
number::lte(nonInt(-inf..0), nonInt(0..2)) => true
number::lte(nonInt(-inf..0), nonInt(-1..2)) => false | true
number::lte(nonInt(-inf..0), nonInt(0..inf)) => true
number::lte(nonInt(-inf..0), nonInt(-1..inf)) => false | true
number::lte(nonInt(-inf..0), nonInt(-inf..0)) => false | true
number::lte(nonInt(-inf..0), nonInt(-inf..1)) => false | true
number::lte(nonInt(-inf..0), nonInt(-inf..inf)) => false | true
number::lte(nonInt(-inf..0), 1 | int(3..4)) => true
number::lte(nonInt(-inf..1), number) => false | true
number::lte(nonInt(-inf..1), -3.14) => false | true
number::lte(nonInt(-inf..1), -2) => false | true
number::lte(nonInt(-inf..1), -1) => false | true
number::lte(nonInt(-inf..1), -0.5) => false | true
number::lte(nonInt(-inf..1), 0) => false | true
number::lte(nonInt(-inf..1), 0.5) => false | true
number::lte(nonInt(-inf..1), 1) => true
number::lte(nonInt(-inf..1), 2) => true
number::lte(nonInt(-inf..1), 2.78) => true
number::lte(nonInt(-inf..1), 3) => true
number::lte(nonInt(-inf..1), 3.14) => true
number::lte(nonInt(-inf..1), 10) => true
number::lte(nonInt(-inf..1), 100) => true
number::lte(nonInt(-inf..1), -inf) => false
number::lte(nonInt(-inf..1), inf) => true
number::lte(nonInt(-inf..1), nan) => false
number::lte(nonInt(-inf..1), 0..1) => false | true
number::lte(nonInt(-inf..1), 0!..1) => false | true
number::lte(nonInt(-inf..1), 0..!1) => false | true
number::lte(nonInt(-inf..1), 0..2) => false | true
number::lte(nonInt(-inf..1), 0!..!2) => false | true
number::lte(nonInt(-inf..1), 0.5..1.5) => false | true
number::lte(nonInt(-inf..1), 0.5..2.5) => false | true
number::lte(nonInt(-inf..1), 0.5!..2.5) => false | true
number::lte(nonInt(-inf..1), 0.5..!2.5) => false | true
number::lte(nonInt(-inf..1), -2.56..3.35) => false | true
number::lte(nonInt(-inf..1), 0.5..0.75) => false | true
number::lte(nonInt(-inf..1), 1..2) => true
number::lte(nonInt(-inf..1), 0..inf) => false | true
number::lte(nonInt(-inf..1), 0!..inf) => false | true
number::lte(nonInt(-inf..1), 0..!inf) => false | true
number::lte(nonInt(-inf..1), 0!..!inf) => false | true
number::lte(nonInt(-inf..1), 1..inf) => true
number::lte(nonInt(-inf..1), 1!..inf) => true
number::lte(nonInt(-inf..1), 1..!inf) => true
number::lte(nonInt(-inf..1), 2..inf) => true
number::lte(nonInt(-inf..1), 2!..inf) => true
number::lte(nonInt(-inf..1), 2.5..inf) => true
number::lte(nonInt(-inf..1), -inf..0) => false | true
number::lte(nonInt(-inf..1), -inf..inf) => false | true
number::lte(nonInt(-inf..1), -inf!..inf) => false | true
number::lte(nonInt(-inf..1), -inf..!inf) => false | true
number::lte(nonInt(-inf..1), -inf!..!inf) => false | true
number::lte(nonInt(-inf..1), int(0..1)) => false | true
number::lte(nonInt(-inf..1), int(0..2)) => false | true
number::lte(nonInt(-inf..1), int(1..2)) => true
number::lte(nonInt(-inf..1), int(5..20)) => true
number::lte(nonInt(-inf..1), int(-20..-5)) => false | true
number::lte(nonInt(-inf..1), int(-10..10)) => false | true
number::lte(nonInt(-inf..1), int(0..inf)) => false | true
number::lte(nonInt(-inf..1), int(1..inf)) => true
number::lte(nonInt(-inf..1), int(-inf..0)) => false | true
number::lte(nonInt(-inf..1), int(-inf..1)) => false | true
number::lte(nonInt(-inf..1), int(-inf..inf)) => false | true
number::lte(nonInt(-inf..1), nonInt(0..1)) => false | true
number::lte(nonInt(-inf..1), nonInt(0..2)) => false | true
number::lte(nonInt(-inf..1), nonInt(-1..2)) => false | true
number::lte(nonInt(-inf..1), nonInt(0..inf)) => false | true
number::lte(nonInt(-inf..1), nonInt(-1..inf)) => false | true
number::lte(nonInt(-inf..1), nonInt(-inf..0)) => false | true
number::lte(nonInt(-inf..1), nonInt(-inf..1)) => false | true
number::lte(nonInt(-inf..1), nonInt(-inf..inf)) => false | true
number::lte(nonInt(-inf..1), 1 | int(3..4)) => true
number::lte(nonInt(-inf..inf), number) => false | true
number::lte(nonInt(-inf..inf), -3.14) => false | true
number::lte(nonInt(-inf..inf), -2) => false | true
number::lte(nonInt(-inf..inf), -1) => false | true
number::lte(nonInt(-inf..inf), -0.5) => false | true
number::lte(nonInt(-inf..inf), 0) => false | true
number::lte(nonInt(-inf..inf), 0.5) => false | true
number::lte(nonInt(-inf..inf), 1) => false | true
number::lte(nonInt(-inf..inf), 2) => false | true
number::lte(nonInt(-inf..inf), 2.78) => false | true
number::lte(nonInt(-inf..inf), 3) => false | true
number::lte(nonInt(-inf..inf), 3.14) => false | true
number::lte(nonInt(-inf..inf), 10) => false | true
number::lte(nonInt(-inf..inf), 100) => false | true
number::lte(nonInt(-inf..inf), -inf) => false
number::lte(nonInt(-inf..inf), inf) => true
number::lte(nonInt(-inf..inf), nan) => false
number::lte(nonInt(-inf..inf), 0..1) => false | true
number::lte(nonInt(-inf..inf), 0!..1) => false | true
number::lte(nonInt(-inf..inf), 0..!1) => false | true
number::lte(nonInt(-inf..inf), 0..2) => false | true
number::lte(nonInt(-inf..inf), 0!..!2) => false | true
number::lte(nonInt(-inf..inf), 0.5..1.5) => false | true
number::lte(nonInt(-inf..inf), 0.5..2.5) => false | true
number::lte(nonInt(-inf..inf), 0.5!..2.5) => false | true
number::lte(nonInt(-inf..inf), 0.5..!2.5) => false | true
number::lte(nonInt(-inf..inf), -2.56..3.35) => false | true
number::lte(nonInt(-inf..inf), 0.5..0.75) => false | true
number::lte(nonInt(-inf..inf), 1..2) => false | true
number::lte(nonInt(-inf..inf), 0..inf) => false | true
number::lte(nonInt(-inf..inf), 0!..inf) => false | true
number::lte(nonInt(-inf..inf), 0..!inf) => false | true
number::lte(nonInt(-inf..inf), 0!..!inf) => false | true
number::lte(nonInt(-inf..inf), 1..inf) => false | true
number::lte(nonInt(-inf..inf), 1!..inf) => false | true
number::lte(nonInt(-inf..inf), 1..!inf) => false | true
number::lte(nonInt(-inf..inf), 2..inf) => false | true
number::lte(nonInt(-inf..inf), 2!..inf) => false | true
number::lte(nonInt(-inf..inf), 2.5..inf) => false | true
number::lte(nonInt(-inf..inf), -inf..0) => false | true
number::lte(nonInt(-inf..inf), -inf..inf) => false | true
number::lte(nonInt(-inf..inf), -inf!..inf) => false | true
number::lte(nonInt(-inf..inf), -inf..!inf) => false | true
number::lte(nonInt(-inf..inf), -inf!..!inf) => false | true
number::lte(nonInt(-inf..inf), int(0..1)) => false | true
number::lte(nonInt(-inf..inf), int(0..2)) => false | true
number::lte(nonInt(-inf..inf), int(1..2)) => false | true
number::lte(nonInt(-inf..inf), int(5..20)) => false | true
number::lte(nonInt(-inf..inf), int(-20..-5)) => false | true
number::lte(nonInt(-inf..inf), int(-10..10)) => false | true
number::lte(nonInt(-inf..inf), int(0..inf)) => false | true
number::lte(nonInt(-inf..inf), int(1..inf)) => false | true
number::lte(nonInt(-inf..inf), int(-inf..0)) => false | true
number::lte(nonInt(-inf..inf), int(-inf..1)) => false | true
number::lte(nonInt(-inf..inf), int(-inf..inf)) => false | true
number::lte(nonInt(-inf..inf), nonInt(0..1)) => false | true
number::lte(nonInt(-inf..inf), nonInt(0..2)) => false | true
number::lte(nonInt(-inf..inf), nonInt(-1..2)) => false | true
number::lte(nonInt(-inf..inf), nonInt(0..inf)) => false | true
number::lte(nonInt(-inf..inf), nonInt(-1..inf)) => false | true
number::lte(nonInt(-inf..inf), nonInt(-inf..0)) => false | true
number::lte(nonInt(-inf..inf), nonInt(-inf..1)) => false | true
number::lte(nonInt(-inf..inf), nonInt(-inf..inf)) => false | true
number::lte(nonInt(-inf..inf), 1 | int(3..4)) => false | true
number::lte(1 | int(3..4), number) => false | true
number::lte(1 | int(3..4), -3.14) => false
number::lte(1 | int(3..4), -2) => false
number::lte(1 | int(3..4), -1) => false
number::lte(1 | int(3..4), -0.5) => false
number::lte(1 | int(3..4), 0) => false
number::lte(1 | int(3..4), 0.5) => false
number::lte(1 | int(3..4), 1) => false | true
number::lte(1 | int(3..4), 2) => false | true
number::lte(1 | int(3..4), 2.78) => false | true
number::lte(1 | int(3..4), 3) => false | true
number::lte(1 | int(3..4), 3.14) => false | true
number::lte(1 | int(3..4), 10) => true
number::lte(1 | int(3..4), 100) => true
number::lte(1 | int(3..4), -inf) => false
number::lte(1 | int(3..4), inf) => true
number::lte(1 | int(3..4), nan) => false
number::lte(1 | int(3..4), 0..1) => false | true
number::lte(1 | int(3..4), 0!..1) => false | true
number::lte(1 | int(3..4), 0..!1) => false
number::lte(1 | int(3..4), 0..2) => false | true
number::lte(1 | int(3..4), 0!..!2) => false | true
number::lte(1 | int(3..4), 0.5..1.5) => false | true
number::lte(1 | int(3..4), 0.5..2.5) => false | true
number::lte(1 | int(3..4), 0.5!..2.5) => false | true
number::lte(1 | int(3..4), 0.5..!2.5) => false | true
number::lte(1 | int(3..4), -2.56..3.35) => false | true
number::lte(1 | int(3..4), 0.5..0.75) => false
number::lte(1 | int(3..4), 1..2) => false | true
number::lte(1 | int(3..4), 0..inf) => false | true
number::lte(1 | int(3..4), 0!..inf) => false | true
number::lte(1 | int(3..4), 0..!inf) => false | true
number::lte(1 | int(3..4), 0!..!inf) => false | true
number::lte(1 | int(3..4), 1..inf) => false | true
number::lte(1 | int(3..4), 1!..inf) => false | true
number::lte(1 | int(3..4), 1..!inf) => false | true
number::lte(1 | int(3..4), 2..inf) => false | true
number::lte(1 | int(3..4), 2!..inf) => false | true
number::lte(1 | int(3..4), 2.5..inf) => false | true
number::lte(1 | int(3..4), -inf..0) => false
number::lte(1 | int(3..4), -inf..inf) => false | true
number::lte(1 | int(3..4), -inf!..inf) => false | true
number::lte(1 | int(3..4), -inf..!inf) => false | true
number::lte(1 | int(3..4), -inf!..!inf) => false | true
number::lte(1 | int(3..4), int(0..1)) => false | true
number::lte(1 | int(3..4), int(0..2)) => false | true
number::lte(1 | int(3..4), int(1..2)) => false | true
number::lte(1 | int(3..4), int(5..20)) => true
number::lte(1 | int(3..4), int(-20..-5)) => false
number::lte(1 | int(3..4), int(-10..10)) => false | true
number::lte(1 | int(3..4), int(0..inf)) => false | true
number::lte(1 | int(3..4), int(1..inf)) => false | true
number::lte(1 | int(3..4), int(-inf..0)) => false
number::lte(1 | int(3..4), int(-inf..1)) => false | true
number::lte(1 | int(3..4), int(-inf..inf)) => false | true
number::lte(1 | int(3..4), nonInt(0..1)) => false
number::lte(1 | int(3..4), nonInt(0..2)) => false | true
number::lte(1 | int(3..4), nonInt(-1..2)) => false | true
number::lte(1 | int(3..4), nonInt(0..inf)) => false | true
number::lte(1 | int(3..4), nonInt(-1..inf)) => false | true
number::lte(1 | int(3..4), nonInt(-inf..0)) => false
number::lte(1 | int(3..4), nonInt(-inf..1)) => false
number::lte(1 | int(3..4), nonInt(-inf..inf)) => false | true
number::lte(1 | int(3..4), 1 | int(3..4)) => false | true"
`;

exports[`Builtin functions number::mod evaluate 1`] = `
"number::mod(number, number) => number
number::mod(number, -3.14) => -3.14!..0 | nan
number::mod(number, -2) => -2!..0 | nan
number::mod(number, -1) => -1!..0 | nan
number::mod(number, -0.5) => -0.5!..0 | nan
number::mod(number, 0) => never
number::mod(number, 0.5) => 0..!0.5 | nan
number::mod(number, 1) => 0..!1 | nan
number::mod(number, 2) => 0..!2 | nan
number::mod(number, 2.78) => 0..!2.78 | nan
number::mod(number, 3) => 0..!3 | nan
number::mod(number, 3.14) => 0..!3.14 | nan
number::mod(number, 10) => 0..!10 | nan
number::mod(number, 100) => 0..!100 | nan
number::mod(number, -inf) => -inf..0 | nan
number::mod(number, inf) => 0..inf | nan
number::mod(number, nan) => nan
number::mod(number, 0..1) => 0..!1 | nan
number::mod(number, 0!..1) => 0..!1 | nan
number::mod(number, 0..!1) => 0..!1 | nan
number::mod(number, 0..2) => 0..!2 | nan
number::mod(number, 0!..!2) => 0..!2 | nan
number::mod(number, 0.5..1.5) => 0..!1.5 | nan
number::mod(number, 0.5..2.5) => 0..!2.5 | nan
number::mod(number, 0.5!..2.5) => 0..!2.5 | nan
number::mod(number, 0.5..!2.5) => 0..!2.5 | nan
number::mod(number, -2.56..3.35) => -2.56!..!3.35 | nan
number::mod(number, 0.5..0.75) => 0..!0.75 | nan
number::mod(number, 1..2) => 0..!2 | nan
number::mod(number, 0..inf) => 0..inf | nan
number::mod(number, 0!..inf) => 0..inf | nan
number::mod(number, 0..!inf) => 0..!inf | nan
number::mod(number, 0!..!inf) => 0..!inf | nan
number::mod(number, 1..inf) => 0..inf | nan
number::mod(number, 1!..inf) => 0..inf | nan
number::mod(number, 1..!inf) => 0..!inf | nan
number::mod(number, 2..inf) => 0..inf | nan
number::mod(number, 2!..inf) => 0..inf | nan
number::mod(number, 2.5..inf) => 0..inf | nan
number::mod(number, -inf..0) => -inf..0 | nan
number::mod(number, -inf..inf) => number
number::mod(number, -inf!..inf) => -inf!..inf | nan
number::mod(number, -inf..!inf) => -inf..!inf | nan
number::mod(number, -inf!..!inf) => -inf!..!inf | nan
number::mod(number, int(0..1)) => 0..!1 | nan
number::mod(number, int(0..2)) => 0..!2 | nan
number::mod(number, int(1..2)) => 0..!2 | nan
number::mod(number, int(5..20)) => 0..!20 | nan
number::mod(number, int(-20..-5)) => -20!..0 | nan
number::mod(number, int(-10..10)) => -10!..!10 | nan
number::mod(number, int(0..inf)) => 0..!inf | nan
number::mod(number, int(1..inf)) => 0..!inf | nan
number::mod(number, int(-inf..0)) => -inf!..0 | nan
number::mod(number, int(-inf..1)) => -inf!..!1 | nan
number::mod(number, int(-inf..inf)) => -inf!..!inf | nan
number::mod(number, nonInt(0..1)) => 0..!1 | nan
number::mod(number, nonInt(0..2)) => 0..!2 | nan
number::mod(number, nonInt(-1..2)) => -1!..!2 | nan
number::mod(number, nonInt(0..inf)) => 0..!inf | nan
number::mod(number, nonInt(-1..inf)) => -1!..!inf | nan
number::mod(number, nonInt(-inf..0)) => -inf!..0 | nan
number::mod(number, nonInt(-inf..1)) => -inf!..!1 | nan
number::mod(number, nonInt(-inf..inf)) => -inf!..!inf | nan
number::mod(number, 1 | int(3..4)) => 0..!4 | nan
number::mod(-3.14, number) => -3.14..inf | nan
number::mod(-3.14, -3.14) => 0
number::mod(-3.14, -2) => -1.14
number::mod(-3.14, -1) => -0.14
number::mod(-3.14, -0.5) => -0.14
number::mod(-3.14, 0) => never
number::mod(-3.14, 0.5) => 0.36
number::mod(-3.14, 1) => 0.86
number::mod(-3.14, 2) => 0.86
number::mod(-3.14, 2.78) => 2.42
number::mod(-3.14, 3) => 2.86
number::mod(-3.14, 3.14) => 0
number::mod(-3.14, 10) => 6.86
number::mod(-3.14, 100) => 96.86
number::mod(-3.14, -inf) => -3.14
number::mod(-3.14, inf) => inf
number::mod(-3.14, nan) => nan
number::mod(-3.14, 0..1) => 0..!1
number::mod(-3.14, 0!..1) => 0..!1
number::mod(-3.14, 0..!1) => 0..!1
number::mod(-3.14, 0..2) => 0..!2
number::mod(-3.14, 0!..!2) => 0..!2
number::mod(-3.14, 0.5..1.5) => 0..!1.5
number::mod(-3.14, 0.5..2.5) => 0..!2.5
number::mod(-3.14, 0.5!..2.5) => 0..!2.5
number::mod(-3.14, 0.5..!2.5) => 0..!2.5
number::mod(-3.14, -2.56..3.35) => -2.56!..!3.35
number::mod(-3.14, 0.5..0.75) => 0..!0.75
number::mod(-3.14, 1..2) => 0..!2
number::mod(-3.14, 0..inf) => 0..inf
number::mod(-3.14, 0!..inf) => 0..inf
number::mod(-3.14, 0..!inf) => 0..!inf
number::mod(-3.14, 0!..!inf) => 0..!inf
number::mod(-3.14, 1..inf) => 0..inf
number::mod(-3.14, 1!..inf) => 0..inf
number::mod(-3.14, 1..!inf) => 0..!inf
number::mod(-3.14, 2..inf) => 0..inf
number::mod(-3.14, 2!..inf) => 0..inf
number::mod(-3.14, 2.5..inf) => 0..inf
number::mod(-3.14, -inf..0) => -3.14..0
number::mod(-3.14, -inf..inf) => -3.14..inf
number::mod(-3.14, -inf!..inf) => -3.14!..inf
number::mod(-3.14, -inf..!inf) => -3.14..!inf
number::mod(-3.14, -inf!..!inf) => -3.14!..!inf
number::mod(-3.14, int(0..1)) => 0.86
number::mod(-3.14, int(0..2)) => 0.86
number::mod(-3.14, int(1..2)) => 0.86
number::mod(-3.14, int(5..20)) => 1.86..16.86
number::mod(-3.14, int(-20..-5)) => -3.14
number::mod(-3.14, int(-10..10)) => -3.14 | -1.14 | -0.14 | 0.86 | 1.86 | 2.86 | 3.86 | 4.86 | 5.86 | 6.86
number::mod(-3.14, int(0..inf)) => 0..!inf
number::mod(-3.14, int(1..inf)) => 0..!inf
number::mod(-3.14, int(-inf..0)) => -3.14..0
number::mod(-3.14, int(-inf..1)) => -3.14..0 | 0.86
number::mod(-3.14, int(-inf..inf)) => -3.14..!inf
number::mod(-3.14, nonInt(0..1)) => 0..!1
number::mod(-3.14, nonInt(0..2)) => 0..!2
number::mod(-3.14, nonInt(-1..2)) => -1!..!2
number::mod(-3.14, nonInt(0..inf)) => 0..!inf
number::mod(-3.14, nonInt(-1..inf)) => -1!..!inf
number::mod(-3.14, nonInt(-inf..0)) => -3.14!..0
number::mod(-3.14, nonInt(-inf..1)) => -inf!..!1
number::mod(-3.14, nonInt(-inf..inf)) => -inf!..!inf
number::mod(-3.14, 1 | int(3..4)) => 0.86 | 2.86
number::mod(-2, number) => -2..inf | nan
number::mod(-2, -3.14) => -2
number::mod(-2, -2) => 0
number::mod(-2, -1) => 0
number::mod(-2, -0.5) => 0
number::mod(-2, 0) => never
number::mod(-2, 0.5) => 0
number::mod(-2, 1) => 0
number::mod(-2, 2) => 0
number::mod(-2, 2.78) => 0.78
number::mod(-2, 3) => 1
number::mod(-2, 3.14) => 1.14
number::mod(-2, 10) => 8
number::mod(-2, 100) => 98
number::mod(-2, -inf) => -2
number::mod(-2, inf) => inf
number::mod(-2, nan) => nan
number::mod(-2, 0..1) => 0..!1
number::mod(-2, 0!..1) => 0..!1
number::mod(-2, 0..!1) => 0..!1
number::mod(-2, 0..2) => 0..!2
number::mod(-2, 0!..!2) => 0..!2
number::mod(-2, 0.5..1.5) => 0..!1.5
number::mod(-2, 0.5..2.5) => 0..!2.5
number::mod(-2, 0.5!..2.5) => 0..!2.5
number::mod(-2, 0.5..!2.5) => 0..!2.5
number::mod(-2, -2.56..3.35) => -2..!3.35
number::mod(-2, 0.5..0.75) => 0..!0.75
number::mod(-2, 1..2) => 0..!2
number::mod(-2, 0..inf) => 0..inf
number::mod(-2, 0!..inf) => 0..inf
number::mod(-2, 0..!inf) => 0..!inf
number::mod(-2, 0!..!inf) => 0..!inf
number::mod(-2, 1..inf) => 0..inf
number::mod(-2, 1!..inf) => 0..inf
number::mod(-2, 1..!inf) => 0..!inf
number::mod(-2, 2..inf) => 0..inf
number::mod(-2, 2!..inf) => 0!..inf
number::mod(-2, 2.5..inf) => 0.5..inf
number::mod(-2, -inf..0) => -2..0
number::mod(-2, -inf..inf) => -2..inf
number::mod(-2, -inf!..inf) => -2!..inf
number::mod(-2, -inf..!inf) => -2..!inf
number::mod(-2, -inf!..!inf) => -2!..!inf
number::mod(-2, int(0..1)) => 0
number::mod(-2, int(0..2)) => 0
number::mod(-2, int(1..2)) => 0
number::mod(-2, int(5..20)) => int(3..18)
number::mod(-2, int(-20..-5)) => -2
number::mod(-2, int(-10..10)) => -2 | int(0..8)
number::mod(-2, int(0..inf)) => int(0..inf)
number::mod(-2, int(1..inf)) => int(0..inf)
number::mod(-2, int(-inf..0)) => int(-2..0)
number::mod(-2, int(-inf..1)) => int(-2..0)
number::mod(-2, int(-inf..inf)) => int(-2..inf)
number::mod(-2, nonInt(0..1)) => 0..!1
number::mod(-2, nonInt(0..2)) => 0..!2
number::mod(-2, nonInt(-1..2)) => -1!..!2
number::mod(-2, nonInt(0..inf)) => 0..!inf
number::mod(-2, nonInt(-1..inf)) => -1!..!inf
number::mod(-2, nonInt(-inf..0)) => -2!..0
number::mod(-2, nonInt(-inf..1)) => -inf!..!1
number::mod(-2, nonInt(-inf..inf)) => -inf!..!inf
number::mod(-2, 1 | int(3..4)) => int(0..2)
number::mod(-1, number) => -1..inf | nan
number::mod(-1, -3.14) => -1
number::mod(-1, -2) => -1
number::mod(-1, -1) => 0
number::mod(-1, -0.5) => 0
number::mod(-1, 0) => never
number::mod(-1, 0.5) => 0
number::mod(-1, 1) => 0
number::mod(-1, 2) => 1
number::mod(-1, 2.78) => 1.78
number::mod(-1, 3) => 2
number::mod(-1, 3.14) => 2.14
number::mod(-1, 10) => 9
number::mod(-1, 100) => 99
number::mod(-1, -inf) => -1
number::mod(-1, inf) => inf
number::mod(-1, nan) => nan
number::mod(-1, 0..1) => 0..!1
number::mod(-1, 0!..1) => 0..!1
number::mod(-1, 0..!1) => 0..!1
number::mod(-1, 0..2) => 0..!2
number::mod(-1, 0!..!2) => 0..!2
number::mod(-1, 0.5..1.5) => 0..!1.5
number::mod(-1, 0.5..2.5) => 0..!2.5
number::mod(-1, 0.5!..2.5) => 0..!2.5
number::mod(-1, 0.5..!2.5) => 0..!2.5
number::mod(-1, -2.56..3.35) => -1..!3.35
number::mod(-1, 0.5..0.75) => 0..0.5
number::mod(-1, 1..2) => 0..1
number::mod(-1, 0..inf) => 0..inf
number::mod(-1, 0!..inf) => 0..inf
number::mod(-1, 0..!inf) => 0..!inf
number::mod(-1, 0!..!inf) => 0..!inf
number::mod(-1, 1..inf) => 0..inf
number::mod(-1, 1!..inf) => 0!..inf
number::mod(-1, 1..!inf) => 0..!inf
number::mod(-1, 2..inf) => 1..inf
number::mod(-1, 2!..inf) => 1!..inf
number::mod(-1, 2.5..inf) => 1.5..inf
number::mod(-1, -inf..0) => -1..0
number::mod(-1, -inf..inf) => -1..inf
number::mod(-1, -inf!..inf) => -1!..inf
number::mod(-1, -inf..!inf) => -1..!inf
number::mod(-1, -inf!..!inf) => -1!..!inf
number::mod(-1, int(0..1)) => 0
number::mod(-1, int(0..2)) => int(0..1)
number::mod(-1, int(1..2)) => int(0..1)
number::mod(-1, int(5..20)) => int(4..19)
number::mod(-1, int(-20..-5)) => -1
number::mod(-1, int(-10..10)) => int(-1..9)
number::mod(-1, int(0..inf)) => int(0..inf)
number::mod(-1, int(1..inf)) => int(0..inf)
number::mod(-1, int(-inf..0)) => int(-1..0)
number::mod(-1, int(-inf..1)) => int(-1..0)
number::mod(-1, int(-inf..inf)) => int(-1..inf)
number::mod(-1, nonInt(0..1)) => 0..!1
number::mod(-1, nonInt(0..2)) => 0..!2
number::mod(-1, nonInt(-1..2)) => -1!..!2
number::mod(-1, nonInt(0..inf)) => 0..!inf
number::mod(-1, nonInt(-1..inf)) => -1!..!inf
number::mod(-1, nonInt(-inf..0)) => -1!..0
number::mod(-1, nonInt(-inf..1)) => -inf!..!1
number::mod(-1, nonInt(-inf..inf)) => -inf!..!inf
number::mod(-1, 1 | int(3..4)) => 0 | int(2..3)
number::mod(-0.5, number) => -0.5..inf | nan
number::mod(-0.5, -3.14) => -0.5
number::mod(-0.5, -2) => -0.5
number::mod(-0.5, -1) => -0.5
number::mod(-0.5, -0.5) => 0
number::mod(-0.5, 0) => never
number::mod(-0.5, 0.5) => 0
number::mod(-0.5, 1) => 0.5
number::mod(-0.5, 2) => 1.5
number::mod(-0.5, 2.78) => 2.28
number::mod(-0.5, 3) => 2.5
number::mod(-0.5, 3.14) => 2.64
number::mod(-0.5, 10) => 9.5
number::mod(-0.5, 100) => 99.5
number::mod(-0.5, -inf) => -0.5
number::mod(-0.5, inf) => inf
number::mod(-0.5, nan) => nan
number::mod(-0.5, 0..1) => 0..!1
number::mod(-0.5, 0!..1) => 0..!1
number::mod(-0.5, 0..!1) => 0..!1
number::mod(-0.5, 0..2) => 0..!2
number::mod(-0.5, 0!..!2) => 0..!2
number::mod(-0.5, 0.5..1.5) => 0..1
number::mod(-0.5, 0.5..2.5) => 0..2
number::mod(-0.5, 0.5!..2.5) => 0!..2
number::mod(-0.5, 0.5..!2.5) => 0..!2
number::mod(-0.5, -2.56..3.35) => -0.5..!3.35
number::mod(-0.5, 0.5..0.75) => 0..0.25
number::mod(-0.5, 1..2) => 0.5..1.5
number::mod(-0.5, 0..inf) => 0..inf
number::mod(-0.5, 0!..inf) => 0..inf
number::mod(-0.5, 0..!inf) => 0..!inf
number::mod(-0.5, 0!..!inf) => 0..!inf
number::mod(-0.5, 1..inf) => 0.5..inf
number::mod(-0.5, 1!..inf) => 0.5!..inf
number::mod(-0.5, 1..!inf) => 0.5..!inf
number::mod(-0.5, 2..inf) => 1.5..inf
number::mod(-0.5, 2!..inf) => 1.5!..inf
number::mod(-0.5, 2.5..inf) => 2..inf
number::mod(-0.5, -inf..0) => -0.5..0
number::mod(-0.5, -inf..inf) => -0.5..inf
number::mod(-0.5, -inf!..inf) => -0.5!..inf
number::mod(-0.5, -inf..!inf) => -0.5..!inf
number::mod(-0.5, -inf!..!inf) => -0.5!..!inf
number::mod(-0.5, int(0..1)) => 0.5
number::mod(-0.5, int(0..2)) => 0.5 | 1.5
number::mod(-0.5, int(1..2)) => 0.5 | 1.5
number::mod(-0.5, int(5..20)) => 4.5..19.5
number::mod(-0.5, int(-20..-5)) => -0.5
number::mod(-0.5, int(-10..10)) => -0.5 | 0.5 | 1.5 | 2.5 | 3.5 | 4.5 | 5.5 | 6.5 | 7.5 | 8.5 | 9.5
number::mod(-0.5, int(0..inf)) => 0.5..!inf
number::mod(-0.5, int(1..inf)) => 0.5..!inf
number::mod(-0.5, int(-inf..0)) => -0.5
number::mod(-0.5, int(-inf..1)) => -0.5 | 0.5
number::mod(-0.5, int(-inf..inf)) => -0.5 | 0.5..!inf
number::mod(-0.5, nonInt(0..1)) => 0..!1
number::mod(-0.5, nonInt(0..2)) => 0..!2
number::mod(-0.5, nonInt(-1..2)) => -1!..!2
number::mod(-0.5, nonInt(0..inf)) => 0..!inf
number::mod(-0.5, nonInt(-1..inf)) => -1!..!inf
number::mod(-0.5, nonInt(-inf..0)) => -0.5!..0
number::mod(-0.5, nonInt(-inf..1)) => -inf!..!1
number::mod(-0.5, nonInt(-inf..inf)) => -inf!..!inf
number::mod(-0.5, 1 | int(3..4)) => 0.5 | 2.5 | 3.5
number::mod(0, number) => 0 | nan
number::mod(0, -3.14) => 0
number::mod(0, -2) => 0
number::mod(0, -1) => 0
number::mod(0, -0.5) => 0
number::mod(0, 0) => never
number::mod(0, 0.5) => 0
number::mod(0, 1) => 0
number::mod(0, 2) => 0
number::mod(0, 2.78) => 0
number::mod(0, 3) => 0
number::mod(0, 3.14) => 0
number::mod(0, 10) => 0
number::mod(0, 100) => 0
number::mod(0, -inf) => 0
number::mod(0, inf) => 0
number::mod(0, nan) => nan
number::mod(0, 0..1) => 0
number::mod(0, 0!..1) => 0
number::mod(0, 0..!1) => 0
number::mod(0, 0..2) => 0
number::mod(0, 0!..!2) => 0
number::mod(0, 0.5..1.5) => 0
number::mod(0, 0.5..2.5) => 0
number::mod(0, 0.5!..2.5) => 0
number::mod(0, 0.5..!2.5) => 0
number::mod(0, -2.56..3.35) => 0
number::mod(0, 0.5..0.75) => 0
number::mod(0, 1..2) => 0
number::mod(0, 0..inf) => 0
number::mod(0, 0!..inf) => 0
number::mod(0, 0..!inf) => 0
number::mod(0, 0!..!inf) => 0
number::mod(0, 1..inf) => 0
number::mod(0, 1!..inf) => 0
number::mod(0, 1..!inf) => 0
number::mod(0, 2..inf) => 0
number::mod(0, 2!..inf) => 0
number::mod(0, 2.5..inf) => 0
number::mod(0, -inf..0) => 0
number::mod(0, -inf..inf) => 0
number::mod(0, -inf!..inf) => 0
number::mod(0, -inf..!inf) => 0
number::mod(0, -inf!..!inf) => 0
number::mod(0, int(0..1)) => 0
number::mod(0, int(0..2)) => 0
number::mod(0, int(1..2)) => 0
number::mod(0, int(5..20)) => 0
number::mod(0, int(-20..-5)) => 0
number::mod(0, int(-10..10)) => 0
number::mod(0, int(0..inf)) => 0
number::mod(0, int(1..inf)) => 0
number::mod(0, int(-inf..0)) => 0
number::mod(0, int(-inf..1)) => 0
number::mod(0, int(-inf..inf)) => 0
number::mod(0, nonInt(0..1)) => 0
number::mod(0, nonInt(0..2)) => 0
number::mod(0, nonInt(-1..2)) => 0
number::mod(0, nonInt(0..inf)) => 0
number::mod(0, nonInt(-1..inf)) => 0
number::mod(0, nonInt(-inf..0)) => 0
number::mod(0, nonInt(-inf..1)) => 0
number::mod(0, nonInt(-inf..inf)) => 0
number::mod(0, 1 | int(3..4)) => 0
number::mod(0.5, number) => -inf..0.5 | nan
number::mod(0.5, -3.14) => -2.64
number::mod(0.5, -2) => -1.5
number::mod(0.5, -1) => -0.5
number::mod(0.5, -0.5) => 0
number::mod(0.5, 0) => never
number::mod(0.5, 0.5) => 0
number::mod(0.5, 1) => 0.5
number::mod(0.5, 2) => 0.5
number::mod(0.5, 2.78) => 0.5
number::mod(0.5, 3) => 0.5
number::mod(0.5, 3.14) => 0.5
number::mod(0.5, 10) => 0.5
number::mod(0.5, 100) => 0.5
number::mod(0.5, -inf) => -inf
number::mod(0.5, inf) => 0.5
number::mod(0.5, nan) => nan
number::mod(0.5, 0..1) => 0..0.5
number::mod(0.5, 0!..1) => 0..0.5
number::mod(0.5, 0..!1) => 0..!0.5
number::mod(0.5, 0..2) => 0..0.5
number::mod(0.5, 0!..!2) => 0..!0.5
number::mod(0.5, 0.5..1.5) => 0..0.5
number::mod(0.5, 0.5..2.5) => 0..0.5
number::mod(0.5, 0.5!..2.5) => 0.5
number::mod(0.5, 0.5..!2.5) => 0..0.5
number::mod(0.5, -2.56..3.35) => -2.56!..0.5
number::mod(0.5, 0.5..0.75) => 0..0.5
number::mod(0.5, 1..2) => 0.5
number::mod(0.5, 0..inf) => 0..0.5
number::mod(0.5, 0!..inf) => 0..0.5
number::mod(0.5, 0..!inf) => 0..!0.5
number::mod(0.5, 0!..!inf) => 0..!0.5
number::mod(0.5, 1..inf) => 0.5
number::mod(0.5, 1!..inf) => 0.5
number::mod(0.5, 1..!inf) => 0.5
number::mod(0.5, 2..inf) => 0.5
number::mod(0.5, 2!..inf) => 0.5
number::mod(0.5, 2.5..inf) => 0.5
number::mod(0.5, -inf..0) => -inf..0
number::mod(0.5, -inf..inf) => -inf..0.5
number::mod(0.5, -inf!..inf) => -inf!..0.5
number::mod(0.5, -inf..!inf) => -inf..!0.5
number::mod(0.5, -inf!..!inf) => -inf!..!0.5
number::mod(0.5, int(0..1)) => 0.5
number::mod(0.5, int(0..2)) => 0.5
number::mod(0.5, int(1..2)) => 0.5
number::mod(0.5, int(5..20)) => 0.5
number::mod(0.5, int(-20..-5)) => -19.5..-4.5
number::mod(0.5, int(-10..10)) => -9.5 | -8.5 | -7.5 | -6.5 | -5.5 | -4.5 | -3.5 | -2.5 | -1.5 | -0.5 | 0.5
number::mod(0.5, int(0..inf)) => 0.5
number::mod(0.5, int(1..inf)) => 0.5
number::mod(0.5, int(-inf..0)) => -inf!..-0.5
number::mod(0.5, int(-inf..1)) => -inf!..-0.5 | 0.5
number::mod(0.5, int(-inf..inf)) => -inf!..-0.5 | 0.5
number::mod(0.5, nonInt(0..1)) => 0..!0.5
number::mod(0.5, nonInt(0..2)) => 0..!0.5
number::mod(0.5, nonInt(-1..2)) => -1!..!2
number::mod(0.5, nonInt(0..inf)) => 0..!0.5
number::mod(0.5, nonInt(-1..inf)) => -1!..!inf
number::mod(0.5, nonInt(-inf..0)) => -inf!..0
number::mod(0.5, nonInt(-inf..1)) => -inf!..!1
number::mod(0.5, nonInt(-inf..inf)) => -inf!..!inf
number::mod(0.5, 1 | int(3..4)) => 0.5
number::mod(1, number) => -inf..1 | nan
number::mod(1, -3.14) => -2.14
number::mod(1, -2) => -1
number::mod(1, -1) => 0
number::mod(1, -0.5) => 0
number::mod(1, 0) => never
number::mod(1, 0.5) => 0
number::mod(1, 1) => 0
number::mod(1, 2) => 1
number::mod(1, 2.78) => 1
number::mod(1, 3) => 1
number::mod(1, 3.14) => 1
number::mod(1, 10) => 1
number::mod(1, 100) => 1
number::mod(1, -inf) => -inf
number::mod(1, inf) => 1
number::mod(1, nan) => nan
number::mod(1, 0..1) => 0..!1
number::mod(1, 0!..1) => 0..!1
number::mod(1, 0..!1) => 0..!1
number::mod(1, 0..2) => 0..1
number::mod(1, 0!..!2) => 0..!1
number::mod(1, 0.5..1.5) => 0..1
number::mod(1, 0.5..2.5) => 0..1
number::mod(1, 0.5!..2.5) => 0..1
number::mod(1, 0.5..!2.5) => 0..1
number::mod(1, -2.56..3.35) => -2.56!..1
number::mod(1, 0.5..0.75) => 0..0.5
number::mod(1, 1..2) => 0..1
number::mod(1, 0..inf) => 0..1
number::mod(1, 0!..inf) => 0..1
number::mod(1, 0..!inf) => 0..!1
number::mod(1, 0!..!inf) => 0..!1
number::mod(1, 1..inf) => 0..1
number::mod(1, 1!..inf) => 1
number::mod(1, 1..!inf) => 0..1
number::mod(1, 2..inf) => 1
number::mod(1, 2!..inf) => 1
number::mod(1, 2.5..inf) => 1
number::mod(1, -inf..0) => -inf..0
number::mod(1, -inf..inf) => -inf..1
number::mod(1, -inf!..inf) => -inf!..1
number::mod(1, -inf..!inf) => -inf..!1
number::mod(1, -inf!..!inf) => -inf!..!1
number::mod(1, int(0..1)) => 0
number::mod(1, int(0..2)) => int(0..1)
number::mod(1, int(1..2)) => int(0..1)
number::mod(1, int(5..20)) => 1
number::mod(1, int(-20..-5)) => int(-19..-4)
number::mod(1, int(-10..10)) => int(-9..1)
number::mod(1, int(0..inf)) => int(0..1)
number::mod(1, int(1..inf)) => int(0..1)
number::mod(1, int(-inf..0)) => int(-inf..0)
number::mod(1, int(-inf..1)) => int(-inf..0)
number::mod(1, int(-inf..inf)) => int(-inf..1)
number::mod(1, nonInt(0..1)) => 0..!1
number::mod(1, nonInt(0..2)) => 0..!1
number::mod(1, nonInt(-1..2)) => -1!..!2
number::mod(1, nonInt(0..inf)) => 0..!1
number::mod(1, nonInt(-1..inf)) => -1!..!inf
number::mod(1, nonInt(-inf..0)) => -inf!..0
number::mod(1, nonInt(-inf..1)) => -inf!..!1
number::mod(1, nonInt(-inf..inf)) => -inf!..!inf
number::mod(1, 1 | int(3..4)) => int(0..1)
number::mod(2, number) => -inf..2 | nan
number::mod(2, -3.14) => -1.14
number::mod(2, -2) => 0
number::mod(2, -1) => 0
number::mod(2, -0.5) => 0
number::mod(2, 0) => never
number::mod(2, 0.5) => 0
number::mod(2, 1) => 0
number::mod(2, 2) => 0
number::mod(2, 2.78) => 2
number::mod(2, 3) => 2
number::mod(2, 3.14) => 2
number::mod(2, 10) => 2
number::mod(2, 100) => 2
number::mod(2, -inf) => -inf
number::mod(2, inf) => 2
number::mod(2, nan) => nan
number::mod(2, 0..1) => 0..!1
number::mod(2, 0!..1) => 0..!1
number::mod(2, 0..!1) => 0..!1
number::mod(2, 0..2) => 0..!2
number::mod(2, 0!..!2) => 0..!2
number::mod(2, 0.5..1.5) => 0..!1.5
number::mod(2, 0.5..2.5) => 0..2
number::mod(2, 0.5!..2.5) => 0..2
number::mod(2, 0.5..!2.5) => 0..2
number::mod(2, -2.56..3.35) => -2.56!..2
number::mod(2, 0.5..0.75) => 0..!0.75
number::mod(2, 1..2) => 0..1
number::mod(2, 0..inf) => 0..2
number::mod(2, 0!..inf) => 0..2
number::mod(2, 0..!inf) => 0..!2
number::mod(2, 0!..!inf) => 0..!2
number::mod(2, 1..inf) => 0..2
number::mod(2, 1!..inf) => 0..2
number::mod(2, 1..!inf) => 0..2
number::mod(2, 2..inf) => 0..2
number::mod(2, 2!..inf) => 2
number::mod(2, 2.5..inf) => 2
number::mod(2, -inf..0) => -inf..0
number::mod(2, -inf..inf) => -inf..2
number::mod(2, -inf!..inf) => -inf!..2
number::mod(2, -inf..!inf) => -inf..!2
number::mod(2, -inf!..!inf) => -inf!..!2
number::mod(2, int(0..1)) => 0
number::mod(2, int(0..2)) => 0
number::mod(2, int(1..2)) => 0
number::mod(2, int(5..20)) => 2
number::mod(2, int(-20..-5)) => int(-18..-3)
number::mod(2, int(-10..10)) => int(-8..0) | 2
number::mod(2, int(0..inf)) => int(0..2)
number::mod(2, int(1..inf)) => int(0..2)
number::mod(2, int(-inf..0)) => int(-inf..0)
number::mod(2, int(-inf..1)) => int(-inf..0)
number::mod(2, int(-inf..inf)) => int(-inf..2)
number::mod(2, nonInt(0..1)) => 0..!1
number::mod(2, nonInt(0..2)) => 0..!2
number::mod(2, nonInt(-1..2)) => -1!..!2
number::mod(2, nonInt(0..inf)) => 0..!2
number::mod(2, nonInt(-1..inf)) => -1!..!inf
number::mod(2, nonInt(-inf..0)) => -inf!..0
number::mod(2, nonInt(-inf..1)) => -inf!..!1
number::mod(2, nonInt(-inf..inf)) => -inf!..!inf
number::mod(2, 1 | int(3..4)) => 0 | 2
number::mod(2.78, number) => -inf..2.78 | nan
number::mod(2.78, -3.14) => -0.36
number::mod(2.78, -2) => -1.22
number::mod(2.78, -1) => -0.22
number::mod(2.78, -0.5) => -0.22
number::mod(2.78, 0) => never
number::mod(2.78, 0.5) => 0.28
number::mod(2.78, 1) => 0.78
number::mod(2.78, 2) => 0.78
number::mod(2.78, 2.78) => 0
number::mod(2.78, 3) => 2.78
number::mod(2.78, 3.14) => 2.78
number::mod(2.78, 10) => 2.78
number::mod(2.78, 100) => 2.78
number::mod(2.78, -inf) => -inf
number::mod(2.78, inf) => 2.78
number::mod(2.78, nan) => nan
number::mod(2.78, 0..1) => 0..!1
number::mod(2.78, 0!..1) => 0..!1
number::mod(2.78, 0..!1) => 0..!1
number::mod(2.78, 0..2) => 0..!2
number::mod(2.78, 0!..!2) => 0..!2
number::mod(2.78, 0.5..1.5) => 0..!1.5
number::mod(2.78, 0.5..2.5) => 0..2.28
number::mod(2.78, 0.5!..2.5) => 0..!2.28
number::mod(2.78, 0.5..!2.5) => 0..2.28
number::mod(2.78, -2.56..3.35) => -2.56!..2.78
number::mod(2.78, 0.5..0.75) => 0..!0.75
number::mod(2.78, 1..2) => 0..1.78
number::mod(2.78, 0..inf) => 0..2.78
number::mod(2.78, 0!..inf) => 0..2.78
number::mod(2.78, 0..!inf) => 0..!2.78
number::mod(2.78, 0!..!inf) => 0..!2.78
number::mod(2.78, 1..inf) => 0..2.78
number::mod(2.78, 1!..inf) => 0..2.78
number::mod(2.78, 1..!inf) => 0..2.78
number::mod(2.78, 2..inf) => 0..2.78
number::mod(2.78, 2!..inf) => 0..2.78
number::mod(2.78, 2.5..inf) => 0..2.78
number::mod(2.78, -inf..0) => -inf..0
number::mod(2.78, -inf..inf) => -inf..2.78
number::mod(2.78, -inf!..inf) => -inf!..2.78
number::mod(2.78, -inf..!inf) => -inf..!2.78
number::mod(2.78, -inf!..!inf) => -inf!..!2.78
number::mod(2.78, int(0..1)) => 0.78
number::mod(2.78, int(0..2)) => 0.78
number::mod(2.78, int(1..2)) => 0.78
number::mod(2.78, int(5..20)) => 2.78
number::mod(2.78, int(-20..-5)) => -17.22..-2.22
number::mod(2.78, int(-10..10)) => -7.22 | -6.22 | -5.22 | -4.22 | -3.22 | -2.22 | -1.22 | -0.22 | 0.78 | 2.78
number::mod(2.78, int(0..inf)) => 0..2.78
number::mod(2.78, int(1..inf)) => 0..2.78
number::mod(2.78, int(-inf..0)) => -inf!..0
number::mod(2.78, int(-inf..1)) => -inf!..0 | 0.78
number::mod(2.78, int(-inf..inf)) => -inf!..2.78
number::mod(2.78, nonInt(0..1)) => 0..!1
number::mod(2.78, nonInt(0..2)) => 0..!2
number::mod(2.78, nonInt(-1..2)) => -1!..!2
number::mod(2.78, nonInt(0..inf)) => 0..!2.78
number::mod(2.78, nonInt(-1..inf)) => -1!..!inf
number::mod(2.78, nonInt(-inf..0)) => -inf!..0
number::mod(2.78, nonInt(-inf..1)) => -inf!..!1
number::mod(2.78, nonInt(-inf..inf)) => -inf!..!inf
number::mod(2.78, 1 | int(3..4)) => 0.78 | 2.78
number::mod(3, number) => -inf..3 | nan
number::mod(3, -3.14) => -0.14
number::mod(3, -2) => -1
number::mod(3, -1) => 0
number::mod(3, -0.5) => 0
number::mod(3, 0) => never
number::mod(3, 0.5) => 0
number::mod(3, 1) => 0
number::mod(3, 2) => 1
number::mod(3, 2.78) => 0.22
number::mod(3, 3) => 0
number::mod(3, 3.14) => 3
number::mod(3, 10) => 3
number::mod(3, 100) => 3
number::mod(3, -inf) => -inf
number::mod(3, inf) => 3
number::mod(3, nan) => nan
number::mod(3, 0..1) => 0..!1
number::mod(3, 0!..1) => 0..!1
number::mod(3, 0..!1) => 0..!1
number::mod(3, 0..2) => 0..!2
number::mod(3, 0!..!2) => 0..!2
number::mod(3, 0.5..1.5) => 0..!1.5
number::mod(3, 0.5..2.5) => 0..!2.5
number::mod(3, 0.5!..2.5) => 0..!2.5
number::mod(3, 0.5..!2.5) => 0..!2.5
number::mod(3, -2.56..3.35) => -2.56!..3
number::mod(3, 0.5..0.75) => 0..!0.75
number::mod(3, 1..2) => 0..!2
number::mod(3, 0..inf) => 0..3
number::mod(3, 0!..inf) => 0..3
number::mod(3, 0..!inf) => 0..!3
number::mod(3, 0!..!inf) => 0..!3
number::mod(3, 1..inf) => 0..3
number::mod(3, 1!..inf) => 0..3
number::mod(3, 1..!inf) => 0..3
number::mod(3, 2..inf) => 0..3
number::mod(3, 2!..inf) => 0..3
number::mod(3, 2.5..inf) => 0..3
number::mod(3, -inf..0) => -inf..0
number::mod(3, -inf..inf) => -inf..3
number::mod(3, -inf!..inf) => -inf!..3
number::mod(3, -inf..!inf) => -inf..!3
number::mod(3, -inf!..!inf) => -inf!..!3
number::mod(3, int(0..1)) => 0
number::mod(3, int(0..2)) => int(0..1)
number::mod(3, int(1..2)) => int(0..1)
number::mod(3, int(5..20)) => 3
number::mod(3, int(-20..-5)) => int(-17..-2)
number::mod(3, int(-10..10)) => int(-7..1) | 3
number::mod(3, int(0..inf)) => int(0..3)
number::mod(3, int(1..inf)) => int(0..3)
number::mod(3, int(-inf..0)) => int(-inf..0)
number::mod(3, int(-inf..1)) => int(-inf..0)
number::mod(3, int(-inf..inf)) => int(-inf..3)
number::mod(3, nonInt(0..1)) => 0..!1
number::mod(3, nonInt(0..2)) => 0..!2
number::mod(3, nonInt(-1..2)) => -1!..!2
number::mod(3, nonInt(0..inf)) => 0..!3
number::mod(3, nonInt(-1..inf)) => -1!..!inf
number::mod(3, nonInt(-inf..0)) => -inf!..0
number::mod(3, nonInt(-inf..1)) => -inf!..!1
number::mod(3, nonInt(-inf..inf)) => -inf!..!inf
number::mod(3, 1 | int(3..4)) => 0 | 3
number::mod(3.14, number) => -inf..3.14 | nan
number::mod(3.14, -3.14) => 0
number::mod(3.14, -2) => -0.86
number::mod(3.14, -1) => -0.86
number::mod(3.14, -0.5) => -0.36
number::mod(3.14, 0) => never
number::mod(3.14, 0.5) => 0.14
number::mod(3.14, 1) => 0.14
number::mod(3.14, 2) => 1.14
number::mod(3.14, 2.78) => 0.36
number::mod(3.14, 3) => 0.14
number::mod(3.14, 3.14) => 0
number::mod(3.14, 10) => 3.14
number::mod(3.14, 100) => 3.14
number::mod(3.14, -inf) => -inf
number::mod(3.14, inf) => 3.14
number::mod(3.14, nan) => nan
number::mod(3.14, 0..1) => 0..!1
number::mod(3.14, 0!..1) => 0..!1
number::mod(3.14, 0..!1) => 0..!1
number::mod(3.14, 0..2) => 0..!2
number::mod(3.14, 0!..!2) => 0..!2
number::mod(3.14, 0.5..1.5) => 0..!1.5
number::mod(3.14, 0.5..2.5) => 0..!2.5
number::mod(3.14, 0.5!..2.5) => 0..!2.5
number::mod(3.14, 0.5..!2.5) => 0..!2.5
number::mod(3.14, -2.56..3.35) => -2.56!..3.14
number::mod(3.14, 0.5..0.75) => 0..!0.75
number::mod(3.14, 1..2) => 0..!2
number::mod(3.14, 0..inf) => 0..3.14
number::mod(3.14, 0!..inf) => 0..3.14
number::mod(3.14, 0..!inf) => 0..!3.14
number::mod(3.14, 0!..!inf) => 0..!3.14
number::mod(3.14, 1..inf) => 0..3.14
number::mod(3.14, 1!..inf) => 0..3.14
number::mod(3.14, 1..!inf) => 0..3.14
number::mod(3.14, 2..inf) => 0..3.14
number::mod(3.14, 2!..inf) => 0..3.14
number::mod(3.14, 2.5..inf) => 0..3.14
number::mod(3.14, -inf..0) => -inf..0
number::mod(3.14, -inf..inf) => -inf..3.14
number::mod(3.14, -inf!..inf) => -inf!..3.14
number::mod(3.14, -inf..!inf) => -inf..!3.14
number::mod(3.14, -inf!..!inf) => -inf!..!3.14
number::mod(3.14, int(0..1)) => 0.14
number::mod(3.14, int(0..2)) => 0.14 | 1.14
number::mod(3.14, int(1..2)) => 0.14 | 1.14
number::mod(3.14, int(5..20)) => 3.14
number::mod(3.14, int(-20..-5)) => -16.86..-1.86
number::mod(3.14, int(-10..10)) => -6.86 | -5.86 | -4.86 | -3.86 | -2.86 | -1.86 | -0.86 | 0.14 | 1.14 | 3.14
number::mod(3.14, int(0..inf)) => 0..3.14
number::mod(3.14, int(1..inf)) => 0..3.14
number::mod(3.14, int(-inf..0)) => -inf!..0
number::mod(3.14, int(-inf..1)) => -inf!..0 | 0.14
number::mod(3.14, int(-inf..inf)) => -inf!..3.14
number::mod(3.14, nonInt(0..1)) => 0..!1
number::mod(3.14, nonInt(0..2)) => 0..!2
number::mod(3.14, nonInt(-1..2)) => -1!..!2
number::mod(3.14, nonInt(0..inf)) => 0..!3.14
number::mod(3.14, nonInt(-1..inf)) => -1!..!inf
number::mod(3.14, nonInt(-inf..0)) => -inf!..0
number::mod(3.14, nonInt(-inf..1)) => -inf!..!1
number::mod(3.14, nonInt(-inf..inf)) => -inf!..!inf
number::mod(3.14, 1 | int(3..4)) => 0.14 | 3.14
number::mod(10, number) => -inf..10 | nan
number::mod(10, -3.14) => -2.56
number::mod(10, -2) => 0
number::mod(10, -1) => 0
number::mod(10, -0.5) => 0
number::mod(10, 0) => never
number::mod(10, 0.5) => 0
number::mod(10, 1) => 0
number::mod(10, 2) => 0
number::mod(10, 2.78) => 1.66
number::mod(10, 3) => 1
number::mod(10, 3.14) => 0.58
number::mod(10, 10) => 0
number::mod(10, 100) => 10
number::mod(10, -inf) => -inf
number::mod(10, inf) => 10
number::mod(10, nan) => nan
number::mod(10, 0..1) => 0..!1
number::mod(10, 0!..1) => 0..!1
number::mod(10, 0..!1) => 0..!1
number::mod(10, 0..2) => 0..!2
number::mod(10, 0!..!2) => 0..!2
number::mod(10, 0.5..1.5) => 0..!1.5
number::mod(10, 0.5..2.5) => 0..!2.5
number::mod(10, 0.5!..2.5) => 0..!2.5
number::mod(10, 0.5..!2.5) => 0..!2.5
number::mod(10, -2.56..3.35) => -2.56!..!3.35
number::mod(10, 0.5..0.75) => 0..!0.75
number::mod(10, 1..2) => 0..!2
number::mod(10, 0..inf) => 0..10
number::mod(10, 0!..inf) => 0..10
number::mod(10, 0..!inf) => 0..!10
number::mod(10, 0!..!inf) => 0..!10
number::mod(10, 1..inf) => 0..10
number::mod(10, 1!..inf) => 0..10
number::mod(10, 1..!inf) => 0..10
number::mod(10, 2..inf) => 0..10
number::mod(10, 2!..inf) => 0..10
number::mod(10, 2.5..inf) => 0..10
number::mod(10, -inf..0) => -inf..0
number::mod(10, -inf..inf) => -inf..10
number::mod(10, -inf!..inf) => -inf!..10
number::mod(10, -inf..!inf) => -inf..!10
number::mod(10, -inf!..!inf) => -inf!..!10
number::mod(10, int(0..1)) => 0
number::mod(10, int(0..2)) => 0
number::mod(10, int(1..2)) => 0
number::mod(10, int(5..20)) => int(0..10)
number::mod(10, int(-20..-5)) => int(-19..0)
number::mod(10, int(-10..10)) => -8 | -6 | -4 | -2 | int(0..4)
number::mod(10, int(0..inf)) => int(0..10)
number::mod(10, int(1..inf)) => int(0..10)
number::mod(10, int(-inf..0)) => int(-inf..0)
number::mod(10, int(-inf..1)) => int(-inf..0)
number::mod(10, int(-inf..inf)) => int(-inf..10)
number::mod(10, nonInt(0..1)) => 0..!1
number::mod(10, nonInt(0..2)) => 0..!2
number::mod(10, nonInt(-1..2)) => -1!..!2
number::mod(10, nonInt(0..inf)) => 0..!10
number::mod(10, nonInt(-1..inf)) => -1!..!inf
number::mod(10, nonInt(-inf..0)) => -inf!..0
number::mod(10, nonInt(-inf..1)) => -inf!..!1
number::mod(10, nonInt(-inf..inf)) => -inf!..!inf
number::mod(10, 1 | int(3..4)) => int(0..2)
number::mod(100, number) => -inf..100 | nan
number::mod(100, -3.14) => -0.48
number::mod(100, -2) => 0
number::mod(100, -1) => 0
number::mod(100, -0.5) => 0
number::mod(100, 0) => never
number::mod(100, 0.5) => 0
number::mod(100, 1) => 0
number::mod(100, 2) => 0
number::mod(100, 2.78) => 2.7
number::mod(100, 3) => 1
number::mod(100, 3.14) => 2.66
number::mod(100, 10) => 0
number::mod(100, 100) => 0
number::mod(100, -inf) => -inf
number::mod(100, inf) => 100
number::mod(100, nan) => nan
number::mod(100, 0..1) => 0..!1
number::mod(100, 0!..1) => 0..!1
number::mod(100, 0..!1) => 0..!1
number::mod(100, 0..2) => 0..!2
number::mod(100, 0!..!2) => 0..!2
number::mod(100, 0.5..1.5) => 0..!1.5
number::mod(100, 0.5..2.5) => 0..!2.5
number::mod(100, 0.5!..2.5) => 0..!2.5
number::mod(100, 0.5..!2.5) => 0..!2.5
number::mod(100, -2.56..3.35) => -2.56!..!3.35
number::mod(100, 0.5..0.75) => 0..!0.75
number::mod(100, 1..2) => 0..!2
number::mod(100, 0..inf) => 0..100
number::mod(100, 0!..inf) => 0..100
number::mod(100, 0..!inf) => 0..!100
number::mod(100, 0!..!inf) => 0..!100
number::mod(100, 1..inf) => 0..100
number::mod(100, 1!..inf) => 0..100
number::mod(100, 1..!inf) => 0..100
number::mod(100, 2..inf) => 0..100
number::mod(100, 2!..inf) => 0..100
number::mod(100, 2.5..inf) => 0..100
number::mod(100, -inf..0) => -inf..0
number::mod(100, -inf..inf) => -inf..100
number::mod(100, -inf!..inf) => -inf!..100
number::mod(100, -inf..!inf) => -inf..!100
number::mod(100, -inf!..!inf) => -inf!..!100
number::mod(100, int(0..1)) => 0
number::mod(100, int(0..2)) => 0
number::mod(100, int(1..2)) => 0
number::mod(100, int(5..20)) => int(0..19)
number::mod(100, int(-20..-5)) => int(-19..0)
number::mod(100, int(-10..10)) => -8 | int(-5..-4) | -2 | int(0..2) | 4
number::mod(100, int(0..inf)) => int(0..100)
number::mod(100, int(1..inf)) => int(0..100)
number::mod(100, int(-inf..0)) => int(-inf..0)
number::mod(100, int(-inf..1)) => int(-inf..0)
number::mod(100, int(-inf..inf)) => int(-inf..100)
number::mod(100, nonInt(0..1)) => 0..!1
number::mod(100, nonInt(0..2)) => 0..!2
number::mod(100, nonInt(-1..2)) => -1!..!2
number::mod(100, nonInt(0..inf)) => 0..!100
number::mod(100, nonInt(-1..inf)) => -1!..!inf
number::mod(100, nonInt(-inf..0)) => -inf!..0
number::mod(100, nonInt(-inf..1)) => -inf!..!1
number::mod(100, nonInt(-inf..inf)) => -inf!..!inf
number::mod(100, 1 | int(3..4)) => int(0..1)
number::mod(-inf, number) => nan
number::mod(-inf, -3.14) => nan
number::mod(-inf, -2) => nan
number::mod(-inf, -1) => nan
number::mod(-inf, -0.5) => nan
number::mod(-inf, 0) => never
number::mod(-inf, 0.5) => nan
number::mod(-inf, 1) => nan
number::mod(-inf, 2) => nan
number::mod(-inf, 2.78) => nan
number::mod(-inf, 3) => nan
number::mod(-inf, 3.14) => nan
number::mod(-inf, 10) => nan
number::mod(-inf, 100) => nan
number::mod(-inf, -inf) => nan
number::mod(-inf, inf) => nan
number::mod(-inf, nan) => nan
number::mod(-inf, 0..1) => nan
number::mod(-inf, 0!..1) => nan
number::mod(-inf, 0..!1) => nan
number::mod(-inf, 0..2) => nan
number::mod(-inf, 0!..!2) => nan
number::mod(-inf, 0.5..1.5) => nan
number::mod(-inf, 0.5..2.5) => nan
number::mod(-inf, 0.5!..2.5) => nan
number::mod(-inf, 0.5..!2.5) => nan
number::mod(-inf, -2.56..3.35) => nan
number::mod(-inf, 0.5..0.75) => nan
number::mod(-inf, 1..2) => nan
number::mod(-inf, 0..inf) => nan
number::mod(-inf, 0!..inf) => nan
number::mod(-inf, 0..!inf) => nan
number::mod(-inf, 0!..!inf) => nan
number::mod(-inf, 1..inf) => nan
number::mod(-inf, 1!..inf) => nan
number::mod(-inf, 1..!inf) => nan
number::mod(-inf, 2..inf) => nan
number::mod(-inf, 2!..inf) => nan
number::mod(-inf, 2.5..inf) => nan
number::mod(-inf, -inf..0) => nan
number::mod(-inf, -inf..inf) => nan
number::mod(-inf, -inf!..inf) => nan
number::mod(-inf, -inf..!inf) => nan
number::mod(-inf, -inf!..!inf) => nan
number::mod(-inf, int(0..1)) => nan
number::mod(-inf, int(0..2)) => nan
number::mod(-inf, int(1..2)) => nan
number::mod(-inf, int(5..20)) => nan
number::mod(-inf, int(-20..-5)) => nan
number::mod(-inf, int(-10..10)) => nan
number::mod(-inf, int(0..inf)) => nan
number::mod(-inf, int(1..inf)) => nan
number::mod(-inf, int(-inf..0)) => nan
number::mod(-inf, int(-inf..1)) => nan
number::mod(-inf, int(-inf..inf)) => nan
number::mod(-inf, nonInt(0..1)) => nan
number::mod(-inf, nonInt(0..2)) => nan
number::mod(-inf, nonInt(-1..2)) => nan
number::mod(-inf, nonInt(0..inf)) => nan
number::mod(-inf, nonInt(-1..inf)) => nan
number::mod(-inf, nonInt(-inf..0)) => nan
number::mod(-inf, nonInt(-inf..1)) => nan
number::mod(-inf, nonInt(-inf..inf)) => nan
number::mod(-inf, 1 | int(3..4)) => nan
number::mod(inf, number) => nan
number::mod(inf, -3.14) => nan
number::mod(inf, -2) => nan
number::mod(inf, -1) => nan
number::mod(inf, -0.5) => nan
number::mod(inf, 0) => never
number::mod(inf, 0.5) => nan
number::mod(inf, 1) => nan
number::mod(inf, 2) => nan
number::mod(inf, 2.78) => nan
number::mod(inf, 3) => nan
number::mod(inf, 3.14) => nan
number::mod(inf, 10) => nan
number::mod(inf, 100) => nan
number::mod(inf, -inf) => nan
number::mod(inf, inf) => nan
number::mod(inf, nan) => nan
number::mod(inf, 0..1) => nan
number::mod(inf, 0!..1) => nan
number::mod(inf, 0..!1) => nan
number::mod(inf, 0..2) => nan
number::mod(inf, 0!..!2) => nan
number::mod(inf, 0.5..1.5) => nan
number::mod(inf, 0.5..2.5) => nan
number::mod(inf, 0.5!..2.5) => nan
number::mod(inf, 0.5..!2.5) => nan
number::mod(inf, -2.56..3.35) => nan
number::mod(inf, 0.5..0.75) => nan
number::mod(inf, 1..2) => nan
number::mod(inf, 0..inf) => nan
number::mod(inf, 0!..inf) => nan
number::mod(inf, 0..!inf) => nan
number::mod(inf, 0!..!inf) => nan
number::mod(inf, 1..inf) => nan
number::mod(inf, 1!..inf) => nan
number::mod(inf, 1..!inf) => nan
number::mod(inf, 2..inf) => nan
number::mod(inf, 2!..inf) => nan
number::mod(inf, 2.5..inf) => nan
number::mod(inf, -inf..0) => nan
number::mod(inf, -inf..inf) => nan
number::mod(inf, -inf!..inf) => nan
number::mod(inf, -inf..!inf) => nan
number::mod(inf, -inf!..!inf) => nan
number::mod(inf, int(0..1)) => nan
number::mod(inf, int(0..2)) => nan
number::mod(inf, int(1..2)) => nan
number::mod(inf, int(5..20)) => nan
number::mod(inf, int(-20..-5)) => nan
number::mod(inf, int(-10..10)) => nan
number::mod(inf, int(0..inf)) => nan
number::mod(inf, int(1..inf)) => nan
number::mod(inf, int(-inf..0)) => nan
number::mod(inf, int(-inf..1)) => nan
number::mod(inf, int(-inf..inf)) => nan
number::mod(inf, nonInt(0..1)) => nan
number::mod(inf, nonInt(0..2)) => nan
number::mod(inf, nonInt(-1..2)) => nan
number::mod(inf, nonInt(0..inf)) => nan
number::mod(inf, nonInt(-1..inf)) => nan
number::mod(inf, nonInt(-inf..0)) => nan
number::mod(inf, nonInt(-inf..1)) => nan
number::mod(inf, nonInt(-inf..inf)) => nan
number::mod(inf, 1 | int(3..4)) => nan
number::mod(nan, number) => nan
number::mod(nan, -3.14) => nan
number::mod(nan, -2) => nan
number::mod(nan, -1) => nan
number::mod(nan, -0.5) => nan
number::mod(nan, 0) => never
number::mod(nan, 0.5) => nan
number::mod(nan, 1) => nan
number::mod(nan, 2) => nan
number::mod(nan, 2.78) => nan
number::mod(nan, 3) => nan
number::mod(nan, 3.14) => nan
number::mod(nan, 10) => nan
number::mod(nan, 100) => nan
number::mod(nan, -inf) => nan
number::mod(nan, inf) => nan
number::mod(nan, nan) => nan
number::mod(nan, 0..1) => nan
number::mod(nan, 0!..1) => nan
number::mod(nan, 0..!1) => nan
number::mod(nan, 0..2) => nan
number::mod(nan, 0!..!2) => nan
number::mod(nan, 0.5..1.5) => nan
number::mod(nan, 0.5..2.5) => nan
number::mod(nan, 0.5!..2.5) => nan
number::mod(nan, 0.5..!2.5) => nan
number::mod(nan, -2.56..3.35) => nan
number::mod(nan, 0.5..0.75) => nan
number::mod(nan, 1..2) => nan
number::mod(nan, 0..inf) => nan
number::mod(nan, 0!..inf) => nan
number::mod(nan, 0..!inf) => nan
number::mod(nan, 0!..!inf) => nan
number::mod(nan, 1..inf) => nan
number::mod(nan, 1!..inf) => nan
number::mod(nan, 1..!inf) => nan
number::mod(nan, 2..inf) => nan
number::mod(nan, 2!..inf) => nan
number::mod(nan, 2.5..inf) => nan
number::mod(nan, -inf..0) => nan
number::mod(nan, -inf..inf) => nan
number::mod(nan, -inf!..inf) => nan
number::mod(nan, -inf..!inf) => nan
number::mod(nan, -inf!..!inf) => nan
number::mod(nan, int(0..1)) => nan
number::mod(nan, int(0..2)) => nan
number::mod(nan, int(1..2)) => nan
number::mod(nan, int(5..20)) => nan
number::mod(nan, int(-20..-5)) => nan
number::mod(nan, int(-10..10)) => nan
number::mod(nan, int(0..inf)) => nan
number::mod(nan, int(1..inf)) => nan
number::mod(nan, int(-inf..0)) => nan
number::mod(nan, int(-inf..1)) => nan
number::mod(nan, int(-inf..inf)) => nan
number::mod(nan, nonInt(0..1)) => nan
number::mod(nan, nonInt(0..2)) => nan
number::mod(nan, nonInt(-1..2)) => nan
number::mod(nan, nonInt(0..inf)) => nan
number::mod(nan, nonInt(-1..inf)) => nan
number::mod(nan, nonInt(-inf..0)) => nan
number::mod(nan, nonInt(-inf..1)) => nan
number::mod(nan, nonInt(-inf..inf)) => nan
number::mod(nan, 1 | int(3..4)) => nan
number::mod(0..1, number) => -inf..1 | nan
number::mod(0..1, -3.14) => -3.14!..-2.14 | 0
number::mod(0..1, -2) => -2!..-1 | 0
number::mod(0..1, -1) => -1!..0
number::mod(0..1, -0.5) => -0.5!..0
number::mod(0..1, 0) => never
number::mod(0..1, 0.5) => 0..!0.5
number::mod(0..1, 1) => 0..!1
number::mod(0..1, 2) => 0..1
number::mod(0..1, 2.78) => 0..1
number::mod(0..1, 3) => 0..1
number::mod(0..1, 3.14) => 0..1
number::mod(0..1, 10) => 0..1
number::mod(0..1, 100) => 0..1
number::mod(0..1, -inf) => -inf | 0
number::mod(0..1, inf) => 0..1
number::mod(0..1, nan) => nan
number::mod(0..1, 0..1) => 0..!1
number::mod(0..1, 0!..1) => 0..!1
number::mod(0..1, 0..!1) => 0..!1
number::mod(0..1, 0..2) => 0..1
number::mod(0..1, 0!..!2) => 0..!1
number::mod(0..1, 0.5..1.5) => 0..1
number::mod(0..1, 0.5..2.5) => 0..1
number::mod(0..1, 0.5!..2.5) => 0..1
number::mod(0..1, 0.5..!2.5) => 0..1
number::mod(0..1, -2.56..3.35) => -2.56!..1
number::mod(0..1, 0.5..0.75) => 0..!0.75
number::mod(0..1, 1..2) => 0..1
number::mod(0..1, 0..inf) => 0..1
number::mod(0..1, 0!..inf) => 0..1
number::mod(0..1, 0..!inf) => 0..!1
number::mod(0..1, 0!..!inf) => 0..!1
number::mod(0..1, 1..inf) => 0..1
number::mod(0..1, 1!..inf) => 0..1
number::mod(0..1, 1..!inf) => 0..1
number::mod(0..1, 2..inf) => 0..1
number::mod(0..1, 2!..inf) => 0..1
number::mod(0..1, 2.5..inf) => 0..1
number::mod(0..1, -inf..0) => -inf..0
number::mod(0..1, -inf..inf) => -inf..1
number::mod(0..1, -inf!..inf) => -inf!..1
number::mod(0..1, -inf..!inf) => -inf..!1
number::mod(0..1, -inf!..!inf) => -inf!..!1
number::mod(0..1, int(0..1)) => 0..!1
number::mod(0..1, int(0..2)) => 0..1
number::mod(0..1, int(1..2)) => 0..1
number::mod(0..1, int(5..20)) => 0..1
number::mod(0..1, int(-20..-5)) => -20!..0
number::mod(0..1, int(-10..10)) => -10!..1
number::mod(0..1, int(0..inf)) => 0..1
number::mod(0..1, int(1..inf)) => 0..1
number::mod(0..1, int(-inf..0)) => -inf!..0
number::mod(0..1, int(-inf..1)) => -inf!..!1
number::mod(0..1, int(-inf..inf)) => -inf!..1
number::mod(0..1, nonInt(0..1)) => 0..!1
number::mod(0..1, nonInt(0..2)) => 0..!1
number::mod(0..1, nonInt(-1..2)) => -1!..!2
number::mod(0..1, nonInt(0..inf)) => 0..!1
number::mod(0..1, nonInt(-1..inf)) => -1!..!inf
number::mod(0..1, nonInt(-inf..0)) => -inf!..0
number::mod(0..1, nonInt(-inf..1)) => -inf!..!1
number::mod(0..1, nonInt(-inf..inf)) => -inf!..!inf
number::mod(0..1, 1 | int(3..4)) => 0..1
number::mod(0!..1, number) => -inf..1 | nan
number::mod(0!..1, -3.14) => -3.14!..-2.14
number::mod(0!..1, -2) => -2!..-1
number::mod(0!..1, -1) => -1!..0
number::mod(0!..1, -0.5) => -0.5!..0
number::mod(0!..1, 0) => never
number::mod(0!..1, 0.5) => 0..!0.5
number::mod(0!..1, 1) => 0..!1
number::mod(0!..1, 2) => 0!..1
number::mod(0!..1, 2.78) => 0!..1
number::mod(0!..1, 3) => 0!..1
number::mod(0!..1, 3.14) => 0!..1
number::mod(0!..1, 10) => 0!..1
number::mod(0!..1, 100) => 0!..1
number::mod(0!..1, -inf) => -inf
number::mod(0!..1, inf) => 0!..1
number::mod(0!..1, nan) => nan
number::mod(0!..1, 0..1) => 0..!1
number::mod(0!..1, 0!..1) => 0..!1
number::mod(0!..1, 0..!1) => 0..!1
number::mod(0!..1, 0..2) => 0..1
number::mod(0!..1, 0!..!2) => 0..!1
number::mod(0!..1, 0.5..1.5) => 0..1
number::mod(0!..1, 0.5..2.5) => 0..1
number::mod(0!..1, 0.5!..2.5) => 0..1
number::mod(0!..1, 0.5..!2.5) => 0..1
number::mod(0!..1, -2.56..3.35) => -2.56!..1
number::mod(0!..1, 0.5..0.75) => 0..!0.75
number::mod(0!..1, 1..2) => 0..1
number::mod(0!..1, 0..inf) => 0..1
number::mod(0!..1, 0!..inf) => 0..1
number::mod(0!..1, 0..!inf) => 0..!1
number::mod(0!..1, 0!..!inf) => 0..!1
number::mod(0!..1, 1..inf) => 0..1
number::mod(0!..1, 1!..inf) => 0!..1
number::mod(0!..1, 1..!inf) => 0..1
number::mod(0!..1, 2..inf) => 0!..1
number::mod(0!..1, 2!..inf) => 0!..1
number::mod(0!..1, 2.5..inf) => 0!..1
number::mod(0!..1, -inf..0) => -inf..0
number::mod(0!..1, -inf..inf) => -inf..1
number::mod(0!..1, -inf!..inf) => -inf!..1
number::mod(0!..1, -inf..!inf) => -inf..!1
number::mod(0!..1, -inf!..!inf) => -inf!..!1
number::mod(0!..1, int(0..1)) => 0..!1
number::mod(0!..1, int(0..2)) => 0..1
number::mod(0!..1, int(1..2)) => 0..1
number::mod(0!..1, int(5..20)) => 0!..1
number::mod(0!..1, int(-20..-5)) => -20!..-4
number::mod(0!..1, int(-10..10)) => -10!..1
number::mod(0!..1, int(0..inf)) => 0..1
number::mod(0!..1, int(1..inf)) => 0..1
number::mod(0!..1, int(-inf..0)) => -inf!..0
number::mod(0!..1, int(-inf..1)) => -inf!..!1
number::mod(0!..1, int(-inf..inf)) => -inf!..1
number::mod(0!..1, nonInt(0..1)) => 0..!1
number::mod(0!..1, nonInt(0..2)) => 0..!1
number::mod(0!..1, nonInt(-1..2)) => -1!..!2
number::mod(0!..1, nonInt(0..inf)) => 0..!1
number::mod(0!..1, nonInt(-1..inf)) => -1!..!inf
number::mod(0!..1, nonInt(-inf..0)) => -inf!..0
number::mod(0!..1, nonInt(-inf..1)) => -inf!..!1
number::mod(0!..1, nonInt(-inf..inf)) => -inf!..!inf
number::mod(0!..1, 1 | int(3..4)) => 0..1
number::mod(0..!1, number) => -inf..!1 | nan
number::mod(0..!1, -3.14) => -3.14!..!-2.14 | 0
number::mod(0..!1, -2) => nonInt(-2..-1) | 0
number::mod(0..!1, -1) => -1!..0
number::mod(0..!1, -0.5) => -0.5!..0
number::mod(0..!1, 0) => never
number::mod(0..!1, 0.5) => 0..!0.5
number::mod(0..!1, 1) => 0..!1
number::mod(0..!1, 2) => 0..!1
number::mod(0..!1, 2.78) => 0..!1
number::mod(0..!1, 3) => 0..!1
number::mod(0..!1, 3.14) => 0..!1
number::mod(0..!1, 10) => 0..!1
number::mod(0..!1, 100) => 0..!1
number::mod(0..!1, -inf) => -inf | 0
number::mod(0..!1, inf) => 0..!1
number::mod(0..!1, nan) => nan
number::mod(0..!1, 0..1) => 0..!1
number::mod(0..!1, 0!..1) => 0..!1
number::mod(0..!1, 0..!1) => 0..!1
number::mod(0..!1, 0..2) => 0..!1
number::mod(0..!1, 0!..!2) => 0..!1
number::mod(0..!1, 0.5..1.5) => 0..!1
number::mod(0..!1, 0.5..2.5) => 0..!1
number::mod(0..!1, 0.5!..2.5) => 0..!1
number::mod(0..!1, 0.5..!2.5) => 0..!1
number::mod(0..!1, -2.56..3.35) => -2.56!..!1
number::mod(0..!1, 0.5..0.75) => 0..!0.75
number::mod(0..!1, 1..2) => 0..!1
number::mod(0..!1, 0..inf) => 0..!1
number::mod(0..!1, 0!..inf) => 0..!1
number::mod(0..!1, 0..!inf) => 0..!1
number::mod(0..!1, 0!..!inf) => 0..!1
number::mod(0..!1, 1..inf) => 0..!1
number::mod(0..!1, 1!..inf) => 0..!1
number::mod(0..!1, 1..!inf) => 0..!1
number::mod(0..!1, 2..inf) => 0..!1
number::mod(0..!1, 2!..inf) => 0..!1
number::mod(0..!1, 2.5..inf) => 0..!1
number::mod(0..!1, -inf..0) => -inf..0
number::mod(0..!1, -inf..inf) => -inf..!1
number::mod(0..!1, -inf!..inf) => -inf!..!1
number::mod(0..!1, -inf..!inf) => -inf..!1
number::mod(0..!1, -inf!..!inf) => -inf!..!1
number::mod(0..!1, int(0..1)) => 0..!1
number::mod(0..!1, int(0..2)) => 0..!1
number::mod(0..!1, int(1..2)) => 0..!1
number::mod(0..!1, int(5..20)) => 0..!1
number::mod(0..!1, int(-20..-5)) => -20!..0
number::mod(0..!1, int(-10..10)) => nonInt(-10..-1) | -1!..!1
number::mod(0..!1, int(0..inf)) => 0..!1
number::mod(0..!1, int(1..inf)) => 0..!1
number::mod(0..!1, int(-inf..0)) => -inf!..0
number::mod(0..!1, int(-inf..1)) => -inf!..!1
number::mod(0..!1, int(-inf..inf)) => -inf!..!1
number::mod(0..!1, nonInt(0..1)) => 0..!1
number::mod(0..!1, nonInt(0..2)) => 0..!1
number::mod(0..!1, nonInt(-1..2)) => -1!..!2
number::mod(0..!1, nonInt(0..inf)) => 0..!1
number::mod(0..!1, nonInt(-1..inf)) => -1!..!inf
number::mod(0..!1, nonInt(-inf..0)) => -inf!..0
number::mod(0..!1, nonInt(-inf..1)) => -inf!..!1
number::mod(0..!1, nonInt(-inf..inf)) => -inf!..!inf
number::mod(0..!1, 1 | int(3..4)) => 0..!1
number::mod(0..2, number) => -inf..2 | nan
number::mod(0..2, -3.14) => -3.14!..-1.14 | 0
number::mod(0..2, -2) => -2!..0
number::mod(0..2, -1) => -1!..0
number::mod(0..2, -0.5) => -0.5!..0
number::mod(0..2, 0) => never
number::mod(0..2, 0.5) => 0..!0.5
number::mod(0..2, 1) => 0..!1
number::mod(0..2, 2) => 0..!2
number::mod(0..2, 2.78) => 0..2
number::mod(0..2, 3) => 0..2
number::mod(0..2, 3.14) => 0..2
number::mod(0..2, 10) => 0..2
number::mod(0..2, 100) => 0..2
number::mod(0..2, -inf) => -inf | 0
number::mod(0..2, inf) => 0..2
number::mod(0..2, nan) => nan
number::mod(0..2, 0..1) => 0..!1
number::mod(0..2, 0!..1) => 0..!1
number::mod(0..2, 0..!1) => 0..!1
number::mod(0..2, 0..2) => 0..!2
number::mod(0..2, 0!..!2) => 0..!2
number::mod(0..2, 0.5..1.5) => 0..!1.5
number::mod(0..2, 0.5..2.5) => 0..2
number::mod(0..2, 0.5!..2.5) => 0..2
number::mod(0..2, 0.5..!2.5) => 0..2
number::mod(0..2, -2.56..3.35) => -2.56!..2
number::mod(0..2, 0.5..0.75) => 0..!0.75
number::mod(0..2, 1..2) => 0..!2
number::mod(0..2, 0..inf) => 0..2
number::mod(0..2, 0!..inf) => 0..2
number::mod(0..2, 0..!inf) => 0..!2
number::mod(0..2, 0!..!inf) => 0..!2
number::mod(0..2, 1..inf) => 0..2
number::mod(0..2, 1!..inf) => 0..2
number::mod(0..2, 1..!inf) => 0..2
number::mod(0..2, 2..inf) => 0..2
number::mod(0..2, 2!..inf) => 0..2
number::mod(0..2, 2.5..inf) => 0..2
number::mod(0..2, -inf..0) => -inf..0
number::mod(0..2, -inf..inf) => -inf..2
number::mod(0..2, -inf!..inf) => -inf!..2
number::mod(0..2, -inf..!inf) => -inf..!2
number::mod(0..2, -inf!..!inf) => -inf!..!2
number::mod(0..2, int(0..1)) => 0..!1
number::mod(0..2, int(0..2)) => 0..!2
number::mod(0..2, int(1..2)) => 0..!2
number::mod(0..2, int(5..20)) => 0..2
number::mod(0..2, int(-20..-5)) => -20!..0
number::mod(0..2, int(-10..10)) => -10!..2
number::mod(0..2, int(0..inf)) => 0..2
number::mod(0..2, int(1..inf)) => 0..2
number::mod(0..2, int(-inf..0)) => -inf!..0
number::mod(0..2, int(-inf..1)) => -inf!..!1
number::mod(0..2, int(-inf..inf)) => -inf!..2
number::mod(0..2, nonInt(0..1)) => 0..!1
number::mod(0..2, nonInt(0..2)) => 0..!2
number::mod(0..2, nonInt(-1..2)) => -1!..!2
number::mod(0..2, nonInt(0..inf)) => 0..!2
number::mod(0..2, nonInt(-1..inf)) => -1!..!inf
number::mod(0..2, nonInt(-inf..0)) => -inf!..0
number::mod(0..2, nonInt(-inf..1)) => -inf!..!1
number::mod(0..2, nonInt(-inf..inf)) => -inf!..!inf
number::mod(0..2, 1 | int(3..4)) => 0..2
number::mod(0!..!2, number) => -inf..!2 | nan
number::mod(0!..!2, -3.14) => -3.14!..!-1.14
number::mod(0!..!2, -2) => -2!..!0
number::mod(0!..!2, -1) => -1!..0
number::mod(0!..!2, -0.5) => -0.5!..0
number::mod(0!..!2, 0) => never
number::mod(0!..!2, 0.5) => 0..!0.5
number::mod(0!..!2, 1) => 0..!1
number::mod(0!..!2, 2) => 0!..!2
number::mod(0!..!2, 2.78) => 0!..!2
number::mod(0!..!2, 3) => 0!..!2
number::mod(0!..!2, 3.14) => 0!..!2
number::mod(0!..!2, 10) => 0!..!2
number::mod(0!..!2, 100) => 0!..!2
number::mod(0!..!2, -inf) => -inf
number::mod(0!..!2, inf) => 0!..!2
number::mod(0!..!2, nan) => nan
number::mod(0!..!2, 0..1) => 0..!1
number::mod(0!..!2, 0!..1) => 0..!1
number::mod(0!..!2, 0..!1) => 0..!1
number::mod(0!..!2, 0..2) => 0..!2
number::mod(0!..!2, 0!..!2) => 0..!2
number::mod(0!..!2, 0.5..1.5) => 0..!1.5
number::mod(0!..!2, 0.5..2.5) => 0..!2
number::mod(0!..!2, 0.5!..2.5) => 0..!2
number::mod(0!..!2, 0.5..!2.5) => 0..!2
number::mod(0!..!2, -2.56..3.35) => -2.56!..!2
number::mod(0!..!2, 0.5..0.75) => 0..!0.75
number::mod(0!..!2, 1..2) => 0..!2
number::mod(0!..!2, 0..inf) => 0..!2
number::mod(0!..!2, 0!..inf) => 0..!2
number::mod(0!..!2, 0..!inf) => 0..!2
number::mod(0!..!2, 0!..!inf) => 0..!2
number::mod(0!..!2, 1..inf) => 0..!2
number::mod(0!..!2, 1!..inf) => 0..!2
number::mod(0!..!2, 1..!inf) => 0..!2
number::mod(0!..!2, 2..inf) => 0!..!2
number::mod(0!..!2, 2!..inf) => 0!..!2
number::mod(0!..!2, 2.5..inf) => 0!..!2
number::mod(0!..!2, -inf..0) => -inf..0
number::mod(0!..!2, -inf..inf) => -inf..!2
number::mod(0!..!2, -inf!..inf) => -inf!..!2
number::mod(0!..!2, -inf..!inf) => -inf..!2
number::mod(0!..!2, -inf!..!inf) => -inf!..!2
number::mod(0!..!2, int(0..1)) => 0..!1
number::mod(0!..!2, int(0..2)) => 0..!2
number::mod(0!..!2, int(1..2)) => 0..!2
number::mod(0!..!2, int(5..20)) => 0!..!2
number::mod(0!..!2, int(-20..-5)) => -20!..!-3
number::mod(0!..!2, int(-10..10)) => -10!..!2
number::mod(0!..!2, int(0..inf)) => 0..!2
number::mod(0!..!2, int(1..inf)) => 0..!2
number::mod(0!..!2, int(-inf..0)) => -inf!..0
number::mod(0!..!2, int(-inf..1)) => -inf!..!1
number::mod(0!..!2, int(-inf..inf)) => -inf!..!2
number::mod(0!..!2, nonInt(0..1)) => 0..!1
number::mod(0!..!2, nonInt(0..2)) => 0..!2
number::mod(0!..!2, nonInt(-1..2)) => -1!..!2
number::mod(0!..!2, nonInt(0..inf)) => 0..!2
number::mod(0!..!2, nonInt(-1..inf)) => -1!..!inf
number::mod(0!..!2, nonInt(-inf..0)) => -inf!..0
number::mod(0!..!2, nonInt(-inf..1)) => -inf!..!1
number::mod(0!..!2, nonInt(-inf..inf)) => -inf!..!inf
number::mod(0!..!2, 1 | int(3..4)) => 0..!2
number::mod(0.5..1.5, number) => -inf..1.5 | nan
number::mod(0.5..1.5, -3.14) => -2.64..-1.64
number::mod(0.5..1.5, -2) => -1.5..-0.5
number::mod(0.5..1.5, -1) => -1!..0
number::mod(0.5..1.5, -0.5) => -0.5!..0
number::mod(0.5..1.5, 0) => never
number::mod(0.5..1.5, 0.5) => 0..!0.5
number::mod(0.5..1.5, 1) => 0..!1
number::mod(0.5..1.5, 2) => 0.5..1.5
number::mod(0.5..1.5, 2.78) => 0.5..1.5
number::mod(0.5..1.5, 3) => 0.5..1.5
number::mod(0.5..1.5, 3.14) => 0.5..1.5
number::mod(0.5..1.5, 10) => 0.5..1.5
number::mod(0.5..1.5, 100) => 0.5..1.5
number::mod(0.5..1.5, -inf) => -inf
number::mod(0.5..1.5, inf) => 0.5..1.5
number::mod(0.5..1.5, nan) => nan
number::mod(0.5..1.5, 0..1) => 0..!1
number::mod(0.5..1.5, 0!..1) => 0..!1
number::mod(0.5..1.5, 0..!1) => 0..!1
number::mod(0.5..1.5, 0..2) => 0..1.5
number::mod(0.5..1.5, 0!..!2) => 0..!1.5
number::mod(0.5..1.5, 0.5..1.5) => 0..!1.5
number::mod(0.5..1.5, 0.5..2.5) => 0..1.5
number::mod(0.5..1.5, 0.5!..2.5) => 0..1.5
number::mod(0.5..1.5, 0.5..!2.5) => 0..1.5
number::mod(0.5..1.5, -2.56..3.35) => -2.56!..1.5
number::mod(0.5..1.5, 0.5..0.75) => 0..!0.75
number::mod(0.5..1.5, 1..2) => 0..1.5
number::mod(0.5..1.5, 0..inf) => 0..1.5
number::mod(0.5..1.5, 0!..inf) => 0..1.5
number::mod(0.5..1.5, 0..!inf) => 0..!1.5
number::mod(0.5..1.5, 0!..!inf) => 0..!1.5
number::mod(0.5..1.5, 1..inf) => 0..1.5
number::mod(0.5..1.5, 1!..inf) => 0..1.5
number::mod(0.5..1.5, 1..!inf) => 0..1.5
number::mod(0.5..1.5, 2..inf) => 0.5..1.5
number::mod(0.5..1.5, 2!..inf) => 0.5..1.5
number::mod(0.5..1.5, 2.5..inf) => 0.5..1.5
number::mod(0.5..1.5, -inf..0) => -inf..0
number::mod(0.5..1.5, -inf..inf) => -inf..1.5
number::mod(0.5..1.5, -inf!..inf) => -inf!..1.5
number::mod(0.5..1.5, -inf..!inf) => -inf..!1.5
number::mod(0.5..1.5, -inf!..!inf) => -inf!..!1.5
number::mod(0.5..1.5, int(0..1)) => 0..!1
number::mod(0.5..1.5, int(0..2)) => 0..1.5
number::mod(0.5..1.5, int(1..2)) => 0..1.5
number::mod(0.5..1.5, int(5..20)) => 0.5..1.5
number::mod(0.5..1.5, int(-20..-5)) => -19.5..-3.5
number::mod(0.5..1.5, int(-10..10)) => -9.5..1.5
number::mod(0.5..1.5, int(0..inf)) => 0..1.5
number::mod(0.5..1.5, int(1..inf)) => 0..1.5
number::mod(0.5..1.5, int(-inf..0)) => -inf!..0
number::mod(0.5..1.5, int(-inf..1)) => -inf!..!1
number::mod(0.5..1.5, int(-inf..inf)) => -inf!..1.5
number::mod(0.5..1.5, nonInt(0..1)) => 0..!1
number::mod(0.5..1.5, nonInt(0..2)) => 0..!1.5
number::mod(0.5..1.5, nonInt(-1..2)) => -1!..!2
number::mod(0.5..1.5, nonInt(0..inf)) => 0..!1.5
number::mod(0.5..1.5, nonInt(-1..inf)) => -1!..!inf
number::mod(0.5..1.5, nonInt(-inf..0)) => -inf!..0
number::mod(0.5..1.5, nonInt(-inf..1)) => -inf!..!1
number::mod(0.5..1.5, nonInt(-inf..inf)) => -inf!..!inf
number::mod(0.5..1.5, 1 | int(3..4)) => 0..1.5
number::mod(0.5..2.5, number) => -inf..2.5 | nan
number::mod(0.5..2.5, -3.14) => -2.64..-0.64
number::mod(0.5..2.5, -2) => -2!..0
number::mod(0.5..2.5, -1) => -1!..0
number::mod(0.5..2.5, -0.5) => -0.5!..0
number::mod(0.5..2.5, 0) => never
number::mod(0.5..2.5, 0.5) => 0..!0.5
number::mod(0.5..2.5, 1) => 0..!1
number::mod(0.5..2.5, 2) => 0..!2
number::mod(0.5..2.5, 2.78) => 0.5..2.5
number::mod(0.5..2.5, 3) => 0.5..2.5
number::mod(0.5..2.5, 3.14) => 0.5..2.5
number::mod(0.5..2.5, 10) => 0.5..2.5
number::mod(0.5..2.5, 100) => 0.5..2.5
number::mod(0.5..2.5, -inf) => -inf
number::mod(0.5..2.5, inf) => 0.5..2.5
number::mod(0.5..2.5, nan) => nan
number::mod(0.5..2.5, 0..1) => 0..!1
number::mod(0.5..2.5, 0!..1) => 0..!1
number::mod(0.5..2.5, 0..!1) => 0..!1
number::mod(0.5..2.5, 0..2) => 0..!2
number::mod(0.5..2.5, 0!..!2) => 0..!2
number::mod(0.5..2.5, 0.5..1.5) => 0..!1.5
number::mod(0.5..2.5, 0.5..2.5) => 0..!2.5
number::mod(0.5..2.5, 0.5!..2.5) => 0..!2.5
number::mod(0.5..2.5, 0.5..!2.5) => 0..!2.5
number::mod(0.5..2.5, -2.56..3.35) => -2.56!..2.5
number::mod(0.5..2.5, 0.5..0.75) => 0..!0.75
number::mod(0.5..2.5, 1..2) => 0..!2
number::mod(0.5..2.5, 0..inf) => 0..2.5
number::mod(0.5..2.5, 0!..inf) => 0..2.5
number::mod(0.5..2.5, 0..!inf) => 0..!2.5
number::mod(0.5..2.5, 0!..!inf) => 0..!2.5
number::mod(0.5..2.5, 1..inf) => 0..2.5
number::mod(0.5..2.5, 1!..inf) => 0..2.5
number::mod(0.5..2.5, 1..!inf) => 0..2.5
number::mod(0.5..2.5, 2..inf) => 0..2.5
number::mod(0.5..2.5, 2!..inf) => 0..2.5
number::mod(0.5..2.5, 2.5..inf) => 0..2.5
number::mod(0.5..2.5, -inf..0) => -inf..0
number::mod(0.5..2.5, -inf..inf) => -inf..2.5
number::mod(0.5..2.5, -inf!..inf) => -inf!..2.5
number::mod(0.5..2.5, -inf..!inf) => -inf..!2.5
number::mod(0.5..2.5, -inf!..!inf) => -inf!..!2.5
number::mod(0.5..2.5, int(0..1)) => 0..!1
number::mod(0.5..2.5, int(0..2)) => 0..!2
number::mod(0.5..2.5, int(1..2)) => 0..!2
number::mod(0.5..2.5, int(5..20)) => 0.5..2.5
number::mod(0.5..2.5, int(-20..-5)) => -19.5..-2.5
number::mod(0.5..2.5, int(-10..10)) => -9.5..2.5
number::mod(0.5..2.5, int(0..inf)) => 0..2.5
number::mod(0.5..2.5, int(1..inf)) => 0..2.5
number::mod(0.5..2.5, int(-inf..0)) => -inf!..0
number::mod(0.5..2.5, int(-inf..1)) => -inf!..!1
number::mod(0.5..2.5, int(-inf..inf)) => -inf!..2.5
number::mod(0.5..2.5, nonInt(0..1)) => 0..!1
number::mod(0.5..2.5, nonInt(0..2)) => 0..!2
number::mod(0.5..2.5, nonInt(-1..2)) => -1!..!2
number::mod(0.5..2.5, nonInt(0..inf)) => 0..!2.5
number::mod(0.5..2.5, nonInt(-1..inf)) => -1!..!inf
number::mod(0.5..2.5, nonInt(-inf..0)) => -inf!..0
number::mod(0.5..2.5, nonInt(-inf..1)) => -inf!..!1
number::mod(0.5..2.5, nonInt(-inf..inf)) => -inf!..!inf
number::mod(0.5..2.5, 1 | int(3..4)) => 0..2.5
number::mod(0.5!..2.5, number) => -inf..2.5 | nan
number::mod(0.5!..2.5, -3.14) => -2.64!..-0.64
number::mod(0.5!..2.5, -2) => -2!..0
number::mod(0.5!..2.5, -1) => -1!..0
number::mod(0.5!..2.5, -0.5) => -0.5!..0
number::mod(0.5!..2.5, 0) => never
number::mod(0.5!..2.5, 0.5) => 0..!0.5
number::mod(0.5!..2.5, 1) => 0..!1
number::mod(0.5!..2.5, 2) => 0..!2
number::mod(0.5!..2.5, 2.78) => 0.5!..2.5
number::mod(0.5!..2.5, 3) => 0.5!..2.5
number::mod(0.5!..2.5, 3.14) => 0.5!..2.5
number::mod(0.5!..2.5, 10) => 0.5!..2.5
number::mod(0.5!..2.5, 100) => 0.5!..2.5
number::mod(0.5!..2.5, -inf) => -inf
number::mod(0.5!..2.5, inf) => 0.5!..2.5
number::mod(0.5!..2.5, nan) => nan
number::mod(0.5!..2.5, 0..1) => 0..!1
number::mod(0.5!..2.5, 0!..1) => 0..!1
number::mod(0.5!..2.5, 0..!1) => 0..!1
number::mod(0.5!..2.5, 0..2) => 0..!2
number::mod(0.5!..2.5, 0!..!2) => 0..!2
number::mod(0.5!..2.5, 0.5..1.5) => 0..!1.5
number::mod(0.5!..2.5, 0.5..2.5) => 0..!2.5
number::mod(0.5!..2.5, 0.5!..2.5) => 0..!2.5
number::mod(0.5!..2.5, 0.5..!2.5) => 0..!2.5
number::mod(0.5!..2.5, -2.56..3.35) => -2.56!..2.5
number::mod(0.5!..2.5, 0.5..0.75) => 0..!0.75
number::mod(0.5!..2.5, 1..2) => 0..!2
number::mod(0.5!..2.5, 0..inf) => 0..2.5
number::mod(0.5!..2.5, 0!..inf) => 0..2.5
number::mod(0.5!..2.5, 0..!inf) => 0..!2.5
number::mod(0.5!..2.5, 0!..!inf) => 0..!2.5
number::mod(0.5!..2.5, 1..inf) => 0..2.5
number::mod(0.5!..2.5, 1!..inf) => 0..2.5
number::mod(0.5!..2.5, 1..!inf) => 0..2.5
number::mod(0.5!..2.5, 2..inf) => 0..2.5
number::mod(0.5!..2.5, 2!..inf) => 0..2.5
number::mod(0.5!..2.5, 2.5..inf) => 0..2.5
number::mod(0.5!..2.5, -inf..0) => -inf..0
number::mod(0.5!..2.5, -inf..inf) => -inf..2.5
number::mod(0.5!..2.5, -inf!..inf) => -inf!..2.5
number::mod(0.5!..2.5, -inf..!inf) => -inf..!2.5
number::mod(0.5!..2.5, -inf!..!inf) => -inf!..!2.5
number::mod(0.5!..2.5, int(0..1)) => 0..!1
number::mod(0.5!..2.5, int(0..2)) => 0..!2
number::mod(0.5!..2.5, int(1..2)) => 0..!2
number::mod(0.5!..2.5, int(5..20)) => 0.5!..2.5
number::mod(0.5!..2.5, int(-20..-5)) => -19.5!..-2.5
number::mod(0.5!..2.5, int(-10..10)) => -9.5!..2.5
number::mod(0.5!..2.5, int(0..inf)) => 0..2.5
number::mod(0.5!..2.5, int(1..inf)) => 0..2.5
number::mod(0.5!..2.5, int(-inf..0)) => -inf!..0
number::mod(0.5!..2.5, int(-inf..1)) => -inf!..!1
number::mod(0.5!..2.5, int(-inf..inf)) => -inf!..2.5
number::mod(0.5!..2.5, nonInt(0..1)) => 0..!1
number::mod(0.5!..2.5, nonInt(0..2)) => 0..!2
number::mod(0.5!..2.5, nonInt(-1..2)) => -1!..!2
number::mod(0.5!..2.5, nonInt(0..inf)) => 0..!2.5
number::mod(0.5!..2.5, nonInt(-1..inf)) => -1!..!inf
number::mod(0.5!..2.5, nonInt(-inf..0)) => -inf!..0
number::mod(0.5!..2.5, nonInt(-inf..1)) => -inf!..!1
number::mod(0.5!..2.5, nonInt(-inf..inf)) => -inf!..!inf
number::mod(0.5!..2.5, 1 | int(3..4)) => 0..2.5
number::mod(0.5..!2.5, number) => -inf..!2.5 | nan
number::mod(0.5..!2.5, -3.14) => -2.64..!-0.64
number::mod(0.5..!2.5, -2) => -2!..0
number::mod(0.5..!2.5, -1) => -1!..0
number::mod(0.5..!2.5, -0.5) => -0.5!..0
number::mod(0.5..!2.5, 0) => never
number::mod(0.5..!2.5, 0.5) => 0..!0.5
number::mod(0.5..!2.5, 1) => 0..!1
number::mod(0.5..!2.5, 2) => 0..!2
number::mod(0.5..!2.5, 2.78) => 0.5..!2.5
number::mod(0.5..!2.5, 3) => 0.5..!2.5
number::mod(0.5..!2.5, 3.14) => 0.5..!2.5
number::mod(0.5..!2.5, 10) => 0.5..!2.5
number::mod(0.5..!2.5, 100) => 0.5..!2.5
number::mod(0.5..!2.5, -inf) => -inf
number::mod(0.5..!2.5, inf) => 0.5..!2.5
number::mod(0.5..!2.5, nan) => nan
number::mod(0.5..!2.5, 0..1) => 0..!1
number::mod(0.5..!2.5, 0!..1) => 0..!1
number::mod(0.5..!2.5, 0..!1) => 0..!1
number::mod(0.5..!2.5, 0..2) => 0..!2
number::mod(0.5..!2.5, 0!..!2) => 0..!2
number::mod(0.5..!2.5, 0.5..1.5) => 0..!1.5
number::mod(0.5..!2.5, 0.5..2.5) => 0..!2.5
number::mod(0.5..!2.5, 0.5!..2.5) => 0..!2.5
number::mod(0.5..!2.5, 0.5..!2.5) => 0..!2.5
number::mod(0.5..!2.5, -2.56..3.35) => -2.56!..!2.5
number::mod(0.5..!2.5, 0.5..0.75) => 0..!0.75
number::mod(0.5..!2.5, 1..2) => 0..!2
number::mod(0.5..!2.5, 0..inf) => 0..!2.5
number::mod(0.5..!2.5, 0!..inf) => 0..!2.5
number::mod(0.5..!2.5, 0..!inf) => 0..!2.5
number::mod(0.5..!2.5, 0!..!inf) => 0..!2.5
number::mod(0.5..!2.5, 1..inf) => 0..!2.5
number::mod(0.5..!2.5, 1!..inf) => 0..!2.5
number::mod(0.5..!2.5, 1..!inf) => 0..!2.5
number::mod(0.5..!2.5, 2..inf) => 0..!2.5
number::mod(0.5..!2.5, 2!..inf) => 0..!2.5
number::mod(0.5..!2.5, 2.5..inf) => 0.5..!2.5
number::mod(0.5..!2.5, -inf..0) => -inf..0
number::mod(0.5..!2.5, -inf..inf) => -inf..!2.5
number::mod(0.5..!2.5, -inf!..inf) => -inf!..!2.5
number::mod(0.5..!2.5, -inf..!inf) => -inf..!2.5
number::mod(0.5..!2.5, -inf!..!inf) => -inf!..!2.5
number::mod(0.5..!2.5, int(0..1)) => 0..!1
number::mod(0.5..!2.5, int(0..2)) => 0..!2
number::mod(0.5..!2.5, int(1..2)) => 0..!2
number::mod(0.5..!2.5, int(5..20)) => 0.5..!2.5
number::mod(0.5..!2.5, int(-20..-5)) => -19.5..!-2.5
number::mod(0.5..!2.5, int(-10..10)) => -9.5..!2.5
number::mod(0.5..!2.5, int(0..inf)) => 0..!2.5
number::mod(0.5..!2.5, int(1..inf)) => 0..!2.5
number::mod(0.5..!2.5, int(-inf..0)) => -inf!..0
number::mod(0.5..!2.5, int(-inf..1)) => -inf!..!1
number::mod(0.5..!2.5, int(-inf..inf)) => -inf!..!2.5
number::mod(0.5..!2.5, nonInt(0..1)) => 0..!1
number::mod(0.5..!2.5, nonInt(0..2)) => 0..!2
number::mod(0.5..!2.5, nonInt(-1..2)) => -1!..!2
number::mod(0.5..!2.5, nonInt(0..inf)) => 0..!2.5
number::mod(0.5..!2.5, nonInt(-1..inf)) => -1!..!inf
number::mod(0.5..!2.5, nonInt(-inf..0)) => -inf!..0
number::mod(0.5..!2.5, nonInt(-inf..1)) => -inf!..!1
number::mod(0.5..!2.5, nonInt(-inf..inf)) => -inf!..!inf
number::mod(0.5..!2.5, 1 | int(3..4)) => 0..!2.5
number::mod(-2.56..3.35, number) => number
number::mod(-2.56..3.35, -3.14) => -3.14!..0
number::mod(-2.56..3.35, -2) => -2!..0
number::mod(-2.56..3.35, -1) => -1!..0
number::mod(-2.56..3.35, -0.5) => -0.5!..0
number::mod(-2.56..3.35, 0) => never
number::mod(-2.56..3.35, 0.5) => 0..!0.5
number::mod(-2.56..3.35, 1) => 0..!1
number::mod(-2.56..3.35, 2) => 0..!2
number::mod(-2.56..3.35, 2.78) => 0..!2.78
number::mod(-2.56..3.35, 3) => 0..!3
number::mod(-2.56..3.35, 3.14) => 0..!3.14
number::mod(-2.56..3.35, 10) => 0..3.35 | 7.44..!10
number::mod(-2.56..3.35, 100) => 0..3.35 | 97.44..!100
number::mod(-2.56..3.35, -inf) => -inf | -2.56..0
number::mod(-2.56..3.35, inf) => 0..3.35 | inf
number::mod(-2.56..3.35, nan) => nan
number::mod(-2.56..3.35, 0..1) => 0..!1
number::mod(-2.56..3.35, 0!..1) => 0..!1
number::mod(-2.56..3.35, 0..!1) => 0..!1
number::mod(-2.56..3.35, 0..2) => 0..!2
number::mod(-2.56..3.35, 0!..!2) => 0..!2
number::mod(-2.56..3.35, 0.5..1.5) => 0..!1.5
number::mod(-2.56..3.35, 0.5..2.5) => 0..!2.5
number::mod(-2.56..3.35, 0.5!..2.5) => 0..!2.5
number::mod(-2.56..3.35, 0.5..!2.5) => 0..!2.5
number::mod(-2.56..3.35, -2.56..3.35) => -2.56!..!3.35
number::mod(-2.56..3.35, 0.5..0.75) => 0..!0.75
number::mod(-2.56..3.35, 1..2) => 0..!2
number::mod(-2.56..3.35, 0..inf) => 0..inf
number::mod(-2.56..3.35, 0!..inf) => 0..inf
number::mod(-2.56..3.35, 0..!inf) => 0..!inf
number::mod(-2.56..3.35, 0!..!inf) => 0..!inf
number::mod(-2.56..3.35, 1..inf) => 0..inf
number::mod(-2.56..3.35, 1!..inf) => 0..inf
number::mod(-2.56..3.35, 1..!inf) => 0..!inf
number::mod(-2.56..3.35, 2..inf) => 0..inf
number::mod(-2.56..3.35, 2!..inf) => 0..inf
number::mod(-2.56..3.35, 2.5..inf) => 0..inf
number::mod(-2.56..3.35, -inf..0) => -inf..0
number::mod(-2.56..3.35, -inf..inf) => -inf..inf
number::mod(-2.56..3.35, -inf!..inf) => -inf!..inf
number::mod(-2.56..3.35, -inf..!inf) => -inf..!inf
number::mod(-2.56..3.35, -inf!..!inf) => -inf!..!inf
number::mod(-2.56..3.35, int(0..1)) => 0..!1
number::mod(-2.56..3.35, int(0..2)) => 0..!2
number::mod(-2.56..3.35, int(1..2)) => 0..!2
number::mod(-2.56..3.35, int(5..20)) => 0..!20
number::mod(-2.56..3.35, int(-20..-5)) => -20!..0
number::mod(-2.56..3.35, int(-10..10)) => -10!..!10
number::mod(-2.56..3.35, int(0..inf)) => 0..!inf
number::mod(-2.56..3.35, int(1..inf)) => 0..!inf
number::mod(-2.56..3.35, int(-inf..0)) => -inf!..0
number::mod(-2.56..3.35, int(-inf..1)) => -inf!..!1
number::mod(-2.56..3.35, int(-inf..inf)) => -inf!..!inf
number::mod(-2.56..3.35, nonInt(0..1)) => 0..!1
number::mod(-2.56..3.35, nonInt(0..2)) => 0..!2
number::mod(-2.56..3.35, nonInt(-1..2)) => -1!..!2
number::mod(-2.56..3.35, nonInt(0..inf)) => 0..!inf
number::mod(-2.56..3.35, nonInt(-1..inf)) => -1!..!inf
number::mod(-2.56..3.35, nonInt(-inf..0)) => -inf!..0
number::mod(-2.56..3.35, nonInt(-inf..1)) => -inf!..!1
number::mod(-2.56..3.35, nonInt(-inf..inf)) => -inf!..!inf
number::mod(-2.56..3.35, 1 | int(3..4)) => 0..!4
number::mod(0.5..0.75, number) => -inf..0.75 | nan
number::mod(0.5..0.75, -3.14) => -2.64..-2.39
number::mod(0.5..0.75, -2) => -1.5..-1.25
number::mod(0.5..0.75, -1) => -0.5..-0.25
number::mod(0.5..0.75, -0.5) => -0.5!..-0.25 | 0
number::mod(0.5..0.75, 0) => never
number::mod(0.5..0.75, 0.5) => 0..0.25
number::mod(0.5..0.75, 1) => 0.5..0.75
number::mod(0.5..0.75, 2) => 0.5..0.75
number::mod(0.5..0.75, 2.78) => 0.5..0.75
number::mod(0.5..0.75, 3) => 0.5..0.75
number::mod(0.5..0.75, 3.14) => 0.5..0.75
number::mod(0.5..0.75, 10) => 0.5..0.75
number::mod(0.5..0.75, 100) => 0.5..0.75
number::mod(0.5..0.75, -inf) => -inf
number::mod(0.5..0.75, inf) => 0.5..0.75
number::mod(0.5..0.75, nan) => nan
number::mod(0.5..0.75, 0..1) => 0..0.75
number::mod(0.5..0.75, 0!..1) => 0..0.75
number::mod(0.5..0.75, 0..!1) => 0..!0.75
number::mod(0.5..0.75, 0..2) => 0..0.75
number::mod(0.5..0.75, 0!..!2) => 0..!0.75
number::mod(0.5..0.75, 0.5..1.5) => 0..0.75
number::mod(0.5..0.75, 0.5..2.5) => 0..0.75
number::mod(0.5..0.75, 0.5!..2.5) => 0..0.75
number::mod(0.5..0.75, 0.5..!2.5) => 0..0.75
number::mod(0.5..0.75, -2.56..3.35) => -2.56!..0.75
number::mod(0.5..0.75, 0.5..0.75) => 0..!0.75
number::mod(0.5..0.75, 1..2) => 0.5..0.75
number::mod(0.5..0.75, 0..inf) => 0..0.75
number::mod(0.5..0.75, 0!..inf) => 0..0.75
number::mod(0.5..0.75, 0..!inf) => 0..!0.75
number::mod(0.5..0.75, 0!..!inf) => 0..!0.75
number::mod(0.5..0.75, 1..inf) => 0.5..0.75
number::mod(0.5..0.75, 1!..inf) => 0.5..0.75
number::mod(0.5..0.75, 1..!inf) => 0.5..0.75
number::mod(0.5..0.75, 2..inf) => 0.5..0.75
number::mod(0.5..0.75, 2!..inf) => 0.5..0.75
number::mod(0.5..0.75, 2.5..inf) => 0.5..0.75
number::mod(0.5..0.75, -inf..0) => -inf..0
number::mod(0.5..0.75, -inf..inf) => -inf..0.75
number::mod(0.5..0.75, -inf!..inf) => -inf!..0.75
number::mod(0.5..0.75, -inf..!inf) => -inf..!0.75
number::mod(0.5..0.75, -inf!..!inf) => -inf!..!0.75
number::mod(0.5..0.75, int(0..1)) => 0.5..0.75
number::mod(0.5..0.75, int(0..2)) => 0.5..0.75
number::mod(0.5..0.75, int(1..2)) => 0.5..0.75
number::mod(0.5..0.75, int(5..20)) => 0.5..0.75
number::mod(0.5..0.75, int(-20..-5)) => -19.5..-4.25
number::mod(0.5..0.75, int(-10..10)) => -9.5..-9.25 | -8.5..-8.25 | -7.5..-7.25 | -6.5..-6.25 | -5.5..-5.25 | -4.5..-4.25 | -3.5..-3.25 | -2.5..-2.25 | -1.5..-1.25 | -0.5..-0.25 | 0.5..0.75
number::mod(0.5..0.75, int(0..inf)) => 0.5..0.75
number::mod(0.5..0.75, int(1..inf)) => 0.5..0.75
number::mod(0.5..0.75, int(-inf..0)) => -inf!..-0.25
number::mod(0.5..0.75, int(-inf..1)) => -inf!..-0.25 | 0.5..0.75
number::mod(0.5..0.75, int(-inf..inf)) => -inf!..-0.25 | 0.5..0.75
number::mod(0.5..0.75, nonInt(0..1)) => 0..!0.75
number::mod(0.5..0.75, nonInt(0..2)) => 0..!0.75
number::mod(0.5..0.75, nonInt(-1..2)) => -1!..!2
number::mod(0.5..0.75, nonInt(0..inf)) => 0..!0.75
number::mod(0.5..0.75, nonInt(-1..inf)) => -1!..!inf
number::mod(0.5..0.75, nonInt(-inf..0)) => -inf!..0
number::mod(0.5..0.75, nonInt(-inf..1)) => -inf!..!1
number::mod(0.5..0.75, nonInt(-inf..inf)) => -inf!..!inf
number::mod(0.5..0.75, 1 | int(3..4)) => 0.5..0.75
number::mod(1..2, number) => -inf..2 | nan
number::mod(1..2, -3.14) => -2.14..-1.14
number::mod(1..2, -2) => -1..0
number::mod(1..2, -1) => -1!..0
number::mod(1..2, -0.5) => -0.5!..0
number::mod(1..2, 0) => never
number::mod(1..2, 0.5) => 0..!0.5
number::mod(1..2, 1) => 0..!1
number::mod(1..2, 2) => 0 | 1..!2
number::mod(1..2, 2.78) => 1..2
number::mod(1..2, 3) => 1..2
number::mod(1..2, 3.14) => 1..2
number::mod(1..2, 10) => 1..2
number::mod(1..2, 100) => 1..2
number::mod(1..2, -inf) => -inf
number::mod(1..2, inf) => 1..2
number::mod(1..2, nan) => nan
number::mod(1..2, 0..1) => 0..!1
number::mod(1..2, 0!..1) => 0..!1
number::mod(1..2, 0..!1) => 0..!1
number::mod(1..2, 0..2) => 0..!2
number::mod(1..2, 0!..!2) => 0..!2
number::mod(1..2, 0.5..1.5) => 0..!1.5
number::mod(1..2, 0.5..2.5) => 0..2
number::mod(1..2, 0.5!..2.5) => 0..2
number::mod(1..2, 0.5..!2.5) => 0..2
number::mod(1..2, -2.56..3.35) => -2.56!..2
number::mod(1..2, 0.5..0.75) => 0..!0.75
number::mod(1..2, 1..2) => 0..!2
number::mod(1..2, 0..inf) => 0..2
number::mod(1..2, 0!..inf) => 0..2
number::mod(1..2, 0..!inf) => 0..!2
number::mod(1..2, 0!..!inf) => 0..!2
number::mod(1..2, 1..inf) => 0..2
number::mod(1..2, 1!..inf) => 0..2
number::mod(1..2, 1..!inf) => 0..2
number::mod(1..2, 2..inf) => 0..2
number::mod(1..2, 2!..inf) => 1..2
number::mod(1..2, 2.5..inf) => 1..2
number::mod(1..2, -inf..0) => -inf..0
number::mod(1..2, -inf..inf) => -inf..2
number::mod(1..2, -inf!..inf) => -inf!..2
number::mod(1..2, -inf..!inf) => -inf..!2
number::mod(1..2, -inf!..!inf) => -inf!..!2
number::mod(1..2, int(0..1)) => 0..!1
number::mod(1..2, int(0..2)) => 0..!2
number::mod(1..2, int(1..2)) => 0..!2
number::mod(1..2, int(5..20)) => 1..2
number::mod(1..2, int(-20..-5)) => -19..-3
number::mod(1..2, int(-10..10)) => -9..2
number::mod(1..2, int(0..inf)) => 0..2
number::mod(1..2, int(1..inf)) => 0..2
number::mod(1..2, int(-inf..0)) => -inf!..0
number::mod(1..2, int(-inf..1)) => -inf!..!1
number::mod(1..2, int(-inf..inf)) => -inf!..2
number::mod(1..2, nonInt(0..1)) => 0..!1
number::mod(1..2, nonInt(0..2)) => 0..!2
number::mod(1..2, nonInt(-1..2)) => -1!..!2
number::mod(1..2, nonInt(0..inf)) => 0..!2
number::mod(1..2, nonInt(-1..inf)) => -1!..!inf
number::mod(1..2, nonInt(-inf..0)) => -inf!..0
number::mod(1..2, nonInt(-inf..1)) => -inf!..!1
number::mod(1..2, nonInt(-inf..inf)) => -inf!..!inf
number::mod(1..2, 1 | int(3..4)) => 0..2
number::mod(0..inf, number) => -inf..!inf | nan
number::mod(0..inf, -3.14) => -3.14!..0 | nan
number::mod(0..inf, -2) => -2!..0 | nan
number::mod(0..inf, -1) => -1!..0 | nan
number::mod(0..inf, -0.5) => -0.5!..0 | nan
number::mod(0..inf, 0) => never
number::mod(0..inf, 0.5) => 0..!0.5 | nan
number::mod(0..inf, 1) => 0..!1 | nan
number::mod(0..inf, 2) => 0..!2 | nan
number::mod(0..inf, 2.78) => 0..!2.78 | nan
number::mod(0..inf, 3) => 0..!3 | nan
number::mod(0..inf, 3.14) => 0..!3.14 | nan
number::mod(0..inf, 10) => 0..!10 | nan
number::mod(0..inf, 100) => 0..!100 | nan
number::mod(0..inf, -inf) => -inf | 0 | nan
number::mod(0..inf, inf) => 0..!inf | nan
number::mod(0..inf, nan) => nan
number::mod(0..inf, 0..1) => 0..!1 | nan
number::mod(0..inf, 0!..1) => 0..!1 | nan
number::mod(0..inf, 0..!1) => 0..!1 | nan
number::mod(0..inf, 0..2) => 0..!2 | nan
number::mod(0..inf, 0!..!2) => 0..!2 | nan
number::mod(0..inf, 0.5..1.5) => 0..!1.5 | nan
number::mod(0..inf, 0.5..2.5) => 0..!2.5 | nan
number::mod(0..inf, 0.5!..2.5) => 0..!2.5 | nan
number::mod(0..inf, 0.5..!2.5) => 0..!2.5 | nan
number::mod(0..inf, -2.56..3.35) => -2.56!..!3.35 | nan
number::mod(0..inf, 0.5..0.75) => 0..!0.75 | nan
number::mod(0..inf, 1..2) => 0..!2 | nan
number::mod(0..inf, 0..inf) => 0..!inf | nan
number::mod(0..inf, 0!..inf) => 0..!inf | nan
number::mod(0..inf, 0..!inf) => 0..!inf | nan
number::mod(0..inf, 0!..!inf) => 0..!inf | nan
number::mod(0..inf, 1..inf) => 0..!inf | nan
number::mod(0..inf, 1!..inf) => 0..!inf | nan
number::mod(0..inf, 1..!inf) => 0..!inf | nan
number::mod(0..inf, 2..inf) => 0..!inf | nan
number::mod(0..inf, 2!..inf) => 0..!inf | nan
number::mod(0..inf, 2.5..inf) => 0..!inf | nan
number::mod(0..inf, -inf..0) => -inf..0 | nan
number::mod(0..inf, -inf..inf) => -inf..!inf | nan
number::mod(0..inf, -inf!..inf) => -inf!..!inf | nan
number::mod(0..inf, -inf..!inf) => -inf..!inf | nan
number::mod(0..inf, -inf!..!inf) => -inf!..!inf | nan
number::mod(0..inf, int(0..1)) => 0..!1 | nan
number::mod(0..inf, int(0..2)) => 0..!2 | nan
number::mod(0..inf, int(1..2)) => 0..!2 | nan
number::mod(0..inf, int(5..20)) => 0..!20 | nan
number::mod(0..inf, int(-20..-5)) => -20!..0 | nan
number::mod(0..inf, int(-10..10)) => -10!..!10 | nan
number::mod(0..inf, int(0..inf)) => 0..!inf | nan
number::mod(0..inf, int(1..inf)) => 0..!inf | nan
number::mod(0..inf, int(-inf..0)) => -inf!..0 | nan
number::mod(0..inf, int(-inf..1)) => -inf!..!1 | nan
number::mod(0..inf, int(-inf..inf)) => -inf!..!inf | nan
number::mod(0..inf, nonInt(0..1)) => 0..!1 | nan
number::mod(0..inf, nonInt(0..2)) => 0..!2 | nan
number::mod(0..inf, nonInt(-1..2)) => -1!..!2 | nan
number::mod(0..inf, nonInt(0..inf)) => 0..!inf | nan
number::mod(0..inf, nonInt(-1..inf)) => -1!..!inf | nan
number::mod(0..inf, nonInt(-inf..0)) => -inf!..0 | nan
number::mod(0..inf, nonInt(-inf..1)) => -inf!..!1 | nan
number::mod(0..inf, nonInt(-inf..inf)) => -inf!..!inf | nan
number::mod(0..inf, 1 | int(3..4)) => 0..!4 | nan
number::mod(0!..inf, number) => -inf..!inf | nan
number::mod(0!..inf, -3.14) => -3.14!..0 | nan
number::mod(0!..inf, -2) => -2!..0 | nan
number::mod(0!..inf, -1) => -1!..0 | nan
number::mod(0!..inf, -0.5) => -0.5!..0 | nan
number::mod(0!..inf, 0) => never
number::mod(0!..inf, 0.5) => 0..!0.5 | nan
number::mod(0!..inf, 1) => 0..!1 | nan
number::mod(0!..inf, 2) => 0..!2 | nan
number::mod(0!..inf, 2.78) => 0..!2.78 | nan
number::mod(0!..inf, 3) => 0..!3 | nan
number::mod(0!..inf, 3.14) => 0..!3.14 | nan
number::mod(0!..inf, 10) => 0..!10 | nan
number::mod(0!..inf, 100) => 0..!100 | nan
number::mod(0!..inf, -inf) => -inf | nan
number::mod(0!..inf, inf) => 0!..!inf | nan
number::mod(0!..inf, nan) => nan
number::mod(0!..inf, 0..1) => 0..!1 | nan
number::mod(0!..inf, 0!..1) => 0..!1 | nan
number::mod(0!..inf, 0..!1) => 0..!1 | nan
number::mod(0!..inf, 0..2) => 0..!2 | nan
number::mod(0!..inf, 0!..!2) => 0..!2 | nan
number::mod(0!..inf, 0.5..1.5) => 0..!1.5 | nan
number::mod(0!..inf, 0.5..2.5) => 0..!2.5 | nan
number::mod(0!..inf, 0.5!..2.5) => 0..!2.5 | nan
number::mod(0!..inf, 0.5..!2.5) => 0..!2.5 | nan
number::mod(0!..inf, -2.56..3.35) => -2.56!..!3.35 | nan
number::mod(0!..inf, 0.5..0.75) => 0..!0.75 | nan
number::mod(0!..inf, 1..2) => 0..!2 | nan
number::mod(0!..inf, 0..inf) => 0..!inf | nan
number::mod(0!..inf, 0!..inf) => 0..!inf | nan
number::mod(0!..inf, 0..!inf) => 0..!inf | nan
number::mod(0!..inf, 0!..!inf) => 0..!inf | nan
number::mod(0!..inf, 1..inf) => 0..!inf | nan
number::mod(0!..inf, 1!..inf) => 0..!inf | nan
number::mod(0!..inf, 1..!inf) => 0..!inf | nan
number::mod(0!..inf, 2..inf) => 0..!inf | nan
number::mod(0!..inf, 2!..inf) => 0..!inf | nan
number::mod(0!..inf, 2.5..inf) => 0..!inf | nan
number::mod(0!..inf, -inf..0) => -inf..0 | nan
number::mod(0!..inf, -inf..inf) => -inf..!inf | nan
number::mod(0!..inf, -inf!..inf) => -inf!..!inf | nan
number::mod(0!..inf, -inf..!inf) => -inf..!inf | nan
number::mod(0!..inf, -inf!..!inf) => -inf!..!inf | nan
number::mod(0!..inf, int(0..1)) => 0..!1 | nan
number::mod(0!..inf, int(0..2)) => 0..!2 | nan
number::mod(0!..inf, int(1..2)) => 0..!2 | nan
number::mod(0!..inf, int(5..20)) => 0..!20 | nan
number::mod(0!..inf, int(-20..-5)) => -20!..0 | nan
number::mod(0!..inf, int(-10..10)) => -10!..!10 | nan
number::mod(0!..inf, int(0..inf)) => 0..!inf | nan
number::mod(0!..inf, int(1..inf)) => 0..!inf | nan
number::mod(0!..inf, int(-inf..0)) => -inf!..0 | nan
number::mod(0!..inf, int(-inf..1)) => -inf!..!1 | nan
number::mod(0!..inf, int(-inf..inf)) => -inf!..!inf | nan
number::mod(0!..inf, nonInt(0..1)) => 0..!1 | nan
number::mod(0!..inf, nonInt(0..2)) => 0..!2 | nan
number::mod(0!..inf, nonInt(-1..2)) => -1!..!2 | nan
number::mod(0!..inf, nonInt(0..inf)) => 0..!inf | nan
number::mod(0!..inf, nonInt(-1..inf)) => -1!..!inf | nan
number::mod(0!..inf, nonInt(-inf..0)) => -inf!..0 | nan
number::mod(0!..inf, nonInt(-inf..1)) => -inf!..!1 | nan
number::mod(0!..inf, nonInt(-inf..inf)) => -inf!..!inf | nan
number::mod(0!..inf, 1 | int(3..4)) => 0..!4 | nan
number::mod(0..!inf, number) => -inf..!inf | nan
number::mod(0..!inf, -3.14) => -3.14!..0
number::mod(0..!inf, -2) => -2!..0
number::mod(0..!inf, -1) => -1!..0
number::mod(0..!inf, -0.5) => -0.5!..0
number::mod(0..!inf, 0) => never
number::mod(0..!inf, 0.5) => 0..!0.5
number::mod(0..!inf, 1) => 0..!1
number::mod(0..!inf, 2) => 0..!2
number::mod(0..!inf, 2.78) => 0..!2.78
number::mod(0..!inf, 3) => 0..!3
number::mod(0..!inf, 3.14) => 0..!3.14
number::mod(0..!inf, 10) => 0..!10
number::mod(0..!inf, 100) => 0..!100
number::mod(0..!inf, -inf) => -inf | 0
number::mod(0..!inf, inf) => 0..!inf
number::mod(0..!inf, nan) => nan
number::mod(0..!inf, 0..1) => 0..!1
number::mod(0..!inf, 0!..1) => 0..!1
number::mod(0..!inf, 0..!1) => 0..!1
number::mod(0..!inf, 0..2) => 0..!2
number::mod(0..!inf, 0!..!2) => 0..!2
number::mod(0..!inf, 0.5..1.5) => 0..!1.5
number::mod(0..!inf, 0.5..2.5) => 0..!2.5
number::mod(0..!inf, 0.5!..2.5) => 0..!2.5
number::mod(0..!inf, 0.5..!2.5) => 0..!2.5
number::mod(0..!inf, -2.56..3.35) => -2.56!..!3.35
number::mod(0..!inf, 0.5..0.75) => 0..!0.75
number::mod(0..!inf, 1..2) => 0..!2
number::mod(0..!inf, 0..inf) => 0..!inf
number::mod(0..!inf, 0!..inf) => 0..!inf
number::mod(0..!inf, 0..!inf) => 0..!inf
number::mod(0..!inf, 0!..!inf) => 0..!inf
number::mod(0..!inf, 1..inf) => 0..!inf
number::mod(0..!inf, 1!..inf) => 0..!inf
number::mod(0..!inf, 1..!inf) => 0..!inf
number::mod(0..!inf, 2..inf) => 0..!inf
number::mod(0..!inf, 2!..inf) => 0..!inf
number::mod(0..!inf, 2.5..inf) => 0..!inf
number::mod(0..!inf, -inf..0) => -inf..0
number::mod(0..!inf, -inf..inf) => -inf..!inf
number::mod(0..!inf, -inf!..inf) => -inf!..!inf
number::mod(0..!inf, -inf..!inf) => -inf..!inf
number::mod(0..!inf, -inf!..!inf) => -inf!..!inf
number::mod(0..!inf, int(0..1)) => 0..!1
number::mod(0..!inf, int(0..2)) => 0..!2
number::mod(0..!inf, int(1..2)) => 0..!2
number::mod(0..!inf, int(5..20)) => 0..!20
number::mod(0..!inf, int(-20..-5)) => -20!..0
number::mod(0..!inf, int(-10..10)) => -10!..!10
number::mod(0..!inf, int(0..inf)) => 0..!inf
number::mod(0..!inf, int(1..inf)) => 0..!inf
number::mod(0..!inf, int(-inf..0)) => -inf!..0
number::mod(0..!inf, int(-inf..1)) => -inf!..!1
number::mod(0..!inf, int(-inf..inf)) => -inf!..!inf
number::mod(0..!inf, nonInt(0..1)) => 0..!1
number::mod(0..!inf, nonInt(0..2)) => 0..!2
number::mod(0..!inf, nonInt(-1..2)) => -1!..!2
number::mod(0..!inf, nonInt(0..inf)) => 0..!inf
number::mod(0..!inf, nonInt(-1..inf)) => -1!..!inf
number::mod(0..!inf, nonInt(-inf..0)) => -inf!..0
number::mod(0..!inf, nonInt(-inf..1)) => -inf!..!1
number::mod(0..!inf, nonInt(-inf..inf)) => -inf!..!inf
number::mod(0..!inf, 1 | int(3..4)) => 0..!4
number::mod(0!..!inf, number) => -inf..!inf | nan
number::mod(0!..!inf, -3.14) => -3.14!..0
number::mod(0!..!inf, -2) => -2!..0
number::mod(0!..!inf, -1) => -1!..0
number::mod(0!..!inf, -0.5) => -0.5!..0
number::mod(0!..!inf, 0) => never
number::mod(0!..!inf, 0.5) => 0..!0.5
number::mod(0!..!inf, 1) => 0..!1
number::mod(0!..!inf, 2) => 0..!2
number::mod(0!..!inf, 2.78) => 0..!2.78
number::mod(0!..!inf, 3) => 0..!3
number::mod(0!..!inf, 3.14) => 0..!3.14
number::mod(0!..!inf, 10) => 0..!10
number::mod(0!..!inf, 100) => 0..!100
number::mod(0!..!inf, -inf) => -inf
number::mod(0!..!inf, inf) => 0!..!inf
number::mod(0!..!inf, nan) => nan
number::mod(0!..!inf, 0..1) => 0..!1
number::mod(0!..!inf, 0!..1) => 0..!1
number::mod(0!..!inf, 0..!1) => 0..!1
number::mod(0!..!inf, 0..2) => 0..!2
number::mod(0!..!inf, 0!..!2) => 0..!2
number::mod(0!..!inf, 0.5..1.5) => 0..!1.5
number::mod(0!..!inf, 0.5..2.5) => 0..!2.5
number::mod(0!..!inf, 0.5!..2.5) => 0..!2.5
number::mod(0!..!inf, 0.5..!2.5) => 0..!2.5
number::mod(0!..!inf, -2.56..3.35) => -2.56!..!3.35
number::mod(0!..!inf, 0.5..0.75) => 0..!0.75
number::mod(0!..!inf, 1..2) => 0..!2
number::mod(0!..!inf, 0..inf) => 0..!inf
number::mod(0!..!inf, 0!..inf) => 0..!inf
number::mod(0!..!inf, 0..!inf) => 0..!inf
number::mod(0!..!inf, 0!..!inf) => 0..!inf
number::mod(0!..!inf, 1..inf) => 0..!inf
number::mod(0!..!inf, 1!..inf) => 0..!inf
number::mod(0!..!inf, 1..!inf) => 0..!inf
number::mod(0!..!inf, 2..inf) => 0..!inf
number::mod(0!..!inf, 2!..inf) => 0..!inf
number::mod(0!..!inf, 2.5..inf) => 0..!inf
number::mod(0!..!inf, -inf..0) => -inf..0
number::mod(0!..!inf, -inf..inf) => -inf..!inf
number::mod(0!..!inf, -inf!..inf) => -inf!..!inf
number::mod(0!..!inf, -inf..!inf) => -inf..!inf
number::mod(0!..!inf, -inf!..!inf) => -inf!..!inf
number::mod(0!..!inf, int(0..1)) => 0..!1
number::mod(0!..!inf, int(0..2)) => 0..!2
number::mod(0!..!inf, int(1..2)) => 0..!2
number::mod(0!..!inf, int(5..20)) => 0..!20
number::mod(0!..!inf, int(-20..-5)) => -20!..0
number::mod(0!..!inf, int(-10..10)) => -10!..!10
number::mod(0!..!inf, int(0..inf)) => 0..!inf
number::mod(0!..!inf, int(1..inf)) => 0..!inf
number::mod(0!..!inf, int(-inf..0)) => -inf!..0
number::mod(0!..!inf, int(-inf..1)) => -inf!..!1
number::mod(0!..!inf, int(-inf..inf)) => -inf!..!inf
number::mod(0!..!inf, nonInt(0..1)) => 0..!1
number::mod(0!..!inf, nonInt(0..2)) => 0..!2
number::mod(0!..!inf, nonInt(-1..2)) => -1!..!2
number::mod(0!..!inf, nonInt(0..inf)) => 0..!inf
number::mod(0!..!inf, nonInt(-1..inf)) => -1!..!inf
number::mod(0!..!inf, nonInt(-inf..0)) => -inf!..0
number::mod(0!..!inf, nonInt(-inf..1)) => -inf!..!1
number::mod(0!..!inf, nonInt(-inf..inf)) => -inf!..!inf
number::mod(0!..!inf, 1 | int(3..4)) => 0..!4
number::mod(1..inf, number) => -inf..!inf | nan
number::mod(1..inf, -3.14) => -3.14!..0 | nan
number::mod(1..inf, -2) => -2!..0 | nan
number::mod(1..inf, -1) => -1!..0 | nan
number::mod(1..inf, -0.5) => -0.5!..0 | nan
number::mod(1..inf, 0) => never
number::mod(1..inf, 0.5) => 0..!0.5 | nan
number::mod(1..inf, 1) => 0..!1 | nan
number::mod(1..inf, 2) => 0..!2 | nan
number::mod(1..inf, 2.78) => 0..!2.78 | nan
number::mod(1..inf, 3) => 0..!3 | nan
number::mod(1..inf, 3.14) => 0..!3.14 | nan
number::mod(1..inf, 10) => 0..!10 | nan
number::mod(1..inf, 100) => 0..!100 | nan
number::mod(1..inf, -inf) => -inf | nan
number::mod(1..inf, inf) => 1..!inf | nan
number::mod(1..inf, nan) => nan
number::mod(1..inf, 0..1) => 0..!1 | nan
number::mod(1..inf, 0!..1) => 0..!1 | nan
number::mod(1..inf, 0..!1) => 0..!1 | nan
number::mod(1..inf, 0..2) => 0..!2 | nan
number::mod(1..inf, 0!..!2) => 0..!2 | nan
number::mod(1..inf, 0.5..1.5) => 0..!1.5 | nan
number::mod(1..inf, 0.5..2.5) => 0..!2.5 | nan
number::mod(1..inf, 0.5!..2.5) => 0..!2.5 | nan
number::mod(1..inf, 0.5..!2.5) => 0..!2.5 | nan
number::mod(1..inf, -2.56..3.35) => -2.56!..!3.35 | nan
number::mod(1..inf, 0.5..0.75) => 0..!0.75 | nan
number::mod(1..inf, 1..2) => 0..!2 | nan
number::mod(1..inf, 0..inf) => 0..!inf | nan
number::mod(1..inf, 0!..inf) => 0..!inf | nan
number::mod(1..inf, 0..!inf) => 0..!inf | nan
number::mod(1..inf, 0!..!inf) => 0..!inf | nan
number::mod(1..inf, 1..inf) => 0..!inf | nan
number::mod(1..inf, 1!..inf) => 0..!inf | nan
number::mod(1..inf, 1..!inf) => 0..!inf | nan
number::mod(1..inf, 2..inf) => 0..!inf | nan
number::mod(1..inf, 2!..inf) => 0..!inf | nan
number::mod(1..inf, 2.5..inf) => 0..!inf | nan
number::mod(1..inf, -inf..0) => -inf..0 | nan
number::mod(1..inf, -inf..inf) => -inf..!inf | nan
number::mod(1..inf, -inf!..inf) => -inf!..!inf | nan
number::mod(1..inf, -inf..!inf) => -inf..!inf | nan
number::mod(1..inf, -inf!..!inf) => -inf!..!inf | nan
number::mod(1..inf, int(0..1)) => 0..!1 | nan
number::mod(1..inf, int(0..2)) => 0..!2 | nan
number::mod(1..inf, int(1..2)) => 0..!2 | nan
number::mod(1..inf, int(5..20)) => 0..!20 | nan
number::mod(1..inf, int(-20..-5)) => -20!..0 | nan
number::mod(1..inf, int(-10..10)) => -10!..!10 | nan
number::mod(1..inf, int(0..inf)) => 0..!inf | nan
number::mod(1..inf, int(1..inf)) => 0..!inf | nan
number::mod(1..inf, int(-inf..0)) => -inf!..0 | nan
number::mod(1..inf, int(-inf..1)) => -inf!..!1 | nan
number::mod(1..inf, int(-inf..inf)) => -inf!..!inf | nan
number::mod(1..inf, nonInt(0..1)) => 0..!1 | nan
number::mod(1..inf, nonInt(0..2)) => 0..!2 | nan
number::mod(1..inf, nonInt(-1..2)) => -1!..!2 | nan
number::mod(1..inf, nonInt(0..inf)) => 0..!inf | nan
number::mod(1..inf, nonInt(-1..inf)) => -1!..!inf | nan
number::mod(1..inf, nonInt(-inf..0)) => -inf!..0 | nan
number::mod(1..inf, nonInt(-inf..1)) => -inf!..!1 | nan
number::mod(1..inf, nonInt(-inf..inf)) => -inf!..!inf | nan
number::mod(1..inf, 1 | int(3..4)) => 0..!4 | nan
number::mod(1!..inf, number) => -inf..!inf | nan
number::mod(1!..inf, -3.14) => -3.14!..0 | nan
number::mod(1!..inf, -2) => -2!..0 | nan
number::mod(1!..inf, -1) => -1!..0 | nan
number::mod(1!..inf, -0.5) => -0.5!..0 | nan
number::mod(1!..inf, 0) => never
number::mod(1!..inf, 0.5) => 0..!0.5 | nan
number::mod(1!..inf, 1) => 0..!1 | nan
number::mod(1!..inf, 2) => 0..!2 | nan
number::mod(1!..inf, 2.78) => 0..!2.78 | nan
number::mod(1!..inf, 3) => 0..!3 | nan
number::mod(1!..inf, 3.14) => 0..!3.14 | nan
number::mod(1!..inf, 10) => 0..!10 | nan
number::mod(1!..inf, 100) => 0..!100 | nan
number::mod(1!..inf, -inf) => -inf | nan
number::mod(1!..inf, inf) => 1!..!inf | nan
number::mod(1!..inf, nan) => nan
number::mod(1!..inf, 0..1) => 0..!1 | nan
number::mod(1!..inf, 0!..1) => 0..!1 | nan
number::mod(1!..inf, 0..!1) => 0..!1 | nan
number::mod(1!..inf, 0..2) => 0..!2 | nan
number::mod(1!..inf, 0!..!2) => 0..!2 | nan
number::mod(1!..inf, 0.5..1.5) => 0..!1.5 | nan
number::mod(1!..inf, 0.5..2.5) => 0..!2.5 | nan
number::mod(1!..inf, 0.5!..2.5) => 0..!2.5 | nan
number::mod(1!..inf, 0.5..!2.5) => 0..!2.5 | nan
number::mod(1!..inf, -2.56..3.35) => -2.56!..!3.35 | nan
number::mod(1!..inf, 0.5..0.75) => 0..!0.75 | nan
number::mod(1!..inf, 1..2) => 0..!2 | nan
number::mod(1!..inf, 0..inf) => 0..!inf | nan
number::mod(1!..inf, 0!..inf) => 0..!inf | nan
number::mod(1!..inf, 0..!inf) => 0..!inf | nan
number::mod(1!..inf, 0!..!inf) => 0..!inf | nan
number::mod(1!..inf, 1..inf) => 0..!inf | nan
number::mod(1!..inf, 1!..inf) => 0..!inf | nan
number::mod(1!..inf, 1..!inf) => 0..!inf | nan
number::mod(1!..inf, 2..inf) => 0..!inf | nan
number::mod(1!..inf, 2!..inf) => 0..!inf | nan
number::mod(1!..inf, 2.5..inf) => 0..!inf | nan
number::mod(1!..inf, -inf..0) => -inf..0 | nan
number::mod(1!..inf, -inf..inf) => -inf..!inf | nan
number::mod(1!..inf, -inf!..inf) => -inf!..!inf | nan
number::mod(1!..inf, -inf..!inf) => -inf..!inf | nan
number::mod(1!..inf, -inf!..!inf) => -inf!..!inf | nan
number::mod(1!..inf, int(0..1)) => 0..!1 | nan
number::mod(1!..inf, int(0..2)) => 0..!2 | nan
number::mod(1!..inf, int(1..2)) => 0..!2 | nan
number::mod(1!..inf, int(5..20)) => 0..!20 | nan
number::mod(1!..inf, int(-20..-5)) => -20!..0 | nan
number::mod(1!..inf, int(-10..10)) => -10!..!10 | nan
number::mod(1!..inf, int(0..inf)) => 0..!inf | nan
number::mod(1!..inf, int(1..inf)) => 0..!inf | nan
number::mod(1!..inf, int(-inf..0)) => -inf!..0 | nan
number::mod(1!..inf, int(-inf..1)) => -inf!..!1 | nan
number::mod(1!..inf, int(-inf..inf)) => -inf!..!inf | nan
number::mod(1!..inf, nonInt(0..1)) => 0..!1 | nan
number::mod(1!..inf, nonInt(0..2)) => 0..!2 | nan
number::mod(1!..inf, nonInt(-1..2)) => -1!..!2 | nan
number::mod(1!..inf, nonInt(0..inf)) => 0..!inf | nan
number::mod(1!..inf, nonInt(-1..inf)) => -1!..!inf | nan
number::mod(1!..inf, nonInt(-inf..0)) => -inf!..0 | nan
number::mod(1!..inf, nonInt(-inf..1)) => -inf!..!1 | nan
number::mod(1!..inf, nonInt(-inf..inf)) => -inf!..!inf | nan
number::mod(1!..inf, 1 | int(3..4)) => 0..!4 | nan
number::mod(1..!inf, number) => -inf..!inf | nan
number::mod(1..!inf, -3.14) => -3.14!..0
number::mod(1..!inf, -2) => -2!..0
number::mod(1..!inf, -1) => -1!..0
number::mod(1..!inf, -0.5) => -0.5!..0
number::mod(1..!inf, 0) => never
number::mod(1..!inf, 0.5) => 0..!0.5
number::mod(1..!inf, 1) => 0..!1
number::mod(1..!inf, 2) => 0..!2
number::mod(1..!inf, 2.78) => 0..!2.78
number::mod(1..!inf, 3) => 0..!3
number::mod(1..!inf, 3.14) => 0..!3.14
number::mod(1..!inf, 10) => 0..!10
number::mod(1..!inf, 100) => 0..!100
number::mod(1..!inf, -inf) => -inf
number::mod(1..!inf, inf) => 1..!inf
number::mod(1..!inf, nan) => nan
number::mod(1..!inf, 0..1) => 0..!1
number::mod(1..!inf, 0!..1) => 0..!1
number::mod(1..!inf, 0..!1) => 0..!1
number::mod(1..!inf, 0..2) => 0..!2
number::mod(1..!inf, 0!..!2) => 0..!2
number::mod(1..!inf, 0.5..1.5) => 0..!1.5
number::mod(1..!inf, 0.5..2.5) => 0..!2.5
number::mod(1..!inf, 0.5!..2.5) => 0..!2.5
number::mod(1..!inf, 0.5..!2.5) => 0..!2.5
number::mod(1..!inf, -2.56..3.35) => -2.56!..!3.35
number::mod(1..!inf, 0.5..0.75) => 0..!0.75
number::mod(1..!inf, 1..2) => 0..!2
number::mod(1..!inf, 0..inf) => 0..!inf
number::mod(1..!inf, 0!..inf) => 0..!inf
number::mod(1..!inf, 0..!inf) => 0..!inf
number::mod(1..!inf, 0!..!inf) => 0..!inf
number::mod(1..!inf, 1..inf) => 0..!inf
number::mod(1..!inf, 1!..inf) => 0..!inf
number::mod(1..!inf, 1..!inf) => 0..!inf
number::mod(1..!inf, 2..inf) => 0..!inf
number::mod(1..!inf, 2!..inf) => 0..!inf
number::mod(1..!inf, 2.5..inf) => 0..!inf
number::mod(1..!inf, -inf..0) => -inf..0
number::mod(1..!inf, -inf..inf) => -inf..!inf
number::mod(1..!inf, -inf!..inf) => -inf!..!inf
number::mod(1..!inf, -inf..!inf) => -inf..!inf
number::mod(1..!inf, -inf!..!inf) => -inf!..!inf
number::mod(1..!inf, int(0..1)) => 0..!1
number::mod(1..!inf, int(0..2)) => 0..!2
number::mod(1..!inf, int(1..2)) => 0..!2
number::mod(1..!inf, int(5..20)) => 0..!20
number::mod(1..!inf, int(-20..-5)) => -20!..0
number::mod(1..!inf, int(-10..10)) => -10!..!10
number::mod(1..!inf, int(0..inf)) => 0..!inf
number::mod(1..!inf, int(1..inf)) => 0..!inf
number::mod(1..!inf, int(-inf..0)) => -inf!..0
number::mod(1..!inf, int(-inf..1)) => -inf!..!1
number::mod(1..!inf, int(-inf..inf)) => -inf!..!inf
number::mod(1..!inf, nonInt(0..1)) => 0..!1
number::mod(1..!inf, nonInt(0..2)) => 0..!2
number::mod(1..!inf, nonInt(-1..2)) => -1!..!2
number::mod(1..!inf, nonInt(0..inf)) => 0..!inf
number::mod(1..!inf, nonInt(-1..inf)) => -1!..!inf
number::mod(1..!inf, nonInt(-inf..0)) => -inf!..0
number::mod(1..!inf, nonInt(-inf..1)) => -inf!..!1
number::mod(1..!inf, nonInt(-inf..inf)) => -inf!..!inf
number::mod(1..!inf, 1 | int(3..4)) => 0..!4
number::mod(2..inf, number) => -inf..!inf | nan
number::mod(2..inf, -3.14) => -3.14!..0 | nan
number::mod(2..inf, -2) => -2!..0 | nan
number::mod(2..inf, -1) => -1!..0 | nan
number::mod(2..inf, -0.5) => -0.5!..0 | nan
number::mod(2..inf, 0) => never
number::mod(2..inf, 0.5) => 0..!0.5 | nan
number::mod(2..inf, 1) => 0..!1 | nan
number::mod(2..inf, 2) => 0..!2 | nan
number::mod(2..inf, 2.78) => 0..!2.78 | nan
number::mod(2..inf, 3) => 0..!3 | nan
number::mod(2..inf, 3.14) => 0..!3.14 | nan
number::mod(2..inf, 10) => 0..!10 | nan
number::mod(2..inf, 100) => 0..!100 | nan
number::mod(2..inf, -inf) => -inf | nan
number::mod(2..inf, inf) => 2..!inf | nan
number::mod(2..inf, nan) => nan
number::mod(2..inf, 0..1) => 0..!1 | nan
number::mod(2..inf, 0!..1) => 0..!1 | nan
number::mod(2..inf, 0..!1) => 0..!1 | nan
number::mod(2..inf, 0..2) => 0..!2 | nan
number::mod(2..inf, 0!..!2) => 0..!2 | nan
number::mod(2..inf, 0.5..1.5) => 0..!1.5 | nan
number::mod(2..inf, 0.5..2.5) => 0..!2.5 | nan
number::mod(2..inf, 0.5!..2.5) => 0..!2.5 | nan
number::mod(2..inf, 0.5..!2.5) => 0..!2.5 | nan
number::mod(2..inf, -2.56..3.35) => -2.56!..!3.35 | nan
number::mod(2..inf, 0.5..0.75) => 0..!0.75 | nan
number::mod(2..inf, 1..2) => 0..!2 | nan
number::mod(2..inf, 0..inf) => 0..!inf | nan
number::mod(2..inf, 0!..inf) => 0..!inf | nan
number::mod(2..inf, 0..!inf) => 0..!inf | nan
number::mod(2..inf, 0!..!inf) => 0..!inf | nan
number::mod(2..inf, 1..inf) => 0..!inf | nan
number::mod(2..inf, 1!..inf) => 0..!inf | nan
number::mod(2..inf, 1..!inf) => 0..!inf | nan
number::mod(2..inf, 2..inf) => 0..!inf | nan
number::mod(2..inf, 2!..inf) => 0..!inf | nan
number::mod(2..inf, 2.5..inf) => 0..!inf | nan
number::mod(2..inf, -inf..0) => -inf..0 | nan
number::mod(2..inf, -inf..inf) => -inf..!inf | nan
number::mod(2..inf, -inf!..inf) => -inf!..!inf | nan
number::mod(2..inf, -inf..!inf) => -inf..!inf | nan
number::mod(2..inf, -inf!..!inf) => -inf!..!inf | nan
number::mod(2..inf, int(0..1)) => 0..!1 | nan
number::mod(2..inf, int(0..2)) => 0..!2 | nan
number::mod(2..inf, int(1..2)) => 0..!2 | nan
number::mod(2..inf, int(5..20)) => 0..!20 | nan
number::mod(2..inf, int(-20..-5)) => -20!..0 | nan
number::mod(2..inf, int(-10..10)) => -10!..!10 | nan
number::mod(2..inf, int(0..inf)) => 0..!inf | nan
number::mod(2..inf, int(1..inf)) => 0..!inf | nan
number::mod(2..inf, int(-inf..0)) => -inf!..0 | nan
number::mod(2..inf, int(-inf..1)) => -inf!..!1 | nan
number::mod(2..inf, int(-inf..inf)) => -inf!..!inf | nan
number::mod(2..inf, nonInt(0..1)) => 0..!1 | nan
number::mod(2..inf, nonInt(0..2)) => 0..!2 | nan
number::mod(2..inf, nonInt(-1..2)) => -1!..!2 | nan
number::mod(2..inf, nonInt(0..inf)) => 0..!inf | nan
number::mod(2..inf, nonInt(-1..inf)) => -1!..!inf | nan
number::mod(2..inf, nonInt(-inf..0)) => -inf!..0 | nan
number::mod(2..inf, nonInt(-inf..1)) => -inf!..!1 | nan
number::mod(2..inf, nonInt(-inf..inf)) => -inf!..!inf | nan
number::mod(2..inf, 1 | int(3..4)) => 0..!4 | nan
number::mod(2!..inf, number) => -inf..!inf | nan
number::mod(2!..inf, -3.14) => -3.14!..0 | nan
number::mod(2!..inf, -2) => -2!..0 | nan
number::mod(2!..inf, -1) => -1!..0 | nan
number::mod(2!..inf, -0.5) => -0.5!..0 | nan
number::mod(2!..inf, 0) => never
number::mod(2!..inf, 0.5) => 0..!0.5 | nan
number::mod(2!..inf, 1) => 0..!1 | nan
number::mod(2!..inf, 2) => 0..!2 | nan
number::mod(2!..inf, 2.78) => 0..!2.78 | nan
number::mod(2!..inf, 3) => 0..!3 | nan
number::mod(2!..inf, 3.14) => 0..!3.14 | nan
number::mod(2!..inf, 10) => 0..!10 | nan
number::mod(2!..inf, 100) => 0..!100 | nan
number::mod(2!..inf, -inf) => -inf | nan
number::mod(2!..inf, inf) => 2!..!inf | nan
number::mod(2!..inf, nan) => nan
number::mod(2!..inf, 0..1) => 0..!1 | nan
number::mod(2!..inf, 0!..1) => 0..!1 | nan
number::mod(2!..inf, 0..!1) => 0..!1 | nan
number::mod(2!..inf, 0..2) => 0..!2 | nan
number::mod(2!..inf, 0!..!2) => 0..!2 | nan
number::mod(2!..inf, 0.5..1.5) => 0..!1.5 | nan
number::mod(2!..inf, 0.5..2.5) => 0..!2.5 | nan
number::mod(2!..inf, 0.5!..2.5) => 0..!2.5 | nan
number::mod(2!..inf, 0.5..!2.5) => 0..!2.5 | nan
number::mod(2!..inf, -2.56..3.35) => -2.56!..!3.35 | nan
number::mod(2!..inf, 0.5..0.75) => 0..!0.75 | nan
number::mod(2!..inf, 1..2) => 0..!2 | nan
number::mod(2!..inf, 0..inf) => 0..!inf | nan
number::mod(2!..inf, 0!..inf) => 0..!inf | nan
number::mod(2!..inf, 0..!inf) => 0..!inf | nan
number::mod(2!..inf, 0!..!inf) => 0..!inf | nan
number::mod(2!..inf, 1..inf) => 0..!inf | nan
number::mod(2!..inf, 1!..inf) => 0..!inf | nan
number::mod(2!..inf, 1..!inf) => 0..!inf | nan
number::mod(2!..inf, 2..inf) => 0..!inf | nan
number::mod(2!..inf, 2!..inf) => 0..!inf | nan
number::mod(2!..inf, 2.5..inf) => 0..!inf | nan
number::mod(2!..inf, -inf..0) => -inf..0 | nan
number::mod(2!..inf, -inf..inf) => -inf..!inf | nan
number::mod(2!..inf, -inf!..inf) => -inf!..!inf | nan
number::mod(2!..inf, -inf..!inf) => -inf..!inf | nan
number::mod(2!..inf, -inf!..!inf) => -inf!..!inf | nan
number::mod(2!..inf, int(0..1)) => 0..!1 | nan
number::mod(2!..inf, int(0..2)) => 0..!2 | nan
number::mod(2!..inf, int(1..2)) => 0..!2 | nan
number::mod(2!..inf, int(5..20)) => 0..!20 | nan
number::mod(2!..inf, int(-20..-5)) => -20!..0 | nan
number::mod(2!..inf, int(-10..10)) => -10!..!10 | nan
number::mod(2!..inf, int(0..inf)) => 0..!inf | nan
number::mod(2!..inf, int(1..inf)) => 0..!inf | nan
number::mod(2!..inf, int(-inf..0)) => -inf!..0 | nan
number::mod(2!..inf, int(-inf..1)) => -inf!..!1 | nan
number::mod(2!..inf, int(-inf..inf)) => -inf!..!inf | nan
number::mod(2!..inf, nonInt(0..1)) => 0..!1 | nan
number::mod(2!..inf, nonInt(0..2)) => 0..!2 | nan
number::mod(2!..inf, nonInt(-1..2)) => -1!..!2 | nan
number::mod(2!..inf, nonInt(0..inf)) => 0..!inf | nan
number::mod(2!..inf, nonInt(-1..inf)) => -1!..!inf | nan
number::mod(2!..inf, nonInt(-inf..0)) => -inf!..0 | nan
number::mod(2!..inf, nonInt(-inf..1)) => -inf!..!1 | nan
number::mod(2!..inf, nonInt(-inf..inf)) => -inf!..!inf | nan
number::mod(2!..inf, 1 | int(3..4)) => 0..!4 | nan
number::mod(2.5..inf, number) => -inf..!inf | nan
number::mod(2.5..inf, -3.14) => -3.14!..0 | nan
number::mod(2.5..inf, -2) => -2!..0 | nan
number::mod(2.5..inf, -1) => -1!..0 | nan
number::mod(2.5..inf, -0.5) => -0.5!..0 | nan
number::mod(2.5..inf, 0) => never
number::mod(2.5..inf, 0.5) => 0..!0.5 | nan
number::mod(2.5..inf, 1) => 0..!1 | nan
number::mod(2.5..inf, 2) => 0..!2 | nan
number::mod(2.5..inf, 2.78) => 0..!2.78 | nan
number::mod(2.5..inf, 3) => 0..!3 | nan
number::mod(2.5..inf, 3.14) => 0..!3.14 | nan
number::mod(2.5..inf, 10) => 0..!10 | nan
number::mod(2.5..inf, 100) => 0..!100 | nan
number::mod(2.5..inf, -inf) => -inf | nan
number::mod(2.5..inf, inf) => 2.5..!inf | nan
number::mod(2.5..inf, nan) => nan
number::mod(2.5..inf, 0..1) => 0..!1 | nan
number::mod(2.5..inf, 0!..1) => 0..!1 | nan
number::mod(2.5..inf, 0..!1) => 0..!1 | nan
number::mod(2.5..inf, 0..2) => 0..!2 | nan
number::mod(2.5..inf, 0!..!2) => 0..!2 | nan
number::mod(2.5..inf, 0.5..1.5) => 0..!1.5 | nan
number::mod(2.5..inf, 0.5..2.5) => 0..!2.5 | nan
number::mod(2.5..inf, 0.5!..2.5) => 0..!2.5 | nan
number::mod(2.5..inf, 0.5..!2.5) => 0..!2.5 | nan
number::mod(2.5..inf, -2.56..3.35) => -2.56!..!3.35 | nan
number::mod(2.5..inf, 0.5..0.75) => 0..!0.75 | nan
number::mod(2.5..inf, 1..2) => 0..!2 | nan
number::mod(2.5..inf, 0..inf) => 0..!inf | nan
number::mod(2.5..inf, 0!..inf) => 0..!inf | nan
number::mod(2.5..inf, 0..!inf) => 0..!inf | nan
number::mod(2.5..inf, 0!..!inf) => 0..!inf | nan
number::mod(2.5..inf, 1..inf) => 0..!inf | nan
number::mod(2.5..inf, 1!..inf) => 0..!inf | nan
number::mod(2.5..inf, 1..!inf) => 0..!inf | nan
number::mod(2.5..inf, 2..inf) => 0..!inf | nan
number::mod(2.5..inf, 2!..inf) => 0..!inf | nan
number::mod(2.5..inf, 2.5..inf) => 0..!inf | nan
number::mod(2.5..inf, -inf..0) => -inf..0 | nan
number::mod(2.5..inf, -inf..inf) => -inf..!inf | nan
number::mod(2.5..inf, -inf!..inf) => -inf!..!inf | nan
number::mod(2.5..inf, -inf..!inf) => -inf..!inf | nan
number::mod(2.5..inf, -inf!..!inf) => -inf!..!inf | nan
number::mod(2.5..inf, int(0..1)) => 0..!1 | nan
number::mod(2.5..inf, int(0..2)) => 0..!2 | nan
number::mod(2.5..inf, int(1..2)) => 0..!2 | nan
number::mod(2.5..inf, int(5..20)) => 0..!20 | nan
number::mod(2.5..inf, int(-20..-5)) => -20!..0 | nan
number::mod(2.5..inf, int(-10..10)) => -10!..!10 | nan
number::mod(2.5..inf, int(0..inf)) => 0..!inf | nan
number::mod(2.5..inf, int(1..inf)) => 0..!inf | nan
number::mod(2.5..inf, int(-inf..0)) => -inf!..0 | nan
number::mod(2.5..inf, int(-inf..1)) => -inf!..!1 | nan
number::mod(2.5..inf, int(-inf..inf)) => -inf!..!inf | nan
number::mod(2.5..inf, nonInt(0..1)) => 0..!1 | nan
number::mod(2.5..inf, nonInt(0..2)) => 0..!2 | nan
number::mod(2.5..inf, nonInt(-1..2)) => -1!..!2 | nan
number::mod(2.5..inf, nonInt(0..inf)) => 0..!inf | nan
number::mod(2.5..inf, nonInt(-1..inf)) => -1!..!inf | nan
number::mod(2.5..inf, nonInt(-inf..0)) => -inf!..0 | nan
number::mod(2.5..inf, nonInt(-inf..1)) => -inf!..!1 | nan
number::mod(2.5..inf, nonInt(-inf..inf)) => -inf!..!inf | nan
number::mod(2.5..inf, 1 | int(3..4)) => 0..!4 | nan
number::mod(-inf..0, number) => -inf!..inf | nan
number::mod(-inf..0, -3.14) => -3.14!..0 | nan
number::mod(-inf..0, -2) => -2!..0 | nan
number::mod(-inf..0, -1) => -1!..0 | nan
number::mod(-inf..0, -0.5) => -0.5!..0 | nan
number::mod(-inf..0, 0) => never
number::mod(-inf..0, 0.5) => 0..!0.5 | nan
number::mod(-inf..0, 1) => 0..!1 | nan
number::mod(-inf..0, 2) => 0..!2 | nan
number::mod(-inf..0, 2.78) => 0..!2.78 | nan
number::mod(-inf..0, 3) => 0..!3 | nan
number::mod(-inf..0, 3.14) => 0..!3.14 | nan
number::mod(-inf..0, 10) => 0..!10 | nan
number::mod(-inf..0, 100) => 0..!100 | nan
number::mod(-inf..0, -inf) => -inf!..0 | nan
number::mod(-inf..0, inf) => 0 | inf | nan
number::mod(-inf..0, nan) => nan
number::mod(-inf..0, 0..1) => 0..!1 | nan
number::mod(-inf..0, 0!..1) => 0..!1 | nan
number::mod(-inf..0, 0..!1) => 0..!1 | nan
number::mod(-inf..0, 0..2) => 0..!2 | nan
number::mod(-inf..0, 0!..!2) => 0..!2 | nan
number::mod(-inf..0, 0.5..1.5) => 0..!1.5 | nan
number::mod(-inf..0, 0.5..2.5) => 0..!2.5 | nan
number::mod(-inf..0, 0.5!..2.5) => 0..!2.5 | nan
number::mod(-inf..0, 0.5..!2.5) => 0..!2.5 | nan
number::mod(-inf..0, -2.56..3.35) => -2.56!..!3.35 | nan
number::mod(-inf..0, 0.5..0.75) => 0..!0.75 | nan
number::mod(-inf..0, 1..2) => 0..!2 | nan
number::mod(-inf..0, 0..inf) => 0..inf | nan
number::mod(-inf..0, 0!..inf) => 0..inf | nan
number::mod(-inf..0, 0..!inf) => 0..!inf | nan
number::mod(-inf..0, 0!..!inf) => 0..!inf | nan
number::mod(-inf..0, 1..inf) => 0..inf | nan
number::mod(-inf..0, 1!..inf) => 0..inf | nan
number::mod(-inf..0, 1..!inf) => 0..!inf | nan
number::mod(-inf..0, 2..inf) => 0..inf | nan
number::mod(-inf..0, 2!..inf) => 0..inf | nan
number::mod(-inf..0, 2.5..inf) => 0..inf | nan
number::mod(-inf..0, -inf..0) => -inf!..0 | nan
number::mod(-inf..0, -inf..inf) => -inf!..inf | nan
number::mod(-inf..0, -inf!..inf) => -inf!..inf | nan
number::mod(-inf..0, -inf..!inf) => -inf!..!inf | nan
number::mod(-inf..0, -inf!..!inf) => -inf!..!inf | nan
number::mod(-inf..0, int(0..1)) => 0..!1 | nan
number::mod(-inf..0, int(0..2)) => 0..!2 | nan
number::mod(-inf..0, int(1..2)) => 0..!2 | nan
number::mod(-inf..0, int(5..20)) => 0..!20 | nan
number::mod(-inf..0, int(-20..-5)) => -20!..0 | nan
number::mod(-inf..0, int(-10..10)) => -10!..!10 | nan
number::mod(-inf..0, int(0..inf)) => 0..!inf | nan
number::mod(-inf..0, int(1..inf)) => 0..!inf | nan
number::mod(-inf..0, int(-inf..0)) => -inf!..0 | nan
number::mod(-inf..0, int(-inf..1)) => -inf!..!1 | nan
number::mod(-inf..0, int(-inf..inf)) => -inf!..!inf | nan
number::mod(-inf..0, nonInt(0..1)) => 0..!1 | nan
number::mod(-inf..0, nonInt(0..2)) => 0..!2 | nan
number::mod(-inf..0, nonInt(-1..2)) => -1!..!2 | nan
number::mod(-inf..0, nonInt(0..inf)) => 0..!inf | nan
number::mod(-inf..0, nonInt(-1..inf)) => -1!..!inf | nan
number::mod(-inf..0, nonInt(-inf..0)) => -inf!..0 | nan
number::mod(-inf..0, nonInt(-inf..1)) => -inf!..!1 | nan
number::mod(-inf..0, nonInt(-inf..inf)) => -inf!..!inf | nan
number::mod(-inf..0, 1 | int(3..4)) => 0..!4 | nan
number::mod(-inf..inf, number) => number
number::mod(-inf..inf, -3.14) => -3.14!..0 | nan
number::mod(-inf..inf, -2) => -2!..0 | nan
number::mod(-inf..inf, -1) => -1!..0 | nan
number::mod(-inf..inf, -0.5) => -0.5!..0 | nan
number::mod(-inf..inf, 0) => never
number::mod(-inf..inf, 0.5) => 0..!0.5 | nan
number::mod(-inf..inf, 1) => 0..!1 | nan
number::mod(-inf..inf, 2) => 0..!2 | nan
number::mod(-inf..inf, 2.78) => 0..!2.78 | nan
number::mod(-inf..inf, 3) => 0..!3 | nan
number::mod(-inf..inf, 3.14) => 0..!3.14 | nan
number::mod(-inf..inf, 10) => 0..!10 | nan
number::mod(-inf..inf, 100) => 0..!100 | nan
number::mod(-inf..inf, -inf) => -inf..0 | nan
number::mod(-inf..inf, inf) => 0..inf | nan
number::mod(-inf..inf, nan) => nan
number::mod(-inf..inf, 0..1) => 0..!1 | nan
number::mod(-inf..inf, 0!..1) => 0..!1 | nan
number::mod(-inf..inf, 0..!1) => 0..!1 | nan
number::mod(-inf..inf, 0..2) => 0..!2 | nan
number::mod(-inf..inf, 0!..!2) => 0..!2 | nan
number::mod(-inf..inf, 0.5..1.5) => 0..!1.5 | nan
number::mod(-inf..inf, 0.5..2.5) => 0..!2.5 | nan
number::mod(-inf..inf, 0.5!..2.5) => 0..!2.5 | nan
number::mod(-inf..inf, 0.5..!2.5) => 0..!2.5 | nan
number::mod(-inf..inf, -2.56..3.35) => -2.56!..!3.35 | nan
number::mod(-inf..inf, 0.5..0.75) => 0..!0.75 | nan
number::mod(-inf..inf, 1..2) => 0..!2 | nan
number::mod(-inf..inf, 0..inf) => 0..inf | nan
number::mod(-inf..inf, 0!..inf) => 0..inf | nan
number::mod(-inf..inf, 0..!inf) => 0..!inf | nan
number::mod(-inf..inf, 0!..!inf) => 0..!inf | nan
number::mod(-inf..inf, 1..inf) => 0..inf | nan
number::mod(-inf..inf, 1!..inf) => 0..inf | nan
number::mod(-inf..inf, 1..!inf) => 0..!inf | nan
number::mod(-inf..inf, 2..inf) => 0..inf | nan
number::mod(-inf..inf, 2!..inf) => 0..inf | nan
number::mod(-inf..inf, 2.5..inf) => 0..inf | nan
number::mod(-inf..inf, -inf..0) => -inf..0 | nan
number::mod(-inf..inf, -inf..inf) => number
number::mod(-inf..inf, -inf!..inf) => -inf!..inf | nan
number::mod(-inf..inf, -inf..!inf) => -inf..!inf | nan
number::mod(-inf..inf, -inf!..!inf) => -inf!..!inf | nan
number::mod(-inf..inf, int(0..1)) => 0..!1 | nan
number::mod(-inf..inf, int(0..2)) => 0..!2 | nan
number::mod(-inf..inf, int(1..2)) => 0..!2 | nan
number::mod(-inf..inf, int(5..20)) => 0..!20 | nan
number::mod(-inf..inf, int(-20..-5)) => -20!..0 | nan
number::mod(-inf..inf, int(-10..10)) => -10!..!10 | nan
number::mod(-inf..inf, int(0..inf)) => 0..!inf | nan
number::mod(-inf..inf, int(1..inf)) => 0..!inf | nan
number::mod(-inf..inf, int(-inf..0)) => -inf!..0 | nan
number::mod(-inf..inf, int(-inf..1)) => -inf!..!1 | nan
number::mod(-inf..inf, int(-inf..inf)) => -inf!..!inf | nan
number::mod(-inf..inf, nonInt(0..1)) => 0..!1 | nan
number::mod(-inf..inf, nonInt(0..2)) => 0..!2 | nan
number::mod(-inf..inf, nonInt(-1..2)) => -1!..!2 | nan
number::mod(-inf..inf, nonInt(0..inf)) => 0..!inf | nan
number::mod(-inf..inf, nonInt(-1..inf)) => -1!..!inf | nan
number::mod(-inf..inf, nonInt(-inf..0)) => -inf!..0 | nan
number::mod(-inf..inf, nonInt(-inf..1)) => -inf!..!1 | nan
number::mod(-inf..inf, nonInt(-inf..inf)) => -inf!..!inf | nan
number::mod(-inf..inf, 1 | int(3..4)) => 0..!4 | nan
number::mod(-inf!..inf, number) => number
number::mod(-inf!..inf, -3.14) => -3.14!..0 | nan
number::mod(-inf!..inf, -2) => -2!..0 | nan
number::mod(-inf!..inf, -1) => -1!..0 | nan
number::mod(-inf!..inf, -0.5) => -0.5!..0 | nan
number::mod(-inf!..inf, 0) => never
number::mod(-inf!..inf, 0.5) => 0..!0.5 | nan
number::mod(-inf!..inf, 1) => 0..!1 | nan
number::mod(-inf!..inf, 2) => 0..!2 | nan
number::mod(-inf!..inf, 2.78) => 0..!2.78 | nan
number::mod(-inf!..inf, 3) => 0..!3 | nan
number::mod(-inf!..inf, 3.14) => 0..!3.14 | nan
number::mod(-inf!..inf, 10) => 0..!10 | nan
number::mod(-inf!..inf, 100) => 0..!100 | nan
number::mod(-inf!..inf, -inf) => -inf..0 | nan
number::mod(-inf!..inf, inf) => 0..inf | nan
number::mod(-inf!..inf, nan) => nan
number::mod(-inf!..inf, 0..1) => 0..!1 | nan
number::mod(-inf!..inf, 0!..1) => 0..!1 | nan
number::mod(-inf!..inf, 0..!1) => 0..!1 | nan
number::mod(-inf!..inf, 0..2) => 0..!2 | nan
number::mod(-inf!..inf, 0!..!2) => 0..!2 | nan
number::mod(-inf!..inf, 0.5..1.5) => 0..!1.5 | nan
number::mod(-inf!..inf, 0.5..2.5) => 0..!2.5 | nan
number::mod(-inf!..inf, 0.5!..2.5) => 0..!2.5 | nan
number::mod(-inf!..inf, 0.5..!2.5) => 0..!2.5 | nan
number::mod(-inf!..inf, -2.56..3.35) => -2.56!..!3.35 | nan
number::mod(-inf!..inf, 0.5..0.75) => 0..!0.75 | nan
number::mod(-inf!..inf, 1..2) => 0..!2 | nan
number::mod(-inf!..inf, 0..inf) => 0..inf | nan
number::mod(-inf!..inf, 0!..inf) => 0..inf | nan
number::mod(-inf!..inf, 0..!inf) => 0..!inf | nan
number::mod(-inf!..inf, 0!..!inf) => 0..!inf | nan
number::mod(-inf!..inf, 1..inf) => 0..inf | nan
number::mod(-inf!..inf, 1!..inf) => 0..inf | nan
number::mod(-inf!..inf, 1..!inf) => 0..!inf | nan
number::mod(-inf!..inf, 2..inf) => 0..inf | nan
number::mod(-inf!..inf, 2!..inf) => 0..inf | nan
number::mod(-inf!..inf, 2.5..inf) => 0..inf | nan
number::mod(-inf!..inf, -inf..0) => -inf..0 | nan
number::mod(-inf!..inf, -inf..inf) => number
number::mod(-inf!..inf, -inf!..inf) => -inf!..inf | nan
number::mod(-inf!..inf, -inf..!inf) => -inf..!inf | nan
number::mod(-inf!..inf, -inf!..!inf) => -inf!..!inf | nan
number::mod(-inf!..inf, int(0..1)) => 0..!1 | nan
number::mod(-inf!..inf, int(0..2)) => 0..!2 | nan
number::mod(-inf!..inf, int(1..2)) => 0..!2 | nan
number::mod(-inf!..inf, int(5..20)) => 0..!20 | nan
number::mod(-inf!..inf, int(-20..-5)) => -20!..0 | nan
number::mod(-inf!..inf, int(-10..10)) => -10!..!10 | nan
number::mod(-inf!..inf, int(0..inf)) => 0..!inf | nan
number::mod(-inf!..inf, int(1..inf)) => 0..!inf | nan
number::mod(-inf!..inf, int(-inf..0)) => -inf!..0 | nan
number::mod(-inf!..inf, int(-inf..1)) => -inf!..!1 | nan
number::mod(-inf!..inf, int(-inf..inf)) => -inf!..!inf | nan
number::mod(-inf!..inf, nonInt(0..1)) => 0..!1 | nan
number::mod(-inf!..inf, nonInt(0..2)) => 0..!2 | nan
number::mod(-inf!..inf, nonInt(-1..2)) => -1!..!2 | nan
number::mod(-inf!..inf, nonInt(0..inf)) => 0..!inf | nan
number::mod(-inf!..inf, nonInt(-1..inf)) => -1!..!inf | nan
number::mod(-inf!..inf, nonInt(-inf..0)) => -inf!..0 | nan
number::mod(-inf!..inf, nonInt(-inf..1)) => -inf!..!1 | nan
number::mod(-inf!..inf, nonInt(-inf..inf)) => -inf!..!inf | nan
number::mod(-inf!..inf, 1 | int(3..4)) => 0..!4 | nan
number::mod(-inf..!inf, number) => number
number::mod(-inf..!inf, -3.14) => -3.14!..0 | nan
number::mod(-inf..!inf, -2) => -2!..0 | nan
number::mod(-inf..!inf, -1) => -1!..0 | nan
number::mod(-inf..!inf, -0.5) => -0.5!..0 | nan
number::mod(-inf..!inf, 0) => never
number::mod(-inf..!inf, 0.5) => 0..!0.5 | nan
number::mod(-inf..!inf, 1) => 0..!1 | nan
number::mod(-inf..!inf, 2) => 0..!2 | nan
number::mod(-inf..!inf, 2.78) => 0..!2.78 | nan
number::mod(-inf..!inf, 3) => 0..!3 | nan
number::mod(-inf..!inf, 3.14) => 0..!3.14 | nan
number::mod(-inf..!inf, 10) => 0..!10 | nan
number::mod(-inf..!inf, 100) => 0..!100 | nan
number::mod(-inf..!inf, -inf) => -inf..0 | nan
number::mod(-inf..!inf, inf) => 0..inf | nan
number::mod(-inf..!inf, nan) => nan
number::mod(-inf..!inf, 0..1) => 0..!1 | nan
number::mod(-inf..!inf, 0!..1) => 0..!1 | nan
number::mod(-inf..!inf, 0..!1) => 0..!1 | nan
number::mod(-inf..!inf, 0..2) => 0..!2 | nan
number::mod(-inf..!inf, 0!..!2) => 0..!2 | nan
number::mod(-inf..!inf, 0.5..1.5) => 0..!1.5 | nan
number::mod(-inf..!inf, 0.5..2.5) => 0..!2.5 | nan
number::mod(-inf..!inf, 0.5!..2.5) => 0..!2.5 | nan
number::mod(-inf..!inf, 0.5..!2.5) => 0..!2.5 | nan
number::mod(-inf..!inf, -2.56..3.35) => -2.56!..!3.35 | nan
number::mod(-inf..!inf, 0.5..0.75) => 0..!0.75 | nan
number::mod(-inf..!inf, 1..2) => 0..!2 | nan
number::mod(-inf..!inf, 0..inf) => 0..inf | nan
number::mod(-inf..!inf, 0!..inf) => 0..inf | nan
number::mod(-inf..!inf, 0..!inf) => 0..!inf | nan
number::mod(-inf..!inf, 0!..!inf) => 0..!inf | nan
number::mod(-inf..!inf, 1..inf) => 0..inf | nan
number::mod(-inf..!inf, 1!..inf) => 0..inf | nan
number::mod(-inf..!inf, 1..!inf) => 0..!inf | nan
number::mod(-inf..!inf, 2..inf) => 0..inf | nan
number::mod(-inf..!inf, 2!..inf) => 0..inf | nan
number::mod(-inf..!inf, 2.5..inf) => 0..inf | nan
number::mod(-inf..!inf, -inf..0) => -inf..0 | nan
number::mod(-inf..!inf, -inf..inf) => number
number::mod(-inf..!inf, -inf!..inf) => -inf!..inf | nan
number::mod(-inf..!inf, -inf..!inf) => -inf..!inf | nan
number::mod(-inf..!inf, -inf!..!inf) => -inf!..!inf | nan
number::mod(-inf..!inf, int(0..1)) => 0..!1 | nan
number::mod(-inf..!inf, int(0..2)) => 0..!2 | nan
number::mod(-inf..!inf, int(1..2)) => 0..!2 | nan
number::mod(-inf..!inf, int(5..20)) => 0..!20 | nan
number::mod(-inf..!inf, int(-20..-5)) => -20!..0 | nan
number::mod(-inf..!inf, int(-10..10)) => -10!..!10 | nan
number::mod(-inf..!inf, int(0..inf)) => 0..!inf | nan
number::mod(-inf..!inf, int(1..inf)) => 0..!inf | nan
number::mod(-inf..!inf, int(-inf..0)) => -inf!..0 | nan
number::mod(-inf..!inf, int(-inf..1)) => -inf!..!1 | nan
number::mod(-inf..!inf, int(-inf..inf)) => -inf!..!inf | nan
number::mod(-inf..!inf, nonInt(0..1)) => 0..!1 | nan
number::mod(-inf..!inf, nonInt(0..2)) => 0..!2 | nan
number::mod(-inf..!inf, nonInt(-1..2)) => -1!..!2 | nan
number::mod(-inf..!inf, nonInt(0..inf)) => 0..!inf | nan
number::mod(-inf..!inf, nonInt(-1..inf)) => -1!..!inf | nan
number::mod(-inf..!inf, nonInt(-inf..0)) => -inf!..0 | nan
number::mod(-inf..!inf, nonInt(-inf..1)) => -inf!..!1 | nan
number::mod(-inf..!inf, nonInt(-inf..inf)) => -inf!..!inf | nan
number::mod(-inf..!inf, 1 | int(3..4)) => 0..!4 | nan
number::mod(-inf!..!inf, number) => number
number::mod(-inf!..!inf, -3.14) => -3.14!..0
number::mod(-inf!..!inf, -2) => -2!..0
number::mod(-inf!..!inf, -1) => -1!..0
number::mod(-inf!..!inf, -0.5) => -0.5!..0
number::mod(-inf!..!inf, 0) => never
number::mod(-inf!..!inf, 0.5) => 0..!0.5
number::mod(-inf!..!inf, 1) => 0..!1
number::mod(-inf!..!inf, 2) => 0..!2
number::mod(-inf!..!inf, 2.78) => 0..!2.78
number::mod(-inf!..!inf, 3) => 0..!3
number::mod(-inf!..!inf, 3.14) => 0..!3.14
number::mod(-inf!..!inf, 10) => 0..!10
number::mod(-inf!..!inf, 100) => 0..!100
number::mod(-inf!..!inf, -inf) => -inf..0
number::mod(-inf!..!inf, inf) => 0..inf
number::mod(-inf!..!inf, nan) => nan
number::mod(-inf!..!inf, 0..1) => 0..!1
number::mod(-inf!..!inf, 0!..1) => 0..!1
number::mod(-inf!..!inf, 0..!1) => 0..!1
number::mod(-inf!..!inf, 0..2) => 0..!2
number::mod(-inf!..!inf, 0!..!2) => 0..!2
number::mod(-inf!..!inf, 0.5..1.5) => 0..!1.5
number::mod(-inf!..!inf, 0.5..2.5) => 0..!2.5
number::mod(-inf!..!inf, 0.5!..2.5) => 0..!2.5
number::mod(-inf!..!inf, 0.5..!2.5) => 0..!2.5
number::mod(-inf!..!inf, -2.56..3.35) => -2.56!..!3.35
number::mod(-inf!..!inf, 0.5..0.75) => 0..!0.75
number::mod(-inf!..!inf, 1..2) => 0..!2
number::mod(-inf!..!inf, 0..inf) => 0..inf
number::mod(-inf!..!inf, 0!..inf) => 0..inf
number::mod(-inf!..!inf, 0..!inf) => 0..!inf
number::mod(-inf!..!inf, 0!..!inf) => 0..!inf
number::mod(-inf!..!inf, 1..inf) => 0..inf
number::mod(-inf!..!inf, 1!..inf) => 0..inf
number::mod(-inf!..!inf, 1..!inf) => 0..!inf
number::mod(-inf!..!inf, 2..inf) => 0..inf
number::mod(-inf!..!inf, 2!..inf) => 0..inf
number::mod(-inf!..!inf, 2.5..inf) => 0..inf
number::mod(-inf!..!inf, -inf..0) => -inf..0
number::mod(-inf!..!inf, -inf..inf) => -inf..inf
number::mod(-inf!..!inf, -inf!..inf) => -inf!..inf
number::mod(-inf!..!inf, -inf..!inf) => -inf..!inf
number::mod(-inf!..!inf, -inf!..!inf) => -inf!..!inf
number::mod(-inf!..!inf, int(0..1)) => 0..!1
number::mod(-inf!..!inf, int(0..2)) => 0..!2
number::mod(-inf!..!inf, int(1..2)) => 0..!2
number::mod(-inf!..!inf, int(5..20)) => 0..!20
number::mod(-inf!..!inf, int(-20..-5)) => -20!..0
number::mod(-inf!..!inf, int(-10..10)) => -10!..!10
number::mod(-inf!..!inf, int(0..inf)) => 0..!inf
number::mod(-inf!..!inf, int(1..inf)) => 0..!inf
number::mod(-inf!..!inf, int(-inf..0)) => -inf!..0
number::mod(-inf!..!inf, int(-inf..1)) => -inf!..!1
number::mod(-inf!..!inf, int(-inf..inf)) => -inf!..!inf
number::mod(-inf!..!inf, nonInt(0..1)) => 0..!1
number::mod(-inf!..!inf, nonInt(0..2)) => 0..!2
number::mod(-inf!..!inf, nonInt(-1..2)) => -1!..!2
number::mod(-inf!..!inf, nonInt(0..inf)) => 0..!inf
number::mod(-inf!..!inf, nonInt(-1..inf)) => -1!..!inf
number::mod(-inf!..!inf, nonInt(-inf..0)) => -inf!..0
number::mod(-inf!..!inf, nonInt(-inf..1)) => -inf!..!1
number::mod(-inf!..!inf, nonInt(-inf..inf)) => -inf!..!inf
number::mod(-inf!..!inf, 1 | int(3..4)) => 0..!4
number::mod(int(0..1), number) => -inf..1 | nan
number::mod(int(0..1), -3.14) => -2.14 | 0
number::mod(int(0..1), -2) => int(-1..0)
number::mod(int(0..1), -1) => 0
number::mod(int(0..1), -0.5) => 0
number::mod(int(0..1), 0) => never
number::mod(int(0..1), 0.5) => 0
number::mod(int(0..1), 1) => 0
number::mod(int(0..1), 2) => int(0..1)
number::mod(int(0..1), 2.78) => int(0..1)
number::mod(int(0..1), 3) => int(0..1)
number::mod(int(0..1), 3.14) => int(0..1)
number::mod(int(0..1), 10) => int(0..1)
number::mod(int(0..1), 100) => int(0..1)
number::mod(int(0..1), -inf) => -inf | 0
number::mod(int(0..1), inf) => int(0..1)
number::mod(int(0..1), nan) => nan
number::mod(int(0..1), 0..1) => 0..!1
number::mod(int(0..1), 0!..1) => 0..!1
number::mod(int(0..1), 0..!1) => 0..!1
number::mod(int(0..1), 0..2) => 0..1
number::mod(int(0..1), 0!..!2) => 0..!1
number::mod(int(0..1), 0.5..1.5) => 0..1
number::mod(int(0..1), 0.5..2.5) => 0..1
number::mod(int(0..1), 0.5!..2.5) => 0..1
number::mod(int(0..1), 0.5..!2.5) => 0..1
number::mod(int(0..1), -2.56..3.35) => -2.56!..1
number::mod(int(0..1), 0.5..0.75) => 0..!0.75
number::mod(int(0..1), 1..2) => 0..1
number::mod(int(0..1), 0..inf) => 0..1
number::mod(int(0..1), 0!..inf) => 0..1
number::mod(int(0..1), 0..!inf) => 0..!1
number::mod(int(0..1), 0!..!inf) => 0..!1
number::mod(int(0..1), 1..inf) => 0..1
number::mod(int(0..1), 1!..inf) => int(0..1)
number::mod(int(0..1), 1..!inf) => 0..1
number::mod(int(0..1), 2..inf) => int(0..1)
number::mod(int(0..1), 2!..inf) => int(0..1)
number::mod(int(0..1), 2.5..inf) => int(0..1)
number::mod(int(0..1), -inf..0) => -inf..0
number::mod(int(0..1), -inf..inf) => -inf..1
number::mod(int(0..1), -inf!..inf) => -inf!..1
number::mod(int(0..1), -inf..!inf) => -inf..!1
number::mod(int(0..1), -inf!..!inf) => -inf!..!1
number::mod(int(0..1), int(0..1)) => 0
number::mod(int(0..1), int(0..2)) => int(0..1)
number::mod(int(0..1), int(1..2)) => int(0..1)
number::mod(int(0..1), int(5..20)) => int(0..1)
number::mod(int(0..1), int(-20..-5)) => int(-19..0)
number::mod(int(0..1), int(-10..10)) => int(-9..1)
number::mod(int(0..1), int(0..inf)) => int(0..1)
number::mod(int(0..1), int(1..inf)) => int(0..1)
number::mod(int(0..1), int(-inf..0)) => int(-inf..0)
number::mod(int(0..1), int(-inf..1)) => int(-inf..0)
number::mod(int(0..1), int(-inf..inf)) => int(-inf..1)
number::mod(int(0..1), nonInt(0..1)) => 0..!1
number::mod(int(0..1), nonInt(0..2)) => 0..!1
number::mod(int(0..1), nonInt(-1..2)) => -1!..!2
number::mod(int(0..1), nonInt(0..inf)) => 0..!1
number::mod(int(0..1), nonInt(-1..inf)) => -1!..!inf
number::mod(int(0..1), nonInt(-inf..0)) => -inf!..0
number::mod(int(0..1), nonInt(-inf..1)) => -inf!..!1
number::mod(int(0..1), nonInt(-inf..inf)) => -inf!..!inf
number::mod(int(0..1), 1 | int(3..4)) => int(0..1)
number::mod(int(0..2), number) => -inf..2 | nan
number::mod(int(0..2), -3.14) => -2.14 | -1.14 | 0
number::mod(int(0..2), -2) => int(-1..0)
number::mod(int(0..2), -1) => 0
number::mod(int(0..2), -0.5) => 0
number::mod(int(0..2), 0) => never
number::mod(int(0..2), 0.5) => 0
number::mod(int(0..2), 1) => 0
number::mod(int(0..2), 2) => int(0..1)
number::mod(int(0..2), 2.78) => int(0..2)
number::mod(int(0..2), 3) => int(0..2)
number::mod(int(0..2), 3.14) => int(0..2)
number::mod(int(0..2), 10) => int(0..2)
number::mod(int(0..2), 100) => int(0..2)
number::mod(int(0..2), -inf) => -inf | 0
number::mod(int(0..2), inf) => int(0..2)
number::mod(int(0..2), nan) => nan
number::mod(int(0..2), 0..1) => 0..!1
number::mod(int(0..2), 0!..1) => 0..!1
number::mod(int(0..2), 0..!1) => 0..!1
number::mod(int(0..2), 0..2) => 0..!2
number::mod(int(0..2), 0!..!2) => 0..!2
number::mod(int(0..2), 0.5..1.5) => 0..!1.5
number::mod(int(0..2), 0.5..2.5) => 0..2
number::mod(int(0..2), 0.5!..2.5) => 0..2
number::mod(int(0..2), 0.5..!2.5) => 0..2
number::mod(int(0..2), -2.56..3.35) => -2.56!..2
number::mod(int(0..2), 0.5..0.75) => 0..!0.75
number::mod(int(0..2), 1..2) => 0..!2
number::mod(int(0..2), 0..inf) => 0..2
number::mod(int(0..2), 0!..inf) => 0..2
number::mod(int(0..2), 0..!inf) => 0..!2
number::mod(int(0..2), 0!..!inf) => 0..!2
number::mod(int(0..2), 1..inf) => 0..2
number::mod(int(0..2), 1!..inf) => 0..2
number::mod(int(0..2), 1..!inf) => 0..2
number::mod(int(0..2), 2..inf) => 0..2
number::mod(int(0..2), 2!..inf) => int(0..2)
number::mod(int(0..2), 2.5..inf) => int(0..2)
number::mod(int(0..2), -inf..0) => -inf..0
number::mod(int(0..2), -inf..inf) => -inf..2
number::mod(int(0..2), -inf!..inf) => -inf!..2
number::mod(int(0..2), -inf..!inf) => -inf..!2
number::mod(int(0..2), -inf!..!inf) => -inf!..!2
number::mod(int(0..2), int(0..1)) => 0
number::mod(int(0..2), int(0..2)) => int(0..1)
number::mod(int(0..2), int(1..2)) => int(0..1)
number::mod(int(0..2), int(5..20)) => int(0..2)
number::mod(int(0..2), int(-20..-5)) => int(-19..0)
number::mod(int(0..2), int(-10..10)) => int(-9..2)
number::mod(int(0..2), int(0..inf)) => int(0..2)
number::mod(int(0..2), int(1..inf)) => int(0..2)
number::mod(int(0..2), int(-inf..0)) => int(-inf..0)
number::mod(int(0..2), int(-inf..1)) => int(-inf..0)
number::mod(int(0..2), int(-inf..inf)) => int(-inf..2)
number::mod(int(0..2), nonInt(0..1)) => 0..!1
number::mod(int(0..2), nonInt(0..2)) => 0..!2
number::mod(int(0..2), nonInt(-1..2)) => -1!..!2
number::mod(int(0..2), nonInt(0..inf)) => 0..!2
number::mod(int(0..2), nonInt(-1..inf)) => -1!..!inf
number::mod(int(0..2), nonInt(-inf..0)) => -inf!..0
number::mod(int(0..2), nonInt(-inf..1)) => -inf!..!1
number::mod(int(0..2), nonInt(-inf..inf)) => -inf!..!inf
number::mod(int(0..2), 1 | int(3..4)) => int(0..2)
number::mod(int(1..2), number) => -inf..2 | nan
number::mod(int(1..2), -3.14) => -2.14 | -1.14
number::mod(int(1..2), -2) => int(-1..0)
number::mod(int(1..2), -1) => 0
number::mod(int(1..2), -0.5) => 0
number::mod(int(1..2), 0) => never
number::mod(int(1..2), 0.5) => 0
number::mod(int(1..2), 1) => 0
number::mod(int(1..2), 2) => int(0..1)
number::mod(int(1..2), 2.78) => int(1..2)
number::mod(int(1..2), 3) => int(1..2)
number::mod(int(1..2), 3.14) => int(1..2)
number::mod(int(1..2), 10) => int(1..2)
number::mod(int(1..2), 100) => int(1..2)
number::mod(int(1..2), -inf) => -inf
number::mod(int(1..2), inf) => int(1..2)
number::mod(int(1..2), nan) => nan
number::mod(int(1..2), 0..1) => 0..!1
number::mod(int(1..2), 0!..1) => 0..!1
number::mod(int(1..2), 0..!1) => 0..!1
number::mod(int(1..2), 0..2) => 0..!2
number::mod(int(1..2), 0!..!2) => 0..!2
number::mod(int(1..2), 0.5..1.5) => 0..!1.5
number::mod(int(1..2), 0.5..2.5) => 0..2
number::mod(int(1..2), 0.5!..2.5) => 0..2
number::mod(int(1..2), 0.5..!2.5) => 0..2
number::mod(int(1..2), -2.56..3.35) => -2.56!..2
number::mod(int(1..2), 0.5..0.75) => 0..!0.75
number::mod(int(1..2), 1..2) => 0..!2
number::mod(int(1..2), 0..inf) => 0..2
number::mod(int(1..2), 0!..inf) => 0..2
number::mod(int(1..2), 0..!inf) => 0..!2
number::mod(int(1..2), 0!..!inf) => 0..!2
number::mod(int(1..2), 1..inf) => 0..2
number::mod(int(1..2), 1!..inf) => 0..2
number::mod(int(1..2), 1..!inf) => 0..2
number::mod(int(1..2), 2..inf) => 0..2
number::mod(int(1..2), 2!..inf) => int(1..2)
number::mod(int(1..2), 2.5..inf) => int(1..2)
number::mod(int(1..2), -inf..0) => -inf..0
number::mod(int(1..2), -inf..inf) => -inf..2
number::mod(int(1..2), -inf!..inf) => -inf!..2
number::mod(int(1..2), -inf..!inf) => -inf..!2
number::mod(int(1..2), -inf!..!inf) => -inf!..!2
number::mod(int(1..2), int(0..1)) => 0
number::mod(int(1..2), int(0..2)) => int(0..1)
number::mod(int(1..2), int(1..2)) => int(0..1)
number::mod(int(1..2), int(5..20)) => int(1..2)
number::mod(int(1..2), int(-20..-5)) => int(-19..-3)
number::mod(int(1..2), int(-10..10)) => int(-9..2)
number::mod(int(1..2), int(0..inf)) => int(0..2)
number::mod(int(1..2), int(1..inf)) => int(0..2)
number::mod(int(1..2), int(-inf..0)) => int(-inf..0)
number::mod(int(1..2), int(-inf..1)) => int(-inf..0)
number::mod(int(1..2), int(-inf..inf)) => int(-inf..2)
number::mod(int(1..2), nonInt(0..1)) => 0..!1
number::mod(int(1..2), nonInt(0..2)) => 0..!2
number::mod(int(1..2), nonInt(-1..2)) => -1!..!2
number::mod(int(1..2), nonInt(0..inf)) => 0..!2
number::mod(int(1..2), nonInt(-1..inf)) => -1!..!inf
number::mod(int(1..2), nonInt(-inf..0)) => -inf!..0
number::mod(int(1..2), nonInt(-inf..1)) => -inf!..!1
number::mod(int(1..2), nonInt(-inf..inf)) => -inf!..!inf
number::mod(int(1..2), 1 | int(3..4)) => int(0..2)
number::mod(int(5..20), number) => -inf..20 | nan
number::mod(int(5..20), -3.14) => -3.14!..0
number::mod(int(5..20), -2) => int(-1..0)
number::mod(int(5..20), -1) => 0
number::mod(int(5..20), -0.5) => -0.5!..0
number::mod(int(5..20), 0) => never
number::mod(int(5..20), 0.5) => 0..!0.5
number::mod(int(5..20), 1) => 0
number::mod(int(5..20), 2) => int(0..1)
number::mod(int(5..20), 2.78) => 0..!2.78
number::mod(int(5..20), 3) => int(0..2)
number::mod(int(5..20), 3.14) => 0..!3.14
number::mod(int(5..20), 10) => int(0..9)
number::mod(int(5..20), 100) => int(5..20)
number::mod(int(5..20), -inf) => -inf
number::mod(int(5..20), inf) => int(5..20)
number::mod(int(5..20), nan) => nan
number::mod(int(5..20), 0..1) => 0..!1
number::mod(int(5..20), 0!..1) => 0..!1
number::mod(int(5..20), 0..!1) => 0..!1
number::mod(int(5..20), 0..2) => 0..!2
number::mod(int(5..20), 0!..!2) => 0..!2
number::mod(int(5..20), 0.5..1.5) => 0..!1.5
number::mod(int(5..20), 0.5..2.5) => 0..!2.5
number::mod(int(5..20), 0.5!..2.5) => 0..!2.5
number::mod(int(5..20), 0.5..!2.5) => 0..!2.5
number::mod(int(5..20), -2.56..3.35) => -2.56!..!3.35
number::mod(int(5..20), 0.5..0.75) => 0..!0.75
number::mod(int(5..20), 1..2) => 0..!2
number::mod(int(5..20), 0..inf) => 0..20
number::mod(int(5..20), 0!..inf) => 0..20
number::mod(int(5..20), 0..!inf) => 0..!20
number::mod(int(5..20), 0!..!inf) => 0..!20
number::mod(int(5..20), 1..inf) => 0..20
number::mod(int(5..20), 1!..inf) => 0..20
number::mod(int(5..20), 1..!inf) => 0..20
number::mod(int(5..20), 2..inf) => 0..20
number::mod(int(5..20), 2!..inf) => 0..20
number::mod(int(5..20), 2.5..inf) => 0..20
number::mod(int(5..20), -inf..0) => -inf..0
number::mod(int(5..20), -inf..inf) => -inf..20
number::mod(int(5..20), -inf!..inf) => -inf!..20
number::mod(int(5..20), -inf..!inf) => -inf..!20
number::mod(int(5..20), -inf!..!inf) => -inf!..!20
number::mod(int(5..20), int(0..1)) => 0
number::mod(int(5..20), int(0..2)) => int(0..1)
number::mod(int(5..20), int(1..2)) => int(0..1)
number::mod(int(5..20), int(5..20)) => int(0..19)
number::mod(int(5..20), int(-20..-5)) => int(-19..0)
number::mod(int(5..20), int(-10..10)) => int(-9..9)
number::mod(int(5..20), int(0..inf)) => int(0..20)
number::mod(int(5..20), int(1..inf)) => int(0..20)
number::mod(int(5..20), int(-inf..0)) => int(-inf..0)
number::mod(int(5..20), int(-inf..1)) => int(-inf..0)
number::mod(int(5..20), int(-inf..inf)) => int(-inf..20)
number::mod(int(5..20), nonInt(0..1)) => 0..!1
number::mod(int(5..20), nonInt(0..2)) => 0..!2
number::mod(int(5..20), nonInt(-1..2)) => -1!..!2
number::mod(int(5..20), nonInt(0..inf)) => 0..!20
number::mod(int(5..20), nonInt(-1..inf)) => -1!..!inf
number::mod(int(5..20), nonInt(-inf..0)) => -inf!..0
number::mod(int(5..20), nonInt(-inf..1)) => -inf!..!1
number::mod(int(5..20), nonInt(-inf..inf)) => -inf!..!inf
number::mod(int(5..20), 1 | int(3..4)) => int(0..3)
number::mod(int(-20..-5), number) => -20..inf | nan
number::mod(int(-20..-5), -3.14) => -3.14!..0
number::mod(int(-20..-5), -2) => int(-1..0)
number::mod(int(-20..-5), -1) => 0
number::mod(int(-20..-5), -0.5) => -0.5!..0
number::mod(int(-20..-5), 0) => never
number::mod(int(-20..-5), 0.5) => 0..!0.5
number::mod(int(-20..-5), 1) => 0
number::mod(int(-20..-5), 2) => int(0..1)
number::mod(int(-20..-5), 2.78) => 0..!2.78
number::mod(int(-20..-5), 3) => int(0..2)
number::mod(int(-20..-5), 3.14) => 0..!3.14
number::mod(int(-20..-5), 10) => int(0..9)
number::mod(int(-20..-5), 100) => int(80..95)
number::mod(int(-20..-5), -inf) => int(-20..-5)
number::mod(int(-20..-5), inf) => inf
number::mod(int(-20..-5), nan) => nan
number::mod(int(-20..-5), 0..1) => 0..!1
number::mod(int(-20..-5), 0!..1) => 0..!1
number::mod(int(-20..-5), 0..!1) => 0..!1
number::mod(int(-20..-5), 0..2) => 0..!2
number::mod(int(-20..-5), 0!..!2) => 0..!2
number::mod(int(-20..-5), 0.5..1.5) => 0..!1.5
number::mod(int(-20..-5), 0.5..2.5) => 0..!2.5
number::mod(int(-20..-5), 0.5!..2.5) => 0..!2.5
number::mod(int(-20..-5), 0.5..!2.5) => 0..!2.5
number::mod(int(-20..-5), -2.56..3.35) => -2.56!..!3.35
number::mod(int(-20..-5), 0.5..0.75) => 0..!0.75
number::mod(int(-20..-5), 1..2) => 0..!2
number::mod(int(-20..-5), 0..inf) => 0..inf
number::mod(int(-20..-5), 0!..inf) => 0..inf
number::mod(int(-20..-5), 0..!inf) => 0..!inf
number::mod(int(-20..-5), 0!..!inf) => 0..!inf
number::mod(int(-20..-5), 1..inf) => 0..inf
number::mod(int(-20..-5), 1!..inf) => 0..inf
number::mod(int(-20..-5), 1..!inf) => 0..!inf
number::mod(int(-20..-5), 2..inf) => 0..inf
number::mod(int(-20..-5), 2!..inf) => 0..inf
number::mod(int(-20..-5), 2.5..inf) => 0..inf
number::mod(int(-20..-5), -inf..0) => -20..0
number::mod(int(-20..-5), -inf..inf) => -20..inf
number::mod(int(-20..-5), -inf!..inf) => -20!..inf
number::mod(int(-20..-5), -inf..!inf) => -20..!inf
number::mod(int(-20..-5), -inf!..!inf) => -20!..!inf
number::mod(int(-20..-5), int(0..1)) => 0
number::mod(int(-20..-5), int(0..2)) => int(0..1)
number::mod(int(-20..-5), int(1..2)) => int(0..1)
number::mod(int(-20..-5), int(5..20)) => int(0..19)
number::mod(int(-20..-5), int(-20..-5)) => int(-19..0)
number::mod(int(-20..-5), int(-10..10)) => int(-9..9)
number::mod(int(-20..-5), int(0..inf)) => int(0..inf)
number::mod(int(-20..-5), int(1..inf)) => int(0..inf)
number::mod(int(-20..-5), int(-inf..0)) => int(-20..0)
number::mod(int(-20..-5), int(-inf..1)) => int(-20..0)
number::mod(int(-20..-5), int(-inf..inf)) => int(-20..inf)
number::mod(int(-20..-5), nonInt(0..1)) => 0..!1
number::mod(int(-20..-5), nonInt(0..2)) => 0..!2
number::mod(int(-20..-5), nonInt(-1..2)) => -1!..!2
number::mod(int(-20..-5), nonInt(0..inf)) => 0..!inf
number::mod(int(-20..-5), nonInt(-1..inf)) => -1!..!inf
number::mod(int(-20..-5), nonInt(-inf..0)) => -20!..0
number::mod(int(-20..-5), nonInt(-inf..1)) => -inf!..!1
number::mod(int(-20..-5), nonInt(-inf..inf)) => -inf!..!inf
number::mod(int(-20..-5), 1 | int(3..4)) => int(0..3)
number::mod(int(-10..10), number) => number
number::mod(int(-10..10), -3.14) => -3.14!..0
number::mod(int(-10..10), -2) => int(-1..0)
number::mod(int(-10..10), -1) => 0
number::mod(int(-10..10), -0.5) => -0.5!..0
number::mod(int(-10..10), 0) => never
number::mod(int(-10..10), 0.5) => 0..!0.5
number::mod(int(-10..10), 1) => 0
number::mod(int(-10..10), 2) => int(0..1)
number::mod(int(-10..10), 2.78) => 0..!2.78
number::mod(int(-10..10), 3) => int(0..2)
number::mod(int(-10..10), 3.14) => 0..!3.14
number::mod(int(-10..10), 10) => int(0..9)
number::mod(int(-10..10), 100) => int(0..10) | int(90..99)
number::mod(int(-10..10), -inf) => -inf | int(-10..0)
number::mod(int(-10..10), inf) => int(0..10) | inf
number::mod(int(-10..10), nan) => nan
number::mod(int(-10..10), 0..1) => 0..!1
number::mod(int(-10..10), 0!..1) => 0..!1
number::mod(int(-10..10), 0..!1) => 0..!1
number::mod(int(-10..10), 0..2) => 0..!2
number::mod(int(-10..10), 0!..!2) => 0..!2
number::mod(int(-10..10), 0.5..1.5) => 0..!1.5
number::mod(int(-10..10), 0.5..2.5) => 0..!2.5
number::mod(int(-10..10), 0.5!..2.5) => 0..!2.5
number::mod(int(-10..10), 0.5..!2.5) => 0..!2.5
number::mod(int(-10..10), -2.56..3.35) => -2.56!..!3.35
number::mod(int(-10..10), 0.5..0.75) => 0..!0.75
number::mod(int(-10..10), 1..2) => 0..!2
number::mod(int(-10..10), 0..inf) => 0..inf
number::mod(int(-10..10), 0!..inf) => 0..inf
number::mod(int(-10..10), 0..!inf) => 0..!inf
number::mod(int(-10..10), 0!..!inf) => 0..!inf
number::mod(int(-10..10), 1..inf) => 0..inf
number::mod(int(-10..10), 1!..inf) => 0..inf
number::mod(int(-10..10), 1..!inf) => 0..!inf
number::mod(int(-10..10), 2..inf) => 0..inf
number::mod(int(-10..10), 2!..inf) => 0..inf
number::mod(int(-10..10), 2.5..inf) => 0..inf
number::mod(int(-10..10), -inf..0) => -inf..0
number::mod(int(-10..10), -inf..inf) => -inf..inf
number::mod(int(-10..10), -inf!..inf) => -inf!..inf
number::mod(int(-10..10), -inf..!inf) => -inf..!inf
number::mod(int(-10..10), -inf!..!inf) => -inf!..!inf
number::mod(int(-10..10), int(0..1)) => 0
number::mod(int(-10..10), int(0..2)) => int(0..1)
number::mod(int(-10..10), int(1..2)) => int(0..1)
number::mod(int(-10..10), int(5..20)) => int(0..19)
number::mod(int(-10..10), int(-20..-5)) => int(-19..0)
number::mod(int(-10..10), int(-10..10)) => int(-9..9)
number::mod(int(-10..10), int(0..inf)) => int(0..inf)
number::mod(int(-10..10), int(1..inf)) => int(0..inf)
number::mod(int(-10..10), int(-inf..0)) => int(-inf..0)
number::mod(int(-10..10), int(-inf..1)) => int(-inf..0)
number::mod(int(-10..10), int(-inf..inf)) => int(-inf..inf)
number::mod(int(-10..10), nonInt(0..1)) => 0..!1
number::mod(int(-10..10), nonInt(0..2)) => 0..!2
number::mod(int(-10..10), nonInt(-1..2)) => -1!..!2
number::mod(int(-10..10), nonInt(0..inf)) => 0..!inf
number::mod(int(-10..10), nonInt(-1..inf)) => -1!..!inf
number::mod(int(-10..10), nonInt(-inf..0)) => -inf!..0
number::mod(int(-10..10), nonInt(-inf..1)) => -inf!..!1
number::mod(int(-10..10), nonInt(-inf..inf)) => -inf!..!inf
number::mod(int(-10..10), 1 | int(3..4)) => int(0..3)
number::mod(int(0..inf), number) => -inf..!inf | nan
number::mod(int(0..inf), -3.14) => -3.14!..0
number::mod(int(0..inf), -2) => int(-1..0)
number::mod(int(0..inf), -1) => 0
number::mod(int(0..inf), -0.5) => -0.5!..0
number::mod(int(0..inf), 0) => never
number::mod(int(0..inf), 0.5) => 0..!0.5
number::mod(int(0..inf), 1) => 0
number::mod(int(0..inf), 2) => int(0..1)
number::mod(int(0..inf), 2.78) => 0..!2.78
number::mod(int(0..inf), 3) => int(0..2)
number::mod(int(0..inf), 3.14) => 0..!3.14
number::mod(int(0..inf), 10) => int(0..9)
number::mod(int(0..inf), 100) => int(0..99)
number::mod(int(0..inf), -inf) => -inf | 0
number::mod(int(0..inf), inf) => int(0..inf)
number::mod(int(0..inf), nan) => nan
number::mod(int(0..inf), 0..1) => 0..!1
number::mod(int(0..inf), 0!..1) => 0..!1
number::mod(int(0..inf), 0..!1) => 0..!1
number::mod(int(0..inf), 0..2) => 0..!2
number::mod(int(0..inf), 0!..!2) => 0..!2
number::mod(int(0..inf), 0.5..1.5) => 0..!1.5
number::mod(int(0..inf), 0.5..2.5) => 0..!2.5
number::mod(int(0..inf), 0.5!..2.5) => 0..!2.5
number::mod(int(0..inf), 0.5..!2.5) => 0..!2.5
number::mod(int(0..inf), -2.56..3.35) => -2.56!..!3.35
number::mod(int(0..inf), 0.5..0.75) => 0..!0.75
number::mod(int(0..inf), 1..2) => 0..!2
number::mod(int(0..inf), 0..inf) => 0..!inf
number::mod(int(0..inf), 0!..inf) => 0..!inf
number::mod(int(0..inf), 0..!inf) => 0..!inf
number::mod(int(0..inf), 0!..!inf) => 0..!inf
number::mod(int(0..inf), 1..inf) => 0..!inf
number::mod(int(0..inf), 1!..inf) => 0..!inf
number::mod(int(0..inf), 1..!inf) => 0..!inf
number::mod(int(0..inf), 2..inf) => 0..!inf
number::mod(int(0..inf), 2!..inf) => 0..!inf
number::mod(int(0..inf), 2.5..inf) => 0..!inf
number::mod(int(0..inf), -inf..0) => -inf..0
number::mod(int(0..inf), -inf..inf) => -inf..!inf
number::mod(int(0..inf), -inf!..inf) => -inf!..!inf
number::mod(int(0..inf), -inf..!inf) => -inf..!inf
number::mod(int(0..inf), -inf!..!inf) => -inf!..!inf
number::mod(int(0..inf), int(0..1)) => 0
number::mod(int(0..inf), int(0..2)) => int(0..1)
number::mod(int(0..inf), int(1..2)) => int(0..1)
number::mod(int(0..inf), int(5..20)) => int(0..19)
number::mod(int(0..inf), int(-20..-5)) => int(-19..0)
number::mod(int(0..inf), int(-10..10)) => int(-9..9)
number::mod(int(0..inf), int(0..inf)) => int(0..inf)
number::mod(int(0..inf), int(1..inf)) => int(0..inf)
number::mod(int(0..inf), int(-inf..0)) => int(-inf..0)
number::mod(int(0..inf), int(-inf..1)) => int(-inf..0)
number::mod(int(0..inf), int(-inf..inf)) => int(-inf..inf)
number::mod(int(0..inf), nonInt(0..1)) => 0..!1
number::mod(int(0..inf), nonInt(0..2)) => 0..!2
number::mod(int(0..inf), nonInt(-1..2)) => -1!..!2
number::mod(int(0..inf), nonInt(0..inf)) => 0..!inf
number::mod(int(0..inf), nonInt(-1..inf)) => -1!..!inf
number::mod(int(0..inf), nonInt(-inf..0)) => -inf!..0
number::mod(int(0..inf), nonInt(-inf..1)) => -inf!..!1
number::mod(int(0..inf), nonInt(-inf..inf)) => -inf!..!inf
number::mod(int(0..inf), 1 | int(3..4)) => int(0..3)
number::mod(int(1..inf), number) => -inf..!inf | nan
number::mod(int(1..inf), -3.14) => -3.14!..0
number::mod(int(1..inf), -2) => int(-1..0)
number::mod(int(1..inf), -1) => 0
number::mod(int(1..inf), -0.5) => -0.5!..0
number::mod(int(1..inf), 0) => never
number::mod(int(1..inf), 0.5) => 0..!0.5
number::mod(int(1..inf), 1) => 0
number::mod(int(1..inf), 2) => int(0..1)
number::mod(int(1..inf), 2.78) => 0..!2.78
number::mod(int(1..inf), 3) => int(0..2)
number::mod(int(1..inf), 3.14) => 0..!3.14
number::mod(int(1..inf), 10) => int(0..9)
number::mod(int(1..inf), 100) => int(0..99)
number::mod(int(1..inf), -inf) => -inf
number::mod(int(1..inf), inf) => int(1..inf)
number::mod(int(1..inf), nan) => nan
number::mod(int(1..inf), 0..1) => 0..!1
number::mod(int(1..inf), 0!..1) => 0..!1
number::mod(int(1..inf), 0..!1) => 0..!1
number::mod(int(1..inf), 0..2) => 0..!2
number::mod(int(1..inf), 0!..!2) => 0..!2
number::mod(int(1..inf), 0.5..1.5) => 0..!1.5
number::mod(int(1..inf), 0.5..2.5) => 0..!2.5
number::mod(int(1..inf), 0.5!..2.5) => 0..!2.5
number::mod(int(1..inf), 0.5..!2.5) => 0..!2.5
number::mod(int(1..inf), -2.56..3.35) => -2.56!..!3.35
number::mod(int(1..inf), 0.5..0.75) => 0..!0.75
number::mod(int(1..inf), 1..2) => 0..!2
number::mod(int(1..inf), 0..inf) => 0..!inf
number::mod(int(1..inf), 0!..inf) => 0..!inf
number::mod(int(1..inf), 0..!inf) => 0..!inf
number::mod(int(1..inf), 0!..!inf) => 0..!inf
number::mod(int(1..inf), 1..inf) => 0..!inf
number::mod(int(1..inf), 1!..inf) => 0..!inf
number::mod(int(1..inf), 1..!inf) => 0..!inf
number::mod(int(1..inf), 2..inf) => 0..!inf
number::mod(int(1..inf), 2!..inf) => 0..!inf
number::mod(int(1..inf), 2.5..inf) => 0..!inf
number::mod(int(1..inf), -inf..0) => -inf..0
number::mod(int(1..inf), -inf..inf) => -inf..!inf
number::mod(int(1..inf), -inf!..inf) => -inf!..!inf
number::mod(int(1..inf), -inf..!inf) => -inf..!inf
number::mod(int(1..inf), -inf!..!inf) => -inf!..!inf
number::mod(int(1..inf), int(0..1)) => 0
number::mod(int(1..inf), int(0..2)) => int(0..1)
number::mod(int(1..inf), int(1..2)) => int(0..1)
number::mod(int(1..inf), int(5..20)) => int(0..19)
number::mod(int(1..inf), int(-20..-5)) => int(-19..0)
number::mod(int(1..inf), int(-10..10)) => int(-9..9)
number::mod(int(1..inf), int(0..inf)) => int(0..inf)
number::mod(int(1..inf), int(1..inf)) => int(0..inf)
number::mod(int(1..inf), int(-inf..0)) => int(-inf..0)
number::mod(int(1..inf), int(-inf..1)) => int(-inf..0)
number::mod(int(1..inf), int(-inf..inf)) => int(-inf..inf)
number::mod(int(1..inf), nonInt(0..1)) => 0..!1
number::mod(int(1..inf), nonInt(0..2)) => 0..!2
number::mod(int(1..inf), nonInt(-1..2)) => -1!..!2
number::mod(int(1..inf), nonInt(0..inf)) => 0..!inf
number::mod(int(1..inf), nonInt(-1..inf)) => -1!..!inf
number::mod(int(1..inf), nonInt(-inf..0)) => -inf!..0
number::mod(int(1..inf), nonInt(-inf..1)) => -inf!..!1
number::mod(int(1..inf), nonInt(-inf..inf)) => -inf!..!inf
number::mod(int(1..inf), 1 | int(3..4)) => int(0..3)
number::mod(int(-inf..0), number) => -inf!..inf | nan
number::mod(int(-inf..0), -3.14) => -3.14!..0
number::mod(int(-inf..0), -2) => int(-1..0)
number::mod(int(-inf..0), -1) => 0
number::mod(int(-inf..0), -0.5) => -0.5!..0
number::mod(int(-inf..0), 0) => never
number::mod(int(-inf..0), 0.5) => 0..!0.5
number::mod(int(-inf..0), 1) => 0
number::mod(int(-inf..0), 2) => int(0..1)
number::mod(int(-inf..0), 2.78) => 0..!2.78
number::mod(int(-inf..0), 3) => int(0..2)
number::mod(int(-inf..0), 3.14) => 0..!3.14
number::mod(int(-inf..0), 10) => int(0..9)
number::mod(int(-inf..0), 100) => int(0..99)
number::mod(int(-inf..0), -inf) => int(-inf..0)
number::mod(int(-inf..0), inf) => 0 | inf
number::mod(int(-inf..0), nan) => nan
number::mod(int(-inf..0), 0..1) => 0..!1
number::mod(int(-inf..0), 0!..1) => 0..!1
number::mod(int(-inf..0), 0..!1) => 0..!1
number::mod(int(-inf..0), 0..2) => 0..!2
number::mod(int(-inf..0), 0!..!2) => 0..!2
number::mod(int(-inf..0), 0.5..1.5) => 0..!1.5
number::mod(int(-inf..0), 0.5..2.5) => 0..!2.5
number::mod(int(-inf..0), 0.5!..2.5) => 0..!2.5
number::mod(int(-inf..0), 0.5..!2.5) => 0..!2.5
number::mod(int(-inf..0), -2.56..3.35) => -2.56!..!3.35
number::mod(int(-inf..0), 0.5..0.75) => 0..!0.75
number::mod(int(-inf..0), 1..2) => 0..!2
number::mod(int(-inf..0), 0..inf) => 0..inf
number::mod(int(-inf..0), 0!..inf) => 0..inf
number::mod(int(-inf..0), 0..!inf) => 0..!inf
number::mod(int(-inf..0), 0!..!inf) => 0..!inf
number::mod(int(-inf..0), 1..inf) => 0..inf
number::mod(int(-inf..0), 1!..inf) => 0..inf
number::mod(int(-inf..0), 1..!inf) => 0..!inf
number::mod(int(-inf..0), 2..inf) => 0..inf
number::mod(int(-inf..0), 2!..inf) => 0..inf
number::mod(int(-inf..0), 2.5..inf) => 0..inf
number::mod(int(-inf..0), -inf..0) => -inf!..0
number::mod(int(-inf..0), -inf..inf) => -inf!..inf
number::mod(int(-inf..0), -inf!..inf) => -inf!..inf
number::mod(int(-inf..0), -inf..!inf) => -inf!..!inf
number::mod(int(-inf..0), -inf!..!inf) => -inf!..!inf
number::mod(int(-inf..0), int(0..1)) => 0
number::mod(int(-inf..0), int(0..2)) => int(0..1)
number::mod(int(-inf..0), int(1..2)) => int(0..1)
number::mod(int(-inf..0), int(5..20)) => int(0..19)
number::mod(int(-inf..0), int(-20..-5)) => int(-19..0)
number::mod(int(-inf..0), int(-10..10)) => int(-9..9)
number::mod(int(-inf..0), int(0..inf)) => int(0..inf)
number::mod(int(-inf..0), int(1..inf)) => int(0..inf)
number::mod(int(-inf..0), int(-inf..0)) => int(-inf..0)
number::mod(int(-inf..0), int(-inf..1)) => int(-inf..0)
number::mod(int(-inf..0), int(-inf..inf)) => int(-inf..inf)
number::mod(int(-inf..0), nonInt(0..1)) => 0..!1
number::mod(int(-inf..0), nonInt(0..2)) => 0..!2
number::mod(int(-inf..0), nonInt(-1..2)) => -1!..!2
number::mod(int(-inf..0), nonInt(0..inf)) => 0..!inf
number::mod(int(-inf..0), nonInt(-1..inf)) => -1!..!inf
number::mod(int(-inf..0), nonInt(-inf..0)) => -inf!..0
number::mod(int(-inf..0), nonInt(-inf..1)) => -inf!..!1
number::mod(int(-inf..0), nonInt(-inf..inf)) => -inf!..!inf
number::mod(int(-inf..0), 1 | int(3..4)) => int(0..3)
number::mod(int(-inf..1), number) => number
number::mod(int(-inf..1), -3.14) => -3.14!..0
number::mod(int(-inf..1), -2) => int(-1..0)
number::mod(int(-inf..1), -1) => 0
number::mod(int(-inf..1), -0.5) => -0.5!..0
number::mod(int(-inf..1), 0) => never
number::mod(int(-inf..1), 0.5) => 0..!0.5
number::mod(int(-inf..1), 1) => 0
number::mod(int(-inf..1), 2) => int(0..1)
number::mod(int(-inf..1), 2.78) => 0..!2.78
number::mod(int(-inf..1), 3) => int(0..2)
number::mod(int(-inf..1), 3.14) => 0..!3.14
number::mod(int(-inf..1), 10) => int(0..9)
number::mod(int(-inf..1), 100) => int(0..99)
number::mod(int(-inf..1), -inf) => -inf | int(-inf..0)
number::mod(int(-inf..1), inf) => int(0..1) | inf
number::mod(int(-inf..1), nan) => nan
number::mod(int(-inf..1), 0..1) => 0..!1
number::mod(int(-inf..1), 0!..1) => 0..!1
number::mod(int(-inf..1), 0..!1) => 0..!1
number::mod(int(-inf..1), 0..2) => 0..!2
number::mod(int(-inf..1), 0!..!2) => 0..!2
number::mod(int(-inf..1), 0.5..1.5) => 0..!1.5
number::mod(int(-inf..1), 0.5..2.5) => 0..!2.5
number::mod(int(-inf..1), 0.5!..2.5) => 0..!2.5
number::mod(int(-inf..1), 0.5..!2.5) => 0..!2.5
number::mod(int(-inf..1), -2.56..3.35) => -2.56!..!3.35
number::mod(int(-inf..1), 0.5..0.75) => 0..!0.75
number::mod(int(-inf..1), 1..2) => 0..!2
number::mod(int(-inf..1), 0..inf) => 0..inf
number::mod(int(-inf..1), 0!..inf) => 0..inf
number::mod(int(-inf..1), 0..!inf) => 0..!inf
number::mod(int(-inf..1), 0!..!inf) => 0..!inf
number::mod(int(-inf..1), 1..inf) => 0..inf
number::mod(int(-inf..1), 1!..inf) => 0..inf
number::mod(int(-inf..1), 1..!inf) => 0..!inf
number::mod(int(-inf..1), 2..inf) => 0..inf
number::mod(int(-inf..1), 2!..inf) => 0..inf
number::mod(int(-inf..1), 2.5..inf) => 0..inf
number::mod(int(-inf..1), -inf..0) => -inf..0
number::mod(int(-inf..1), -inf..inf) => -inf..inf
number::mod(int(-inf..1), -inf!..inf) => -inf!..inf
number::mod(int(-inf..1), -inf..!inf) => -inf..!inf
number::mod(int(-inf..1), -inf!..!inf) => -inf!..!inf
number::mod(int(-inf..1), int(0..1)) => 0
number::mod(int(-inf..1), int(0..2)) => int(0..1)
number::mod(int(-inf..1), int(1..2)) => int(0..1)
number::mod(int(-inf..1), int(5..20)) => int(0..19)
number::mod(int(-inf..1), int(-20..-5)) => int(-19..0)
number::mod(int(-inf..1), int(-10..10)) => int(-9..9)
number::mod(int(-inf..1), int(0..inf)) => int(0..inf)
number::mod(int(-inf..1), int(1..inf)) => int(0..inf)
number::mod(int(-inf..1), int(-inf..0)) => int(-inf..0)
number::mod(int(-inf..1), int(-inf..1)) => int(-inf..0)
number::mod(int(-inf..1), int(-inf..inf)) => int(-inf..inf)
number::mod(int(-inf..1), nonInt(0..1)) => 0..!1
number::mod(int(-inf..1), nonInt(0..2)) => 0..!2
number::mod(int(-inf..1), nonInt(-1..2)) => -1!..!2
number::mod(int(-inf..1), nonInt(0..inf)) => 0..!inf
number::mod(int(-inf..1), nonInt(-1..inf)) => -1!..!inf
number::mod(int(-inf..1), nonInt(-inf..0)) => -inf!..0
number::mod(int(-inf..1), nonInt(-inf..1)) => -inf!..!1
number::mod(int(-inf..1), nonInt(-inf..inf)) => -inf!..!inf
number::mod(int(-inf..1), 1 | int(3..4)) => int(0..3)
number::mod(int(-inf..inf), number) => number
number::mod(int(-inf..inf), -3.14) => -3.14!..0
number::mod(int(-inf..inf), -2) => int(-1..0)
number::mod(int(-inf..inf), -1) => 0
number::mod(int(-inf..inf), -0.5) => -0.5!..0
number::mod(int(-inf..inf), 0) => never
number::mod(int(-inf..inf), 0.5) => 0..!0.5
number::mod(int(-inf..inf), 1) => 0
number::mod(int(-inf..inf), 2) => int(0..1)
number::mod(int(-inf..inf), 2.78) => 0..!2.78
number::mod(int(-inf..inf), 3) => int(0..2)
number::mod(int(-inf..inf), 3.14) => 0..!3.14
number::mod(int(-inf..inf), 10) => int(0..9)
number::mod(int(-inf..inf), 100) => int(0..99)
number::mod(int(-inf..inf), -inf) => -inf | int(-inf..0)
number::mod(int(-inf..inf), inf) => int(0..inf) | inf
number::mod(int(-inf..inf), nan) => nan
number::mod(int(-inf..inf), 0..1) => 0..!1
number::mod(int(-inf..inf), 0!..1) => 0..!1
number::mod(int(-inf..inf), 0..!1) => 0..!1
number::mod(int(-inf..inf), 0..2) => 0..!2
number::mod(int(-inf..inf), 0!..!2) => 0..!2
number::mod(int(-inf..inf), 0.5..1.5) => 0..!1.5
number::mod(int(-inf..inf), 0.5..2.5) => 0..!2.5
number::mod(int(-inf..inf), 0.5!..2.5) => 0..!2.5
number::mod(int(-inf..inf), 0.5..!2.5) => 0..!2.5
number::mod(int(-inf..inf), -2.56..3.35) => -2.56!..!3.35
number::mod(int(-inf..inf), 0.5..0.75) => 0..!0.75
number::mod(int(-inf..inf), 1..2) => 0..!2
number::mod(int(-inf..inf), 0..inf) => 0..inf
number::mod(int(-inf..inf), 0!..inf) => 0..inf
number::mod(int(-inf..inf), 0..!inf) => 0..!inf
number::mod(int(-inf..inf), 0!..!inf) => 0..!inf
number::mod(int(-inf..inf), 1..inf) => 0..inf
number::mod(int(-inf..inf), 1!..inf) => 0..inf
number::mod(int(-inf..inf), 1..!inf) => 0..!inf
number::mod(int(-inf..inf), 2..inf) => 0..inf
number::mod(int(-inf..inf), 2!..inf) => 0..inf
number::mod(int(-inf..inf), 2.5..inf) => 0..inf
number::mod(int(-inf..inf), -inf..0) => -inf..0
number::mod(int(-inf..inf), -inf..inf) => -inf..inf
number::mod(int(-inf..inf), -inf!..inf) => -inf!..inf
number::mod(int(-inf..inf), -inf..!inf) => -inf..!inf
number::mod(int(-inf..inf), -inf!..!inf) => -inf!..!inf
number::mod(int(-inf..inf), int(0..1)) => 0
number::mod(int(-inf..inf), int(0..2)) => int(0..1)
number::mod(int(-inf..inf), int(1..2)) => int(0..1)
number::mod(int(-inf..inf), int(5..20)) => int(0..19)
number::mod(int(-inf..inf), int(-20..-5)) => int(-19..0)
number::mod(int(-inf..inf), int(-10..10)) => int(-9..9)
number::mod(int(-inf..inf), int(0..inf)) => int(0..inf)
number::mod(int(-inf..inf), int(1..inf)) => int(0..inf)
number::mod(int(-inf..inf), int(-inf..0)) => int(-inf..0)
number::mod(int(-inf..inf), int(-inf..1)) => int(-inf..0)
number::mod(int(-inf..inf), int(-inf..inf)) => int(-inf..inf)
number::mod(int(-inf..inf), nonInt(0..1)) => 0..!1
number::mod(int(-inf..inf), nonInt(0..2)) => 0..!2
number::mod(int(-inf..inf), nonInt(-1..2)) => -1!..!2
number::mod(int(-inf..inf), nonInt(0..inf)) => 0..!inf
number::mod(int(-inf..inf), nonInt(-1..inf)) => -1!..!inf
number::mod(int(-inf..inf), nonInt(-inf..0)) => -inf!..0
number::mod(int(-inf..inf), nonInt(-inf..1)) => -inf!..!1
number::mod(int(-inf..inf), nonInt(-inf..inf)) => -inf!..!inf
number::mod(int(-inf..inf), 1 | int(3..4)) => int(0..3)
number::mod(nonInt(0..1), number) => -inf..!1 | nan
number::mod(nonInt(0..1), -3.14) => -3.14!..!-2.14
number::mod(nonInt(0..1), -2) => nonInt(-2..-1)
number::mod(nonInt(0..1), -1) => nonInt(-1..0)
number::mod(nonInt(0..1), -0.5) => -0.5!..0
number::mod(nonInt(0..1), 0) => never
number::mod(nonInt(0..1), 0.5) => 0..!0.5
number::mod(nonInt(0..1), 1) => nonInt(0..1)
number::mod(nonInt(0..1), 2) => nonInt(0..1)
number::mod(nonInt(0..1), 2.78) => nonInt(0..1)
number::mod(nonInt(0..1), 3) => nonInt(0..1)
number::mod(nonInt(0..1), 3.14) => nonInt(0..1)
number::mod(nonInt(0..1), 10) => nonInt(0..1)
number::mod(nonInt(0..1), 100) => nonInt(0..1)
number::mod(nonInt(0..1), -inf) => -inf
number::mod(nonInt(0..1), inf) => nonInt(0..1)
number::mod(nonInt(0..1), nan) => nan
number::mod(nonInt(0..1), 0..1) => 0..!1
number::mod(nonInt(0..1), 0!..1) => 0..!1
number::mod(nonInt(0..1), 0..!1) => 0..!1
number::mod(nonInt(0..1), 0..2) => 0..!1
number::mod(nonInt(0..1), 0!..!2) => 0..!1
number::mod(nonInt(0..1), 0.5..1.5) => 0..!1
number::mod(nonInt(0..1), 0.5..2.5) => 0..!1
number::mod(nonInt(0..1), 0.5!..2.5) => 0..!1
number::mod(nonInt(0..1), 0.5..!2.5) => 0..!1
number::mod(nonInt(0..1), -2.56..3.35) => -2.56!..!1
number::mod(nonInt(0..1), 0.5..0.75) => 0..!0.75
number::mod(nonInt(0..1), 1..2) => nonInt(0..1)
number::mod(nonInt(0..1), 0..inf) => 0..!1
number::mod(nonInt(0..1), 0!..inf) => 0..!1
number::mod(nonInt(0..1), 0..!inf) => 0..!1
number::mod(nonInt(0..1), 0!..!inf) => 0..!1
number::mod(nonInt(0..1), 1..inf) => nonInt(0..1)
number::mod(nonInt(0..1), 1!..inf) => nonInt(0..1)
number::mod(nonInt(0..1), 1..!inf) => nonInt(0..1)
number::mod(nonInt(0..1), 2..inf) => nonInt(0..1)
number::mod(nonInt(0..1), 2!..inf) => nonInt(0..1)
number::mod(nonInt(0..1), 2.5..inf) => nonInt(0..1)
number::mod(nonInt(0..1), -inf..0) => -inf..0
number::mod(nonInt(0..1), -inf..inf) => -inf..!1
number::mod(nonInt(0..1), -inf!..inf) => -inf!..!1
number::mod(nonInt(0..1), -inf..!inf) => -inf..!1
number::mod(nonInt(0..1), -inf!..!inf) => -inf!..!1
number::mod(nonInt(0..1), int(0..1)) => nonInt(0..1)
number::mod(nonInt(0..1), int(0..2)) => nonInt(0..1)
number::mod(nonInt(0..1), int(1..2)) => nonInt(0..1)
number::mod(nonInt(0..1), int(5..20)) => nonInt(0..1)
number::mod(nonInt(0..1), int(-20..-5)) => nonInt(-20..-4)
number::mod(nonInt(0..1), int(-10..10)) => nonInt(-10..1)
number::mod(nonInt(0..1), int(0..inf)) => nonInt(0..1)
number::mod(nonInt(0..1), int(1..inf)) => nonInt(0..1)
number::mod(nonInt(0..1), int(-inf..0)) => nonInt(-inf..0)
number::mod(nonInt(0..1), int(-inf..1)) => nonInt(-inf..1)
number::mod(nonInt(0..1), int(-inf..inf)) => nonInt(-inf..1)
number::mod(nonInt(0..1), nonInt(0..1)) => 0..!1
number::mod(nonInt(0..1), nonInt(0..2)) => 0..!1
number::mod(nonInt(0..1), nonInt(-1..2)) => -1!..!2
number::mod(nonInt(0..1), nonInt(0..inf)) => 0..!1
number::mod(nonInt(0..1), nonInt(-1..inf)) => -1!..!inf
number::mod(nonInt(0..1), nonInt(-inf..0)) => -inf!..0
number::mod(nonInt(0..1), nonInt(-inf..1)) => -inf!..!1
number::mod(nonInt(0..1), nonInt(-inf..inf)) => -inf!..!inf
number::mod(nonInt(0..1), 1 | int(3..4)) => nonInt(0..1)
number::mod(nonInt(0..2), number) => -inf..!2 | nan
number::mod(nonInt(0..2), -3.14) => -3.14!..!-1.14
number::mod(nonInt(0..2), -2) => nonInt(-2..0)
number::mod(nonInt(0..2), -1) => nonInt(-1..0)
number::mod(nonInt(0..2), -0.5) => -0.5!..0
number::mod(nonInt(0..2), 0) => never
number::mod(nonInt(0..2), 0.5) => 0..!0.5
number::mod(nonInt(0..2), 1) => nonInt(0..1)
number::mod(nonInt(0..2), 2) => nonInt(0..2)
number::mod(nonInt(0..2), 2.78) => nonInt(0..2)
number::mod(nonInt(0..2), 3) => nonInt(0..2)
number::mod(nonInt(0..2), 3.14) => nonInt(0..2)
number::mod(nonInt(0..2), 10) => nonInt(0..2)
number::mod(nonInt(0..2), 100) => nonInt(0..2)
number::mod(nonInt(0..2), -inf) => -inf
number::mod(nonInt(0..2), inf) => nonInt(0..2)
number::mod(nonInt(0..2), nan) => nan
number::mod(nonInt(0..2), 0..1) => 0..!1
number::mod(nonInt(0..2), 0!..1) => 0..!1
number::mod(nonInt(0..2), 0..!1) => 0..!1
number::mod(nonInt(0..2), 0..2) => 0..!2
number::mod(nonInt(0..2), 0!..!2) => 0..!2
number::mod(nonInt(0..2), 0.5..1.5) => 0..!1.5
number::mod(nonInt(0..2), 0.5..2.5) => 0..!2
number::mod(nonInt(0..2), 0.5!..2.5) => 0..!2
number::mod(nonInt(0..2), 0.5..!2.5) => 0..!2
number::mod(nonInt(0..2), -2.56..3.35) => -2.56!..!2
number::mod(nonInt(0..2), 0.5..0.75) => 0..!0.75
number::mod(nonInt(0..2), 1..2) => 0..!2
number::mod(nonInt(0..2), 0..inf) => 0..!2
number::mod(nonInt(0..2), 0!..inf) => 0..!2
number::mod(nonInt(0..2), 0..!inf) => 0..!2
number::mod(nonInt(0..2), 0!..!inf) => 0..!2
number::mod(nonInt(0..2), 1..inf) => 0..!2
number::mod(nonInt(0..2), 1!..inf) => 0..!2
number::mod(nonInt(0..2), 1..!inf) => 0..!2
number::mod(nonInt(0..2), 2..inf) => nonInt(0..2)
number::mod(nonInt(0..2), 2!..inf) => nonInt(0..2)
number::mod(nonInt(0..2), 2.5..inf) => nonInt(0..2)
number::mod(nonInt(0..2), -inf..0) => -inf..0
number::mod(nonInt(0..2), -inf..inf) => -inf..!2
number::mod(nonInt(0..2), -inf!..inf) => -inf!..!2
number::mod(nonInt(0..2), -inf..!inf) => -inf..!2
number::mod(nonInt(0..2), -inf!..!inf) => -inf!..!2
number::mod(nonInt(0..2), int(0..1)) => nonInt(0..1)
number::mod(nonInt(0..2), int(0..2)) => nonInt(0..2)
number::mod(nonInt(0..2), int(1..2)) => nonInt(0..2)
number::mod(nonInt(0..2), int(5..20)) => nonInt(0..2)
number::mod(nonInt(0..2), int(-20..-5)) => nonInt(-20..-3)
number::mod(nonInt(0..2), int(-10..10)) => nonInt(-10..2)
number::mod(nonInt(0..2), int(0..inf)) => nonInt(0..2)
number::mod(nonInt(0..2), int(1..inf)) => nonInt(0..2)
number::mod(nonInt(0..2), int(-inf..0)) => nonInt(-inf..0)
number::mod(nonInt(0..2), int(-inf..1)) => nonInt(-inf..1)
number::mod(nonInt(0..2), int(-inf..inf)) => nonInt(-inf..2)
number::mod(nonInt(0..2), nonInt(0..1)) => 0..!1
number::mod(nonInt(0..2), nonInt(0..2)) => 0..!2
number::mod(nonInt(0..2), nonInt(-1..2)) => -1!..!2
number::mod(nonInt(0..2), nonInt(0..inf)) => 0..!2
number::mod(nonInt(0..2), nonInt(-1..inf)) => -1!..!inf
number::mod(nonInt(0..2), nonInt(-inf..0)) => -inf!..0
number::mod(nonInt(0..2), nonInt(-inf..1)) => -inf!..!1
number::mod(nonInt(0..2), nonInt(-inf..inf)) => -inf!..!inf
number::mod(nonInt(0..2), 1 | int(3..4)) => nonInt(0..2)
number::mod(nonInt(-1..2), number) => number
number::mod(nonInt(-1..2), -3.14) => -3.14!..!-1.14 | nonInt(-1..0)
number::mod(nonInt(-1..2), -2) => nonInt(-2..0)
number::mod(nonInt(-1..2), -1) => nonInt(-1..0)
number::mod(nonInt(-1..2), -0.5) => -0.5!..0
number::mod(nonInt(-1..2), 0) => never
number::mod(nonInt(-1..2), 0.5) => 0..!0.5
number::mod(nonInt(-1..2), 1) => nonInt(0..1)
number::mod(nonInt(-1..2), 2) => nonInt(0..2)
number::mod(nonInt(-1..2), 2.78) => nonInt(0..1) | 1!..!2.78
number::mod(nonInt(-1..2), 3) => nonInt(0..3)
number::mod(nonInt(-1..2), 3.14) => nonInt(0..2) | 2.14!..!3.14
number::mod(nonInt(-1..2), 10) => nonInt(0..2) | nonInt(9..10)
number::mod(nonInt(-1..2), 100) => nonInt(0..2) | nonInt(99..100)
number::mod(nonInt(-1..2), -inf) => -inf | nonInt(-1..0)
number::mod(nonInt(-1..2), inf) => nonInt(0..2) | inf
number::mod(nonInt(-1..2), nan) => nan
number::mod(nonInt(-1..2), 0..1) => 0..!1
number::mod(nonInt(-1..2), 0!..1) => 0..!1
number::mod(nonInt(-1..2), 0..!1) => 0..!1
number::mod(nonInt(-1..2), 0..2) => 0..!2
number::mod(nonInt(-1..2), 0!..!2) => 0..!2
number::mod(nonInt(-1..2), 0.5..1.5) => 0..!1.5
number::mod(nonInt(-1..2), 0.5..2.5) => 0..!2.5
number::mod(nonInt(-1..2), 0.5!..2.5) => 0..!2.5
number::mod(nonInt(-1..2), 0.5..!2.5) => 0..!2.5
number::mod(nonInt(-1..2), -2.56..3.35) => -2.56!..!3.35
number::mod(nonInt(-1..2), 0.5..0.75) => 0..!0.75
number::mod(nonInt(-1..2), 1..2) => 0..!2
number::mod(nonInt(-1..2), 0..inf) => 0..inf
number::mod(nonInt(-1..2), 0!..inf) => 0..inf
number::mod(nonInt(-1..2), 0..!inf) => 0..!inf
number::mod(nonInt(-1..2), 0!..!inf) => 0..!inf
number::mod(nonInt(-1..2), 1..inf) => 0..inf
number::mod(nonInt(-1..2), 1!..inf) => 0..inf
number::mod(nonInt(-1..2), 1..!inf) => 0..!inf
number::mod(nonInt(-1..2), 2..inf) => 0..inf
number::mod(nonInt(-1..2), 2!..inf) => 0..inf
number::mod(nonInt(-1..2), 2.5..inf) => 0..inf
number::mod(nonInt(-1..2), -inf..0) => -inf..0
number::mod(nonInt(-1..2), -inf..inf) => -inf..inf
number::mod(nonInt(-1..2), -inf!..inf) => -inf!..inf
number::mod(nonInt(-1..2), -inf..!inf) => -inf..!inf
number::mod(nonInt(-1..2), -inf!..!inf) => -inf!..!inf
number::mod(nonInt(-1..2), int(0..1)) => nonInt(0..1)
number::mod(nonInt(-1..2), int(0..2)) => nonInt(0..2)
number::mod(nonInt(-1..2), int(1..2)) => nonInt(0..2)
number::mod(nonInt(-1..2), int(5..20)) => nonInt(0..20)
number::mod(nonInt(-1..2), int(-20..-5)) => nonInt(-20..0)
number::mod(nonInt(-1..2), int(-10..10)) => nonInt(-10..10)
number::mod(nonInt(-1..2), int(0..inf)) => nonInt(0..inf)
number::mod(nonInt(-1..2), int(1..inf)) => nonInt(0..inf)
number::mod(nonInt(-1..2), int(-inf..0)) => nonInt(-inf..0)
number::mod(nonInt(-1..2), int(-inf..1)) => nonInt(-inf..1)
number::mod(nonInt(-1..2), int(-inf..inf)) => nonInt(-inf..inf)
number::mod(nonInt(-1..2), nonInt(0..1)) => 0..!1
number::mod(nonInt(-1..2), nonInt(0..2)) => 0..!2
number::mod(nonInt(-1..2), nonInt(-1..2)) => -1!..!2
number::mod(nonInt(-1..2), nonInt(0..inf)) => 0..!inf
number::mod(nonInt(-1..2), nonInt(-1..inf)) => -1!..!inf
number::mod(nonInt(-1..2), nonInt(-inf..0)) => -inf!..0
number::mod(nonInt(-1..2), nonInt(-inf..1)) => -inf!..!1
number::mod(nonInt(-1..2), nonInt(-inf..inf)) => -inf!..!inf
number::mod(nonInt(-1..2), 1 | int(3..4)) => nonInt(0..4)
number::mod(nonInt(0..inf), number) => -inf..!inf | nan
number::mod(nonInt(0..inf), -3.14) => -3.14!..0
number::mod(nonInt(0..inf), -2) => nonInt(-2..0)
number::mod(nonInt(0..inf), -1) => nonInt(-1..0)
number::mod(nonInt(0..inf), -0.5) => -0.5!..0
number::mod(nonInt(0..inf), 0) => never
number::mod(nonInt(0..inf), 0.5) => 0..!0.5
number::mod(nonInt(0..inf), 1) => nonInt(0..1)
number::mod(nonInt(0..inf), 2) => nonInt(0..2)
number::mod(nonInt(0..inf), 2.78) => 0..!2.78
number::mod(nonInt(0..inf), 3) => nonInt(0..3)
number::mod(nonInt(0..inf), 3.14) => 0..!3.14
number::mod(nonInt(0..inf), 10) => nonInt(0..10)
number::mod(nonInt(0..inf), 100) => nonInt(0..100)
number::mod(nonInt(0..inf), -inf) => -inf
number::mod(nonInt(0..inf), inf) => nonInt(0..inf)
number::mod(nonInt(0..inf), nan) => nan
number::mod(nonInt(0..inf), 0..1) => 0..!1
number::mod(nonInt(0..inf), 0!..1) => 0..!1
number::mod(nonInt(0..inf), 0..!1) => 0..!1
number::mod(nonInt(0..inf), 0..2) => 0..!2
number::mod(nonInt(0..inf), 0!..!2) => 0..!2
number::mod(nonInt(0..inf), 0.5..1.5) => 0..!1.5
number::mod(nonInt(0..inf), 0.5..2.5) => 0..!2.5
number::mod(nonInt(0..inf), 0.5!..2.5) => 0..!2.5
number::mod(nonInt(0..inf), 0.5..!2.5) => 0..!2.5
number::mod(nonInt(0..inf), -2.56..3.35) => -2.56!..!3.35
number::mod(nonInt(0..inf), 0.5..0.75) => 0..!0.75
number::mod(nonInt(0..inf), 1..2) => 0..!2
number::mod(nonInt(0..inf), 0..inf) => 0..!inf
number::mod(nonInt(0..inf), 0!..inf) => 0..!inf
number::mod(nonInt(0..inf), 0..!inf) => 0..!inf
number::mod(nonInt(0..inf), 0!..!inf) => 0..!inf
number::mod(nonInt(0..inf), 1..inf) => 0..!inf
number::mod(nonInt(0..inf), 1!..inf) => 0..!inf
number::mod(nonInt(0..inf), 1..!inf) => 0..!inf
number::mod(nonInt(0..inf), 2..inf) => 0..!inf
number::mod(nonInt(0..inf), 2!..inf) => 0..!inf
number::mod(nonInt(0..inf), 2.5..inf) => 0..!inf
number::mod(nonInt(0..inf), -inf..0) => -inf..0
number::mod(nonInt(0..inf), -inf..inf) => -inf..!inf
number::mod(nonInt(0..inf), -inf!..inf) => -inf!..!inf
number::mod(nonInt(0..inf), -inf..!inf) => -inf..!inf
number::mod(nonInt(0..inf), -inf!..!inf) => -inf!..!inf
number::mod(nonInt(0..inf), int(0..1)) => nonInt(0..1)
number::mod(nonInt(0..inf), int(0..2)) => nonInt(0..2)
number::mod(nonInt(0..inf), int(1..2)) => nonInt(0..2)
number::mod(nonInt(0..inf), int(5..20)) => nonInt(0..20)
number::mod(nonInt(0..inf), int(-20..-5)) => nonInt(-20..0)
number::mod(nonInt(0..inf), int(-10..10)) => nonInt(-10..10)
number::mod(nonInt(0..inf), int(0..inf)) => nonInt(0..inf)
number::mod(nonInt(0..inf), int(1..inf)) => nonInt(0..inf)
number::mod(nonInt(0..inf), int(-inf..0)) => nonInt(-inf..0)
number::mod(nonInt(0..inf), int(-inf..1)) => nonInt(-inf..1)
number::mod(nonInt(0..inf), int(-inf..inf)) => nonInt(-inf..inf)
number::mod(nonInt(0..inf), nonInt(0..1)) => 0..!1
number::mod(nonInt(0..inf), nonInt(0..2)) => 0..!2
number::mod(nonInt(0..inf), nonInt(-1..2)) => -1!..!2
number::mod(nonInt(0..inf), nonInt(0..inf)) => 0..!inf
number::mod(nonInt(0..inf), nonInt(-1..inf)) => -1!..!inf
number::mod(nonInt(0..inf), nonInt(-inf..0)) => -inf!..0
number::mod(nonInt(0..inf), nonInt(-inf..1)) => -inf!..!1
number::mod(nonInt(0..inf), nonInt(-inf..inf)) => -inf!..!inf
number::mod(nonInt(0..inf), 1 | int(3..4)) => nonInt(0..4)
number::mod(nonInt(-1..inf), number) => number
number::mod(nonInt(-1..inf), -3.14) => -3.14!..0
number::mod(nonInt(-1..inf), -2) => nonInt(-2..0)
number::mod(nonInt(-1..inf), -1) => nonInt(-1..0)
number::mod(nonInt(-1..inf), -0.5) => -0.5!..0
number::mod(nonInt(-1..inf), 0) => never
number::mod(nonInt(-1..inf), 0.5) => 0..!0.5
number::mod(nonInt(-1..inf), 1) => nonInt(0..1)
number::mod(nonInt(-1..inf), 2) => nonInt(0..2)
number::mod(nonInt(-1..inf), 2.78) => 0..!2.78
number::mod(nonInt(-1..inf), 3) => nonInt(0..3)
number::mod(nonInt(-1..inf), 3.14) => 0..!3.14
number::mod(nonInt(-1..inf), 10) => nonInt(0..10)
number::mod(nonInt(-1..inf), 100) => nonInt(0..100)
number::mod(nonInt(-1..inf), -inf) => -inf | nonInt(-1..0)
number::mod(nonInt(-1..inf), inf) => nonInt(0..inf) | inf
number::mod(nonInt(-1..inf), nan) => nan
number::mod(nonInt(-1..inf), 0..1) => 0..!1
number::mod(nonInt(-1..inf), 0!..1) => 0..!1
number::mod(nonInt(-1..inf), 0..!1) => 0..!1
number::mod(nonInt(-1..inf), 0..2) => 0..!2
number::mod(nonInt(-1..inf), 0!..!2) => 0..!2
number::mod(nonInt(-1..inf), 0.5..1.5) => 0..!1.5
number::mod(nonInt(-1..inf), 0.5..2.5) => 0..!2.5
number::mod(nonInt(-1..inf), 0.5!..2.5) => 0..!2.5
number::mod(nonInt(-1..inf), 0.5..!2.5) => 0..!2.5
number::mod(nonInt(-1..inf), -2.56..3.35) => -2.56!..!3.35
number::mod(nonInt(-1..inf), 0.5..0.75) => 0..!0.75
number::mod(nonInt(-1..inf), 1..2) => 0..!2
number::mod(nonInt(-1..inf), 0..inf) => 0..inf
number::mod(nonInt(-1..inf), 0!..inf) => 0..inf
number::mod(nonInt(-1..inf), 0..!inf) => 0..!inf
number::mod(nonInt(-1..inf), 0!..!inf) => 0..!inf
number::mod(nonInt(-1..inf), 1..inf) => 0..inf
number::mod(nonInt(-1..inf), 1!..inf) => 0..inf
number::mod(nonInt(-1..inf), 1..!inf) => 0..!inf
number::mod(nonInt(-1..inf), 2..inf) => 0..inf
number::mod(nonInt(-1..inf), 2!..inf) => 0..inf
number::mod(nonInt(-1..inf), 2.5..inf) => 0..inf
number::mod(nonInt(-1..inf), -inf..0) => -inf..0
number::mod(nonInt(-1..inf), -inf..inf) => -inf..inf
number::mod(nonInt(-1..inf), -inf!..inf) => -inf!..inf
number::mod(nonInt(-1..inf), -inf..!inf) => -inf..!inf
number::mod(nonInt(-1..inf), -inf!..!inf) => -inf!..!inf
number::mod(nonInt(-1..inf), int(0..1)) => nonInt(0..1)
number::mod(nonInt(-1..inf), int(0..2)) => nonInt(0..2)
number::mod(nonInt(-1..inf), int(1..2)) => nonInt(0..2)
number::mod(nonInt(-1..inf), int(5..20)) => nonInt(0..20)
number::mod(nonInt(-1..inf), int(-20..-5)) => nonInt(-20..0)
number::mod(nonInt(-1..inf), int(-10..10)) => nonInt(-10..10)
number::mod(nonInt(-1..inf), int(0..inf)) => nonInt(0..inf)
number::mod(nonInt(-1..inf), int(1..inf)) => nonInt(0..inf)
number::mod(nonInt(-1..inf), int(-inf..0)) => nonInt(-inf..0)
number::mod(nonInt(-1..inf), int(-inf..1)) => nonInt(-inf..1)
number::mod(nonInt(-1..inf), int(-inf..inf)) => nonInt(-inf..inf)
number::mod(nonInt(-1..inf), nonInt(0..1)) => 0..!1
number::mod(nonInt(-1..inf), nonInt(0..2)) => 0..!2
number::mod(nonInt(-1..inf), nonInt(-1..2)) => -1!..!2
number::mod(nonInt(-1..inf), nonInt(0..inf)) => 0..!inf
number::mod(nonInt(-1..inf), nonInt(-1..inf)) => -1!..!inf
number::mod(nonInt(-1..inf), nonInt(-inf..0)) => -inf!..0
number::mod(nonInt(-1..inf), nonInt(-inf..1)) => -inf!..!1
number::mod(nonInt(-1..inf), nonInt(-inf..inf)) => -inf!..!inf
number::mod(nonInt(-1..inf), 1 | int(3..4)) => nonInt(0..4)
number::mod(nonInt(-inf..0), number) => -inf!..inf | nan
number::mod(nonInt(-inf..0), -3.14) => -3.14!..0
number::mod(nonInt(-inf..0), -2) => nonInt(-2..0)
number::mod(nonInt(-inf..0), -1) => nonInt(-1..0)
number::mod(nonInt(-inf..0), -0.5) => -0.5!..0
number::mod(nonInt(-inf..0), 0) => never
number::mod(nonInt(-inf..0), 0.5) => 0..!0.5
number::mod(nonInt(-inf..0), 1) => nonInt(0..1)
number::mod(nonInt(-inf..0), 2) => nonInt(0..2)
number::mod(nonInt(-inf..0), 2.78) => 0..!2.78
number::mod(nonInt(-inf..0), 3) => nonInt(0..3)
number::mod(nonInt(-inf..0), 3.14) => 0..!3.14
number::mod(nonInt(-inf..0), 10) => nonInt(0..10)
number::mod(nonInt(-inf..0), 100) => nonInt(0..100)
number::mod(nonInt(-inf..0), -inf) => nonInt(-inf..0)
number::mod(nonInt(-inf..0), inf) => inf
number::mod(nonInt(-inf..0), nan) => nan
number::mod(nonInt(-inf..0), 0..1) => 0..!1
number::mod(nonInt(-inf..0), 0!..1) => 0..!1
number::mod(nonInt(-inf..0), 0..!1) => 0..!1
number::mod(nonInt(-inf..0), 0..2) => 0..!2
number::mod(nonInt(-inf..0), 0!..!2) => 0..!2
number::mod(nonInt(-inf..0), 0.5..1.5) => 0..!1.5
number::mod(nonInt(-inf..0), 0.5..2.5) => 0..!2.5
number::mod(nonInt(-inf..0), 0.5!..2.5) => 0..!2.5
number::mod(nonInt(-inf..0), 0.5..!2.5) => 0..!2.5
number::mod(nonInt(-inf..0), -2.56..3.35) => -2.56!..!3.35
number::mod(nonInt(-inf..0), 0.5..0.75) => 0..!0.75
number::mod(nonInt(-inf..0), 1..2) => 0..!2
number::mod(nonInt(-inf..0), 0..inf) => 0..inf
number::mod(nonInt(-inf..0), 0!..inf) => 0..inf
number::mod(nonInt(-inf..0), 0..!inf) => 0..!inf
number::mod(nonInt(-inf..0), 0!..!inf) => 0..!inf
number::mod(nonInt(-inf..0), 1..inf) => 0..inf
number::mod(nonInt(-inf..0), 1!..inf) => 0..inf
number::mod(nonInt(-inf..0), 1..!inf) => 0..!inf
number::mod(nonInt(-inf..0), 2..inf) => 0..inf
number::mod(nonInt(-inf..0), 2!..inf) => 0..inf
number::mod(nonInt(-inf..0), 2.5..inf) => 0..inf
number::mod(nonInt(-inf..0), -inf..0) => -inf!..0
number::mod(nonInt(-inf..0), -inf..inf) => -inf!..inf
number::mod(nonInt(-inf..0), -inf!..inf) => -inf!..inf
number::mod(nonInt(-inf..0), -inf..!inf) => -inf!..!inf
number::mod(nonInt(-inf..0), -inf!..!inf) => -inf!..!inf
number::mod(nonInt(-inf..0), int(0..1)) => nonInt(0..1)
number::mod(nonInt(-inf..0), int(0..2)) => nonInt(0..2)
number::mod(nonInt(-inf..0), int(1..2)) => nonInt(0..2)
number::mod(nonInt(-inf..0), int(5..20)) => nonInt(0..20)
number::mod(nonInt(-inf..0), int(-20..-5)) => nonInt(-20..0)
number::mod(nonInt(-inf..0), int(-10..10)) => nonInt(-10..10)
number::mod(nonInt(-inf..0), int(0..inf)) => nonInt(0..inf)
number::mod(nonInt(-inf..0), int(1..inf)) => nonInt(0..inf)
number::mod(nonInt(-inf..0), int(-inf..0)) => nonInt(-inf..0)
number::mod(nonInt(-inf..0), int(-inf..1)) => nonInt(-inf..1)
number::mod(nonInt(-inf..0), int(-inf..inf)) => nonInt(-inf..inf)
number::mod(nonInt(-inf..0), nonInt(0..1)) => 0..!1
number::mod(nonInt(-inf..0), nonInt(0..2)) => 0..!2
number::mod(nonInt(-inf..0), nonInt(-1..2)) => -1!..!2
number::mod(nonInt(-inf..0), nonInt(0..inf)) => 0..!inf
number::mod(nonInt(-inf..0), nonInt(-1..inf)) => -1!..!inf
number::mod(nonInt(-inf..0), nonInt(-inf..0)) => -inf!..0
number::mod(nonInt(-inf..0), nonInt(-inf..1)) => -inf!..!1
number::mod(nonInt(-inf..0), nonInt(-inf..inf)) => -inf!..!inf
number::mod(nonInt(-inf..0), 1 | int(3..4)) => nonInt(0..4)
number::mod(nonInt(-inf..1), number) => number
number::mod(nonInt(-inf..1), -3.14) => -3.14!..0
number::mod(nonInt(-inf..1), -2) => nonInt(-2..0)
number::mod(nonInt(-inf..1), -1) => nonInt(-1..0)
number::mod(nonInt(-inf..1), -0.5) => -0.5!..0
number::mod(nonInt(-inf..1), 0) => never
number::mod(nonInt(-inf..1), 0.5) => 0..!0.5
number::mod(nonInt(-inf..1), 1) => nonInt(0..1)
number::mod(nonInt(-inf..1), 2) => nonInt(0..2)
number::mod(nonInt(-inf..1), 2.78) => 0..!2.78
number::mod(nonInt(-inf..1), 3) => nonInt(0..3)
number::mod(nonInt(-inf..1), 3.14) => 0..!3.14
number::mod(nonInt(-inf..1), 10) => nonInt(0..10)
number::mod(nonInt(-inf..1), 100) => nonInt(0..100)
number::mod(nonInt(-inf..1), -inf) => -inf | nonInt(-inf..0)
number::mod(nonInt(-inf..1), inf) => nonInt(0..1) | inf
number::mod(nonInt(-inf..1), nan) => nan
number::mod(nonInt(-inf..1), 0..1) => 0..!1
number::mod(nonInt(-inf..1), 0!..1) => 0..!1
number::mod(nonInt(-inf..1), 0..!1) => 0..!1
number::mod(nonInt(-inf..1), 0..2) => 0..!2
number::mod(nonInt(-inf..1), 0!..!2) => 0..!2
number::mod(nonInt(-inf..1), 0.5..1.5) => 0..!1.5
number::mod(nonInt(-inf..1), 0.5..2.5) => 0..!2.5
number::mod(nonInt(-inf..1), 0.5!..2.5) => 0..!2.5
number::mod(nonInt(-inf..1), 0.5..!2.5) => 0..!2.5
number::mod(nonInt(-inf..1), -2.56..3.35) => -2.56!..!3.35
number::mod(nonInt(-inf..1), 0.5..0.75) => 0..!0.75
number::mod(nonInt(-inf..1), 1..2) => 0..!2
number::mod(nonInt(-inf..1), 0..inf) => 0..inf
number::mod(nonInt(-inf..1), 0!..inf) => 0..inf
number::mod(nonInt(-inf..1), 0..!inf) => 0..!inf
number::mod(nonInt(-inf..1), 0!..!inf) => 0..!inf
number::mod(nonInt(-inf..1), 1..inf) => 0..inf
number::mod(nonInt(-inf..1), 1!..inf) => 0..inf
number::mod(nonInt(-inf..1), 1..!inf) => 0..!inf
number::mod(nonInt(-inf..1), 2..inf) => 0..inf
number::mod(nonInt(-inf..1), 2!..inf) => 0..inf
number::mod(nonInt(-inf..1), 2.5..inf) => 0..inf
number::mod(nonInt(-inf..1), -inf..0) => -inf..0
number::mod(nonInt(-inf..1), -inf..inf) => -inf..inf
number::mod(nonInt(-inf..1), -inf!..inf) => -inf!..inf
number::mod(nonInt(-inf..1), -inf..!inf) => -inf..!inf
number::mod(nonInt(-inf..1), -inf!..!inf) => -inf!..!inf
number::mod(nonInt(-inf..1), int(0..1)) => nonInt(0..1)
number::mod(nonInt(-inf..1), int(0..2)) => nonInt(0..2)
number::mod(nonInt(-inf..1), int(1..2)) => nonInt(0..2)
number::mod(nonInt(-inf..1), int(5..20)) => nonInt(0..20)
number::mod(nonInt(-inf..1), int(-20..-5)) => nonInt(-20..0)
number::mod(nonInt(-inf..1), int(-10..10)) => nonInt(-10..10)
number::mod(nonInt(-inf..1), int(0..inf)) => nonInt(0..inf)
number::mod(nonInt(-inf..1), int(1..inf)) => nonInt(0..inf)
number::mod(nonInt(-inf..1), int(-inf..0)) => nonInt(-inf..0)
number::mod(nonInt(-inf..1), int(-inf..1)) => nonInt(-inf..1)
number::mod(nonInt(-inf..1), int(-inf..inf)) => nonInt(-inf..inf)
number::mod(nonInt(-inf..1), nonInt(0..1)) => 0..!1
number::mod(nonInt(-inf..1), nonInt(0..2)) => 0..!2
number::mod(nonInt(-inf..1), nonInt(-1..2)) => -1!..!2
number::mod(nonInt(-inf..1), nonInt(0..inf)) => 0..!inf
number::mod(nonInt(-inf..1), nonInt(-1..inf)) => -1!..!inf
number::mod(nonInt(-inf..1), nonInt(-inf..0)) => -inf!..0
number::mod(nonInt(-inf..1), nonInt(-inf..1)) => -inf!..!1
number::mod(nonInt(-inf..1), nonInt(-inf..inf)) => -inf!..!inf
number::mod(nonInt(-inf..1), 1 | int(3..4)) => nonInt(0..4)
number::mod(nonInt(-inf..inf), number) => number
number::mod(nonInt(-inf..inf), -3.14) => -3.14!..0
number::mod(nonInt(-inf..inf), -2) => nonInt(-2..0)
number::mod(nonInt(-inf..inf), -1) => nonInt(-1..0)
number::mod(nonInt(-inf..inf), -0.5) => -0.5!..0
number::mod(nonInt(-inf..inf), 0) => never
number::mod(nonInt(-inf..inf), 0.5) => 0..!0.5
number::mod(nonInt(-inf..inf), 1) => nonInt(0..1)
number::mod(nonInt(-inf..inf), 2) => nonInt(0..2)
number::mod(nonInt(-inf..inf), 2.78) => 0..!2.78
number::mod(nonInt(-inf..inf), 3) => nonInt(0..3)
number::mod(nonInt(-inf..inf), 3.14) => 0..!3.14
number::mod(nonInt(-inf..inf), 10) => nonInt(0..10)
number::mod(nonInt(-inf..inf), 100) => nonInt(0..100)
number::mod(nonInt(-inf..inf), -inf) => -inf | nonInt(-inf..0)
number::mod(nonInt(-inf..inf), inf) => nonInt(0..inf) | inf
number::mod(nonInt(-inf..inf), nan) => nan
number::mod(nonInt(-inf..inf), 0..1) => 0..!1
number::mod(nonInt(-inf..inf), 0!..1) => 0..!1
number::mod(nonInt(-inf..inf), 0..!1) => 0..!1
number::mod(nonInt(-inf..inf), 0..2) => 0..!2
number::mod(nonInt(-inf..inf), 0!..!2) => 0..!2
number::mod(nonInt(-inf..inf), 0.5..1.5) => 0..!1.5
number::mod(nonInt(-inf..inf), 0.5..2.5) => 0..!2.5
number::mod(nonInt(-inf..inf), 0.5!..2.5) => 0..!2.5
number::mod(nonInt(-inf..inf), 0.5..!2.5) => 0..!2.5
number::mod(nonInt(-inf..inf), -2.56..3.35) => -2.56!..!3.35
number::mod(nonInt(-inf..inf), 0.5..0.75) => 0..!0.75
number::mod(nonInt(-inf..inf), 1..2) => 0..!2
number::mod(nonInt(-inf..inf), 0..inf) => 0..inf
number::mod(nonInt(-inf..inf), 0!..inf) => 0..inf
number::mod(nonInt(-inf..inf), 0..!inf) => 0..!inf
number::mod(nonInt(-inf..inf), 0!..!inf) => 0..!inf
number::mod(nonInt(-inf..inf), 1..inf) => 0..inf
number::mod(nonInt(-inf..inf), 1!..inf) => 0..inf
number::mod(nonInt(-inf..inf), 1..!inf) => 0..!inf
number::mod(nonInt(-inf..inf), 2..inf) => 0..inf
number::mod(nonInt(-inf..inf), 2!..inf) => 0..inf
number::mod(nonInt(-inf..inf), 2.5..inf) => 0..inf
number::mod(nonInt(-inf..inf), -inf..0) => -inf..0
number::mod(nonInt(-inf..inf), -inf..inf) => -inf..inf
number::mod(nonInt(-inf..inf), -inf!..inf) => -inf!..inf
number::mod(nonInt(-inf..inf), -inf..!inf) => -inf..!inf
number::mod(nonInt(-inf..inf), -inf!..!inf) => -inf!..!inf
number::mod(nonInt(-inf..inf), int(0..1)) => nonInt(0..1)
number::mod(nonInt(-inf..inf), int(0..2)) => nonInt(0..2)
number::mod(nonInt(-inf..inf), int(1..2)) => nonInt(0..2)
number::mod(nonInt(-inf..inf), int(5..20)) => nonInt(0..20)
number::mod(nonInt(-inf..inf), int(-20..-5)) => nonInt(-20..0)
number::mod(nonInt(-inf..inf), int(-10..10)) => nonInt(-10..10)
number::mod(nonInt(-inf..inf), int(0..inf)) => nonInt(0..inf)
number::mod(nonInt(-inf..inf), int(1..inf)) => nonInt(0..inf)
number::mod(nonInt(-inf..inf), int(-inf..0)) => nonInt(-inf..0)
number::mod(nonInt(-inf..inf), int(-inf..1)) => nonInt(-inf..1)
number::mod(nonInt(-inf..inf), int(-inf..inf)) => nonInt(-inf..inf)
number::mod(nonInt(-inf..inf), nonInt(0..1)) => 0..!1
number::mod(nonInt(-inf..inf), nonInt(0..2)) => 0..!2
number::mod(nonInt(-inf..inf), nonInt(-1..2)) => -1!..!2
number::mod(nonInt(-inf..inf), nonInt(0..inf)) => 0..!inf
number::mod(nonInt(-inf..inf), nonInt(-1..inf)) => -1!..!inf
number::mod(nonInt(-inf..inf), nonInt(-inf..0)) => -inf!..0
number::mod(nonInt(-inf..inf), nonInt(-inf..1)) => -inf!..!1
number::mod(nonInt(-inf..inf), nonInt(-inf..inf)) => -inf!..!inf
number::mod(nonInt(-inf..inf), 1 | int(3..4)) => nonInt(0..4)
number::mod(1 | int(3..4), number) => -inf..4 | nan
number::mod(1 | int(3..4), -3.14) => -2.28 | -2.14 | -0.14
number::mod(1 | int(3..4), -2) => int(-1..0)
number::mod(1 | int(3..4), -1) => 0
number::mod(1 | int(3..4), -0.5) => 0
number::mod(1 | int(3..4), 0) => never
number::mod(1 | int(3..4), 0.5) => 0
number::mod(1 | int(3..4), 1) => 0
number::mod(1 | int(3..4), 2) => int(0..1)
number::mod(1 | int(3..4), 2.78) => 0.22 | 1 | 1.22
number::mod(1 | int(3..4), 3) => int(0..1)
number::mod(1 | int(3..4), 3.14) => 0.86 | 1 | 3
number::mod(1 | int(3..4), 10) => 1 | int(3..4)
number::mod(1 | int(3..4), 100) => 1 | int(3..4)
number::mod(1 | int(3..4), -inf) => -inf
number::mod(1 | int(3..4), inf) => 1 | int(3..4)
number::mod(1 | int(3..4), nan) => nan
number::mod(1 | int(3..4), 0..1) => 0..!1
number::mod(1 | int(3..4), 0!..1) => 0..!1
number::mod(1 | int(3..4), 0..!1) => 0..!1
number::mod(1 | int(3..4), 0..2) => 0..!2
number::mod(1 | int(3..4), 0!..!2) => 0..!2
number::mod(1 | int(3..4), 0.5..1.5) => 0..!1.5
number::mod(1 | int(3..4), 0.5..2.5) => 0..!2.5
number::mod(1 | int(3..4), 0.5!..2.5) => 0..!2.5
number::mod(1 | int(3..4), 0.5..!2.5) => 0..!2.5
number::mod(1 | int(3..4), -2.56..3.35) => -2.56!..!3.35
number::mod(1 | int(3..4), 0.5..0.75) => 0..!0.75
number::mod(1 | int(3..4), 1..2) => 0..!2
number::mod(1 | int(3..4), 0..inf) => 0..4
number::mod(1 | int(3..4), 0!..inf) => 0..4
number::mod(1 | int(3..4), 0..!inf) => 0..!4
number::mod(1 | int(3..4), 0!..!inf) => 0..!4
number::mod(1 | int(3..4), 1..inf) => 0..4
number::mod(1 | int(3..4), 1!..inf) => 0..4
number::mod(1 | int(3..4), 1..!inf) => 0..4
number::mod(1 | int(3..4), 2..inf) => 0..4
number::mod(1 | int(3..4), 2!..inf) => 0..4
number::mod(1 | int(3..4), 2.5..inf) => 0..4
number::mod(1 | int(3..4), -inf..0) => -inf..0
number::mod(1 | int(3..4), -inf..inf) => -inf..4
number::mod(1 | int(3..4), -inf!..inf) => -inf!..4
number::mod(1 | int(3..4), -inf..!inf) => -inf..!4
number::mod(1 | int(3..4), -inf!..!inf) => -inf!..!4
number::mod(1 | int(3..4), int(0..1)) => 0
number::mod(1 | int(3..4), int(0..2)) => int(0..1)
number::mod(1 | int(3..4), int(1..2)) => int(0..1)
number::mod(1 | int(3..4), int(5..20)) => 1 | int(3..4)
number::mod(1 | int(3..4), int(-20..-5)) => int(-19..-1)
number::mod(1 | int(3..4), int(-10..10)) => int(-9..1) | int(3..4)
number::mod(1 | int(3..4), int(0..inf)) => int(0..4)
number::mod(1 | int(3..4), int(1..inf)) => int(0..4)
number::mod(1 | int(3..4), int(-inf..0)) => int(-inf..0)
number::mod(1 | int(3..4), int(-inf..1)) => int(-inf..0)
number::mod(1 | int(3..4), int(-inf..inf)) => int(-inf..4)
number::mod(1 | int(3..4), nonInt(0..1)) => 0..!1
number::mod(1 | int(3..4), nonInt(0..2)) => 0..!2
number::mod(1 | int(3..4), nonInt(-1..2)) => -1!..!2
number::mod(1 | int(3..4), nonInt(0..inf)) => 0..!4
number::mod(1 | int(3..4), nonInt(-1..inf)) => -1!..!inf
number::mod(1 | int(3..4), nonInt(-inf..0)) => -inf!..0
number::mod(1 | int(3..4), nonInt(-inf..1)) => -inf!..!1
number::mod(1 | int(3..4), nonInt(-inf..inf)) => -inf!..!inf
number::mod(1 | int(3..4), 1 | int(3..4)) => int(0..1) | 3"
`;

exports[`Builtin functions number::mul evaluate 1`] = `
"number::mul(number, -3.14) => number
number::mul(number, -2) => number
number::mul(number, -1) => number
number::mul(number, -0.5) => number
number::mul(number, 0) => 0 | nan
number::mul(number, 0.5) => number
number::mul(number, 1) => number
number::mul(number, 2) => number
number::mul(number, 2.78) => number
number::mul(number, 3) => number
number::mul(number, 3.14) => number
number::mul(number, 10) => number
number::mul(number, 100) => number
number::mul(number, -inf) => -inf | inf | nan
number::mul(number, inf) => -inf | inf | nan
number::mul(number, nan) => nan
number::mul(number, 0..1) => number
number::mul(number, 0!..1) => number
number::mul(number, 0..!1) => number
number::mul(number, 0..2) => number
number::mul(number, 0!..!2) => number
number::mul(number, 0.5..1.5) => number
number::mul(number, 0.5..2.5) => number
number::mul(number, 0.5!..2.5) => number
number::mul(number, 0.5..!2.5) => number
number::mul(number, -2.56..3.35) => number
number::mul(number, 0.5..0.75) => number
number::mul(number, 1..2) => number
number::mul(number, 0..inf) => number
number::mul(number, 0!..inf) => number
number::mul(number, 0..!inf) => number
number::mul(number, 0!..!inf) => number
number::mul(number, 1..inf) => number
number::mul(number, 1!..inf) => number
number::mul(number, 1..!inf) => number
number::mul(number, 2..inf) => number
number::mul(number, 2!..inf) => number
number::mul(number, 2.5..inf) => number
number::mul(number, -inf..0) => number
number::mul(number, -inf..inf) => number
number::mul(number, -inf!..inf) => number
number::mul(number, -inf..!inf) => number
number::mul(number, -inf!..!inf) => number
number::mul(number, int(0..1)) => number
number::mul(number, int(0..2)) => number
number::mul(number, int(1..2)) => number
number::mul(number, int(5..20)) => number
number::mul(number, int(-20..-5)) => number
number::mul(number, int(-10..10)) => number
number::mul(number, int(0..inf)) => number
number::mul(number, int(1..inf)) => number
number::mul(number, int(-inf..0)) => number
number::mul(number, int(-inf..1)) => number
number::mul(number, int(-inf..inf)) => number
number::mul(number, nonInt(0..1)) => number
number::mul(number, nonInt(0..2)) => number
number::mul(number, nonInt(-1..2)) => number
number::mul(number, nonInt(0..inf)) => number
number::mul(number, nonInt(-1..inf)) => number
number::mul(number, nonInt(-inf..0)) => number
number::mul(number, nonInt(-inf..1)) => number
number::mul(number, nonInt(-inf..inf)) => number
number::mul(number, 1 | int(3..4)) => number
number::mul(-3.14, -2) => 6.28
number::mul(-3.14, -1) => 3.14
number::mul(-3.14, -0.5) => 1.57
number::mul(-3.14, 0) => 0
number::mul(-3.14, 0.5) => -1.57
number::mul(-3.14, 1) => -3.14
number::mul(-3.14, 2) => -6.28
number::mul(-3.14, 2.78) => -8.7292
number::mul(-3.14, 3) => -9.42
number::mul(-3.14, 3.14) => -9.8596
number::mul(-3.14, 10) => -31.4
number::mul(-3.14, 100) => -314
number::mul(-3.14, -inf) => inf
number::mul(-3.14, inf) => -inf
number::mul(-3.14, nan) => nan
number::mul(-3.14, 0..1) => -3.14..0
number::mul(-3.14, 0!..1) => -3.14..!0
number::mul(-3.14, 0..!1) => -3.14!..0
number::mul(-3.14, 0..2) => -6.28..0
number::mul(-3.14, 0!..!2) => -6.28!..!0
number::mul(-3.14, 0.5..1.5) => -4.71..-1.57
number::mul(-3.14, 0.5..2.5) => -7.85..-1.57
number::mul(-3.14, 0.5!..2.5) => -7.85..!-1.57
number::mul(-3.14, 0.5..!2.5) => -7.85!..-1.57
number::mul(-3.14, -2.56..3.35) => -10.519..8.0384
number::mul(-3.14, 0.5..0.75) => -2.355..-1.57
number::mul(-3.14, 1..2) => -6.28..-3.14
number::mul(-3.14, 0..inf) => -inf..0
number::mul(-3.14, 0!..inf) => -inf..!0
number::mul(-3.14, 0..!inf) => -inf!..0
number::mul(-3.14, 0!..!inf) => -inf!..!0
number::mul(-3.14, 1..inf) => -inf..-3.14
number::mul(-3.14, 1!..inf) => -inf..!-3.14
number::mul(-3.14, 1..!inf) => -inf!..-3.14
number::mul(-3.14, 2..inf) => -inf..-6.28
number::mul(-3.14, 2!..inf) => -inf..!-6.28
number::mul(-3.14, 2.5..inf) => -inf..-7.85
number::mul(-3.14, -inf..0) => 0..inf
number::mul(-3.14, -inf..inf) => -inf..inf
number::mul(-3.14, -inf!..inf) => -inf..!inf
number::mul(-3.14, -inf..!inf) => -inf!..inf
number::mul(-3.14, -inf!..!inf) => -inf!..!inf
number::mul(-3.14, int(0..1)) => -3.14 | 0
number::mul(-3.14, int(0..2)) => -6.28 | -3.14 | 0
number::mul(-3.14, int(1..2)) => -6.28 | -3.14
number::mul(-3.14, int(5..20)) => -62.8..-15.7
number::mul(-3.14, int(-20..-5)) => 15.7..62.8
number::mul(-3.14, int(-10..10)) => -31.4..31.4
number::mul(-3.14, int(0..inf)) => -inf!..0
number::mul(-3.14, int(1..inf)) => -inf!..-3.14
number::mul(-3.14, int(-inf..0)) => 0..!inf
number::mul(-3.14, int(-inf..1)) => -3.14..!inf
number::mul(-3.14, int(-inf..inf)) => -inf!..!inf
number::mul(-3.14, nonInt(0..1)) => -3.14!..!0
number::mul(-3.14, nonInt(0..2)) => -6.28!..!0
number::mul(-3.14, nonInt(-1..2)) => -6.28!..!3.14
number::mul(-3.14, nonInt(0..inf)) => -inf!..!0
number::mul(-3.14, nonInt(-1..inf)) => -inf!..!3.14
number::mul(-3.14, nonInt(-inf..0)) => 0!..!inf
number::mul(-3.14, nonInt(-inf..1)) => -3.14!..!inf
number::mul(-3.14, nonInt(-inf..inf)) => -inf!..!inf
number::mul(-3.14, 1 | int(3..4)) => -12.56 | -9.42 | -3.14
number::mul(-2, -1) => 2
number::mul(-2, -0.5) => 1
number::mul(-2, 0) => 0
number::mul(-2, 0.5) => -1
number::mul(-2, 1) => -2
number::mul(-2, 2) => -4
number::mul(-2, 2.78) => -5.56
number::mul(-2, 3) => -6
number::mul(-2, 3.14) => -6.28
number::mul(-2, 10) => -20
number::mul(-2, 100) => -200
number::mul(-2, -inf) => inf
number::mul(-2, inf) => -inf
number::mul(-2, nan) => nan
number::mul(-2, 0..1) => -2..0
number::mul(-2, 0!..1) => -2..!0
number::mul(-2, 0..!1) => -2!..0
number::mul(-2, 0..2) => -4..0
number::mul(-2, 0!..!2) => -4!..!0
number::mul(-2, 0.5..1.5) => -3..-1
number::mul(-2, 0.5..2.5) => -5..-1
number::mul(-2, 0.5!..2.5) => -5..!-1
number::mul(-2, 0.5..!2.5) => -5!..-1
number::mul(-2, -2.56..3.35) => -6.7..5.12
number::mul(-2, 0.5..0.75) => -1.5..-1
number::mul(-2, 1..2) => -4..-2
number::mul(-2, 0..inf) => -inf..0
number::mul(-2, 0!..inf) => -inf..!0
number::mul(-2, 0..!inf) => -inf!..0
number::mul(-2, 0!..!inf) => -inf!..!0
number::mul(-2, 1..inf) => -inf..-2
number::mul(-2, 1!..inf) => -inf..!-2
number::mul(-2, 1..!inf) => -inf!..-2
number::mul(-2, 2..inf) => -inf..-4
number::mul(-2, 2!..inf) => -inf..!-4
number::mul(-2, 2.5..inf) => -inf..-5
number::mul(-2, -inf..0) => 0..inf
number::mul(-2, -inf..inf) => -inf..inf
number::mul(-2, -inf!..inf) => -inf..!inf
number::mul(-2, -inf..!inf) => -inf!..inf
number::mul(-2, -inf!..!inf) => -inf!..!inf
number::mul(-2, int(0..1)) => -2 | 0
number::mul(-2, int(0..2)) => -4 | -2 | 0
number::mul(-2, int(1..2)) => -4 | -2
number::mul(-2, int(5..20)) => int(-40..-10)
number::mul(-2, int(-20..-5)) => int(10..40)
number::mul(-2, int(-10..10)) => int(-20..20)
number::mul(-2, int(0..inf)) => int(-inf..0)
number::mul(-2, int(1..inf)) => int(-inf..-2)
number::mul(-2, int(-inf..0)) => int(0..inf)
number::mul(-2, int(-inf..1)) => int(-2..inf)
number::mul(-2, int(-inf..inf)) => int(-inf..inf)
number::mul(-2, nonInt(0..1)) => -2!..!0
number::mul(-2, nonInt(0..2)) => -4!..!0
number::mul(-2, nonInt(-1..2)) => -4!..!2
number::mul(-2, nonInt(0..inf)) => -inf!..!0
number::mul(-2, nonInt(-1..inf)) => -inf!..!2
number::mul(-2, nonInt(-inf..0)) => 0!..!inf
number::mul(-2, nonInt(-inf..1)) => -2!..!inf
number::mul(-2, nonInt(-inf..inf)) => -inf!..!inf
number::mul(-2, 1 | int(3..4)) => -8 | -6 | -2
number::mul(-1, -0.5) => 0.5
number::mul(-1, 0) => 0
number::mul(-1, 0.5) => -0.5
number::mul(-1, 1) => -1
number::mul(-1, 2) => -2
number::mul(-1, 2.78) => -2.78
number::mul(-1, 3) => -3
number::mul(-1, 3.14) => -3.14
number::mul(-1, 10) => -10
number::mul(-1, 100) => -100
number::mul(-1, -inf) => inf
number::mul(-1, inf) => -inf
number::mul(-1, nan) => nan
number::mul(-1, 0..1) => -1..0
number::mul(-1, 0!..1) => -1..!0
number::mul(-1, 0..!1) => -1!..0
number::mul(-1, 0..2) => -2..0
number::mul(-1, 0!..!2) => -2!..!0
number::mul(-1, 0.5..1.5) => -1.5..-0.5
number::mul(-1, 0.5..2.5) => -2.5..-0.5
number::mul(-1, 0.5!..2.5) => -2.5..!-0.5
number::mul(-1, 0.5..!2.5) => -2.5!..-0.5
number::mul(-1, -2.56..3.35) => -3.35..2.56
number::mul(-1, 0.5..0.75) => -0.75..-0.5
number::mul(-1, 1..2) => -2..-1
number::mul(-1, 0..inf) => -inf..0
number::mul(-1, 0!..inf) => -inf..!0
number::mul(-1, 0..!inf) => -inf!..0
number::mul(-1, 0!..!inf) => -inf!..!0
number::mul(-1, 1..inf) => -inf..-1
number::mul(-1, 1!..inf) => -inf..!-1
number::mul(-1, 1..!inf) => -inf!..-1
number::mul(-1, 2..inf) => -inf..-2
number::mul(-1, 2!..inf) => -inf..!-2
number::mul(-1, 2.5..inf) => -inf..-2.5
number::mul(-1, -inf..0) => 0..inf
number::mul(-1, -inf..inf) => -inf..inf
number::mul(-1, -inf!..inf) => -inf..!inf
number::mul(-1, -inf..!inf) => -inf!..inf
number::mul(-1, -inf!..!inf) => -inf!..!inf
number::mul(-1, int(0..1)) => int(-1..0)
number::mul(-1, int(0..2)) => int(-2..0)
number::mul(-1, int(1..2)) => int(-2..-1)
number::mul(-1, int(5..20)) => int(-20..-5)
number::mul(-1, int(-20..-5)) => int(5..20)
number::mul(-1, int(-10..10)) => int(-10..10)
number::mul(-1, int(0..inf)) => int(-inf..0)
number::mul(-1, int(1..inf)) => int(-inf..-1)
number::mul(-1, int(-inf..0)) => int(0..inf)
number::mul(-1, int(-inf..1)) => int(-1..inf)
number::mul(-1, int(-inf..inf)) => int(-inf..inf)
number::mul(-1, nonInt(0..1)) => nonInt(-1..0)
number::mul(-1, nonInt(0..2)) => nonInt(-2..0)
number::mul(-1, nonInt(-1..2)) => nonInt(-2..1)
number::mul(-1, nonInt(0..inf)) => nonInt(-inf..0)
number::mul(-1, nonInt(-1..inf)) => nonInt(-inf..1)
number::mul(-1, nonInt(-inf..0)) => nonInt(0..inf)
number::mul(-1, nonInt(-inf..1)) => nonInt(-1..inf)
number::mul(-1, nonInt(-inf..inf)) => nonInt(-inf..inf)
number::mul(-1, 1 | int(3..4)) => int(-4..-3) | -1
number::mul(-0.5, 0) => 0
number::mul(-0.5, 0.5) => -0.25
number::mul(-0.5, 1) => -0.5
number::mul(-0.5, 2) => -1
number::mul(-0.5, 2.78) => -1.39
number::mul(-0.5, 3) => -1.5
number::mul(-0.5, 3.14) => -1.57
number::mul(-0.5, 10) => -5
number::mul(-0.5, 100) => -50
number::mul(-0.5, -inf) => inf
number::mul(-0.5, inf) => -inf
number::mul(-0.5, nan) => nan
number::mul(-0.5, 0..1) => -0.5..0
number::mul(-0.5, 0!..1) => -0.5..!0
number::mul(-0.5, 0..!1) => -0.5!..0
number::mul(-0.5, 0..2) => -1..0
number::mul(-0.5, 0!..!2) => nonInt(-1..0)
number::mul(-0.5, 0.5..1.5) => -0.75..-0.25
number::mul(-0.5, 0.5..2.5) => -1.25..-0.25
number::mul(-0.5, 0.5!..2.5) => -1.25..!-0.25
number::mul(-0.5, 0.5..!2.5) => -1.25!..-0.25
number::mul(-0.5, -2.56..3.35) => -1.675..1.28
number::mul(-0.5, 0.5..0.75) => -0.375..-0.25
number::mul(-0.5, 1..2) => -1..-0.5
number::mul(-0.5, 0..inf) => -inf..0
number::mul(-0.5, 0!..inf) => -inf..!0
number::mul(-0.5, 0..!inf) => -inf!..0
number::mul(-0.5, 0!..!inf) => -inf!..!0
number::mul(-0.5, 1..inf) => -inf..-0.5
number::mul(-0.5, 1!..inf) => -inf..!-0.5
number::mul(-0.5, 1..!inf) => -inf!..-0.5
number::mul(-0.5, 2..inf) => -inf..-1
number::mul(-0.5, 2!..inf) => -inf..!-1
number::mul(-0.5, 2.5..inf) => -inf..-1.25
number::mul(-0.5, -inf..0) => 0..inf
number::mul(-0.5, -inf..inf) => -inf..inf
number::mul(-0.5, -inf!..inf) => -inf..!inf
number::mul(-0.5, -inf..!inf) => -inf!..inf
number::mul(-0.5, -inf!..!inf) => -inf!..!inf
number::mul(-0.5, int(0..1)) => -0.5 | 0
number::mul(-0.5, int(0..2)) => int(-1..0) | -0.5
number::mul(-0.5, int(1..2)) => -1 | -0.5
number::mul(-0.5, int(5..20)) => -10..-2.5
number::mul(-0.5, int(-20..-5)) => 2.5..10
number::mul(-0.5, int(-10..10)) => -5..5
number::mul(-0.5, int(0..inf)) => -inf!..0
number::mul(-0.5, int(1..inf)) => -inf!..-0.5
number::mul(-0.5, int(-inf..0)) => 0..!inf
number::mul(-0.5, int(-inf..1)) => -0.5..!inf
number::mul(-0.5, int(-inf..inf)) => -inf!..!inf
number::mul(-0.5, nonInt(0..1)) => -0.5!..!0
number::mul(-0.5, nonInt(0..2)) => nonInt(-1..0)
number::mul(-0.5, nonInt(-1..2)) => -1!..!0.5
number::mul(-0.5, nonInt(0..inf)) => -inf!..!0
number::mul(-0.5, nonInt(-1..inf)) => -inf!..!0.5
number::mul(-0.5, nonInt(-inf..0)) => 0!..!inf
number::mul(-0.5, nonInt(-inf..1)) => -0.5!..!inf
number::mul(-0.5, nonInt(-inf..inf)) => -inf!..!inf
number::mul(-0.5, 1 | int(3..4)) => -2 | -1.5 | -0.5
number::mul(0, 0.5) => 0
number::mul(0, 1) => 0
number::mul(0, 2) => 0
number::mul(0, 2.78) => 0
number::mul(0, 3) => 0
number::mul(0, 3.14) => 0
number::mul(0, 10) => 0
number::mul(0, 100) => 0
number::mul(0, -inf) => nan
number::mul(0, inf) => nan
number::mul(0, nan) => nan
number::mul(0, 0..1) => 0
number::mul(0, 0!..1) => 0
number::mul(0, 0..!1) => 0
number::mul(0, 0..2) => 0
number::mul(0, 0!..!2) => 0
number::mul(0, 0.5..1.5) => 0
number::mul(0, 0.5..2.5) => 0
number::mul(0, 0.5!..2.5) => 0
number::mul(0, 0.5..!2.5) => 0
number::mul(0, -2.56..3.35) => 0
number::mul(0, 0.5..0.75) => 0
number::mul(0, 1..2) => 0
number::mul(0, 0..inf) => 0 | nan
number::mul(0, 0!..inf) => 0 | nan
number::mul(0, 0..!inf) => 0
number::mul(0, 0!..!inf) => 0
number::mul(0, 1..inf) => 0 | nan
number::mul(0, 1!..inf) => 0 | nan
number::mul(0, 1..!inf) => 0
number::mul(0, 2..inf) => 0 | nan
number::mul(0, 2!..inf) => 0 | nan
number::mul(0, 2.5..inf) => 0 | nan
number::mul(0, -inf..0) => 0 | nan
number::mul(0, -inf..inf) => 0 | nan
number::mul(0, -inf!..inf) => 0 | nan
number::mul(0, -inf..!inf) => 0 | nan
number::mul(0, -inf!..!inf) => 0
number::mul(0, int(0..1)) => 0
number::mul(0, int(0..2)) => 0
number::mul(0, int(1..2)) => 0
number::mul(0, int(5..20)) => 0
number::mul(0, int(-20..-5)) => 0
number::mul(0, int(-10..10)) => 0
number::mul(0, int(0..inf)) => 0
number::mul(0, int(1..inf)) => 0
number::mul(0, int(-inf..0)) => 0
number::mul(0, int(-inf..1)) => 0
number::mul(0, int(-inf..inf)) => 0
number::mul(0, nonInt(0..1)) => 0
number::mul(0, nonInt(0..2)) => 0
number::mul(0, nonInt(-1..2)) => 0
number::mul(0, nonInt(0..inf)) => 0
number::mul(0, nonInt(-1..inf)) => 0
number::mul(0, nonInt(-inf..0)) => 0
number::mul(0, nonInt(-inf..1)) => 0
number::mul(0, nonInt(-inf..inf)) => 0
number::mul(0, 1 | int(3..4)) => 0
number::mul(0.5, 1) => 0.5
number::mul(0.5, 2) => 1
number::mul(0.5, 2.78) => 1.39
number::mul(0.5, 3) => 1.5
number::mul(0.5, 3.14) => 1.57
number::mul(0.5, 10) => 5
number::mul(0.5, 100) => 50
number::mul(0.5, -inf) => -inf
number::mul(0.5, inf) => inf
number::mul(0.5, nan) => nan
number::mul(0.5, 0..1) => 0..0.5
number::mul(0.5, 0!..1) => 0!..0.5
number::mul(0.5, 0..!1) => 0..!0.5
number::mul(0.5, 0..2) => 0..1
number::mul(0.5, 0!..!2) => nonInt(0..1)
number::mul(0.5, 0.5..1.5) => 0.25..0.75
number::mul(0.5, 0.5..2.5) => 0.25..1.25
number::mul(0.5, 0.5!..2.5) => 0.25!..1.25
number::mul(0.5, 0.5..!2.5) => 0.25..!1.25
number::mul(0.5, -2.56..3.35) => -1.28..1.675
number::mul(0.5, 0.5..0.75) => 0.25..0.375
number::mul(0.5, 1..2) => 0.5..1
number::mul(0.5, 0..inf) => 0..inf
number::mul(0.5, 0!..inf) => 0!..inf
number::mul(0.5, 0..!inf) => 0..!inf
number::mul(0.5, 0!..!inf) => 0!..!inf
number::mul(0.5, 1..inf) => 0.5..inf
number::mul(0.5, 1!..inf) => 0.5!..inf
number::mul(0.5, 1..!inf) => 0.5..!inf
number::mul(0.5, 2..inf) => 1..inf
number::mul(0.5, 2!..inf) => 1!..inf
number::mul(0.5, 2.5..inf) => 1.25..inf
number::mul(0.5, -inf..0) => -inf..0
number::mul(0.5, -inf..inf) => -inf..inf
number::mul(0.5, -inf!..inf) => -inf!..inf
number::mul(0.5, -inf..!inf) => -inf..!inf
number::mul(0.5, -inf!..!inf) => -inf!..!inf
number::mul(0.5, int(0..1)) => 0 | 0.5
number::mul(0.5, int(0..2)) => int(0..1) | 0.5
number::mul(0.5, int(1..2)) => 0.5 | 1
number::mul(0.5, int(5..20)) => 2.5..10
number::mul(0.5, int(-20..-5)) => -10..-2.5
number::mul(0.5, int(-10..10)) => -5..5
number::mul(0.5, int(0..inf)) => 0..!inf
number::mul(0.5, int(1..inf)) => 0.5..!inf
number::mul(0.5, int(-inf..0)) => -inf!..0
number::mul(0.5, int(-inf..1)) => -inf!..0.5
number::mul(0.5, int(-inf..inf)) => -inf!..!inf
number::mul(0.5, nonInt(0..1)) => 0!..!0.5
number::mul(0.5, nonInt(0..2)) => nonInt(0..1)
number::mul(0.5, nonInt(-1..2)) => -0.5!..!1
number::mul(0.5, nonInt(0..inf)) => 0!..!inf
number::mul(0.5, nonInt(-1..inf)) => -0.5!..!inf
number::mul(0.5, nonInt(-inf..0)) => -inf!..!0
number::mul(0.5, nonInt(-inf..1)) => -inf!..!0.5
number::mul(0.5, nonInt(-inf..inf)) => -inf!..!inf
number::mul(0.5, 1 | int(3..4)) => 0.5 | 1.5 | 2
number::mul(1, 2) => 2
number::mul(1, 2.78) => 2.78
number::mul(1, 3) => 3
number::mul(1, 3.14) => 3.14
number::mul(1, 10) => 10
number::mul(1, 100) => 100
number::mul(1, -inf) => -inf
number::mul(1, inf) => inf
number::mul(1, nan) => nan
number::mul(1, 0..1) => 0..1
number::mul(1, 0!..1) => 0!..1
number::mul(1, 0..!1) => 0..!1
number::mul(1, 0..2) => 0..2
number::mul(1, 0!..!2) => 0!..!2
number::mul(1, 0.5..1.5) => 0.5..1.5
number::mul(1, 0.5..2.5) => 0.5..2.5
number::mul(1, 0.5!..2.5) => 0.5!..2.5
number::mul(1, 0.5..!2.5) => 0.5..!2.5
number::mul(1, -2.56..3.35) => -2.56..3.35
number::mul(1, 0.5..0.75) => 0.5..0.75
number::mul(1, 1..2) => 1..2
number::mul(1, 0..inf) => 0..inf
number::mul(1, 0!..inf) => 0!..inf
number::mul(1, 0..!inf) => 0..!inf
number::mul(1, 0!..!inf) => 0!..!inf
number::mul(1, 1..inf) => 1..inf
number::mul(1, 1!..inf) => 1!..inf
number::mul(1, 1..!inf) => 1..!inf
number::mul(1, 2..inf) => 2..inf
number::mul(1, 2!..inf) => 2!..inf
number::mul(1, 2.5..inf) => 2.5..inf
number::mul(1, -inf..0) => -inf..0
number::mul(1, -inf..inf) => -inf..inf
number::mul(1, -inf!..inf) => -inf!..inf
number::mul(1, -inf..!inf) => -inf..!inf
number::mul(1, -inf!..!inf) => -inf!..!inf
number::mul(1, int(0..1)) => int(0..1)
number::mul(1, int(0..2)) => int(0..2)
number::mul(1, int(1..2)) => int(1..2)
number::mul(1, int(5..20)) => int(5..20)
number::mul(1, int(-20..-5)) => int(-20..-5)
number::mul(1, int(-10..10)) => int(-10..10)
number::mul(1, int(0..inf)) => int(0..inf)
number::mul(1, int(1..inf)) => int(1..inf)
number::mul(1, int(-inf..0)) => int(-inf..0)
number::mul(1, int(-inf..1)) => int(-inf..1)
number::mul(1, int(-inf..inf)) => int(-inf..inf)
number::mul(1, nonInt(0..1)) => nonInt(0..1)
number::mul(1, nonInt(0..2)) => nonInt(0..2)
number::mul(1, nonInt(-1..2)) => nonInt(-1..2)
number::mul(1, nonInt(0..inf)) => nonInt(0..inf)
number::mul(1, nonInt(-1..inf)) => nonInt(-1..inf)
number::mul(1, nonInt(-inf..0)) => nonInt(-inf..0)
number::mul(1, nonInt(-inf..1)) => nonInt(-inf..1)
number::mul(1, nonInt(-inf..inf)) => nonInt(-inf..inf)
number::mul(1, 1 | int(3..4)) => 1 | int(3..4)
number::mul(2, 2.78) => 5.56
number::mul(2, 3) => 6
number::mul(2, 3.14) => 6.28
number::mul(2, 10) => 20
number::mul(2, 100) => 200
number::mul(2, -inf) => -inf
number::mul(2, inf) => inf
number::mul(2, nan) => nan
number::mul(2, 0..1) => 0..2
number::mul(2, 0!..1) => 0!..2
number::mul(2, 0..!1) => 0..!2
number::mul(2, 0..2) => 0..4
number::mul(2, 0!..!2) => 0!..!4
number::mul(2, 0.5..1.5) => 1..3
number::mul(2, 0.5..2.5) => 1..5
number::mul(2, 0.5!..2.5) => 1!..5
number::mul(2, 0.5..!2.5) => 1..!5
number::mul(2, -2.56..3.35) => -5.12..6.7
number::mul(2, 0.5..0.75) => 1..1.5
number::mul(2, 1..2) => 2..4
number::mul(2, 0..inf) => 0..inf
number::mul(2, 0!..inf) => 0!..inf
number::mul(2, 0..!inf) => 0..!inf
number::mul(2, 0!..!inf) => 0!..!inf
number::mul(2, 1..inf) => 2..inf
number::mul(2, 1!..inf) => 2!..inf
number::mul(2, 1..!inf) => 2..!inf
number::mul(2, 2..inf) => 4..inf
number::mul(2, 2!..inf) => 4!..inf
number::mul(2, 2.5..inf) => 5..inf
number::mul(2, -inf..0) => -inf..0
number::mul(2, -inf..inf) => -inf..inf
number::mul(2, -inf!..inf) => -inf!..inf
number::mul(2, -inf..!inf) => -inf..!inf
number::mul(2, -inf!..!inf) => -inf!..!inf
number::mul(2, int(0..1)) => 0 | 2
number::mul(2, int(0..2)) => 0 | 2 | 4
number::mul(2, int(1..2)) => 2 | 4
number::mul(2, int(5..20)) => int(10..40)
number::mul(2, int(-20..-5)) => int(-40..-10)
number::mul(2, int(-10..10)) => int(-20..20)
number::mul(2, int(0..inf)) => int(0..inf)
number::mul(2, int(1..inf)) => int(2..inf)
number::mul(2, int(-inf..0)) => int(-inf..0)
number::mul(2, int(-inf..1)) => int(-inf..2)
number::mul(2, int(-inf..inf)) => int(-inf..inf)
number::mul(2, nonInt(0..1)) => 0!..!2
number::mul(2, nonInt(0..2)) => 0!..!4
number::mul(2, nonInt(-1..2)) => -2!..!4
number::mul(2, nonInt(0..inf)) => 0!..!inf
number::mul(2, nonInt(-1..inf)) => -2!..!inf
number::mul(2, nonInt(-inf..0)) => -inf!..!0
number::mul(2, nonInt(-inf..1)) => -inf!..!2
number::mul(2, nonInt(-inf..inf)) => -inf!..!inf
number::mul(2, 1 | int(3..4)) => 2 | 6 | 8
number::mul(2.78, 3) => 8.34
number::mul(2.78, 3.14) => 8.7292
number::mul(2.78, 10) => 27.8
number::mul(2.78, 100) => 278
number::mul(2.78, -inf) => -inf
number::mul(2.78, inf) => inf
number::mul(2.78, nan) => nan
number::mul(2.78, 0..1) => 0..2.78
number::mul(2.78, 0!..1) => 0!..2.78
number::mul(2.78, 0..!1) => 0..!2.78
number::mul(2.78, 0..2) => 0..5.56
number::mul(2.78, 0!..!2) => 0!..!5.56
number::mul(2.78, 0.5..1.5) => 1.39..4.17
number::mul(2.78, 0.5..2.5) => 1.39..6.95
number::mul(2.78, 0.5!..2.5) => 1.39!..6.95
number::mul(2.78, 0.5..!2.5) => 1.39..!6.95
number::mul(2.78, -2.56..3.35) => -7.1168..9.313
number::mul(2.78, 0.5..0.75) => 1.39..2.085
number::mul(2.78, 1..2) => 2.78..5.56
number::mul(2.78, 0..inf) => 0..inf
number::mul(2.78, 0!..inf) => 0!..inf
number::mul(2.78, 0..!inf) => 0..!inf
number::mul(2.78, 0!..!inf) => 0!..!inf
number::mul(2.78, 1..inf) => 2.78..inf
number::mul(2.78, 1!..inf) => 2.78!..inf
number::mul(2.78, 1..!inf) => 2.78..!inf
number::mul(2.78, 2..inf) => 5.56..inf
number::mul(2.78, 2!..inf) => 5.56!..inf
number::mul(2.78, 2.5..inf) => 6.95..inf
number::mul(2.78, -inf..0) => -inf..0
number::mul(2.78, -inf..inf) => -inf..inf
number::mul(2.78, -inf!..inf) => -inf!..inf
number::mul(2.78, -inf..!inf) => -inf..!inf
number::mul(2.78, -inf!..!inf) => -inf!..!inf
number::mul(2.78, int(0..1)) => 0 | 2.78
number::mul(2.78, int(0..2)) => 0 | 2.78 | 5.56
number::mul(2.78, int(1..2)) => 2.78 | 5.56
number::mul(2.78, int(5..20)) => 13.9..55.6
number::mul(2.78, int(-20..-5)) => -55.6..-13.9
number::mul(2.78, int(-10..10)) => -27.8..27.8
number::mul(2.78, int(0..inf)) => 0..!inf
number::mul(2.78, int(1..inf)) => 2.78..!inf
number::mul(2.78, int(-inf..0)) => -inf!..0
number::mul(2.78, int(-inf..1)) => -inf!..2.78
number::mul(2.78, int(-inf..inf)) => -inf!..!inf
number::mul(2.78, nonInt(0..1)) => 0!..!2.78
number::mul(2.78, nonInt(0..2)) => 0!..!5.56
number::mul(2.78, nonInt(-1..2)) => -2.78!..!5.56
number::mul(2.78, nonInt(0..inf)) => 0!..!inf
number::mul(2.78, nonInt(-1..inf)) => -2.78!..!inf
number::mul(2.78, nonInt(-inf..0)) => -inf!..!0
number::mul(2.78, nonInt(-inf..1)) => -inf!..!2.78
number::mul(2.78, nonInt(-inf..inf)) => -inf!..!inf
number::mul(2.78, 1 | int(3..4)) => 2.78 | 8.34 | 11.12
number::mul(3, 3.14) => 9.42
number::mul(3, 10) => 30
number::mul(3, 100) => 300
number::mul(3, -inf) => -inf
number::mul(3, inf) => inf
number::mul(3, nan) => nan
number::mul(3, 0..1) => 0..3
number::mul(3, 0!..1) => 0!..3
number::mul(3, 0..!1) => 0..!3
number::mul(3, 0..2) => 0..6
number::mul(3, 0!..!2) => 0!..!6
number::mul(3, 0.5..1.5) => 1.5..4.5
number::mul(3, 0.5..2.5) => 1.5..7.5
number::mul(3, 0.5!..2.5) => 1.5!..7.5
number::mul(3, 0.5..!2.5) => 1.5..!7.5
number::mul(3, -2.56..3.35) => -7.68..10.05
number::mul(3, 0.5..0.75) => 1.5..2.25
number::mul(3, 1..2) => 3..6
number::mul(3, 0..inf) => 0..inf
number::mul(3, 0!..inf) => 0!..inf
number::mul(3, 0..!inf) => 0..!inf
number::mul(3, 0!..!inf) => 0!..!inf
number::mul(3, 1..inf) => 3..inf
number::mul(3, 1!..inf) => 3!..inf
number::mul(3, 1..!inf) => 3..!inf
number::mul(3, 2..inf) => 6..inf
number::mul(3, 2!..inf) => 6!..inf
number::mul(3, 2.5..inf) => 7.5..inf
number::mul(3, -inf..0) => -inf..0
number::mul(3, -inf..inf) => -inf..inf
number::mul(3, -inf!..inf) => -inf!..inf
number::mul(3, -inf..!inf) => -inf..!inf
number::mul(3, -inf!..!inf) => -inf!..!inf
number::mul(3, int(0..1)) => 0 | 3
number::mul(3, int(0..2)) => 0 | 3 | 6
number::mul(3, int(1..2)) => 3 | 6
number::mul(3, int(5..20)) => int(15..60)
number::mul(3, int(-20..-5)) => int(-60..-15)
number::mul(3, int(-10..10)) => int(-30..30)
number::mul(3, int(0..inf)) => int(0..inf)
number::mul(3, int(1..inf)) => int(3..inf)
number::mul(3, int(-inf..0)) => int(-inf..0)
number::mul(3, int(-inf..1)) => int(-inf..3)
number::mul(3, int(-inf..inf)) => int(-inf..inf)
number::mul(3, nonInt(0..1)) => 0!..!3
number::mul(3, nonInt(0..2)) => 0!..!6
number::mul(3, nonInt(-1..2)) => -3!..!6
number::mul(3, nonInt(0..inf)) => 0!..!inf
number::mul(3, nonInt(-1..inf)) => -3!..!inf
number::mul(3, nonInt(-inf..0)) => -inf!..!0
number::mul(3, nonInt(-inf..1)) => -inf!..!3
number::mul(3, nonInt(-inf..inf)) => -inf!..!inf
number::mul(3, 1 | int(3..4)) => 3 | 9 | 12
number::mul(3.14, 10) => 31.4
number::mul(3.14, 100) => 314
number::mul(3.14, -inf) => -inf
number::mul(3.14, inf) => inf
number::mul(3.14, nan) => nan
number::mul(3.14, 0..1) => 0..3.14
number::mul(3.14, 0!..1) => 0!..3.14
number::mul(3.14, 0..!1) => 0..!3.14
number::mul(3.14, 0..2) => 0..6.28
number::mul(3.14, 0!..!2) => 0!..!6.28
number::mul(3.14, 0.5..1.5) => 1.57..4.71
number::mul(3.14, 0.5..2.5) => 1.57..7.85
number::mul(3.14, 0.5!..2.5) => 1.57!..7.85
number::mul(3.14, 0.5..!2.5) => 1.57..!7.85
number::mul(3.14, -2.56..3.35) => -8.0384..10.519
number::mul(3.14, 0.5..0.75) => 1.57..2.355
number::mul(3.14, 1..2) => 3.14..6.28
number::mul(3.14, 0..inf) => 0..inf
number::mul(3.14, 0!..inf) => 0!..inf
number::mul(3.14, 0..!inf) => 0..!inf
number::mul(3.14, 0!..!inf) => 0!..!inf
number::mul(3.14, 1..inf) => 3.14..inf
number::mul(3.14, 1!..inf) => 3.14!..inf
number::mul(3.14, 1..!inf) => 3.14..!inf
number::mul(3.14, 2..inf) => 6.28..inf
number::mul(3.14, 2!..inf) => 6.28!..inf
number::mul(3.14, 2.5..inf) => 7.85..inf
number::mul(3.14, -inf..0) => -inf..0
number::mul(3.14, -inf..inf) => -inf..inf
number::mul(3.14, -inf!..inf) => -inf!..inf
number::mul(3.14, -inf..!inf) => -inf..!inf
number::mul(3.14, -inf!..!inf) => -inf!..!inf
number::mul(3.14, int(0..1)) => 0 | 3.14
number::mul(3.14, int(0..2)) => 0 | 3.14 | 6.28
number::mul(3.14, int(1..2)) => 3.14 | 6.28
number::mul(3.14, int(5..20)) => 15.7..62.8
number::mul(3.14, int(-20..-5)) => -62.8..-15.7
number::mul(3.14, int(-10..10)) => -31.4..31.4
number::mul(3.14, int(0..inf)) => 0..!inf
number::mul(3.14, int(1..inf)) => 3.14..!inf
number::mul(3.14, int(-inf..0)) => -inf!..0
number::mul(3.14, int(-inf..1)) => -inf!..3.14
number::mul(3.14, int(-inf..inf)) => -inf!..!inf
number::mul(3.14, nonInt(0..1)) => 0!..!3.14
number::mul(3.14, nonInt(0..2)) => 0!..!6.28
number::mul(3.14, nonInt(-1..2)) => -3.14!..!6.28
number::mul(3.14, nonInt(0..inf)) => 0!..!inf
number::mul(3.14, nonInt(-1..inf)) => -3.14!..!inf
number::mul(3.14, nonInt(-inf..0)) => -inf!..!0
number::mul(3.14, nonInt(-inf..1)) => -inf!..!3.14
number::mul(3.14, nonInt(-inf..inf)) => -inf!..!inf
number::mul(3.14, 1 | int(3..4)) => 3.14 | 9.42 | 12.56
number::mul(10, 100) => 1000
number::mul(10, -inf) => -inf
number::mul(10, inf) => inf
number::mul(10, nan) => nan
number::mul(10, 0..1) => 0..10
number::mul(10, 0!..1) => 0!..10
number::mul(10, 0..!1) => 0..!10
number::mul(10, 0..2) => 0..20
number::mul(10, 0!..!2) => 0!..!20
number::mul(10, 0.5..1.5) => 5..15
number::mul(10, 0.5..2.5) => 5..25
number::mul(10, 0.5!..2.5) => 5!..25
number::mul(10, 0.5..!2.5) => 5..!25
number::mul(10, -2.56..3.35) => -25.6..33.5
number::mul(10, 0.5..0.75) => 5..7.5
number::mul(10, 1..2) => 10..20
number::mul(10, 0..inf) => 0..inf
number::mul(10, 0!..inf) => 0!..inf
number::mul(10, 0..!inf) => 0..!inf
number::mul(10, 0!..!inf) => 0!..!inf
number::mul(10, 1..inf) => 10..inf
number::mul(10, 1!..inf) => 10!..inf
number::mul(10, 1..!inf) => 10..!inf
number::mul(10, 2..inf) => 20..inf
number::mul(10, 2!..inf) => 20!..inf
number::mul(10, 2.5..inf) => 25..inf
number::mul(10, -inf..0) => -inf..0
number::mul(10, -inf..inf) => -inf..inf
number::mul(10, -inf!..inf) => -inf!..inf
number::mul(10, -inf..!inf) => -inf..!inf
number::mul(10, -inf!..!inf) => -inf!..!inf
number::mul(10, int(0..1)) => 0 | 10
number::mul(10, int(0..2)) => 0 | 10 | 20
number::mul(10, int(1..2)) => 10 | 20
number::mul(10, int(5..20)) => int(50..200)
number::mul(10, int(-20..-5)) => int(-200..-50)
number::mul(10, int(-10..10)) => int(-100..100)
number::mul(10, int(0..inf)) => int(0..inf)
number::mul(10, int(1..inf)) => int(10..inf)
number::mul(10, int(-inf..0)) => int(-inf..0)
number::mul(10, int(-inf..1)) => int(-inf..10)
number::mul(10, int(-inf..inf)) => int(-inf..inf)
number::mul(10, nonInt(0..1)) => 0!..!10
number::mul(10, nonInt(0..2)) => 0!..!20
number::mul(10, nonInt(-1..2)) => -10!..!20
number::mul(10, nonInt(0..inf)) => 0!..!inf
number::mul(10, nonInt(-1..inf)) => -10!..!inf
number::mul(10, nonInt(-inf..0)) => -inf!..!0
number::mul(10, nonInt(-inf..1)) => -inf!..!10
number::mul(10, nonInt(-inf..inf)) => -inf!..!inf
number::mul(10, 1 | int(3..4)) => 10 | 30 | 40
number::mul(100, -inf) => -inf
number::mul(100, inf) => inf
number::mul(100, nan) => nan
number::mul(100, 0..1) => 0..100
number::mul(100, 0!..1) => 0!..100
number::mul(100, 0..!1) => 0..!100
number::mul(100, 0..2) => 0..200
number::mul(100, 0!..!2) => 0!..!200
number::mul(100, 0.5..1.5) => 50..150
number::mul(100, 0.5..2.5) => 50..250
number::mul(100, 0.5!..2.5) => 50!..250
number::mul(100, 0.5..!2.5) => 50..!250
number::mul(100, -2.56..3.35) => -256..335
number::mul(100, 0.5..0.75) => 50..75
number::mul(100, 1..2) => 100..200
number::mul(100, 0..inf) => 0..inf
number::mul(100, 0!..inf) => 0!..inf
number::mul(100, 0..!inf) => 0..!inf
number::mul(100, 0!..!inf) => 0!..!inf
number::mul(100, 1..inf) => 100..inf
number::mul(100, 1!..inf) => 100!..inf
number::mul(100, 1..!inf) => 100..!inf
number::mul(100, 2..inf) => 200..inf
number::mul(100, 2!..inf) => 200!..inf
number::mul(100, 2.5..inf) => 250..inf
number::mul(100, -inf..0) => -inf..0
number::mul(100, -inf..inf) => -inf..inf
number::mul(100, -inf!..inf) => -inf!..inf
number::mul(100, -inf..!inf) => -inf..!inf
number::mul(100, -inf!..!inf) => -inf!..!inf
number::mul(100, int(0..1)) => 0 | 100
number::mul(100, int(0..2)) => 0 | 100 | 200
number::mul(100, int(1..2)) => 100 | 200
number::mul(100, int(5..20)) => int(500..2000)
number::mul(100, int(-20..-5)) => int(-2000..-500)
number::mul(100, int(-10..10)) => int(-1000..1000)
number::mul(100, int(0..inf)) => int(0..inf)
number::mul(100, int(1..inf)) => int(100..inf)
number::mul(100, int(-inf..0)) => int(-inf..0)
number::mul(100, int(-inf..1)) => int(-inf..100)
number::mul(100, int(-inf..inf)) => int(-inf..inf)
number::mul(100, nonInt(0..1)) => 0!..!100
number::mul(100, nonInt(0..2)) => 0!..!200
number::mul(100, nonInt(-1..2)) => -100!..!200
number::mul(100, nonInt(0..inf)) => 0!..!inf
number::mul(100, nonInt(-1..inf)) => -100!..!inf
number::mul(100, nonInt(-inf..0)) => -inf!..!0
number::mul(100, nonInt(-inf..1)) => -inf!..!100
number::mul(100, nonInt(-inf..inf)) => -inf!..!inf
number::mul(100, 1 | int(3..4)) => 100 | 300 | 400
number::mul(-inf, inf) => -inf
number::mul(-inf, nan) => nan
number::mul(-inf, 0..1) => -inf | nan
number::mul(-inf, 0!..1) => -inf
number::mul(-inf, 0..!1) => -inf | nan
number::mul(-inf, 0..2) => -inf | nan
number::mul(-inf, 0!..!2) => -inf
number::mul(-inf, 0.5..1.5) => -inf
number::mul(-inf, 0.5..2.5) => -inf
number::mul(-inf, 0.5!..2.5) => -inf
number::mul(-inf, 0.5..!2.5) => -inf
number::mul(-inf, -2.56..3.35) => -inf | inf | nan
number::mul(-inf, 0.5..0.75) => -inf
number::mul(-inf, 1..2) => -inf
number::mul(-inf, 0..inf) => -inf | nan
number::mul(-inf, 0!..inf) => -inf
number::mul(-inf, 0..!inf) => -inf | nan
number::mul(-inf, 0!..!inf) => -inf
number::mul(-inf, 1..inf) => -inf
number::mul(-inf, 1!..inf) => -inf
number::mul(-inf, 1..!inf) => -inf
number::mul(-inf, 2..inf) => -inf
number::mul(-inf, 2!..inf) => -inf
number::mul(-inf, 2.5..inf) => -inf
number::mul(-inf, -inf..0) => inf | nan
number::mul(-inf, -inf..inf) => -inf | inf | nan
number::mul(-inf, -inf!..inf) => -inf | inf | nan
number::mul(-inf, -inf..!inf) => -inf | inf | nan
number::mul(-inf, -inf!..!inf) => -inf | inf | nan
number::mul(-inf, int(0..1)) => -inf | nan
number::mul(-inf, int(0..2)) => -inf | nan
number::mul(-inf, int(1..2)) => -inf
number::mul(-inf, int(5..20)) => -inf
number::mul(-inf, int(-20..-5)) => inf
number::mul(-inf, int(-10..10)) => -inf | inf | nan
number::mul(-inf, int(0..inf)) => -inf | nan
number::mul(-inf, int(1..inf)) => -inf
number::mul(-inf, int(-inf..0)) => inf | nan
number::mul(-inf, int(-inf..1)) => -inf | inf | nan
number::mul(-inf, int(-inf..inf)) => -inf | inf | nan
number::mul(-inf, nonInt(0..1)) => -inf
number::mul(-inf, nonInt(0..2)) => -inf
number::mul(-inf, nonInt(-1..2)) => -inf | inf
number::mul(-inf, nonInt(0..inf)) => -inf
number::mul(-inf, nonInt(-1..inf)) => -inf | inf
number::mul(-inf, nonInt(-inf..0)) => inf
number::mul(-inf, nonInt(-inf..1)) => -inf | inf
number::mul(-inf, nonInt(-inf..inf)) => -inf | inf
number::mul(-inf, 1 | int(3..4)) => -inf
number::mul(inf, nan) => nan
number::mul(inf, 0..1) => inf | nan
number::mul(inf, 0!..1) => inf
number::mul(inf, 0..!1) => inf | nan
number::mul(inf, 0..2) => inf | nan
number::mul(inf, 0!..!2) => inf
number::mul(inf, 0.5..1.5) => inf
number::mul(inf, 0.5..2.5) => inf
number::mul(inf, 0.5!..2.5) => inf
number::mul(inf, 0.5..!2.5) => inf
number::mul(inf, -2.56..3.35) => -inf | inf | nan
number::mul(inf, 0.5..0.75) => inf
number::mul(inf, 1..2) => inf
number::mul(inf, 0..inf) => inf | nan
number::mul(inf, 0!..inf) => inf
number::mul(inf, 0..!inf) => inf | nan
number::mul(inf, 0!..!inf) => inf
number::mul(inf, 1..inf) => inf
number::mul(inf, 1!..inf) => inf
number::mul(inf, 1..!inf) => inf
number::mul(inf, 2..inf) => inf
number::mul(inf, 2!..inf) => inf
number::mul(inf, 2.5..inf) => inf
number::mul(inf, -inf..0) => -inf | nan
number::mul(inf, -inf..inf) => -inf | inf | nan
number::mul(inf, -inf!..inf) => -inf | inf | nan
number::mul(inf, -inf..!inf) => -inf | inf | nan
number::mul(inf, -inf!..!inf) => -inf | inf | nan
number::mul(inf, int(0..1)) => inf | nan
number::mul(inf, int(0..2)) => inf | nan
number::mul(inf, int(1..2)) => inf
number::mul(inf, int(5..20)) => inf
number::mul(inf, int(-20..-5)) => -inf
number::mul(inf, int(-10..10)) => -inf | inf | nan
number::mul(inf, int(0..inf)) => inf | nan
number::mul(inf, int(1..inf)) => inf
number::mul(inf, int(-inf..0)) => -inf | nan
number::mul(inf, int(-inf..1)) => -inf | inf | nan
number::mul(inf, int(-inf..inf)) => -inf | inf | nan
number::mul(inf, nonInt(0..1)) => inf
number::mul(inf, nonInt(0..2)) => inf
number::mul(inf, nonInt(-1..2)) => -inf | inf
number::mul(inf, nonInt(0..inf)) => inf
number::mul(inf, nonInt(-1..inf)) => -inf | inf
number::mul(inf, nonInt(-inf..0)) => -inf
number::mul(inf, nonInt(-inf..1)) => -inf | inf
number::mul(inf, nonInt(-inf..inf)) => -inf | inf
number::mul(inf, 1 | int(3..4)) => inf
number::mul(nan, 0..1) => nan
number::mul(nan, 0!..1) => nan
number::mul(nan, 0..!1) => nan
number::mul(nan, 0..2) => nan
number::mul(nan, 0!..!2) => nan
number::mul(nan, 0.5..1.5) => nan
number::mul(nan, 0.5..2.5) => nan
number::mul(nan, 0.5!..2.5) => nan
number::mul(nan, 0.5..!2.5) => nan
number::mul(nan, -2.56..3.35) => nan
number::mul(nan, 0.5..0.75) => nan
number::mul(nan, 1..2) => nan
number::mul(nan, 0..inf) => nan
number::mul(nan, 0!..inf) => nan
number::mul(nan, 0..!inf) => nan
number::mul(nan, 0!..!inf) => nan
number::mul(nan, 1..inf) => nan
number::mul(nan, 1!..inf) => nan
number::mul(nan, 1..!inf) => nan
number::mul(nan, 2..inf) => nan
number::mul(nan, 2!..inf) => nan
number::mul(nan, 2.5..inf) => nan
number::mul(nan, -inf..0) => nan
number::mul(nan, -inf..inf) => nan
number::mul(nan, -inf!..inf) => nan
number::mul(nan, -inf..!inf) => nan
number::mul(nan, -inf!..!inf) => nan
number::mul(nan, int(0..1)) => nan
number::mul(nan, int(0..2)) => nan
number::mul(nan, int(1..2)) => nan
number::mul(nan, int(5..20)) => nan
number::mul(nan, int(-20..-5)) => nan
number::mul(nan, int(-10..10)) => nan
number::mul(nan, int(0..inf)) => nan
number::mul(nan, int(1..inf)) => nan
number::mul(nan, int(-inf..0)) => nan
number::mul(nan, int(-inf..1)) => nan
number::mul(nan, int(-inf..inf)) => nan
number::mul(nan, nonInt(0..1)) => nan
number::mul(nan, nonInt(0..2)) => nan
number::mul(nan, nonInt(-1..2)) => nan
number::mul(nan, nonInt(0..inf)) => nan
number::mul(nan, nonInt(-1..inf)) => nan
number::mul(nan, nonInt(-inf..0)) => nan
number::mul(nan, nonInt(-inf..1)) => nan
number::mul(nan, nonInt(-inf..inf)) => nan
number::mul(nan, 1 | int(3..4)) => nan
number::mul(0..1, 0!..1) => 0..1
number::mul(0..1, 0..!1) => 0..!1
number::mul(0..1, 0..2) => 0..2
number::mul(0..1, 0!..!2) => 0!..!2
number::mul(0..1, 0.5..1.5) => 0..1.5
number::mul(0..1, 0.5..2.5) => 0..2.5
number::mul(0..1, 0.5!..2.5) => 0..2.5
number::mul(0..1, 0.5..!2.5) => 0..!2.5
number::mul(0..1, -2.56..3.35) => -2.56..3.35
number::mul(0..1, 0.5..0.75) => 0..0.75
number::mul(0..1, 1..2) => 0..2
number::mul(0..1, 0..inf) => 0..inf | nan
number::mul(0..1, 0!..inf) => 0!..inf | nan
number::mul(0..1, 0..!inf) => 0..!inf
number::mul(0..1, 0!..!inf) => 0!..!inf
number::mul(0..1, 1..inf) => 0..inf | nan
number::mul(0..1, 1!..inf) => 0!..inf | nan
number::mul(0..1, 1..!inf) => 0..!inf
number::mul(0..1, 2..inf) => 0..inf | nan
number::mul(0..1, 2!..inf) => 0!..inf | nan
number::mul(0..1, 2.5..inf) => 0..inf | nan
number::mul(0..1, -inf..0) => -inf..0 | nan
number::mul(0..1, -inf..inf) => number
number::mul(0..1, -inf!..inf) => -inf!..inf | nan
number::mul(0..1, -inf..!inf) => -inf..!inf | nan
number::mul(0..1, -inf!..!inf) => -inf!..!inf
number::mul(0..1, int(0..1)) => 0..1
number::mul(0..1, int(0..2)) => 0..2
number::mul(0..1, int(1..2)) => 0..2
number::mul(0..1, int(5..20)) => 0..20
number::mul(0..1, int(-20..-5)) => -20..0
number::mul(0..1, int(-10..10)) => -10..10
number::mul(0..1, int(0..inf)) => 0..!inf
number::mul(0..1, int(1..inf)) => 0..!inf
number::mul(0..1, int(-inf..0)) => -inf!..0
number::mul(0..1, int(-inf..1)) => -inf!..1
number::mul(0..1, int(-inf..inf)) => -inf!..!inf
number::mul(0..1, nonInt(0..1)) => nonInt(0..1)
number::mul(0..1, nonInt(0..2)) => 0!..!2
number::mul(0..1, nonInt(-1..2)) => -1!..!2
number::mul(0..1, nonInt(0..inf)) => 0!..!inf
number::mul(0..1, nonInt(-1..inf)) => -1!..!inf
number::mul(0..1, nonInt(-inf..0)) => -inf!..!0
number::mul(0..1, nonInt(-inf..1)) => -inf!..!1
number::mul(0..1, nonInt(-inf..inf)) => -inf!..!inf
number::mul(0..1, 1 | int(3..4)) => 0..4
number::mul(0!..1, 0..!1) => 0..!1
number::mul(0!..1, 0..2) => 0..2
number::mul(0!..1, 0!..!2) => 0!..!2
number::mul(0!..1, 0.5..1.5) => 0!..1.5
number::mul(0!..1, 0.5..2.5) => 0!..2.5
number::mul(0!..1, 0.5!..2.5) => 0!..2.5
number::mul(0!..1, 0.5..!2.5) => 0!..!2.5
number::mul(0!..1, -2.56..3.35) => -2.56..3.35
number::mul(0!..1, 0.5..0.75) => 0!..0.75
number::mul(0!..1, 1..2) => 0!..2
number::mul(0!..1, 0..inf) => 0..inf
number::mul(0!..1, 0!..inf) => 0!..inf
number::mul(0!..1, 0..!inf) => 0..!inf
number::mul(0!..1, 0!..!inf) => 0!..!inf
number::mul(0!..1, 1..inf) => 0!..inf
number::mul(0!..1, 1!..inf) => 0!..inf
number::mul(0!..1, 1..!inf) => 0!..!inf
number::mul(0!..1, 2..inf) => 0!..inf
number::mul(0!..1, 2!..inf) => 0!..inf
number::mul(0!..1, 2.5..inf) => 0!..inf
number::mul(0!..1, -inf..0) => -inf..0
number::mul(0!..1, -inf..inf) => -inf..inf
number::mul(0!..1, -inf!..inf) => -inf!..inf
number::mul(0!..1, -inf..!inf) => -inf..!inf
number::mul(0!..1, -inf!..!inf) => -inf!..!inf
number::mul(0!..1, int(0..1)) => 0..1
number::mul(0!..1, int(0..2)) => 0..2
number::mul(0!..1, int(1..2)) => 0!..2
number::mul(0!..1, int(5..20)) => 0!..20
number::mul(0!..1, int(-20..-5)) => -20..!0
number::mul(0!..1, int(-10..10)) => -10..10
number::mul(0!..1, int(0..inf)) => 0..!inf
number::mul(0!..1, int(1..inf)) => 0!..!inf
number::mul(0!..1, int(-inf..0)) => -inf!..0
number::mul(0!..1, int(-inf..1)) => -inf!..1
number::mul(0!..1, int(-inf..inf)) => -inf!..!inf
number::mul(0!..1, nonInt(0..1)) => nonInt(0..1)
number::mul(0!..1, nonInt(0..2)) => 0!..!2
number::mul(0!..1, nonInt(-1..2)) => -1!..!2
number::mul(0!..1, nonInt(0..inf)) => 0!..!inf
number::mul(0!..1, nonInt(-1..inf)) => -1!..!inf
number::mul(0!..1, nonInt(-inf..0)) => -inf!..!0
number::mul(0!..1, nonInt(-inf..1)) => -inf!..!1
number::mul(0!..1, nonInt(-inf..inf)) => -inf!..!inf
number::mul(0!..1, 1 | int(3..4)) => 0!..4
number::mul(0..!1, 0..2) => 0..!2
number::mul(0..!1, 0!..!2) => 0!..!2
number::mul(0..!1, 0.5..1.5) => 0..!1.5
number::mul(0..!1, 0.5..2.5) => 0..!2.5
number::mul(0..!1, 0.5!..2.5) => 0..!2.5
number::mul(0..!1, 0.5..!2.5) => 0..!2.5
number::mul(0..!1, -2.56..3.35) => -2.56!..!3.35
number::mul(0..!1, 0.5..0.75) => 0..!0.75
number::mul(0..!1, 1..2) => 0..!2
number::mul(0..!1, 0..inf) => 0..!inf | nan
number::mul(0..!1, 0!..inf) => 0!..!inf | nan
number::mul(0..!1, 0..!inf) => 0..!inf
number::mul(0..!1, 0!..!inf) => 0!..!inf
number::mul(0..!1, 1..inf) => 0..!inf | nan
number::mul(0..!1, 1!..inf) => 0!..!inf | nan
number::mul(0..!1, 1..!inf) => 0..!inf
number::mul(0..!1, 2..inf) => 0..!inf | nan
number::mul(0..!1, 2!..inf) => 0!..!inf | nan
number::mul(0..!1, 2.5..inf) => 0..!inf | nan
number::mul(0..!1, -inf..0) => -inf!..0 | nan
number::mul(0..!1, -inf..inf) => -inf!..!inf | nan
number::mul(0..!1, -inf!..inf) => -inf!..!inf | nan
number::mul(0..!1, -inf..!inf) => -inf!..!inf | nan
number::mul(0..!1, -inf!..!inf) => -inf!..!inf
number::mul(0..!1, int(0..1)) => 0..!1
number::mul(0..!1, int(0..2)) => 0..!2
number::mul(0..!1, int(1..2)) => 0..!2
number::mul(0..!1, int(5..20)) => 0..!20
number::mul(0..!1, int(-20..-5)) => -20!..0
number::mul(0..!1, int(-10..10)) => -10!..!10
number::mul(0..!1, int(0..inf)) => 0..!inf
number::mul(0..!1, int(1..inf)) => 0..!inf
number::mul(0..!1, int(-inf..0)) => -inf!..0
number::mul(0..!1, int(-inf..1)) => -inf!..!1
number::mul(0..!1, int(-inf..inf)) => -inf!..!inf
number::mul(0..!1, nonInt(0..1)) => nonInt(0..1)
number::mul(0..!1, nonInt(0..2)) => 0!..!2
number::mul(0..!1, nonInt(-1..2)) => -1!..!2
number::mul(0..!1, nonInt(0..inf)) => 0!..!inf
number::mul(0..!1, nonInt(-1..inf)) => -1!..!inf
number::mul(0..!1, nonInt(-inf..0)) => -inf!..!0
number::mul(0..!1, nonInt(-inf..1)) => -inf!..!1
number::mul(0..!1, nonInt(-inf..inf)) => -inf!..!inf
number::mul(0..!1, 1 | int(3..4)) => 0..!4
number::mul(0..2, 0!..!2) => 0!..!4
number::mul(0..2, 0.5..1.5) => 0..3
number::mul(0..2, 0.5..2.5) => 0..5
number::mul(0..2, 0.5!..2.5) => 0..5
number::mul(0..2, 0.5..!2.5) => 0..!5
number::mul(0..2, -2.56..3.35) => -5.12..6.7
number::mul(0..2, 0.5..0.75) => 0..1.5
number::mul(0..2, 1..2) => 0..4
number::mul(0..2, 0..inf) => 0..inf | nan
number::mul(0..2, 0!..inf) => 0!..inf | nan
number::mul(0..2, 0..!inf) => 0..!inf
number::mul(0..2, 0!..!inf) => 0!..!inf
number::mul(0..2, 1..inf) => 0..inf | nan
number::mul(0..2, 1!..inf) => 0!..inf | nan
number::mul(0..2, 1..!inf) => 0..!inf
number::mul(0..2, 2..inf) => 0..inf | nan
number::mul(0..2, 2!..inf) => 0!..inf | nan
number::mul(0..2, 2.5..inf) => 0..inf | nan
number::mul(0..2, -inf..0) => -inf..0 | nan
number::mul(0..2, -inf..inf) => number
number::mul(0..2, -inf!..inf) => -inf!..inf | nan
number::mul(0..2, -inf..!inf) => -inf..!inf | nan
number::mul(0..2, -inf!..!inf) => -inf!..!inf
number::mul(0..2, int(0..1)) => 0..2
number::mul(0..2, int(0..2)) => 0..4
number::mul(0..2, int(1..2)) => 0..4
number::mul(0..2, int(5..20)) => 0..40
number::mul(0..2, int(-20..-5)) => -40..0
number::mul(0..2, int(-10..10)) => -20..20
number::mul(0..2, int(0..inf)) => 0..!inf
number::mul(0..2, int(1..inf)) => 0..!inf
number::mul(0..2, int(-inf..0)) => -inf!..0
number::mul(0..2, int(-inf..1)) => -inf!..2
number::mul(0..2, int(-inf..inf)) => -inf!..!inf
number::mul(0..2, nonInt(0..1)) => 0!..!2
number::mul(0..2, nonInt(0..2)) => 0!..!4
number::mul(0..2, nonInt(-1..2)) => -2!..!4
number::mul(0..2, nonInt(0..inf)) => 0!..!inf
number::mul(0..2, nonInt(-1..inf)) => -2!..!inf
number::mul(0..2, nonInt(-inf..0)) => -inf!..!0
number::mul(0..2, nonInt(-inf..1)) => -inf!..!2
number::mul(0..2, nonInt(-inf..inf)) => -inf!..!inf
number::mul(0..2, 1 | int(3..4)) => 0..8
number::mul(0!..!2, 0.5..1.5) => 0!..!3
number::mul(0!..!2, 0.5..2.5) => 0!..!5
number::mul(0!..!2, 0.5!..2.5) => 0!..!5
number::mul(0!..!2, 0.5..!2.5) => 0!..!5
number::mul(0!..!2, -2.56..3.35) => -5.12!..!6.7
number::mul(0!..!2, 0.5..0.75) => 0!..!1.5
number::mul(0!..!2, 1..2) => 0!..!4
number::mul(0!..!2, 0..inf) => 0!..!inf
number::mul(0!..!2, 0!..inf) => 0!..!inf
number::mul(0!..!2, 0..!inf) => 0!..!inf
number::mul(0!..!2, 0!..!inf) => 0!..!inf
number::mul(0!..!2, 1..inf) => 0!..!inf
number::mul(0!..!2, 1!..inf) => 0!..!inf
number::mul(0!..!2, 1..!inf) => 0!..!inf
number::mul(0!..!2, 2..inf) => 0!..!inf
number::mul(0!..!2, 2!..inf) => 0!..!inf
number::mul(0!..!2, 2.5..inf) => 0!..!inf
number::mul(0!..!2, -inf..0) => -inf!..!0
number::mul(0!..!2, -inf..inf) => -inf!..!inf
number::mul(0!..!2, -inf!..inf) => -inf!..!inf
number::mul(0!..!2, -inf..!inf) => -inf!..!inf
number::mul(0!..!2, -inf!..!inf) => -inf!..!inf
number::mul(0!..!2, int(0..1)) => 0!..!2
number::mul(0!..!2, int(0..2)) => 0!..!4
number::mul(0!..!2, int(1..2)) => 0!..!4
number::mul(0!..!2, int(5..20)) => 0!..!40
number::mul(0!..!2, int(-20..-5)) => -40!..!0
number::mul(0!..!2, int(-10..10)) => -20!..!20
number::mul(0!..!2, int(0..inf)) => 0!..!inf
number::mul(0!..!2, int(1..inf)) => 0!..!inf
number::mul(0!..!2, int(-inf..0)) => -inf!..!0
number::mul(0!..!2, int(-inf..1)) => -inf!..!2
number::mul(0!..!2, int(-inf..inf)) => -inf!..!inf
number::mul(0!..!2, nonInt(0..1)) => 0!..!2
number::mul(0!..!2, nonInt(0..2)) => 0!..!4
number::mul(0!..!2, nonInt(-1..2)) => -2!..!4
number::mul(0!..!2, nonInt(0..inf)) => 0!..!inf
number::mul(0!..!2, nonInt(-1..inf)) => -2!..!inf
number::mul(0!..!2, nonInt(-inf..0)) => -inf!..!0
number::mul(0!..!2, nonInt(-inf..1)) => -inf!..!2
number::mul(0!..!2, nonInt(-inf..inf)) => -inf!..!inf
number::mul(0!..!2, 1 | int(3..4)) => 0!..!8
number::mul(0.5..1.5, 0.5..2.5) => 0.25..3.75
number::mul(0.5..1.5, 0.5!..2.5) => 0.25!..3.75
number::mul(0.5..1.5, 0.5..!2.5) => 0.25..!3.75
number::mul(0.5..1.5, -2.56..3.35) => -3.84..5.025
number::mul(0.5..1.5, 0.5..0.75) => 0.25..1.125
number::mul(0.5..1.5, 1..2) => 0.5..3
number::mul(0.5..1.5, 0..inf) => 0..inf
number::mul(0.5..1.5, 0!..inf) => 0!..inf
number::mul(0.5..1.5, 0..!inf) => 0..!inf
number::mul(0.5..1.5, 0!..!inf) => 0!..!inf
number::mul(0.5..1.5, 1..inf) => 0.5..inf
number::mul(0.5..1.5, 1!..inf) => 0.5!..inf
number::mul(0.5..1.5, 1..!inf) => 0.5..!inf
number::mul(0.5..1.5, 2..inf) => 1..inf
number::mul(0.5..1.5, 2!..inf) => 1!..inf
number::mul(0.5..1.5, 2.5..inf) => 1.25..inf
number::mul(0.5..1.5, -inf..0) => -inf..0
number::mul(0.5..1.5, -inf..inf) => -inf..inf
number::mul(0.5..1.5, -inf!..inf) => -inf!..inf
number::mul(0.5..1.5, -inf..!inf) => -inf..!inf
number::mul(0.5..1.5, -inf!..!inf) => -inf!..!inf
number::mul(0.5..1.5, int(0..1)) => 0..1.5
number::mul(0.5..1.5, int(0..2)) => 0..3
number::mul(0.5..1.5, int(1..2)) => 0.5..3
number::mul(0.5..1.5, int(5..20)) => 2.5..30
number::mul(0.5..1.5, int(-20..-5)) => -30..-2.5
number::mul(0.5..1.5, int(-10..10)) => -15..15
number::mul(0.5..1.5, int(0..inf)) => 0..!inf
number::mul(0.5..1.5, int(1..inf)) => 0.5..!inf
number::mul(0.5..1.5, int(-inf..0)) => -inf!..0
number::mul(0.5..1.5, int(-inf..1)) => -inf!..1.5
number::mul(0.5..1.5, int(-inf..inf)) => -inf!..!inf
number::mul(0.5..1.5, nonInt(0..1)) => 0!..!1.5
number::mul(0.5..1.5, nonInt(0..2)) => 0!..!3
number::mul(0.5..1.5, nonInt(-1..2)) => -1.5!..!3
number::mul(0.5..1.5, nonInt(0..inf)) => 0!..!inf
number::mul(0.5..1.5, nonInt(-1..inf)) => -1.5!..!inf
number::mul(0.5..1.5, nonInt(-inf..0)) => -inf!..!0
number::mul(0.5..1.5, nonInt(-inf..1)) => -inf!..!1.5
number::mul(0.5..1.5, nonInt(-inf..inf)) => -inf!..!inf
number::mul(0.5..1.5, 1 | int(3..4)) => 0.5..6
number::mul(0.5..2.5, 0.5!..2.5) => 0.25!..6.25
number::mul(0.5..2.5, 0.5..!2.5) => 0.25..!6.25
number::mul(0.5..2.5, -2.56..3.35) => -6.4..8.375
number::mul(0.5..2.5, 0.5..0.75) => 0.25..1.875
number::mul(0.5..2.5, 1..2) => 0.5..5
number::mul(0.5..2.5, 0..inf) => 0..inf
number::mul(0.5..2.5, 0!..inf) => 0!..inf
number::mul(0.5..2.5, 0..!inf) => 0..!inf
number::mul(0.5..2.5, 0!..!inf) => 0!..!inf
number::mul(0.5..2.5, 1..inf) => 0.5..inf
number::mul(0.5..2.5, 1!..inf) => 0.5!..inf
number::mul(0.5..2.5, 1..!inf) => 0.5..!inf
number::mul(0.5..2.5, 2..inf) => 1..inf
number::mul(0.5..2.5, 2!..inf) => 1!..inf
number::mul(0.5..2.5, 2.5..inf) => 1.25..inf
number::mul(0.5..2.5, -inf..0) => -inf..0
number::mul(0.5..2.5, -inf..inf) => -inf..inf
number::mul(0.5..2.5, -inf!..inf) => -inf!..inf
number::mul(0.5..2.5, -inf..!inf) => -inf..!inf
number::mul(0.5..2.5, -inf!..!inf) => -inf!..!inf
number::mul(0.5..2.5, int(0..1)) => 0..2.5
number::mul(0.5..2.5, int(0..2)) => 0..5
number::mul(0.5..2.5, int(1..2)) => 0.5..5
number::mul(0.5..2.5, int(5..20)) => 2.5..50
number::mul(0.5..2.5, int(-20..-5)) => -50..-2.5
number::mul(0.5..2.5, int(-10..10)) => -25..25
number::mul(0.5..2.5, int(0..inf)) => 0..!inf
number::mul(0.5..2.5, int(1..inf)) => 0.5..!inf
number::mul(0.5..2.5, int(-inf..0)) => -inf!..0
number::mul(0.5..2.5, int(-inf..1)) => -inf!..2.5
number::mul(0.5..2.5, int(-inf..inf)) => -inf!..!inf
number::mul(0.5..2.5, nonInt(0..1)) => 0!..!2.5
number::mul(0.5..2.5, nonInt(0..2)) => 0!..!5
number::mul(0.5..2.5, nonInt(-1..2)) => -2.5!..!5
number::mul(0.5..2.5, nonInt(0..inf)) => 0!..!inf
number::mul(0.5..2.5, nonInt(-1..inf)) => -2.5!..!inf
number::mul(0.5..2.5, nonInt(-inf..0)) => -inf!..!0
number::mul(0.5..2.5, nonInt(-inf..1)) => -inf!..!2.5
number::mul(0.5..2.5, nonInt(-inf..inf)) => -inf!..!inf
number::mul(0.5..2.5, 1 | int(3..4)) => 0.5..10
number::mul(0.5!..2.5, 0.5..!2.5) => 0.25!..!6.25
number::mul(0.5!..2.5, -2.56..3.35) => -6.4..8.375
number::mul(0.5!..2.5, 0.5..0.75) => 0.25!..1.875
number::mul(0.5!..2.5, 1..2) => 0.5!..5
number::mul(0.5!..2.5, 0..inf) => 0..inf
number::mul(0.5!..2.5, 0!..inf) => 0!..inf
number::mul(0.5!..2.5, 0..!inf) => 0..!inf
number::mul(0.5!..2.5, 0!..!inf) => 0!..!inf
number::mul(0.5!..2.5, 1..inf) => 0.5!..inf
number::mul(0.5!..2.5, 1!..inf) => 0.5!..inf
number::mul(0.5!..2.5, 1..!inf) => 0.5!..!inf
number::mul(0.5!..2.5, 2..inf) => 1!..inf
number::mul(0.5!..2.5, 2!..inf) => 1!..inf
number::mul(0.5!..2.5, 2.5..inf) => 1.25!..inf
number::mul(0.5!..2.5, -inf..0) => -inf..0
number::mul(0.5!..2.5, -inf..inf) => -inf..inf
number::mul(0.5!..2.5, -inf!..inf) => -inf!..inf
number::mul(0.5!..2.5, -inf..!inf) => -inf..!inf
number::mul(0.5!..2.5, -inf!..!inf) => -inf!..!inf
number::mul(0.5!..2.5, int(0..1)) => 0..2.5
number::mul(0.5!..2.5, int(0..2)) => 0..5
number::mul(0.5!..2.5, int(1..2)) => 0.5!..5
number::mul(0.5!..2.5, int(5..20)) => 2.5!..50
number::mul(0.5!..2.5, int(-20..-5)) => -50..!-2.5
number::mul(0.5!..2.5, int(-10..10)) => -25..25
number::mul(0.5!..2.5, int(0..inf)) => 0..!inf
number::mul(0.5!..2.5, int(1..inf)) => 0.5!..!inf
number::mul(0.5!..2.5, int(-inf..0)) => -inf!..0
number::mul(0.5!..2.5, int(-inf..1)) => -inf!..2.5
number::mul(0.5!..2.5, int(-inf..inf)) => -inf!..!inf
number::mul(0.5!..2.5, nonInt(0..1)) => 0!..!2.5
number::mul(0.5!..2.5, nonInt(0..2)) => 0!..!5
number::mul(0.5!..2.5, nonInt(-1..2)) => -2.5!..!5
number::mul(0.5!..2.5, nonInt(0..inf)) => 0!..!inf
number::mul(0.5!..2.5, nonInt(-1..inf)) => -2.5!..!inf
number::mul(0.5!..2.5, nonInt(-inf..0)) => -inf!..!0
number::mul(0.5!..2.5, nonInt(-inf..1)) => -inf!..!2.5
number::mul(0.5!..2.5, nonInt(-inf..inf)) => -inf!..!inf
number::mul(0.5!..2.5, 1 | int(3..4)) => 0.5!..10
number::mul(0.5..!2.5, -2.56..3.35) => -6.4!..!8.375
number::mul(0.5..!2.5, 0.5..0.75) => 0.25..!1.875
number::mul(0.5..!2.5, 1..2) => 0.5..!5
number::mul(0.5..!2.5, 0..inf) => 0..inf
number::mul(0.5..!2.5, 0!..inf) => 0!..inf
number::mul(0.5..!2.5, 0..!inf) => 0..!inf
number::mul(0.5..!2.5, 0!..!inf) => 0!..!inf
number::mul(0.5..!2.5, 1..inf) => 0.5..inf
number::mul(0.5..!2.5, 1!..inf) => 0.5!..inf
number::mul(0.5..!2.5, 1..!inf) => 0.5..!inf
number::mul(0.5..!2.5, 2..inf) => 1..inf
number::mul(0.5..!2.5, 2!..inf) => 1!..inf
number::mul(0.5..!2.5, 2.5..inf) => 1.25..inf
number::mul(0.5..!2.5, -inf..0) => -inf..0
number::mul(0.5..!2.5, -inf..inf) => -inf..inf
number::mul(0.5..!2.5, -inf!..inf) => -inf!..inf
number::mul(0.5..!2.5, -inf..!inf) => -inf..!inf
number::mul(0.5..!2.5, -inf!..!inf) => -inf!..!inf
number::mul(0.5..!2.5, int(0..1)) => 0..!2.5
number::mul(0.5..!2.5, int(0..2)) => 0..!5
number::mul(0.5..!2.5, int(1..2)) => 0.5..!5
number::mul(0.5..!2.5, int(5..20)) => 2.5..!50
number::mul(0.5..!2.5, int(-20..-5)) => -50!..-2.5
number::mul(0.5..!2.5, int(-10..10)) => -25!..!25
number::mul(0.5..!2.5, int(0..inf)) => 0..!inf
number::mul(0.5..!2.5, int(1..inf)) => 0.5..!inf
number::mul(0.5..!2.5, int(-inf..0)) => -inf!..0
number::mul(0.5..!2.5, int(-inf..1)) => -inf!..!2.5
number::mul(0.5..!2.5, int(-inf..inf)) => -inf!..!inf
number::mul(0.5..!2.5, nonInt(0..1)) => 0!..!2.5
number::mul(0.5..!2.5, nonInt(0..2)) => 0!..!5
number::mul(0.5..!2.5, nonInt(-1..2)) => -2.5!..!5
number::mul(0.5..!2.5, nonInt(0..inf)) => 0!..!inf
number::mul(0.5..!2.5, nonInt(-1..inf)) => -2.5!..!inf
number::mul(0.5..!2.5, nonInt(-inf..0)) => -inf!..!0
number::mul(0.5..!2.5, nonInt(-inf..1)) => -inf!..!2.5
number::mul(0.5..!2.5, nonInt(-inf..inf)) => -inf!..!inf
number::mul(0.5..!2.5, 1 | int(3..4)) => 0.5..!10
number::mul(-2.56..3.35, 0.5..0.75) => -1.92..2.5125
number::mul(-2.56..3.35, 1..2) => -5.12..6.7
number::mul(-2.56..3.35, 0..inf) => number
number::mul(-2.56..3.35, 0!..inf) => number
number::mul(-2.56..3.35, 0..!inf) => -inf!..!inf
number::mul(-2.56..3.35, 0!..!inf) => -inf!..!inf
number::mul(-2.56..3.35, 1..inf) => number
number::mul(-2.56..3.35, 1!..inf) => number
number::mul(-2.56..3.35, 1..!inf) => -inf!..!inf
number::mul(-2.56..3.35, 2..inf) => number
number::mul(-2.56..3.35, 2!..inf) => number
number::mul(-2.56..3.35, 2.5..inf) => number
number::mul(-2.56..3.35, -inf..0) => number
number::mul(-2.56..3.35, -inf..inf) => number
number::mul(-2.56..3.35, -inf!..inf) => number
number::mul(-2.56..3.35, -inf..!inf) => number
number::mul(-2.56..3.35, -inf!..!inf) => -inf!..!inf
number::mul(-2.56..3.35, int(0..1)) => -2.56..3.35
number::mul(-2.56..3.35, int(0..2)) => -5.12..6.7
number::mul(-2.56..3.35, int(1..2)) => -5.12..6.7
number::mul(-2.56..3.35, int(5..20)) => -51.2..67
number::mul(-2.56..3.35, int(-20..-5)) => -67..51.2
number::mul(-2.56..3.35, int(-10..10)) => -33.5..33.5
number::mul(-2.56..3.35, int(0..inf)) => -inf!..!inf
number::mul(-2.56..3.35, int(1..inf)) => -inf!..!inf
number::mul(-2.56..3.35, int(-inf..0)) => -inf!..!inf
number::mul(-2.56..3.35, int(-inf..1)) => -inf!..!inf
number::mul(-2.56..3.35, int(-inf..inf)) => -inf!..!inf
number::mul(-2.56..3.35, nonInt(0..1)) => -2.56!..!3.35
number::mul(-2.56..3.35, nonInt(0..2)) => -5.12!..!6.7
number::mul(-2.56..3.35, nonInt(-1..2)) => -5.12!..!6.7
number::mul(-2.56..3.35, nonInt(0..inf)) => -inf!..!inf
number::mul(-2.56..3.35, nonInt(-1..inf)) => -inf!..!inf
number::mul(-2.56..3.35, nonInt(-inf..0)) => -inf!..!inf
number::mul(-2.56..3.35, nonInt(-inf..1)) => -inf!..!inf
number::mul(-2.56..3.35, nonInt(-inf..inf)) => -inf!..!inf
number::mul(-2.56..3.35, 1 | int(3..4)) => -10.24..13.4
number::mul(0.5..0.75, 1..2) => 0.5..1.5
number::mul(0.5..0.75, 0..inf) => 0..inf
number::mul(0.5..0.75, 0!..inf) => 0!..inf
number::mul(0.5..0.75, 0..!inf) => 0..!inf
number::mul(0.5..0.75, 0!..!inf) => 0!..!inf
number::mul(0.5..0.75, 1..inf) => 0.5..inf
number::mul(0.5..0.75, 1!..inf) => 0.5!..inf
number::mul(0.5..0.75, 1..!inf) => 0.5..!inf
number::mul(0.5..0.75, 2..inf) => 1..inf
number::mul(0.5..0.75, 2!..inf) => 1!..inf
number::mul(0.5..0.75, 2.5..inf) => 1.25..inf
number::mul(0.5..0.75, -inf..0) => -inf..0
number::mul(0.5..0.75, -inf..inf) => -inf..inf
number::mul(0.5..0.75, -inf!..inf) => -inf!..inf
number::mul(0.5..0.75, -inf..!inf) => -inf..!inf
number::mul(0.5..0.75, -inf!..!inf) => -inf!..!inf
number::mul(0.5..0.75, int(0..1)) => 0..0.75
number::mul(0.5..0.75, int(0..2)) => 0..1.5
number::mul(0.5..0.75, int(1..2)) => 0.5..1.5
number::mul(0.5..0.75, int(5..20)) => 2.5..15
number::mul(0.5..0.75, int(-20..-5)) => -15..-2.5
number::mul(0.5..0.75, int(-10..10)) => -7.5..7.5
number::mul(0.5..0.75, int(0..inf)) => 0..!inf
number::mul(0.5..0.75, int(1..inf)) => 0.5..!inf
number::mul(0.5..0.75, int(-inf..0)) => -inf!..0
number::mul(0.5..0.75, int(-inf..1)) => -inf!..0.75
number::mul(0.5..0.75, int(-inf..inf)) => -inf!..!inf
number::mul(0.5..0.75, nonInt(0..1)) => 0!..!0.75
number::mul(0.5..0.75, nonInt(0..2)) => 0!..!1.5
number::mul(0.5..0.75, nonInt(-1..2)) => -0.75!..!1.5
number::mul(0.5..0.75, nonInt(0..inf)) => 0!..!inf
number::mul(0.5..0.75, nonInt(-1..inf)) => -0.75!..!inf
number::mul(0.5..0.75, nonInt(-inf..0)) => -inf!..!0
number::mul(0.5..0.75, nonInt(-inf..1)) => -inf!..!0.75
number::mul(0.5..0.75, nonInt(-inf..inf)) => -inf!..!inf
number::mul(0.5..0.75, 1 | int(3..4)) => 0.5..0.75 | 1.5..3
number::mul(1..2, 0..inf) => 0..inf
number::mul(1..2, 0!..inf) => 0!..inf
number::mul(1..2, 0..!inf) => 0..!inf
number::mul(1..2, 0!..!inf) => 0!..!inf
number::mul(1..2, 1..inf) => 1..inf
number::mul(1..2, 1!..inf) => 1!..inf
number::mul(1..2, 1..!inf) => 1..!inf
number::mul(1..2, 2..inf) => 2..inf
number::mul(1..2, 2!..inf) => 2!..inf
number::mul(1..2, 2.5..inf) => 2.5..inf
number::mul(1..2, -inf..0) => -inf..0
number::mul(1..2, -inf..inf) => -inf..inf
number::mul(1..2, -inf!..inf) => -inf!..inf
number::mul(1..2, -inf..!inf) => -inf..!inf
number::mul(1..2, -inf!..!inf) => -inf!..!inf
number::mul(1..2, int(0..1)) => 0..2
number::mul(1..2, int(0..2)) => 0..4
number::mul(1..2, int(1..2)) => 1..4
number::mul(1..2, int(5..20)) => 5..40
number::mul(1..2, int(-20..-5)) => -40..-5
number::mul(1..2, int(-10..10)) => -20..20
number::mul(1..2, int(0..inf)) => 0..!inf
number::mul(1..2, int(1..inf)) => 1..!inf
number::mul(1..2, int(-inf..0)) => -inf!..0
number::mul(1..2, int(-inf..1)) => -inf!..2
number::mul(1..2, int(-inf..inf)) => -inf!..!inf
number::mul(1..2, nonInt(0..1)) => 0!..!2
number::mul(1..2, nonInt(0..2)) => 0!..!4
number::mul(1..2, nonInt(-1..2)) => -2!..!4
number::mul(1..2, nonInt(0..inf)) => 0!..!inf
number::mul(1..2, nonInt(-1..inf)) => -2!..!inf
number::mul(1..2, nonInt(-inf..0)) => -inf!..!0
number::mul(1..2, nonInt(-inf..1)) => -inf!..!2
number::mul(1..2, nonInt(-inf..inf)) => -inf!..!inf
number::mul(1..2, 1 | int(3..4)) => 1..2 | 3..8
number::mul(0..inf, 0!..inf) => 0!..inf | nan
number::mul(0..inf, 0..!inf) => 0..!inf | nan
number::mul(0..inf, 0!..!inf) => 0!..!inf
number::mul(0..inf, 1..inf) => 0..inf | nan
number::mul(0..inf, 1!..inf) => 0!..inf | nan
number::mul(0..inf, 1..!inf) => 0..inf
number::mul(0..inf, 2..inf) => 0..inf | nan
number::mul(0..inf, 2!..inf) => 0!..inf | nan
number::mul(0..inf, 2.5..inf) => 0..inf | nan
number::mul(0..inf, -inf..0) => -inf..0 | nan
number::mul(0..inf, -inf..inf) => number
number::mul(0..inf, -inf!..inf) => -inf!..inf | nan
number::mul(0..inf, -inf..!inf) => -inf..!inf | nan
number::mul(0..inf, -inf!..!inf) => -inf!..!inf | nan
number::mul(0..inf, int(0..1)) => 0..inf | nan
number::mul(0..inf, int(0..2)) => 0..inf | nan
number::mul(0..inf, int(1..2)) => 0..inf
number::mul(0..inf, int(5..20)) => 0..inf
number::mul(0..inf, int(-20..-5)) => -inf..0
number::mul(0..inf, int(-10..10)) => number
number::mul(0..inf, int(0..inf)) => 0..!inf | nan
number::mul(0..inf, int(1..inf)) => 0..inf
number::mul(0..inf, int(-inf..0)) => -inf!..0 | nan
number::mul(0..inf, int(-inf..1)) => -inf!..inf | nan
number::mul(0..inf, int(-inf..inf)) => -inf!..!inf | nan
number::mul(0..inf, nonInt(0..1)) => 0!..!inf
number::mul(0..inf, nonInt(0..2)) => 0!..!inf
number::mul(0..inf, nonInt(-1..2)) => -inf!..!inf
number::mul(0..inf, nonInt(0..inf)) => 0!..!inf
number::mul(0..inf, nonInt(-1..inf)) => -inf!..!inf
number::mul(0..inf, nonInt(-inf..0)) => -inf!..!0
number::mul(0..inf, nonInt(-inf..1)) => -inf!..!inf
number::mul(0..inf, nonInt(-inf..inf)) => -inf!..!inf
number::mul(0..inf, 1 | int(3..4)) => 0..inf
number::mul(0!..inf, 0..!inf) => 0!..!inf | nan
number::mul(0!..inf, 0!..!inf) => 0!..!inf
number::mul(0!..inf, 1..inf) => 0!..inf
number::mul(0!..inf, 1!..inf) => 0!..inf
number::mul(0!..inf, 1..!inf) => 0!..inf
number::mul(0!..inf, 2..inf) => 0!..inf
number::mul(0!..inf, 2!..inf) => 0!..inf
number::mul(0!..inf, 2.5..inf) => 0!..inf
number::mul(0!..inf, -inf..0) => -inf..!0 | nan
number::mul(0!..inf, -inf..inf) => number
number::mul(0!..inf, -inf!..inf) => -inf!..inf | nan
number::mul(0!..inf, -inf..!inf) => -inf..!inf | nan
number::mul(0!..inf, -inf!..!inf) => -inf!..!inf | nan
number::mul(0!..inf, int(0..1)) => 0!..inf | nan
number::mul(0!..inf, int(0..2)) => 0!..inf | nan
number::mul(0!..inf, int(1..2)) => 0!..inf
number::mul(0!..inf, int(5..20)) => 0!..inf
number::mul(0!..inf, int(-20..-5)) => -inf..!0
number::mul(0!..inf, int(-10..10)) => number
number::mul(0!..inf, int(0..inf)) => 0!..!inf | nan
number::mul(0!..inf, int(1..inf)) => 0!..inf
number::mul(0!..inf, int(-inf..0)) => -inf!..!0 | nan
number::mul(0!..inf, int(-inf..1)) => -inf!..inf | nan
number::mul(0!..inf, int(-inf..inf)) => -inf!..!inf | nan
number::mul(0!..inf, nonInt(0..1)) => 0!..!inf
number::mul(0!..inf, nonInt(0..2)) => 0!..!inf
number::mul(0!..inf, nonInt(-1..2)) => -inf!..!inf
number::mul(0!..inf, nonInt(0..inf)) => 0!..!inf
number::mul(0!..inf, nonInt(-1..inf)) => -inf!..!inf
number::mul(0!..inf, nonInt(-inf..0)) => -inf!..!0
number::mul(0!..inf, nonInt(-inf..1)) => -inf!..!inf
number::mul(0!..inf, nonInt(-inf..inf)) => -inf!..!inf
number::mul(0!..inf, 1 | int(3..4)) => 0!..inf
number::mul(0..!inf, 0!..!inf) => 0!..!inf
number::mul(0..!inf, 1..inf) => 0..!inf | nan
number::mul(0..!inf, 1!..inf) => 0!..!inf | nan
number::mul(0..!inf, 1..!inf) => 0..!inf
number::mul(0..!inf, 2..inf) => 0..!inf | nan
number::mul(0..!inf, 2!..inf) => 0!..!inf | nan
number::mul(0..!inf, 2.5..inf) => 0..!inf | nan
number::mul(0..!inf, -inf..0) => -inf!..0 | nan
number::mul(0..!inf, -inf..inf) => -inf!..!inf | nan
number::mul(0..!inf, -inf!..inf) => -inf!..!inf | nan
number::mul(0..!inf, -inf..!inf) => -inf!..!inf | nan
number::mul(0..!inf, -inf!..!inf) => -inf!..!inf
number::mul(0..!inf, int(0..1)) => 0..!inf
number::mul(0..!inf, int(0..2)) => 0..!inf
number::mul(0..!inf, int(1..2)) => 0..!inf
number::mul(0..!inf, int(5..20)) => 0..!inf
number::mul(0..!inf, int(-20..-5)) => -inf!..0
number::mul(0..!inf, int(-10..10)) => -inf!..!inf
number::mul(0..!inf, int(0..inf)) => 0..!inf
number::mul(0..!inf, int(1..inf)) => 0..!inf
number::mul(0..!inf, int(-inf..0)) => -inf!..0
number::mul(0..!inf, int(-inf..1)) => -inf!..!inf
number::mul(0..!inf, int(-inf..inf)) => -inf!..!inf
number::mul(0..!inf, nonInt(0..1)) => 0!..!inf
number::mul(0..!inf, nonInt(0..2)) => 0!..!inf
number::mul(0..!inf, nonInt(-1..2)) => -inf!..!inf
number::mul(0..!inf, nonInt(0..inf)) => 0!..!inf
number::mul(0..!inf, nonInt(-1..inf)) => -inf!..!inf
number::mul(0..!inf, nonInt(-inf..0)) => -inf!..!0
number::mul(0..!inf, nonInt(-inf..1)) => -inf!..!inf
number::mul(0..!inf, nonInt(-inf..inf)) => -inf!..!inf
number::mul(0..!inf, 1 | int(3..4)) => 0..!inf
number::mul(0!..!inf, 1..inf) => 0!..!inf
number::mul(0!..!inf, 1!..inf) => 0!..!inf
number::mul(0!..!inf, 1..!inf) => 0!..!inf
number::mul(0!..!inf, 2..inf) => 0!..!inf
number::mul(0!..!inf, 2!..inf) => 0!..!inf
number::mul(0!..!inf, 2.5..inf) => 0!..!inf
number::mul(0!..!inf, -inf..0) => -inf!..!0
number::mul(0!..!inf, -inf..inf) => -inf!..!inf
number::mul(0!..!inf, -inf!..inf) => -inf!..!inf
number::mul(0!..!inf, -inf..!inf) => -inf!..!inf
number::mul(0!..!inf, -inf!..!inf) => -inf!..!inf
number::mul(0!..!inf, int(0..1)) => 0!..!inf
number::mul(0!..!inf, int(0..2)) => 0!..!inf
number::mul(0!..!inf, int(1..2)) => 0!..!inf
number::mul(0!..!inf, int(5..20)) => 0!..!inf
number::mul(0!..!inf, int(-20..-5)) => -inf!..!0
number::mul(0!..!inf, int(-10..10)) => -inf!..!inf
number::mul(0!..!inf, int(0..inf)) => 0!..!inf
number::mul(0!..!inf, int(1..inf)) => 0!..!inf
number::mul(0!..!inf, int(-inf..0)) => -inf!..!0
number::mul(0!..!inf, int(-inf..1)) => -inf!..!inf
number::mul(0!..!inf, int(-inf..inf)) => -inf!..!inf
number::mul(0!..!inf, nonInt(0..1)) => 0!..!inf
number::mul(0!..!inf, nonInt(0..2)) => 0!..!inf
number::mul(0!..!inf, nonInt(-1..2)) => -inf!..!inf
number::mul(0!..!inf, nonInt(0..inf)) => 0!..!inf
number::mul(0!..!inf, nonInt(-1..inf)) => -inf!..!inf
number::mul(0!..!inf, nonInt(-inf..0)) => -inf!..!0
number::mul(0!..!inf, nonInt(-inf..1)) => -inf!..!inf
number::mul(0!..!inf, nonInt(-inf..inf)) => -inf!..!inf
number::mul(0!..!inf, 1 | int(3..4)) => 0!..!inf
number::mul(1..inf, 1!..inf) => 1!..inf
number::mul(1..inf, 1..!inf) => 1..inf
number::mul(1..inf, 2..inf) => 2..inf
number::mul(1..inf, 2!..inf) => 2!..inf
number::mul(1..inf, 2.5..inf) => 2.5..inf
number::mul(1..inf, -inf..0) => -inf..0 | nan
number::mul(1..inf, -inf..inf) => number
number::mul(1..inf, -inf!..inf) => -inf!..inf | nan
number::mul(1..inf, -inf..!inf) => -inf..!inf | nan
number::mul(1..inf, -inf!..!inf) => -inf!..!inf | nan
number::mul(1..inf, int(0..1)) => 0..inf | nan
number::mul(1..inf, int(0..2)) => 0..inf | nan
number::mul(1..inf, int(1..2)) => 1..inf
number::mul(1..inf, int(5..20)) => 5..inf
number::mul(1..inf, int(-20..-5)) => -inf..-5
number::mul(1..inf, int(-10..10)) => number
number::mul(1..inf, int(0..inf)) => 0..!inf | nan
number::mul(1..inf, int(1..inf)) => 1..inf
number::mul(1..inf, int(-inf..0)) => -inf!..0 | nan
number::mul(1..inf, int(-inf..1)) => -inf!..inf | nan
number::mul(1..inf, int(-inf..inf)) => -inf!..!inf | nan
number::mul(1..inf, nonInt(0..1)) => 0!..!inf
number::mul(1..inf, nonInt(0..2)) => 0!..!inf
number::mul(1..inf, nonInt(-1..2)) => -inf!..!inf
number::mul(1..inf, nonInt(0..inf)) => 0!..!inf
number::mul(1..inf, nonInt(-1..inf)) => -inf!..!inf
number::mul(1..inf, nonInt(-inf..0)) => -inf!..!0
number::mul(1..inf, nonInt(-inf..1)) => -inf!..!inf
number::mul(1..inf, nonInt(-inf..inf)) => -inf!..!inf
number::mul(1..inf, 1 | int(3..4)) => 1..inf
number::mul(1!..inf, 1..!inf) => 1!..inf
number::mul(1!..inf, 2..inf) => 2!..inf
number::mul(1!..inf, 2!..inf) => 2!..inf
number::mul(1!..inf, 2.5..inf) => 2.5!..inf
number::mul(1!..inf, -inf..0) => -inf..!0 | nan
number::mul(1!..inf, -inf..inf) => number
number::mul(1!..inf, -inf!..inf) => -inf!..inf | nan
number::mul(1!..inf, -inf..!inf) => -inf..!inf | nan
number::mul(1!..inf, -inf!..!inf) => -inf!..!inf | nan
number::mul(1!..inf, int(0..1)) => 0!..inf | nan
number::mul(1!..inf, int(0..2)) => 0!..inf | nan
number::mul(1!..inf, int(1..2)) => 1!..inf
number::mul(1!..inf, int(5..20)) => 5!..inf
number::mul(1!..inf, int(-20..-5)) => -inf..!-5
number::mul(1!..inf, int(-10..10)) => number
number::mul(1!..inf, int(0..inf)) => 0!..!inf | nan
number::mul(1!..inf, int(1..inf)) => 1!..inf
number::mul(1!..inf, int(-inf..0)) => -inf!..!0 | nan
number::mul(1!..inf, int(-inf..1)) => -inf!..inf | nan
number::mul(1!..inf, int(-inf..inf)) => -inf!..!inf | nan
number::mul(1!..inf, nonInt(0..1)) => 0!..!inf
number::mul(1!..inf, nonInt(0..2)) => 0!..!inf
number::mul(1!..inf, nonInt(-1..2)) => -inf!..!inf
number::mul(1!..inf, nonInt(0..inf)) => 0!..!inf
number::mul(1!..inf, nonInt(-1..inf)) => -inf!..!inf
number::mul(1!..inf, nonInt(-inf..0)) => -inf!..!0
number::mul(1!..inf, nonInt(-inf..1)) => -inf!..!inf
number::mul(1!..inf, nonInt(-inf..inf)) => -inf!..!inf
number::mul(1!..inf, 1 | int(3..4)) => 1!..inf
number::mul(1..!inf, 2..inf) => 2..inf
number::mul(1..!inf, 2!..inf) => 2!..inf
number::mul(1..!inf, 2.5..inf) => 2.5..inf
number::mul(1..!inf, -inf..0) => -inf..0
number::mul(1..!inf, -inf..inf) => -inf..inf
number::mul(1..!inf, -inf!..inf) => -inf!..inf
number::mul(1..!inf, -inf..!inf) => -inf..!inf
number::mul(1..!inf, -inf!..!inf) => -inf!..!inf
number::mul(1..!inf, int(0..1)) => 0..!inf
number::mul(1..!inf, int(0..2)) => 0..!inf
number::mul(1..!inf, int(1..2)) => 1..!inf
number::mul(1..!inf, int(5..20)) => 5..!inf
number::mul(1..!inf, int(-20..-5)) => -inf!..-5
number::mul(1..!inf, int(-10..10)) => -inf!..!inf
number::mul(1..!inf, int(0..inf)) => 0..!inf
number::mul(1..!inf, int(1..inf)) => 1..!inf
number::mul(1..!inf, int(-inf..0)) => -inf!..0
number::mul(1..!inf, int(-inf..1)) => -inf!..!inf
number::mul(1..!inf, int(-inf..inf)) => -inf!..!inf
number::mul(1..!inf, nonInt(0..1)) => 0!..!inf
number::mul(1..!inf, nonInt(0..2)) => 0!..!inf
number::mul(1..!inf, nonInt(-1..2)) => -inf!..!inf
number::mul(1..!inf, nonInt(0..inf)) => 0!..!inf
number::mul(1..!inf, nonInt(-1..inf)) => -inf!..!inf
number::mul(1..!inf, nonInt(-inf..0)) => -inf!..!0
number::mul(1..!inf, nonInt(-inf..1)) => -inf!..!inf
number::mul(1..!inf, nonInt(-inf..inf)) => -inf!..!inf
number::mul(1..!inf, 1 | int(3..4)) => 1..!inf
number::mul(2..inf, 2!..inf) => 4!..inf
number::mul(2..inf, 2.5..inf) => 5..inf
number::mul(2..inf, -inf..0) => -inf..0 | nan
number::mul(2..inf, -inf..inf) => number
number::mul(2..inf, -inf!..inf) => -inf!..inf | nan
number::mul(2..inf, -inf..!inf) => -inf..!inf | nan
number::mul(2..inf, -inf!..!inf) => -inf!..!inf | nan
number::mul(2..inf, int(0..1)) => 0..inf | nan
number::mul(2..inf, int(0..2)) => 0..inf | nan
number::mul(2..inf, int(1..2)) => 2..inf
number::mul(2..inf, int(5..20)) => 10..inf
number::mul(2..inf, int(-20..-5)) => -inf..-10
number::mul(2..inf, int(-10..10)) => number
number::mul(2..inf, int(0..inf)) => 0..!inf | nan
number::mul(2..inf, int(1..inf)) => 2..inf
number::mul(2..inf, int(-inf..0)) => -inf!..0 | nan
number::mul(2..inf, int(-inf..1)) => -inf!..inf | nan
number::mul(2..inf, int(-inf..inf)) => -inf!..!inf | nan
number::mul(2..inf, nonInt(0..1)) => 0!..!inf
number::mul(2..inf, nonInt(0..2)) => 0!..!inf
number::mul(2..inf, nonInt(-1..2)) => -inf!..!inf
number::mul(2..inf, nonInt(0..inf)) => 0!..!inf
number::mul(2..inf, nonInt(-1..inf)) => -inf!..!inf
number::mul(2..inf, nonInt(-inf..0)) => -inf!..!0
number::mul(2..inf, nonInt(-inf..1)) => -inf!..!inf
number::mul(2..inf, nonInt(-inf..inf)) => -inf!..!inf
number::mul(2..inf, 1 | int(3..4)) => 2..inf
number::mul(2!..inf, 2.5..inf) => 5!..inf
number::mul(2!..inf, -inf..0) => -inf..!0 | nan
number::mul(2!..inf, -inf..inf) => number
number::mul(2!..inf, -inf!..inf) => -inf!..inf | nan
number::mul(2!..inf, -inf..!inf) => -inf..!inf | nan
number::mul(2!..inf, -inf!..!inf) => -inf!..!inf | nan
number::mul(2!..inf, int(0..1)) => 0!..inf | nan
number::mul(2!..inf, int(0..2)) => 0!..inf | nan
number::mul(2!..inf, int(1..2)) => 2!..inf
number::mul(2!..inf, int(5..20)) => 10!..inf
number::mul(2!..inf, int(-20..-5)) => -inf..!-10
number::mul(2!..inf, int(-10..10)) => number
number::mul(2!..inf, int(0..inf)) => 0!..!inf | nan
number::mul(2!..inf, int(1..inf)) => 2!..inf
number::mul(2!..inf, int(-inf..0)) => -inf!..!0 | nan
number::mul(2!..inf, int(-inf..1)) => -inf!..inf | nan
number::mul(2!..inf, int(-inf..inf)) => -inf!..!inf | nan
number::mul(2!..inf, nonInt(0..1)) => 0!..!inf
number::mul(2!..inf, nonInt(0..2)) => 0!..!inf
number::mul(2!..inf, nonInt(-1..2)) => -inf!..!inf
number::mul(2!..inf, nonInt(0..inf)) => 0!..!inf
number::mul(2!..inf, nonInt(-1..inf)) => -inf!..!inf
number::mul(2!..inf, nonInt(-inf..0)) => -inf!..!0
number::mul(2!..inf, nonInt(-inf..1)) => -inf!..!inf
number::mul(2!..inf, nonInt(-inf..inf)) => -inf!..!inf
number::mul(2!..inf, 1 | int(3..4)) => 2!..inf
number::mul(2.5..inf, -inf..0) => -inf..0 | nan
number::mul(2.5..inf, -inf..inf) => number
number::mul(2.5..inf, -inf!..inf) => -inf!..inf | nan
number::mul(2.5..inf, -inf..!inf) => -inf..!inf | nan
number::mul(2.5..inf, -inf!..!inf) => -inf!..!inf | nan
number::mul(2.5..inf, int(0..1)) => 0..inf | nan
number::mul(2.5..inf, int(0..2)) => 0..inf | nan
number::mul(2.5..inf, int(1..2)) => 2.5..inf
number::mul(2.5..inf, int(5..20)) => 12.5..inf
number::mul(2.5..inf, int(-20..-5)) => -inf..-12.5
number::mul(2.5..inf, int(-10..10)) => number
number::mul(2.5..inf, int(0..inf)) => 0..!inf | nan
number::mul(2.5..inf, int(1..inf)) => 2.5..inf
number::mul(2.5..inf, int(-inf..0)) => -inf!..0 | nan
number::mul(2.5..inf, int(-inf..1)) => -inf!..inf | nan
number::mul(2.5..inf, int(-inf..inf)) => -inf!..!inf | nan
number::mul(2.5..inf, nonInt(0..1)) => 0!..!inf
number::mul(2.5..inf, nonInt(0..2)) => 0!..!inf
number::mul(2.5..inf, nonInt(-1..2)) => -inf!..!inf
number::mul(2.5..inf, nonInt(0..inf)) => 0!..!inf
number::mul(2.5..inf, nonInt(-1..inf)) => -inf!..!inf
number::mul(2.5..inf, nonInt(-inf..0)) => -inf!..!0
number::mul(2.5..inf, nonInt(-inf..1)) => -inf!..!inf
number::mul(2.5..inf, nonInt(-inf..inf)) => -inf!..!inf
number::mul(2.5..inf, 1 | int(3..4)) => 2.5..inf
number::mul(-inf..0, -inf..inf) => number
number::mul(-inf..0, -inf!..inf) => -inf..!inf | nan
number::mul(-inf..0, -inf..!inf) => -inf!..inf | nan
number::mul(-inf..0, -inf!..!inf) => -inf!..!inf | nan
number::mul(-inf..0, int(0..1)) => -inf..0 | nan
number::mul(-inf..0, int(0..2)) => -inf..0 | nan
number::mul(-inf..0, int(1..2)) => -inf..0
number::mul(-inf..0, int(5..20)) => -inf..0
number::mul(-inf..0, int(-20..-5)) => 0..inf
number::mul(-inf..0, int(-10..10)) => number
number::mul(-inf..0, int(0..inf)) => -inf!..0 | nan
number::mul(-inf..0, int(1..inf)) => -inf..0
number::mul(-inf..0, int(-inf..0)) => 0..!inf | nan
number::mul(-inf..0, int(-inf..1)) => -inf..!inf | nan
number::mul(-inf..0, int(-inf..inf)) => -inf!..!inf | nan
number::mul(-inf..0, nonInt(0..1)) => -inf!..!0
number::mul(-inf..0, nonInt(0..2)) => -inf!..!0
number::mul(-inf..0, nonInt(-1..2)) => -inf!..!inf
number::mul(-inf..0, nonInt(0..inf)) => -inf!..!0
number::mul(-inf..0, nonInt(-1..inf)) => -inf!..!inf
number::mul(-inf..0, nonInt(-inf..0)) => 0!..!inf
number::mul(-inf..0, nonInt(-inf..1)) => -inf!..!inf
number::mul(-inf..0, nonInt(-inf..inf)) => -inf!..!inf
number::mul(-inf..0, 1 | int(3..4)) => -inf..0
number::mul(-inf..inf, -inf!..inf) => number
number::mul(-inf..inf, -inf..!inf) => number
number::mul(-inf..inf, -inf!..!inf) => -inf!..!inf | nan
number::mul(-inf..inf, int(0..1)) => number
number::mul(-inf..inf, int(0..2)) => number
number::mul(-inf..inf, int(1..2)) => -inf..inf
number::mul(-inf..inf, int(5..20)) => -inf..inf
number::mul(-inf..inf, int(-20..-5)) => -inf..inf
number::mul(-inf..inf, int(-10..10)) => number
number::mul(-inf..inf, int(0..inf)) => -inf!..!inf | nan
number::mul(-inf..inf, int(1..inf)) => -inf..inf
number::mul(-inf..inf, int(-inf..0)) => -inf!..!inf | nan
number::mul(-inf..inf, int(-inf..1)) => number
number::mul(-inf..inf, int(-inf..inf)) => -inf!..!inf | nan
number::mul(-inf..inf, nonInt(0..1)) => -inf!..!inf
number::mul(-inf..inf, nonInt(0..2)) => -inf!..!inf
number::mul(-inf..inf, nonInt(-1..2)) => -inf!..!inf
number::mul(-inf..inf, nonInt(0..inf)) => -inf!..!inf
number::mul(-inf..inf, nonInt(-1..inf)) => -inf!..!inf
number::mul(-inf..inf, nonInt(-inf..0)) => -inf!..!inf
number::mul(-inf..inf, nonInt(-inf..1)) => -inf!..!inf
number::mul(-inf..inf, nonInt(-inf..inf)) => -inf!..!inf
number::mul(-inf..inf, 1 | int(3..4)) => -inf..inf
number::mul(-inf!..inf, -inf..!inf) => -inf..!inf | nan
number::mul(-inf!..inf, -inf!..!inf) => -inf!..!inf | nan
number::mul(-inf!..inf, int(0..1)) => -inf!..inf | nan
number::mul(-inf!..inf, int(0..2)) => -inf!..inf | nan
number::mul(-inf!..inf, int(1..2)) => -inf!..inf
number::mul(-inf!..inf, int(5..20)) => -inf!..inf
number::mul(-inf!..inf, int(-20..-5)) => -inf..!inf
number::mul(-inf!..inf, int(-10..10)) => number
number::mul(-inf!..inf, int(0..inf)) => -inf!..!inf | nan
number::mul(-inf!..inf, int(1..inf)) => -inf!..inf
number::mul(-inf!..inf, int(-inf..0)) => -inf!..!inf | nan
number::mul(-inf!..inf, int(-inf..1)) => -inf!..inf | nan
number::mul(-inf!..inf, int(-inf..inf)) => -inf!..!inf | nan
number::mul(-inf!..inf, nonInt(0..1)) => -inf!..!inf
number::mul(-inf!..inf, nonInt(0..2)) => -inf!..!inf
number::mul(-inf!..inf, nonInt(-1..2)) => -inf!..!inf
number::mul(-inf!..inf, nonInt(0..inf)) => -inf!..!inf
number::mul(-inf!..inf, nonInt(-1..inf)) => -inf!..!inf
number::mul(-inf!..inf, nonInt(-inf..0)) => -inf!..!inf
number::mul(-inf!..inf, nonInt(-inf..1)) => -inf!..!inf
number::mul(-inf!..inf, nonInt(-inf..inf)) => -inf!..!inf
number::mul(-inf!..inf, 1 | int(3..4)) => -inf!..inf
number::mul(-inf..!inf, -inf!..!inf) => -inf!..!inf | nan
number::mul(-inf..!inf, int(0..1)) => -inf..!inf | nan
number::mul(-inf..!inf, int(0..2)) => -inf..!inf | nan
number::mul(-inf..!inf, int(1..2)) => -inf..!inf
number::mul(-inf..!inf, int(5..20)) => -inf..!inf
number::mul(-inf..!inf, int(-20..-5)) => -inf!..inf
number::mul(-inf..!inf, int(-10..10)) => number
number::mul(-inf..!inf, int(0..inf)) => -inf!..!inf | nan
number::mul(-inf..!inf, int(1..inf)) => -inf..!inf
number::mul(-inf..!inf, int(-inf..0)) => -inf!..!inf | nan
number::mul(-inf..!inf, int(-inf..1)) => -inf..!inf | nan
number::mul(-inf..!inf, int(-inf..inf)) => -inf!..!inf | nan
number::mul(-inf..!inf, nonInt(0..1)) => -inf!..!inf
number::mul(-inf..!inf, nonInt(0..2)) => -inf!..!inf
number::mul(-inf..!inf, nonInt(-1..2)) => -inf!..!inf
number::mul(-inf..!inf, nonInt(0..inf)) => -inf!..!inf
number::mul(-inf..!inf, nonInt(-1..inf)) => -inf!..!inf
number::mul(-inf..!inf, nonInt(-inf..0)) => -inf!..!inf
number::mul(-inf..!inf, nonInt(-inf..1)) => -inf!..!inf
number::mul(-inf..!inf, nonInt(-inf..inf)) => -inf!..!inf
number::mul(-inf..!inf, 1 | int(3..4)) => -inf..!inf
number::mul(-inf!..!inf, int(0..1)) => -inf!..!inf
number::mul(-inf!..!inf, int(0..2)) => -inf!..!inf
number::mul(-inf!..!inf, int(1..2)) => -inf!..!inf
number::mul(-inf!..!inf, int(5..20)) => -inf!..!inf
number::mul(-inf!..!inf, int(-20..-5)) => -inf!..!inf
number::mul(-inf!..!inf, int(-10..10)) => -inf!..!inf
number::mul(-inf!..!inf, int(0..inf)) => -inf!..!inf
number::mul(-inf!..!inf, int(1..inf)) => -inf!..!inf
number::mul(-inf!..!inf, int(-inf..0)) => -inf!..!inf
number::mul(-inf!..!inf, int(-inf..1)) => -inf!..!inf
number::mul(-inf!..!inf, int(-inf..inf)) => -inf!..!inf
number::mul(-inf!..!inf, nonInt(0..1)) => -inf!..!inf
number::mul(-inf!..!inf, nonInt(0..2)) => -inf!..!inf
number::mul(-inf!..!inf, nonInt(-1..2)) => -inf!..!inf
number::mul(-inf!..!inf, nonInt(0..inf)) => -inf!..!inf
number::mul(-inf!..!inf, nonInt(-1..inf)) => -inf!..!inf
number::mul(-inf!..!inf, nonInt(-inf..0)) => -inf!..!inf
number::mul(-inf!..!inf, nonInt(-inf..1)) => -inf!..!inf
number::mul(-inf!..!inf, nonInt(-inf..inf)) => -inf!..!inf
number::mul(-inf!..!inf, 1 | int(3..4)) => -inf!..!inf
number::mul(int(0..1), int(0..2)) => int(0..2)
number::mul(int(0..1), int(1..2)) => int(0..2)
number::mul(int(0..1), int(5..20)) => int(0..20)
number::mul(int(0..1), int(-20..-5)) => int(-20..0)
number::mul(int(0..1), int(-10..10)) => int(-10..10)
number::mul(int(0..1), int(0..inf)) => int(0..inf)
number::mul(int(0..1), int(1..inf)) => int(0..inf)
number::mul(int(0..1), int(-inf..0)) => int(-inf..0)
number::mul(int(0..1), int(-inf..1)) => int(-inf..1)
number::mul(int(0..1), int(-inf..inf)) => int(-inf..inf)
number::mul(int(0..1), nonInt(0..1)) => nonInt(0..1)
number::mul(int(0..1), nonInt(0..2)) => 0!..!2
number::mul(int(0..1), nonInt(-1..2)) => -1!..!2
number::mul(int(0..1), nonInt(0..inf)) => 0!..!inf
number::mul(int(0..1), nonInt(-1..inf)) => -1!..!inf
number::mul(int(0..1), nonInt(-inf..0)) => -inf!..!0
number::mul(int(0..1), nonInt(-inf..1)) => -inf!..!1
number::mul(int(0..1), nonInt(-inf..inf)) => -inf!..!inf
number::mul(int(0..1), 1 | int(3..4)) => int(0..4)
number::mul(int(0..2), int(1..2)) => int(0..4)
number::mul(int(0..2), int(5..20)) => int(0..40)
number::mul(int(0..2), int(-20..-5)) => int(-40..0)
number::mul(int(0..2), int(-10..10)) => int(-20..20)
number::mul(int(0..2), int(0..inf)) => int(0..inf)
number::mul(int(0..2), int(1..inf)) => int(0..inf)
number::mul(int(0..2), int(-inf..0)) => int(-inf..0)
number::mul(int(0..2), int(-inf..1)) => int(-inf..2)
number::mul(int(0..2), int(-inf..inf)) => int(-inf..inf)
number::mul(int(0..2), nonInt(0..1)) => 0!..!2
number::mul(int(0..2), nonInt(0..2)) => 0!..!4
number::mul(int(0..2), nonInt(-1..2)) => -2!..!4
number::mul(int(0..2), nonInt(0..inf)) => 0!..!inf
number::mul(int(0..2), nonInt(-1..inf)) => -2!..!inf
number::mul(int(0..2), nonInt(-inf..0)) => -inf!..!0
number::mul(int(0..2), nonInt(-inf..1)) => -inf!..!2
number::mul(int(0..2), nonInt(-inf..inf)) => -inf!..!inf
number::mul(int(0..2), 1 | int(3..4)) => int(0..8)
number::mul(int(1..2), int(5..20)) => int(5..40)
number::mul(int(1..2), int(-20..-5)) => int(-40..-5)
number::mul(int(1..2), int(-10..10)) => int(-20..20)
number::mul(int(1..2), int(0..inf)) => int(0..inf)
number::mul(int(1..2), int(1..inf)) => int(1..inf)
number::mul(int(1..2), int(-inf..0)) => int(-inf..0)
number::mul(int(1..2), int(-inf..1)) => int(-inf..2)
number::mul(int(1..2), int(-inf..inf)) => int(-inf..inf)
number::mul(int(1..2), nonInt(0..1)) => 0!..!2
number::mul(int(1..2), nonInt(0..2)) => 0!..!4
number::mul(int(1..2), nonInt(-1..2)) => -2!..!4
number::mul(int(1..2), nonInt(0..inf)) => 0!..!inf
number::mul(int(1..2), nonInt(-1..inf)) => -2!..!inf
number::mul(int(1..2), nonInt(-inf..0)) => -inf!..!0
number::mul(int(1..2), nonInt(-inf..1)) => -inf!..!2
number::mul(int(1..2), nonInt(-inf..inf)) => -inf!..!inf
number::mul(int(1..2), 1 | int(3..4)) => int(1..8)
number::mul(int(5..20), int(-20..-5)) => int(-400..-25)
number::mul(int(5..20), int(-10..10)) => int(-200..200)
number::mul(int(5..20), int(0..inf)) => int(0..inf)
number::mul(int(5..20), int(1..inf)) => int(5..inf)
number::mul(int(5..20), int(-inf..0)) => int(-inf..0)
number::mul(int(5..20), int(-inf..1)) => int(-inf..20)
number::mul(int(5..20), int(-inf..inf)) => int(-inf..inf)
number::mul(int(5..20), nonInt(0..1)) => 0!..!20
number::mul(int(5..20), nonInt(0..2)) => 0!..!40
number::mul(int(5..20), nonInt(-1..2)) => -20!..!40
number::mul(int(5..20), nonInt(0..inf)) => 0!..!inf
number::mul(int(5..20), nonInt(-1..inf)) => -20!..!inf
number::mul(int(5..20), nonInt(-inf..0)) => -inf!..!0
number::mul(int(5..20), nonInt(-inf..1)) => -inf!..!20
number::mul(int(5..20), nonInt(-inf..inf)) => -inf!..!inf
number::mul(int(5..20), 1 | int(3..4)) => int(5..80)
number::mul(int(-20..-5), int(-10..10)) => int(-200..200)
number::mul(int(-20..-5), int(0..inf)) => int(-inf..0)
number::mul(int(-20..-5), int(1..inf)) => int(-inf..-5)
number::mul(int(-20..-5), int(-inf..0)) => int(0..inf)
number::mul(int(-20..-5), int(-inf..1)) => int(-20..inf)
number::mul(int(-20..-5), int(-inf..inf)) => int(-inf..inf)
number::mul(int(-20..-5), nonInt(0..1)) => -20!..!0
number::mul(int(-20..-5), nonInt(0..2)) => -40!..!0
number::mul(int(-20..-5), nonInt(-1..2)) => -40!..!20
number::mul(int(-20..-5), nonInt(0..inf)) => -inf!..!0
number::mul(int(-20..-5), nonInt(-1..inf)) => -inf!..!20
number::mul(int(-20..-5), nonInt(-inf..0)) => 0!..!inf
number::mul(int(-20..-5), nonInt(-inf..1)) => -20!..!inf
number::mul(int(-20..-5), nonInt(-inf..inf)) => -inf!..!inf
number::mul(int(-20..-5), 1 | int(3..4)) => int(-80..-5)
number::mul(int(-10..10), int(0..inf)) => int(-inf..inf)
number::mul(int(-10..10), int(1..inf)) => int(-inf..inf)
number::mul(int(-10..10), int(-inf..0)) => int(-inf..inf)
number::mul(int(-10..10), int(-inf..1)) => int(-inf..inf)
number::mul(int(-10..10), int(-inf..inf)) => int(-inf..inf)
number::mul(int(-10..10), nonInt(0..1)) => -10!..!10
number::mul(int(-10..10), nonInt(0..2)) => -20!..!20
number::mul(int(-10..10), nonInt(-1..2)) => -20!..!20
number::mul(int(-10..10), nonInt(0..inf)) => -inf!..!inf
number::mul(int(-10..10), nonInt(-1..inf)) => -inf!..!inf
number::mul(int(-10..10), nonInt(-inf..0)) => -inf!..!inf
number::mul(int(-10..10), nonInt(-inf..1)) => -inf!..!inf
number::mul(int(-10..10), nonInt(-inf..inf)) => -inf!..!inf
number::mul(int(-10..10), 1 | int(3..4)) => int(-40..40)
number::mul(int(0..inf), int(1..inf)) => int(0..inf)
number::mul(int(0..inf), int(-inf..0)) => int(-inf..0)
number::mul(int(0..inf), int(-inf..1)) => int(-inf..inf)
number::mul(int(0..inf), int(-inf..inf)) => int(-inf..inf)
number::mul(int(0..inf), nonInt(0..1)) => 0!..!inf
number::mul(int(0..inf), nonInt(0..2)) => 0!..!inf
number::mul(int(0..inf), nonInt(-1..2)) => -inf!..!inf
number::mul(int(0..inf), nonInt(0..inf)) => 0!..!inf
number::mul(int(0..inf), nonInt(-1..inf)) => -inf!..!inf
number::mul(int(0..inf), nonInt(-inf..0)) => -inf!..!0
number::mul(int(0..inf), nonInt(-inf..1)) => -inf!..!inf
number::mul(int(0..inf), nonInt(-inf..inf)) => -inf!..!inf
number::mul(int(0..inf), 1 | int(3..4)) => int(0..inf)
number::mul(int(1..inf), int(-inf..0)) => int(-inf..0)
number::mul(int(1..inf), int(-inf..1)) => int(-inf..inf)
number::mul(int(1..inf), int(-inf..inf)) => int(-inf..inf)
number::mul(int(1..inf), nonInt(0..1)) => 0!..!inf
number::mul(int(1..inf), nonInt(0..2)) => 0!..!inf
number::mul(int(1..inf), nonInt(-1..2)) => -inf!..!inf
number::mul(int(1..inf), nonInt(0..inf)) => 0!..!inf
number::mul(int(1..inf), nonInt(-1..inf)) => -inf!..!inf
number::mul(int(1..inf), nonInt(-inf..0)) => -inf!..!0
number::mul(int(1..inf), nonInt(-inf..1)) => -inf!..!inf
number::mul(int(1..inf), nonInt(-inf..inf)) => -inf!..!inf
number::mul(int(1..inf), 1 | int(3..4)) => int(1..inf)
number::mul(int(-inf..0), int(-inf..1)) => int(-inf..inf)
number::mul(int(-inf..0), int(-inf..inf)) => int(-inf..inf)
number::mul(int(-inf..0), nonInt(0..1)) => -inf!..!0
number::mul(int(-inf..0), nonInt(0..2)) => -inf!..!0
number::mul(int(-inf..0), nonInt(-1..2)) => -inf!..!inf
number::mul(int(-inf..0), nonInt(0..inf)) => -inf!..!0
number::mul(int(-inf..0), nonInt(-1..inf)) => -inf!..!inf
number::mul(int(-inf..0), nonInt(-inf..0)) => 0!..!inf
number::mul(int(-inf..0), nonInt(-inf..1)) => -inf!..!inf
number::mul(int(-inf..0), nonInt(-inf..inf)) => -inf!..!inf
number::mul(int(-inf..0), 1 | int(3..4)) => int(-inf..0)
number::mul(int(-inf..1), int(-inf..inf)) => int(-inf..inf)
number::mul(int(-inf..1), nonInt(0..1)) => -inf!..!1
number::mul(int(-inf..1), nonInt(0..2)) => -inf!..!2
number::mul(int(-inf..1), nonInt(-1..2)) => -inf!..!inf
number::mul(int(-inf..1), nonInt(0..inf)) => -inf!..!inf
number::mul(int(-inf..1), nonInt(-1..inf)) => -inf!..!inf
number::mul(int(-inf..1), nonInt(-inf..0)) => -inf!..!inf
number::mul(int(-inf..1), nonInt(-inf..1)) => -inf!..!inf
number::mul(int(-inf..1), nonInt(-inf..inf)) => -inf!..!inf
number::mul(int(-inf..1), 1 | int(3..4)) => int(-inf..4)
number::mul(int(-inf..inf), nonInt(0..1)) => -inf!..!inf
number::mul(int(-inf..inf), nonInt(0..2)) => -inf!..!inf
number::mul(int(-inf..inf), nonInt(-1..2)) => -inf!..!inf
number::mul(int(-inf..inf), nonInt(0..inf)) => -inf!..!inf
number::mul(int(-inf..inf), nonInt(-1..inf)) => -inf!..!inf
number::mul(int(-inf..inf), nonInt(-inf..0)) => -inf!..!inf
number::mul(int(-inf..inf), nonInt(-inf..1)) => -inf!..!inf
number::mul(int(-inf..inf), nonInt(-inf..inf)) => -inf!..!inf
number::mul(int(-inf..inf), 1 | int(3..4)) => int(-inf..inf)
number::mul(nonInt(0..1), nonInt(0..2)) => 0!..!2
number::mul(nonInt(0..1), nonInt(-1..2)) => -1!..!2
number::mul(nonInt(0..1), nonInt(0..inf)) => 0!..!inf
number::mul(nonInt(0..1), nonInt(-1..inf)) => -1!..!inf
number::mul(nonInt(0..1), nonInt(-inf..0)) => -inf!..!0
number::mul(nonInt(0..1), nonInt(-inf..1)) => -inf!..!1
number::mul(nonInt(0..1), nonInt(-inf..inf)) => -inf!..!inf
number::mul(nonInt(0..1), 1 | int(3..4)) => 0!..!4
number::mul(nonInt(0..2), nonInt(-1..2)) => -2!..!4
number::mul(nonInt(0..2), nonInt(0..inf)) => 0!..!inf
number::mul(nonInt(0..2), nonInt(-1..inf)) => -2!..!inf
number::mul(nonInt(0..2), nonInt(-inf..0)) => -inf!..!0
number::mul(nonInt(0..2), nonInt(-inf..1)) => -inf!..!2
number::mul(nonInt(0..2), nonInt(-inf..inf)) => -inf!..!inf
number::mul(nonInt(0..2), 1 | int(3..4)) => 0!..!8
number::mul(nonInt(-1..2), nonInt(0..inf)) => -inf!..!inf
number::mul(nonInt(-1..2), nonInt(-1..inf)) => -inf!..!inf
number::mul(nonInt(-1..2), nonInt(-inf..0)) => -inf!..!inf
number::mul(nonInt(-1..2), nonInt(-inf..1)) => -inf!..!inf
number::mul(nonInt(-1..2), nonInt(-inf..inf)) => -inf!..!inf
number::mul(nonInt(-1..2), 1 | int(3..4)) => -4!..!8
number::mul(nonInt(0..inf), nonInt(-1..inf)) => -inf!..!inf
number::mul(nonInt(0..inf), nonInt(-inf..0)) => -inf!..!0
number::mul(nonInt(0..inf), nonInt(-inf..1)) => -inf!..!inf
number::mul(nonInt(0..inf), nonInt(-inf..inf)) => -inf!..!inf
number::mul(nonInt(0..inf), 1 | int(3..4)) => 0!..!inf
number::mul(nonInt(-1..inf), nonInt(-inf..0)) => -inf!..!inf
number::mul(nonInt(-1..inf), nonInt(-inf..1)) => -inf!..!inf
number::mul(nonInt(-1..inf), nonInt(-inf..inf)) => -inf!..!inf
number::mul(nonInt(-1..inf), 1 | int(3..4)) => -4!..!inf
number::mul(nonInt(-inf..0), nonInt(-inf..1)) => -inf!..!inf
number::mul(nonInt(-inf..0), nonInt(-inf..inf)) => -inf!..!inf
number::mul(nonInt(-inf..0), 1 | int(3..4)) => -inf!..!0
number::mul(nonInt(-inf..1), nonInt(-inf..inf)) => -inf!..!inf
number::mul(nonInt(-inf..1), 1 | int(3..4)) => -inf!..!4
number::mul(nonInt(-inf..inf), 1 | int(3..4)) => -inf!..!inf"
`;

exports[`Builtin functions number::neg evaluate 1`] = `
"number::neg(number) => number
number::neg(-3.14) => 3.14
number::neg(-2) => 2
number::neg(-1) => 1
number::neg(-0.5) => 0.5
number::neg(0) => 0
number::neg(0.5) => -0.5
number::neg(1) => -1
number::neg(2) => -2
number::neg(2.78) => -2.78
number::neg(3) => -3
number::neg(3.14) => -3.14
number::neg(10) => -10
number::neg(100) => -100
number::neg(-inf) => inf
number::neg(inf) => -inf
number::neg(nan) => nan
number::neg(0..1) => -1..0
number::neg(0!..1) => -1..!0
number::neg(0..!1) => -1!..0
number::neg(0..2) => -2..0
number::neg(0!..!2) => -2!..!0
number::neg(0.5..1.5) => -1.5..-0.5
number::neg(0.5..2.5) => -2.5..-0.5
number::neg(0.5!..2.5) => -2.5..!-0.5
number::neg(0.5..!2.5) => -2.5!..-0.5
number::neg(-2.56..3.35) => -3.35..2.56
number::neg(0.5..0.75) => -0.75..-0.5
number::neg(1..2) => -2..-1
number::neg(0..inf) => -inf..0
number::neg(0!..inf) => -inf..!0
number::neg(0..!inf) => -inf!..0
number::neg(0!..!inf) => -inf!..!0
number::neg(1..inf) => -inf..-1
number::neg(1!..inf) => -inf..!-1
number::neg(1..!inf) => -inf!..-1
number::neg(2..inf) => -inf..-2
number::neg(2!..inf) => -inf..!-2
number::neg(2.5..inf) => -inf..-2.5
number::neg(-inf..0) => 0..inf
number::neg(-inf..inf) => -inf..inf
number::neg(-inf!..inf) => -inf..!inf
number::neg(-inf..!inf) => -inf!..inf
number::neg(-inf!..!inf) => -inf!..!inf
number::neg(int(0..1)) => int(-1..0)
number::neg(int(0..2)) => int(-2..0)
number::neg(int(1..2)) => int(-2..-1)
number::neg(int(5..20)) => int(-20..-5)
number::neg(int(-20..-5)) => int(5..20)
number::neg(int(-10..10)) => int(-10..10)
number::neg(int(0..inf)) => int(-inf..0)
number::neg(int(1..inf)) => int(-inf..-1)
number::neg(int(-inf..0)) => int(0..inf)
number::neg(int(-inf..1)) => int(-1..inf)
number::neg(int(-inf..inf)) => int(-inf..inf)
number::neg(nonInt(0..1)) => nonInt(-1..0)
number::neg(nonInt(0..2)) => nonInt(-2..0)
number::neg(nonInt(-1..2)) => nonInt(-2..1)
number::neg(nonInt(0..inf)) => nonInt(-inf..0)
number::neg(nonInt(-1..inf)) => nonInt(-inf..1)
number::neg(nonInt(-inf..0)) => nonInt(0..inf)
number::neg(nonInt(-inf..1)) => nonInt(-1..inf)
number::neg(nonInt(-inf..inf)) => nonInt(-inf..inf)
number::neg(1 | int(3..4)) => int(-4..-3) | -1
number::neg(never) => never
number::neg(any) => Error: Incompatible argument type: The supplied argument type any is not compatible with the definition type."
`;

exports[`Builtin functions number::parseInt evaluate 1`] = `
"number::parseInt(string, 2) => int(-inf..inf) | nan
number::parseInt(string, 4) => int(-inf..inf) | nan
number::parseInt(string, 8) => int(-inf..inf) | nan
number::parseInt(string, 10) => int(-inf..inf) | nan
number::parseInt(string, 16) => int(-inf..inf) | nan
number::parseInt(string, 36) => int(-inf..inf) | nan
number::parseInt("", 2) => nan
number::parseInt("", 4) => nan
number::parseInt("", 8) => nan
number::parseInt("", 10) => nan
number::parseInt("", 16) => nan
number::parseInt("", 36) => nan
number::parseInt("foo", 2) => nan
number::parseInt("foo", 4) => nan
number::parseInt("foo", 8) => nan
number::parseInt("foo", 10) => nan
number::parseInt("foo", 16) => nan
number::parseInt("foo", 36) => 20328
number::parseInt("bar", 2) => nan
number::parseInt("bar", 4) => nan
number::parseInt("bar", 8) => nan
number::parseInt("bar", 10) => nan
number::parseInt("bar", 16) => nan
number::parseInt("bar", 36) => 14643
number::parseInt("ðŸ’©", 2) => nan
number::parseInt("ðŸ’©", 4) => nan
number::parseInt("ðŸ’©", 8) => nan
number::parseInt("ðŸ’©", 10) => nan
number::parseInt("ðŸ’©", 16) => nan
number::parseInt("ðŸ’©", 36) => nan
number::parseInt("bar" | "foo", 2) => nan
number::parseInt("bar" | "foo", 4) => nan
number::parseInt("bar" | "foo", 8) => nan
number::parseInt("bar" | "foo", 10) => nan
number::parseInt("bar" | "foo", 16) => nan
number::parseInt("bar" | "foo", 36) => 14643 | 20328
number::parseInt("baz" | "foo", 2) => nan
number::parseInt("baz" | "foo", 4) => nan
number::parseInt("baz" | "foo", 8) => nan
number::parseInt("baz" | "foo", 10) => nan
number::parseInt("baz" | "foo", 16) => nan
number::parseInt("baz" | "foo", 36) => 14651 | 20328
number::parseInt(invStrSet("foo"), 2) => int(-inf..inf) | nan
number::parseInt(invStrSet("foo"), 4) => int(-inf..inf) | nan
number::parseInt(invStrSet("foo"), 8) => int(-inf..inf) | nan
number::parseInt(invStrSet("foo"), 10) => int(-inf..inf) | nan
number::parseInt(invStrSet("foo"), 16) => int(-inf..inf) | nan
number::parseInt(invStrSet("foo"), 36) => int(-inf..inf) | nan
number::parseInt(invStrSet("bar" | "foo"), 2) => int(-inf..inf) | nan
number::parseInt(invStrSet("bar" | "foo"), 4) => int(-inf..inf) | nan
number::parseInt(invStrSet("bar" | "foo"), 8) => int(-inf..inf) | nan
number::parseInt(invStrSet("bar" | "foo"), 10) => int(-inf..inf) | nan
number::parseInt(invStrSet("bar" | "foo"), 16) => int(-inf..inf) | nan
number::parseInt(invStrSet("bar" | "foo"), 36) => int(-inf..inf) | nan
number::parseInt(invStrSet("bar"), 2) => int(-inf..inf) | nan
number::parseInt(invStrSet("bar"), 4) => int(-inf..inf) | nan
number::parseInt(invStrSet("bar"), 8) => int(-inf..inf) | nan
number::parseInt(invStrSet("bar"), 10) => int(-inf..inf) | nan
number::parseInt(invStrSet("bar"), 16) => int(-inf..inf) | nan
number::parseInt(invStrSet("bar"), 36) => int(-inf..inf) | nan
number::parseInt(invStrSet(""), 2) => int(-inf..inf) | nan
number::parseInt(invStrSet(""), 4) => int(-inf..inf) | nan
number::parseInt(invStrSet(""), 8) => int(-inf..inf) | nan
number::parseInt(invStrSet(""), 10) => int(-inf..inf) | nan
number::parseInt(invStrSet(""), 16) => int(-inf..inf) | nan
number::parseInt(invStrSet(""), 36) => int(-inf..inf) | nan
number::parseInt("1", 2) => 1
number::parseInt("1", 4) => 1
number::parseInt("1", 8) => 1
number::parseInt("1", 10) => 1
number::parseInt("1", 16) => 1
number::parseInt("1", 36) => 1
number::parseInt("123", 2) => nan
number::parseInt("123", 4) => 27
number::parseInt("123", 8) => 83
number::parseInt("123", 10) => 123
number::parseInt("123", 16) => 291
number::parseInt("123", 36) => 1371
number::parseInt("-123", 2) => nan
number::parseInt("-123", 4) => -27
number::parseInt("-123", 8) => -83
number::parseInt("-123", 10) => -123
number::parseInt("-123", 16) => -291
number::parseInt("-123", 36) => -1371
number::parseInt("+123", 2) => nan
number::parseInt("+123", 4) => 27
number::parseInt("+123", 8) => 83
number::parseInt("+123", 10) => 123
number::parseInt("+123", 16) => 291
number::parseInt("+123", 36) => 1371
number::parseInt("0123", 2) => nan
number::parseInt("0123", 4) => 27
number::parseInt("0123", 8) => 83
number::parseInt("0123", 10) => 123
number::parseInt("0123", 16) => 291
number::parseInt("0123", 36) => 1371
number::parseInt("0xf", 2) => nan
number::parseInt("0xf", 4) => nan
number::parseInt("0xf", 8) => nan
number::parseInt("0xf", 10) => nan
number::parseInt("0xf", 16) => 15
number::parseInt("0xf", 36) => 1203
number::parseInt("0b1001", 2) => 9
number::parseInt("0b1001", 4) => nan
number::parseInt("0b1001", 8) => nan
number::parseInt("0b1001", 10) => nan
number::parseInt("0b1001", 16) => 724993
number::parseInt("0b1001", 36) => 18522433
number::parseInt("0o777", 2) => nan
number::parseInt("0o777", 4) => nan
number::parseInt("0o777", 8) => 511
number::parseInt("0o777", 10) => nan
number::parseInt("0o777", 16) => nan
number::parseInt("0o777", 36) => 1129075
number::parseInt("0o1", 2) => nan
number::parseInt("0o1", 4) => nan
number::parseInt("0o1", 8) => 1
number::parseInt("0o1", 10) => nan
number::parseInt("0o1", 16) => nan
number::parseInt("0o1", 36) => 865
number::parseInt("123.2", 2) => nan
number::parseInt("123.2", 4) => nan
number::parseInt("123.2", 8) => nan
number::parseInt("123.2", 10) => nan
number::parseInt("123.2", 16) => nan
number::parseInt("123.2", 36) => nan
number::parseInt("123f", 2) => nan
number::parseInt("123f", 4) => nan
number::parseInt("123f", 8) => nan
number::parseInt("123f", 10) => nan
number::parseInt("123f", 16) => 4671
number::parseInt("123f", 36) => 49371
number::parseInt("  3  ", 2) => nan
number::parseInt("  3  ", 4) => 3
number::parseInt("  3  ", 8) => 3
number::parseInt("  3  ", 10) => 3
number::parseInt("  3  ", 16) => 3
number::parseInt("  3  ", 36) => 3"
`;

exports[`Builtin functions number::pow evaluate 1`] = `
"number::pow(number, number) => number
number::pow(number, -3.14) => -inf | 0..inf | nan
number::pow(number, -2) => 0..!inf | nan
number::pow(number, -1) => -inf!..!inf | nan
number::pow(number, -0.5) => -inf | 0..inf | nan
number::pow(number, 0) => 1
number::pow(number, 0.5) => 0..inf | nan
number::pow(number, 1) => number
number::pow(number, 2) => 0..inf | nan
number::pow(number, 2.78) => 0..inf | nan
number::pow(number, 3) => number
number::pow(number, 3.14) => 0..inf | nan
number::pow(number, 10) => 0..inf | nan
number::pow(number, 100) => 0..inf | nan
number::pow(number, -inf) => int(0..1) | inf | nan
number::pow(number, inf) => int(0..1) | inf | nan
number::pow(number, nan) => 1 | nan
number::pow(number, 0..1) => number
number::pow(number, 0!..1) => number
number::pow(number, 0..!1) => 0..inf | nan
number::pow(number, 0..2) => number
number::pow(number, 0!..!2) => number
number::pow(number, 0.5..1.5) => number
number::pow(number, 0.5..2.5) => number
number::pow(number, 0.5!..2.5) => number
number::pow(number, 0.5..!2.5) => number
number::pow(number, -2.56..3.35) => number
number::pow(number, 0.5..0.75) => 0..inf | nan
number::pow(number, 1..2) => number
number::pow(number, 0..inf) => number
number::pow(number, 0!..inf) => number
number::pow(number, 0..!inf) => number
number::pow(number, 0!..!inf) => number
number::pow(number, 1..inf) => number
number::pow(number, 1!..inf) => number
number::pow(number, 1..!inf) => number
number::pow(number, 2..inf) => number
number::pow(number, 2!..inf) => number
number::pow(number, 2.5..inf) => number
number::pow(number, -inf..0) => number
number::pow(number, -inf..inf) => number
number::pow(number, -inf!..inf) => number
number::pow(number, -inf..!inf) => number
number::pow(number, -inf!..!inf) => number
number::pow(number, int(0..1)) => number
number::pow(number, int(0..2)) => number
number::pow(number, int(1..2)) => number
number::pow(number, int(5..20)) => number
number::pow(number, int(-20..-5)) => -inf!..!inf | nan
number::pow(number, int(-10..10)) => number
number::pow(number, int(0..inf)) => number
number::pow(number, int(1..inf)) => number
number::pow(number, int(-inf..0)) => -inf!..!inf | nan
number::pow(number, int(-inf..1)) => number
number::pow(number, int(-inf..inf)) => number
number::pow(number, nonInt(0..1)) => 0..inf | nan
number::pow(number, nonInt(0..2)) => 0..inf | nan
number::pow(number, nonInt(-1..2)) => -inf | 0..inf | nan
number::pow(number, nonInt(0..inf)) => 0..inf | nan
number::pow(number, nonInt(-1..inf)) => -inf | 0..inf | nan
number::pow(number, nonInt(-inf..0)) => -inf | 0..inf | nan
number::pow(number, nonInt(-inf..1)) => -inf | 0..inf | nan
number::pow(number, nonInt(-inf..inf)) => -inf | 0..inf | nan
number::pow(number, 1 | int(3..4)) => number
number::pow(-3.14, number) => -inf..-30.959144 | -3.14 | -0.3184713375796178 | -0.03230063466871048..0.1014239928597509 | 1 | 9.8596..inf | nan
number::pow(-3.14, -3.14) => never
number::pow(-3.14, -2) => 0.1014239928597509
number::pow(-3.14, -1) => -0.3184713375796178
number::pow(-3.14, -0.5) => never
number::pow(-3.14, 0) => 1
number::pow(-3.14, 0.5) => never
number::pow(-3.14, 1) => -3.14
number::pow(-3.14, 2) => 9.8596
number::pow(-3.14, 2.78) => never
number::pow(-3.14, 3) => -30.959144
number::pow(-3.14, 3.14) => never
number::pow(-3.14, 10) => 93174.3733866435
number::pow(-3.14, 100) => 4.931338416605635e+49
number::pow(-3.14, -inf) => 0
number::pow(-3.14, inf) => inf
number::pow(-3.14, nan) => nan
number::pow(-3.14, 0..1) => -3.14 | 1
number::pow(-3.14, 0!..1) => -3.14
number::pow(-3.14, 0..!1) => 1
number::pow(-3.14, 0..2) => -3.14 | 1 | 9.8596
number::pow(-3.14, 0!..!2) => -3.14
number::pow(-3.14, 0.5..1.5) => -3.14
number::pow(-3.14, 0.5..2.5) => -3.14 | 9.8596
number::pow(-3.14, 0.5!..2.5) => -3.14 | 9.8596
number::pow(-3.14, 0.5..!2.5) => -3.14 | 9.8596
number::pow(-3.14, -2.56..3.35) => -30.959144 | -3.14 | -0.3184713375796178 | 0.1014239928597509 | 1 | 9.8596
number::pow(-3.14, 0.5..0.75) => never
number::pow(-3.14, 1..2) => -3.14 | 9.8596
number::pow(-3.14, 0..inf) => -inf..-30.959144 | -3.14 | 1 | 9.8596..inf
number::pow(-3.14, 0!..inf) => -inf..-30.959144 | -3.14 | 9.8596..inf
number::pow(-3.14, 0..!inf) => -inf..-30.959144 | -3.14 | 1 | 9.8596..inf
number::pow(-3.14, 0!..!inf) => -inf..-30.959144 | -3.14 | 9.8596..inf
number::pow(-3.14, 1..inf) => -inf..-30.959144 | -3.14 | 9.8596..inf
number::pow(-3.14, 1!..inf) => -inf..-30.959144 | 9.8596..inf
number::pow(-3.14, 1..!inf) => -inf..-30.959144 | -3.14 | 9.8596..inf
number::pow(-3.14, 2..inf) => -inf..-30.959144 | 9.8596..inf
number::pow(-3.14, 2!..inf) => -inf..-30.959144 | 97.21171216000002..inf
number::pow(-3.14, 2.5..inf) => -inf..-30.959144 | 97.21171216000002..inf
number::pow(-3.14, -inf..0) => -0.3184713375796178 | -0.03230063466871048..0.1014239928597509 | 1
number::pow(-3.14, -inf..inf) => -inf..-30.959144 | -3.14 | -0.3184713375796178 | -0.03230063466871048..0.1014239928597509 | 1 | 9.8596..inf
number::pow(-3.14, -inf!..inf) => -inf..-30.959144 | -3.14 | -0.3184713375796178 | -0.03230063466871048..0.1014239928597509 | 1 | 9.8596..inf
number::pow(-3.14, -inf..!inf) => -inf..-30.959144 | -3.14 | -0.3184713375796178 | -0.03230063466871048..0.1014239928597509 | 1 | 9.8596..inf
number::pow(-3.14, -inf!..!inf) => -inf..-30.959144 | -3.14 | -0.3184713375796178 | -0.03230063466871048..0.1014239928597509 | 1 | 9.8596..inf
number::pow(-3.14, int(0..1)) => -3.14 | 1
number::pow(-3.14, int(0..2)) => -3.14 | 1 | 9.8596
number::pow(-3.14, int(1..2)) => -3.14 | 9.8596
number::pow(-3.14, int(5..20)) => -2764797406.367408..-305.2447761824001 | 958.4685972127362..8681463855.993662
number::pow(-3.14, int(-20..-5)) => -0.003276059340004713..-3.616901541129094e-10 | 1.1518794716971636e-10..0.0010433310000015012
number::pow(-3.14, int(-10..10)) => -29673.367320587102 | -3009.591395247992 | -305.2447761824001 | -30.959144 | -3.14 | -0.3184713375796178 | -0.03230063466871048 | -0.003276059340004713 | -0.0003322710191087583 | -0.00003370025346958886 | 0.000010732564799232118..0.1014239928597509 | 1 | 9.8596..93174.3733866435
number::pow(-3.14, int(0..inf)) => -inf..-30.959144 | -3.14 | 1 | 9.8596..inf
number::pow(-3.14, int(1..inf)) => -inf..-30.959144 | -3.14 | 9.8596..inf
number::pow(-3.14, int(-inf..0)) => -0.3184713375796178 | -0.03230063466871048..0.1014239928597509 | 1
number::pow(-3.14, int(-inf..1)) => -3.14 | -0.3184713375796178 | -0.03230063466871048..0.1014239928597509 | 1
number::pow(-3.14, int(-inf..inf)) => -inf..-30.959144 | -3.14 | -0.3184713375796178 | -0.03230063466871048..0.1014239928597509 | 1 | 9.8596..inf
number::pow(-3.14, nonInt(0..1)) => never
number::pow(-3.14, nonInt(0..2)) => never
number::pow(-3.14, nonInt(-1..2)) => never
number::pow(-3.14, nonInt(0..inf)) => never
number::pow(-3.14, nonInt(-1..inf)) => never
number::pow(-3.14, nonInt(-inf..0)) => never
number::pow(-3.14, nonInt(-inf..1)) => never
number::pow(-3.14, nonInt(-inf..inf)) => never
number::pow(-3.14, 1 | int(3..4)) => -30.959144 | -3.14 | 97.21171216000002
number::pow(-2, number) => int(-inf..-8) | -2 | -0.5 | -0.125..0.25 | 1 | int(4..inf) | inf | nan
number::pow(-2, -3.14) => never
number::pow(-2, -2) => 0.25
number::pow(-2, -1) => -0.5
number::pow(-2, -0.5) => never
number::pow(-2, 0) => 1
number::pow(-2, 0.5) => never
number::pow(-2, 1) => -2
number::pow(-2, 2) => 4
number::pow(-2, 2.78) => never
number::pow(-2, 3) => -8
number::pow(-2, 3.14) => never
number::pow(-2, 10) => 1024
number::pow(-2, 100) => 1.2676506002282294e+30
number::pow(-2, -inf) => 0
number::pow(-2, inf) => inf
number::pow(-2, nan) => nan
number::pow(-2, 0..1) => -2 | 1
number::pow(-2, 0!..1) => -2
number::pow(-2, 0..!1) => 1
number::pow(-2, 0..2) => -2 | 1 | 4
number::pow(-2, 0!..!2) => -2
number::pow(-2, 0.5..1.5) => -2
number::pow(-2, 0.5..2.5) => -2 | 4
number::pow(-2, 0.5!..2.5) => -2 | 4
number::pow(-2, 0.5..!2.5) => -2 | 4
number::pow(-2, -2.56..3.35) => -8 | -2 | -0.5 | 0.25 | 1 | 4
number::pow(-2, 0.5..0.75) => never
number::pow(-2, 1..2) => -2 | 4
number::pow(-2, 0..inf) => int(-inf..-8) | -2 | 1 | int(4..inf) | inf
number::pow(-2, 0!..inf) => int(-inf..-8) | -2 | int(4..inf) | inf
number::pow(-2, 0..!inf) => int(-inf..-8) | -2 | 1 | int(4..inf)
number::pow(-2, 0!..!inf) => int(-inf..-8) | -2 | int(4..inf)
number::pow(-2, 1..inf) => int(-inf..-8) | -2 | int(4..inf) | inf
number::pow(-2, 1!..inf) => int(-inf..-8) | int(4..inf) | inf
number::pow(-2, 1..!inf) => int(-inf..-8) | -2 | int(4..inf)
number::pow(-2, 2..inf) => int(-inf..-8) | int(4..inf) | inf
number::pow(-2, 2!..inf) => int(-inf..-8) | int(16..inf) | inf
number::pow(-2, 2.5..inf) => int(-inf..-8) | int(16..inf) | inf
number::pow(-2, -inf..0) => -0.5 | -0.125..0.25 | 1
number::pow(-2, -inf..inf) => int(-inf..-8) | -2 | -0.5 | -0.125..0.25 | 1 | int(4..inf) | inf
number::pow(-2, -inf!..inf) => int(-inf..-8) | -2 | -0.5 | -0.125..!0 | 0!..0.25 | 1 | int(4..inf) | inf
number::pow(-2, -inf..!inf) => int(-inf..-8) | -2 | -0.5 | -0.125..0.25 | 1 | int(4..inf)
number::pow(-2, -inf!..!inf) => int(-inf..-8) | -2 | -0.5 | -0.125..!0 | 0!..0.25 | 1 | int(4..inf)
number::pow(-2, int(0..1)) => -2 | 1
number::pow(-2, int(0..2)) => -2 | 1 | 4
number::pow(-2, int(1..2)) => -2 | 4
number::pow(-2, int(5..20)) => int(-524288..-32) | int(64..1048576)
number::pow(-2, int(-20..-5)) => -0.03125..-0.0000019073486328125 | 9.5367431640625e-7..0.015625
number::pow(-2, int(-10..10)) => -512 | -128 | -32 | -8 | -2 | -0.5 | -0.125 | -0.03125 | -0.0078125 | -0.001953125 | 0.0009765625..0.25 | 1 | int(4..1024)
number::pow(-2, int(0..inf)) => int(-inf..-8) | -2 | 1 | int(4..inf)
number::pow(-2, int(1..inf)) => int(-inf..-8) | -2 | int(4..inf)
number::pow(-2, int(-inf..0)) => -0.5 | -0.125..!0 | 0!..0.25 | 1
number::pow(-2, int(-inf..1)) => -2 | -0.5 | -0.125..!0 | 0!..0.25 | 1
number::pow(-2, int(-inf..inf)) => int(-inf..-8) | -2 | -0.5 | -0.125..!0 | 0!..0.25 | 1 | int(4..inf)
number::pow(-2, nonInt(0..1)) => never
number::pow(-2, nonInt(0..2)) => never
number::pow(-2, nonInt(-1..2)) => never
number::pow(-2, nonInt(0..inf)) => never
number::pow(-2, nonInt(-1..inf)) => never
number::pow(-2, nonInt(-inf..0)) => never
number::pow(-2, nonInt(-inf..1)) => never
number::pow(-2, nonInt(-inf..inf)) => never
number::pow(-2, 1 | int(3..4)) => -8 | -2 | 16
number::pow(-1, number) => -1 | 1 | nan
number::pow(-1, -3.14) => never
number::pow(-1, -2) => 1
number::pow(-1, -1) => -1
number::pow(-1, -0.5) => never
number::pow(-1, 0) => 1
number::pow(-1, 0.5) => never
number::pow(-1, 1) => -1
number::pow(-1, 2) => 1
number::pow(-1, 2.78) => never
number::pow(-1, 3) => -1
number::pow(-1, 3.14) => never
number::pow(-1, 10) => 1
number::pow(-1, 100) => 1
number::pow(-1, -inf) => 1
number::pow(-1, inf) => 1
number::pow(-1, nan) => nan
number::pow(-1, 0..1) => -1 | 1
number::pow(-1, 0!..1) => -1
number::pow(-1, 0..!1) => 1
number::pow(-1, 0..2) => -1 | 1
number::pow(-1, 0!..!2) => -1
number::pow(-1, 0.5..1.5) => -1
number::pow(-1, 0.5..2.5) => -1 | 1
number::pow(-1, 0.5!..2.5) => -1 | 1
number::pow(-1, 0.5..!2.5) => -1 | 1
number::pow(-1, -2.56..3.35) => -1 | 1
number::pow(-1, 0.5..0.75) => never
number::pow(-1, 1..2) => -1 | 1
number::pow(-1, 0..inf) => -1 | 1
number::pow(-1, 0!..inf) => -1 | 1
number::pow(-1, 0..!inf) => -1 | 1
number::pow(-1, 0!..!inf) => -1 | 1
number::pow(-1, 1..inf) => -1 | 1
number::pow(-1, 1!..inf) => -1 | 1
number::pow(-1, 1..!inf) => -1 | 1
number::pow(-1, 2..inf) => -1 | 1
number::pow(-1, 2!..inf) => -1 | 1
number::pow(-1, 2.5..inf) => -1 | 1
number::pow(-1, -inf..0) => -1 | 1
number::pow(-1, -inf..inf) => -1 | 1
number::pow(-1, -inf!..inf) => -1 | 1
number::pow(-1, -inf..!inf) => -1 | 1
number::pow(-1, -inf!..!inf) => -1 | 1
number::pow(-1, int(0..1)) => -1 | 1
number::pow(-1, int(0..2)) => -1 | 1
number::pow(-1, int(1..2)) => -1 | 1
number::pow(-1, int(5..20)) => -1 | 1
number::pow(-1, int(-20..-5)) => -1 | 1
number::pow(-1, int(-10..10)) => -1 | 1
number::pow(-1, int(0..inf)) => -1 | 1
number::pow(-1, int(1..inf)) => -1 | 1
number::pow(-1, int(-inf..0)) => -1 | 1
number::pow(-1, int(-inf..1)) => -1 | 1
number::pow(-1, int(-inf..inf)) => -1 | 1
number::pow(-1, nonInt(0..1)) => never
number::pow(-1, nonInt(0..2)) => never
number::pow(-1, nonInt(-1..2)) => never
number::pow(-1, nonInt(0..inf)) => never
number::pow(-1, nonInt(-1..inf)) => never
number::pow(-1, nonInt(-inf..0)) => never
number::pow(-1, nonInt(-inf..1)) => never
number::pow(-1, nonInt(-inf..inf)) => never
number::pow(-1, 1 | int(3..4)) => -1 | 1
number::pow(-0.5, number) => -inf..-8 | -2 | -0.5 | -0.125..0.25 | 1 | 4..inf | nan
number::pow(-0.5, -3.14) => never
number::pow(-0.5, -2) => 4
number::pow(-0.5, -1) => -2
number::pow(-0.5, -0.5) => never
number::pow(-0.5, 0) => 1
number::pow(-0.5, 0.5) => never
number::pow(-0.5, 1) => -0.5
number::pow(-0.5, 2) => 0.25
number::pow(-0.5, 2.78) => never
number::pow(-0.5, 3) => -0.125
number::pow(-0.5, 3.14) => never
number::pow(-0.5, 10) => 0.0009765625
number::pow(-0.5, 100) => 7.888609052210118e-31
number::pow(-0.5, -inf) => inf
number::pow(-0.5, inf) => 0
number::pow(-0.5, nan) => nan
number::pow(-0.5, 0..1) => -0.5 | 1
number::pow(-0.5, 0!..1) => -0.5
number::pow(-0.5, 0..!1) => 1
number::pow(-0.5, 0..2) => -0.5 | 0.25 | 1
number::pow(-0.5, 0!..!2) => -0.5
number::pow(-0.5, 0.5..1.5) => -0.5
number::pow(-0.5, 0.5..2.5) => -0.5 | 0.25
number::pow(-0.5, 0.5!..2.5) => -0.5 | 0.25
number::pow(-0.5, 0.5..!2.5) => -0.5 | 0.25
number::pow(-0.5, -2.56..3.35) => -2 | -0.5 | -0.125 | 0.25 | 1 | 4
number::pow(-0.5, 0.5..0.75) => never
number::pow(-0.5, 1..2) => -0.5 | 0.25
number::pow(-0.5, 0..inf) => -0.5 | -0.125..0.25 | 1
number::pow(-0.5, 0!..inf) => -0.5 | -0.125..0.25
number::pow(-0.5, 0..!inf) => -0.5 | -0.125..0.25 | 1
number::pow(-0.5, 0!..!inf) => -0.5 | -0.125..0.25
number::pow(-0.5, 1..inf) => -0.5 | -0.125..0.25
number::pow(-0.5, 1!..inf) => -0.125..0.25
number::pow(-0.5, 1..!inf) => -0.5 | -0.125..0.25
number::pow(-0.5, 2..inf) => -0.125..0.25
number::pow(-0.5, 2!..inf) => -0.125..0.0625
number::pow(-0.5, 2.5..inf) => -0.125..0.0625
number::pow(-0.5, -inf..0) => -inf..-8 | -2 | 1 | 4..inf
number::pow(-0.5, -inf..inf) => -inf..-8 | -2 | -0.5 | -0.125..0.25 | 1 | 4..inf
number::pow(-0.5, -inf!..inf) => -inf..-8 | -2 | -0.5 | -0.125..0.25 | 1 | 4..inf
number::pow(-0.5, -inf..!inf) => -inf..-8 | -2 | -0.5 | -0.125..0.25 | 1 | 4..inf
number::pow(-0.5, -inf!..!inf) => -inf..-8 | -2 | -0.5 | -0.125..0.25 | 1 | 4..inf
number::pow(-0.5, int(0..1)) => -0.5 | 1
number::pow(-0.5, int(0..2)) => -0.5 | 0.25 | 1
number::pow(-0.5, int(1..2)) => -0.5 | 0.25
number::pow(-0.5, int(5..20)) => -0.03125..-0.0000019073486328125 | 9.5367431640625e-7..0.015625
number::pow(-0.5, int(-20..-5)) => -524288..-32 | 64..1048576
number::pow(-0.5, int(-10..10)) => -512 | -128 | -32 | -8 | -2 | -0.5 | -0.125 | -0.03125 | -0.0078125 | -0.001953125 | 0.0009765625..0.25 | 1 | 4..1024
number::pow(-0.5, int(0..inf)) => -0.5 | -0.125..0.25 | 1
number::pow(-0.5, int(1..inf)) => -0.5 | -0.125..0.25
number::pow(-0.5, int(-inf..0)) => -inf..-8 | -2 | 1 | 4..inf
number::pow(-0.5, int(-inf..1)) => -inf..-8 | -2 | -0.5 | 1 | 4..inf
number::pow(-0.5, int(-inf..inf)) => -inf..-8 | -2 | -0.5 | -0.125..0.25 | 1 | 4..inf
number::pow(-0.5, nonInt(0..1)) => never
number::pow(-0.5, nonInt(0..2)) => never
number::pow(-0.5, nonInt(-1..2)) => never
number::pow(-0.5, nonInt(0..inf)) => never
number::pow(-0.5, nonInt(-1..inf)) => never
number::pow(-0.5, nonInt(-inf..0)) => never
number::pow(-0.5, nonInt(-inf..1)) => never
number::pow(-0.5, nonInt(-inf..inf)) => never
number::pow(-0.5, 1 | int(3..4)) => -0.5 | -0.125 | 0.0625
number::pow(0, number) => int(0..1) | inf | nan
number::pow(0, -3.14) => never
number::pow(0, -2) => never
number::pow(0, -1) => never
number::pow(0, -0.5) => never
number::pow(0, 0) => 1
number::pow(0, 0.5) => 0
number::pow(0, 1) => 0
number::pow(0, 2) => 0
number::pow(0, 2.78) => 0
number::pow(0, 3) => 0
number::pow(0, 3.14) => 0
number::pow(0, 10) => 0
number::pow(0, 100) => 0
number::pow(0, -inf) => inf
number::pow(0, inf) => 0
number::pow(0, nan) => nan
number::pow(0, 0..1) => int(0..1)
number::pow(0, 0!..1) => 0
number::pow(0, 0..!1) => int(0..1)
number::pow(0, 0..2) => int(0..1)
number::pow(0, 0!..!2) => 0
number::pow(0, 0.5..1.5) => 0
number::pow(0, 0.5..2.5) => 0
number::pow(0, 0.5!..2.5) => 0
number::pow(0, 0.5..!2.5) => 0
number::pow(0, -2.56..3.35) => int(0..1)
number::pow(0, 0.5..0.75) => 0
number::pow(0, 1..2) => 0
number::pow(0, 0..inf) => int(0..1)
number::pow(0, 0!..inf) => 0
number::pow(0, 0..!inf) => int(0..1)
number::pow(0, 0!..!inf) => 0
number::pow(0, 1..inf) => 0
number::pow(0, 1!..inf) => 0
number::pow(0, 1..!inf) => 0
number::pow(0, 2..inf) => 0
number::pow(0, 2!..inf) => 0
number::pow(0, 2.5..inf) => 0
number::pow(0, -inf..0) => 1 | inf
number::pow(0, -inf..inf) => int(0..1) | inf
number::pow(0, -inf!..inf) => int(0..1)
number::pow(0, -inf..!inf) => int(0..1) | inf
number::pow(0, -inf!..!inf) => int(0..1)
number::pow(0, int(0..1)) => int(0..1)
number::pow(0, int(0..2)) => int(0..1)
number::pow(0, int(1..2)) => 0
number::pow(0, int(5..20)) => 0
number::pow(0, int(-20..-5)) => never
number::pow(0, int(-10..10)) => int(0..1)
number::pow(0, int(0..inf)) => int(0..1)
number::pow(0, int(1..inf)) => 0
number::pow(0, int(-inf..0)) => 1
number::pow(0, int(-inf..1)) => int(0..1)
number::pow(0, int(-inf..inf)) => int(0..1)
number::pow(0, nonInt(0..1)) => 0
number::pow(0, nonInt(0..2)) => 0
number::pow(0, nonInt(-1..2)) => 0
number::pow(0, nonInt(0..inf)) => 0
number::pow(0, nonInt(-1..inf)) => 0
number::pow(0, nonInt(-inf..0)) => never
number::pow(0, nonInt(-inf..1)) => 0
number::pow(0, nonInt(-inf..inf)) => 0
number::pow(0, 1 | int(3..4)) => 0
number::pow(0.5, number) => -inf | 0..inf | nan
number::pow(0.5, -3.14) => 8.815240927012885
number::pow(0.5, -2) => 4
number::pow(0.5, -1) => 2
number::pow(0.5, -0.5) => 1.4142135623730951
number::pow(0.5, 0) => 1
number::pow(0.5, 0.5) => 0.7071067811865475
number::pow(0.5, 1) => 0.5
number::pow(0.5, 2) => 0.25
number::pow(0.5, 2.78) => 0.14559169830855703
number::pow(0.5, 3) => 0.125
number::pow(0.5, 3.14) => 0.11343989441464511
number::pow(0.5, 10) => 0.0009765625
number::pow(0.5, 100) => 7.888609052210118e-31
number::pow(0.5, -inf) => inf
number::pow(0.5, inf) => 0
number::pow(0.5, nan) => nan
number::pow(0.5, 0..1) => 0.5..1
number::pow(0.5, 0!..1) => 0.5..1
number::pow(0.5, 0..!1) => 0.5..1
number::pow(0.5, 0..2) => 0.25..1
number::pow(0.5, 0!..!2) => 0.25..1
number::pow(0.5, 0.5..1.5) => 0.3535533905932738..0.7071067811865475
number::pow(0.5, 0.5..2.5) => 0.17677669529663687..0.7071067811865475
number::pow(0.5, 0.5!..2.5) => 0.17677669529663687..0.7071067811865475
number::pow(0.5, 0.5..!2.5) => 0.17677669529663687..0.7071067811865475
number::pow(0.5, -2.56..3.35) => 0.09807301223709386..5.8970768691644055
number::pow(0.5, 0.5..0.75) => 0.5946035575013605..0.7071067811865475
number::pow(0.5, 1..2) => 0.25..0.5
number::pow(0.5, 0..inf) => 0..1
number::pow(0.5, 0!..inf) => 0..1
number::pow(0.5, 0..!inf) => 0..1
number::pow(0.5, 0!..!inf) => 0..1
number::pow(0.5, 1..inf) => 0..0.5
number::pow(0.5, 1!..inf) => 0..0.5
number::pow(0.5, 1..!inf) => 0..0.5
number::pow(0.5, 2..inf) => 0..0.25
number::pow(0.5, 2!..inf) => 0..0.25
number::pow(0.5, 2.5..inf) => 0..0.17677669529663687
number::pow(0.5, -inf..0) => -inf | 1..inf
number::pow(0.5, -inf..inf) => -inf | 0..inf
number::pow(0.5, -inf!..inf) => -inf | 0..inf
number::pow(0.5, -inf..!inf) => -inf | 0..inf
number::pow(0.5, -inf!..!inf) => -inf | 0..inf
number::pow(0.5, int(0..1)) => 0.5 | 1
number::pow(0.5, int(0..2)) => 0.25 | 0.5 | 1
number::pow(0.5, int(1..2)) => 0.25 | 0.5
number::pow(0.5, int(5..20)) => 9.5367431640625e-7..0.03125
number::pow(0.5, int(-20..-5)) => 32..1048576
number::pow(0.5, int(-10..10)) => 0.0009765625..0.25 | 0.5 | int(1..2) | 4..1024
number::pow(0.5, int(0..inf)) => 0..0.25 | 0.5 | 1
number::pow(0.5, int(1..inf)) => 0..0.25 | 0.5
number::pow(0.5, int(-inf..0)) => -inf | int(1..2) | 4..inf
number::pow(0.5, int(-inf..1)) => -inf | 0.5 | int(1..2) | 4..inf
number::pow(0.5, int(-inf..inf)) => -inf | 0..0.25 | 0.5 | int(1..2) | 4..inf
number::pow(0.5, nonInt(0..1)) => 0.5..1
number::pow(0.5, nonInt(0..2)) => 0.25..1
number::pow(0.5, nonInt(-1..2)) => 0.25..2
number::pow(0.5, nonInt(0..inf)) => 0..1
number::pow(0.5, nonInt(-1..inf)) => 0..2
number::pow(0.5, nonInt(-inf..0)) => -inf | 1..inf
number::pow(0.5, nonInt(-inf..1)) => -inf | 0.5..inf
number::pow(0.5, nonInt(-inf..inf)) => -inf | 0..inf
number::pow(0.5, 1 | int(3..4)) => 0.0625 | 0.125 | 0.5
number::pow(1, number) => 1
number::pow(1, -3.14) => 1
number::pow(1, -2) => 1
number::pow(1, -1) => 1
number::pow(1, -0.5) => 1
number::pow(1, 0) => 1
number::pow(1, 0.5) => 1
number::pow(1, 1) => 1
number::pow(1, 2) => 1
number::pow(1, 2.78) => 1
number::pow(1, 3) => 1
number::pow(1, 3.14) => 1
number::pow(1, 10) => 1
number::pow(1, 100) => 1
number::pow(1, -inf) => 1
number::pow(1, inf) => 1
number::pow(1, nan) => 1
number::pow(1, 0..1) => 1
number::pow(1, 0!..1) => 1
number::pow(1, 0..!1) => 1
number::pow(1, 0..2) => 1
number::pow(1, 0!..!2) => 1
number::pow(1, 0.5..1.5) => 1
number::pow(1, 0.5..2.5) => 1
number::pow(1, 0.5!..2.5) => 1
number::pow(1, 0.5..!2.5) => 1
number::pow(1, -2.56..3.35) => 1
number::pow(1, 0.5..0.75) => 1
number::pow(1, 1..2) => 1
number::pow(1, 0..inf) => 1
number::pow(1, 0!..inf) => 1
number::pow(1, 0..!inf) => 1
number::pow(1, 0!..!inf) => 1
number::pow(1, 1..inf) => 1
number::pow(1, 1!..inf) => 1
number::pow(1, 1..!inf) => 1
number::pow(1, 2..inf) => 1
number::pow(1, 2!..inf) => 1
number::pow(1, 2.5..inf) => 1
number::pow(1, -inf..0) => 1
number::pow(1, -inf..inf) => 1
number::pow(1, -inf!..inf) => 1
number::pow(1, -inf..!inf) => 1
number::pow(1, -inf!..!inf) => 1
number::pow(1, int(0..1)) => 1
number::pow(1, int(0..2)) => 1
number::pow(1, int(1..2)) => 1
number::pow(1, int(5..20)) => 1
number::pow(1, int(-20..-5)) => 1
number::pow(1, int(-10..10)) => 1
number::pow(1, int(0..inf)) => 1
number::pow(1, int(1..inf)) => 1
number::pow(1, int(-inf..0)) => 1
number::pow(1, int(-inf..1)) => 1
number::pow(1, int(-inf..inf)) => 1
number::pow(1, nonInt(0..1)) => 1
number::pow(1, nonInt(0..2)) => 1
number::pow(1, nonInt(-1..2)) => 1
number::pow(1, nonInt(0..inf)) => 1
number::pow(1, nonInt(-1..inf)) => 1
number::pow(1, nonInt(-inf..0)) => 1
number::pow(1, nonInt(-inf..1)) => 1
number::pow(1, nonInt(-inf..inf)) => 1
number::pow(1, 1 | int(3..4)) => 1
number::pow(2, number) => 0..inf | nan
number::pow(2, -3.14) => 0.11343989441464511
number::pow(2, -2) => 0.25
number::pow(2, -1) => 0.5
number::pow(2, -0.5) => 0.7071067811865476
number::pow(2, 0) => 1
number::pow(2, 0.5) => 1.414213562373095
number::pow(2, 1) => 2
number::pow(2, 2) => 4
number::pow(2, 2.78) => 6.868523491502028
number::pow(2, 3) => 8
number::pow(2, 3.14) => 8.815240927012885
number::pow(2, 10) => 1024
number::pow(2, 100) => 1.2676506002282294e+30
number::pow(2, -inf) => 0
number::pow(2, inf) => inf
number::pow(2, nan) => nan
number::pow(2, 0..1) => 1..2
number::pow(2, 0!..1) => 1..2
number::pow(2, 0..!1) => 1..2
number::pow(2, 0..2) => 1..4
number::pow(2, 0!..!2) => 1..4
number::pow(2, 0.5..1.5) => 1.414213562373095..2.82842712474619
number::pow(2, 0.5..2.5) => 1.414213562373095..5.65685424949238
number::pow(2, 0.5!..2.5) => 1.414213562373095..5.65685424949238
number::pow(2, 0.5..!2.5) => 1.414213562373095..5.65685424949238
number::pow(2, -2.56..3.35) => 0.169575540930959..10.196485018554096
number::pow(2, 0.5..0.75) => 1.414213562373095..1.681792830507429
number::pow(2, 1..2) => 2..4
number::pow(2, 0..inf) => 1..inf
number::pow(2, 0!..inf) => 1..inf
number::pow(2, 0..!inf) => 1..inf
number::pow(2, 0!..!inf) => 1..inf
number::pow(2, 1..inf) => 2..inf
number::pow(2, 1!..inf) => 2..inf
number::pow(2, 1..!inf) => 2..inf
number::pow(2, 2..inf) => 4..inf
number::pow(2, 2!..inf) => 4..inf
number::pow(2, 2.5..inf) => 5.65685424949238..inf
number::pow(2, -inf..0) => 0..1
number::pow(2, -inf..inf) => 0..inf
number::pow(2, -inf!..inf) => 0..inf
number::pow(2, -inf..!inf) => 0..inf
number::pow(2, -inf!..!inf) => 0..inf
number::pow(2, int(0..1)) => int(1..2)
number::pow(2, int(0..2)) => int(1..2) | 4
number::pow(2, int(1..2)) => 2 | 4
number::pow(2, int(5..20)) => int(32..1048576)
number::pow(2, int(-20..-5)) => 9.5367431640625e-7..0.03125
number::pow(2, int(-10..10)) => 0.0009765625..0.25 | 0.5 | int(1..2) | int(4..1024)
number::pow(2, int(0..inf)) => int(1..2) | int(4..inf)
number::pow(2, int(1..inf)) => 2 | int(4..inf)
number::pow(2, int(-inf..0)) => 0!..0.25 | 0.5 | 1
number::pow(2, int(-inf..1)) => 0!..0.25 | 0.5 | int(1..2)
number::pow(2, int(-inf..inf)) => 0!..0.25 | 0.5 | int(1..2) | int(4..inf)
number::pow(2, nonInt(0..1)) => 1..2
number::pow(2, nonInt(0..2)) => 1..4
number::pow(2, nonInt(-1..2)) => 0.5..4
number::pow(2, nonInt(0..inf)) => 1..inf
number::pow(2, nonInt(-1..inf)) => 0.5..inf
number::pow(2, nonInt(-inf..0)) => 0..1
number::pow(2, nonInt(-inf..1)) => 0..2
number::pow(2, nonInt(-inf..inf)) => 0..inf
number::pow(2, 1 | int(3..4)) => 2 | 8 | 16
number::pow(2.78, number) => 0..inf | nan
number::pow(2.78, -3.14) => 0.04033660486506333
number::pow(2.78, -2) => 0.12939288856684436
number::pow(2.78, -1) => 0.3597122302158274
number::pow(2.78, -0.5) => 0.5997601439040672
number::pow(2.78, 0) => 1
number::pow(2.78, 0.5) => 1.6673332000533065
number::pow(2.78, 1) => 2.78
number::pow(2.78, 2) => 7.7284
number::pow(2.78, 2.78) => 17.157125682550372
number::pow(2.78, 3) => 21.484952
number::pow(2.78, 3.14) => 24.791377542687737
number::pow(2.78, 10) => 27570.71057097665
number::pow(2.78, 100) => 2.537929721784451e+44
number::pow(2.78, -inf) => 0
number::pow(2.78, inf) => inf
number::pow(2.78, nan) => nan
number::pow(2.78, 0..1) => 1..2.78
number::pow(2.78, 0!..1) => 1..2.78
number::pow(2.78, 0..!1) => 1..2.78
number::pow(2.78, 0..2) => 1..7.7284
number::pow(2.78, 0!..!2) => 1..7.7284
number::pow(2.78, 0.5..1.5) => 1.6673332000533065..4.635186296148191
number::pow(2.78, 0.5..2.5) => 1.6673332000533065..12.885817903291967
number::pow(2.78, 0.5!..2.5) => 1.6673332000533065..12.885817903291967
number::pow(2.78, 0.5..!2.5) => 1.6673332000533065..12.885817903291967
number::pow(2.78, -2.56..3.35) => 0.0729869679561979..30.72911596166288
number::pow(2.78, 0.5..0.75) => 1.6673332000533065..2.1529482799519806
number::pow(2.78, 1..2) => 2.78..7.7284
number::pow(2.78, 0..inf) => 1..inf
number::pow(2.78, 0!..inf) => 1..inf
number::pow(2.78, 0..!inf) => 1..inf
number::pow(2.78, 0!..!inf) => 1..inf
number::pow(2.78, 1..inf) => 2.78..inf
number::pow(2.78, 1!..inf) => 2.78..inf
number::pow(2.78, 1..!inf) => 2.78..inf
number::pow(2.78, 2..inf) => 7.7284..inf
number::pow(2.78, 2!..inf) => 7.7284..inf
number::pow(2.78, 2.5..inf) => 12.885817903291967..inf
number::pow(2.78, -inf..0) => 0..1
number::pow(2.78, -inf..inf) => 0..inf
number::pow(2.78, -inf!..inf) => 0..inf
number::pow(2.78, -inf..!inf) => 0..inf
number::pow(2.78, -inf!..!inf) => 0..inf
number::pow(2.78, int(0..1)) => 1 | 2.78
number::pow(2.78, int(0..2)) => 1 | 2.78 | 7.7284
number::pow(2.78, int(1..2)) => 2.78 | 7.7284
number::pow(2.78, int(5..20)) => 166.04430303679993..760144081.3885636
number::pow(2.78, int(-20..-5)) => 1.3155400725784629e-9..0.0060224890689466945
number::pow(2.78, int(-10..10)) => 0.00003627037458558242..0.12939288856684436 | 0.3597122302158274 | 1 | 2.78 | 7.7284..27570.71057097665
number::pow(2.78, int(0..inf)) => 1 | 2.78 | 7.7284..inf
number::pow(2.78, int(1..inf)) => 2.78 | 7.7284..inf
number::pow(2.78, int(-inf..0)) => 0..0.12939288856684436 | 0.3597122302158274 | 1
number::pow(2.78, int(-inf..1)) => 0..0.12939288856684436 | 0.3597122302158274 | 1 | 2.78
number::pow(2.78, int(-inf..inf)) => 0..0.12939288856684436 | 0.3597122302158274 | 1 | 2.78 | 7.7284..inf
number::pow(2.78, nonInt(0..1)) => 1..2.78
number::pow(2.78, nonInt(0..2)) => 1..7.7284
number::pow(2.78, nonInt(-1..2)) => 0.3597122302158274..7.7284
number::pow(2.78, nonInt(0..inf)) => 1..inf
number::pow(2.78, nonInt(-1..inf)) => 0.3597122302158274..inf
number::pow(2.78, nonInt(-inf..0)) => 0..1
number::pow(2.78, nonInt(-inf..1)) => 0..2.78
number::pow(2.78, nonInt(-inf..inf)) => 0..inf
number::pow(2.78, 1 | int(3..4)) => 2.78 | 21.484952 | 59.728166559999984
number::pow(3, number) => 0..inf | nan
number::pow(3, -3.14) => 0.031756984727589324
number::pow(3, -2) => 0.1111111111111111
number::pow(3, -1) => 0.3333333333333333
number::pow(3, -0.5) => 0.5773502691896258
number::pow(3, 0) => 1
number::pow(3, 0.5) => 1.7320508075688772
number::pow(3, 1) => 3
number::pow(3, 2) => 9
number::pow(3, 2.78) => 21.20298900406197
number::pow(3, 3) => 27
number::pow(3, 3.14) => 31.48913565245494
number::pow(3, 10) => 59049
number::pow(3, 100) => 5.153775207320113e+47
number::pow(3, -inf) => 0
number::pow(3, inf) => inf
number::pow(3, nan) => nan
number::pow(3, 0..1) => 1..3
number::pow(3, 0!..1) => 1..3
number::pow(3, 0..!1) => 1..3
number::pow(3, 0..2) => 1..9
number::pow(3, 0!..!2) => 1..9
number::pow(3, 0.5..1.5) => 1.7320508075688772..5.196152422706631
number::pow(3, 0.5..2.5) => 1.7320508075688772..15.588457268119887
number::pow(3, 0.5!..2.5) => 1.7320508075688772..15.588457268119887
number::pow(3, 0.5..!2.5) => 1.7320508075688772..15.588457268119887
number::pow(3, -2.56..3.35) => 0.06005782331108636..39.66031902420198
number::pow(3, 0.5..0.75) => 1.7320508075688772..2.2795070569547775
number::pow(3, 1..2) => 3..9
number::pow(3, 0..inf) => 1..inf
number::pow(3, 0!..inf) => 1..inf
number::pow(3, 0..!inf) => 1..inf
number::pow(3, 0!..!inf) => 1..inf
number::pow(3, 1..inf) => 3..inf
number::pow(3, 1!..inf) => 3..inf
number::pow(3, 1..!inf) => 3..inf
number::pow(3, 2..inf) => 9..inf
number::pow(3, 2!..inf) => 9..inf
number::pow(3, 2.5..inf) => 15.588457268119887..inf
number::pow(3, -inf..0) => 0..1
number::pow(3, -inf..inf) => 0..inf
number::pow(3, -inf!..inf) => 0..inf
number::pow(3, -inf..!inf) => 0..inf
number::pow(3, -inf!..!inf) => 0..inf
number::pow(3, int(0..1)) => 1 | 3
number::pow(3, int(0..2)) => 1 | 3 | 9
number::pow(3, int(1..2)) => 3 | 9
number::pow(3, int(5..20)) => int(243..3486784401)
number::pow(3, int(-20..-5)) => 2.8679719907924413e-10..0.00411522633744856
number::pow(3, int(-10..10)) => 0.000016935087808430286..0.1111111111111111 | 0.3333333333333333 | 1 | 3 | int(9..59049)
number::pow(3, int(0..inf)) => 1 | 3 | int(9..inf)
number::pow(3, int(1..inf)) => 3 | int(9..inf)
number::pow(3, int(-inf..0)) => 0!..0.1111111111111111 | 0.3333333333333333 | 1
number::pow(3, int(-inf..1)) => 0!..0.1111111111111111 | 0.3333333333333333 | 1 | 3
number::pow(3, int(-inf..inf)) => 0!..0.1111111111111111 | 0.3333333333333333 | 1 | 3 | int(9..inf)
number::pow(3, nonInt(0..1)) => 1..3
number::pow(3, nonInt(0..2)) => 1..9
number::pow(3, nonInt(-1..2)) => 0.3333333333333333..9
number::pow(3, nonInt(0..inf)) => 1..inf
number::pow(3, nonInt(-1..inf)) => 0.3333333333333333..inf
number::pow(3, nonInt(-inf..0)) => 0..1
number::pow(3, nonInt(-inf..1)) => 0..3
number::pow(3, nonInt(-inf..inf)) => 0..inf
number::pow(3, 1 | int(3..4)) => 3 | 27 | 81
number::pow(3.14, number) => 0..inf | nan
number::pow(3.14, -3.14) => 0.027519523197225216
number::pow(3.14, -2) => 0.1014239928597509
number::pow(3.14, -1) => 0.3184713375796178
number::pow(3.14, -0.5) => 0.5643326479831003
number::pow(3.14, 0) => 1
number::pow(3.14, 0.5) => 1.772004514666935
number::pow(3.14, 1) => 3.14
number::pow(3.14, 2) => 9.8596
number::pow(3.14, 2.78) => 24.069353295520358
number::pow(3.14, 3) => 30.959144
number::pow(3.14, 3.14) => 36.3378388801747
number::pow(3.14, 10) => 93174.3733866435
number::pow(3.14, 100) => 4.931338416605635e+49
number::pow(3.14, -inf) => 0
number::pow(3.14, inf) => inf
number::pow(3.14, nan) => nan
number::pow(3.14, 0..1) => 1..3.14
number::pow(3.14, 0!..1) => 1..3.14
number::pow(3.14, 0..!1) => 1..3.14
number::pow(3.14, 0..2) => 1..9.8596
number::pow(3.14, 0!..!2) => 1..9.8596
number::pow(3.14, 0.5..1.5) => 1.772004514666935..5.564094176054175
number::pow(3.14, 0.5..2.5) => 1.772004514666935..17.471255712810112
number::pow(3.14, 0.5!..2.5) => 1.772004514666935..17.471255712810112
number::pow(3.14, 0.5..!2.5) => 1.772004514666935..17.471255712810112
number::pow(3.14, -2.56..3.35) => 0.05343921881755227..46.207696713039795
number::pow(3.14, 0.5..0.75) => 1.772004514666935..2.358833223450563
number::pow(3.14, 1..2) => 3.14..9.8596
number::pow(3.14, 0..inf) => 1..inf
number::pow(3.14, 0!..inf) => 1..inf
number::pow(3.14, 0..!inf) => 1..inf
number::pow(3.14, 0!..!inf) => 1..inf
number::pow(3.14, 1..inf) => 3.14..inf
number::pow(3.14, 1!..inf) => 3.14..inf
number::pow(3.14, 1..!inf) => 3.14..inf
number::pow(3.14, 2..inf) => 9.8596..inf
number::pow(3.14, 2!..inf) => 9.8596..inf
number::pow(3.14, 2.5..inf) => 17.471255712810112..inf
number::pow(3.14, -inf..0) => 0..1
number::pow(3.14, -inf..inf) => 0..inf
number::pow(3.14, -inf!..inf) => 0..inf
number::pow(3.14, -inf..!inf) => 0..inf
number::pow(3.14, -inf!..!inf) => 0..inf
number::pow(3.14, int(0..1)) => 1 | 3.14
number::pow(3.14, int(0..2)) => 1 | 3.14 | 9.8596
number::pow(3.14, int(1..2)) => 3.14 | 9.8596
number::pow(3.14, int(5..20)) => 305.2447761824001..8681463855.993662
number::pow(3.14, int(-20..-5)) => 1.1518794716971636e-10..0.003276059340004713
number::pow(3.14, int(-10..10)) => 0.000010732564799232118..0.1014239928597509 | 0.3184713375796178 | 1 | 3.14 | 9.8596..93174.3733866435
number::pow(3.14, int(0..inf)) => 1 | 3.14 | 9.8596..inf
number::pow(3.14, int(1..inf)) => 3.14 | 9.8596..inf
number::pow(3.14, int(-inf..0)) => 0..0.1014239928597509 | 0.3184713375796178 | 1
number::pow(3.14, int(-inf..1)) => 0..0.1014239928597509 | 0.3184713375796178 | 1 | 3.14
number::pow(3.14, int(-inf..inf)) => 0..0.1014239928597509 | 0.3184713375796178 | 1 | 3.14 | 9.8596..inf
number::pow(3.14, nonInt(0..1)) => 1..3.14
number::pow(3.14, nonInt(0..2)) => 1..9.8596
number::pow(3.14, nonInt(-1..2)) => 0.3184713375796178..9.8596
number::pow(3.14, nonInt(0..inf)) => 1..inf
number::pow(3.14, nonInt(-1..inf)) => 0.3184713375796178..inf
number::pow(3.14, nonInt(-inf..0)) => 0..1
number::pow(3.14, nonInt(-inf..1)) => 0..3.14
number::pow(3.14, nonInt(-inf..inf)) => 0..inf
number::pow(3.14, 1 | int(3..4)) => 3.14 | 30.959144 | 97.21171216000002
number::pow(10, number) => 0..inf | nan
number::pow(10, -3.14) => 0.0007244359600749893
number::pow(10, -2) => 0.01
number::pow(10, -1) => 0.1
number::pow(10, -0.5) => 0.3162277660168379
number::pow(10, 0) => 1
number::pow(10, 0.5) => 3.16227766016838
number::pow(10, 1) => 10
number::pow(10, 2) => 100
number::pow(10, 2.78) => 602.5595860743578
number::pow(10, 3) => 1000
number::pow(10, 3.14) => 1380.3842646028863
number::pow(10, 10) => 10000000000
number::pow(10, 100) => 1e+100
number::pow(10, -inf) => 0
number::pow(10, inf) => inf
number::pow(10, nan) => nan
number::pow(10, 0..1) => 1..10
number::pow(10, 0!..1) => 1..10
number::pow(10, 0..!1) => 1..10
number::pow(10, 0..2) => 1..100
number::pow(10, 0!..!2) => 1..100
number::pow(10, 0.5..1.5) => 3.16227766016838..31.622776601683803
number::pow(10, 0.5..2.5) => 3.16227766016838..316.22776601683825
number::pow(10, 0.5!..2.5) => 3.16227766016838..316.22776601683825
number::pow(10, 0.5..!2.5) => 3.16227766016838..316.22776601683825
number::pow(10, -2.56..3.35) => 0.002754228703338165..2238.7211385683413
number::pow(10, 0.5..0.75) => 3.16227766016838..5.623413251903491
number::pow(10, 1..2) => 10..100
number::pow(10, 0..inf) => 1..inf
number::pow(10, 0!..inf) => 1..inf
number::pow(10, 0..!inf) => 1..inf
number::pow(10, 0!..!inf) => 1..inf
number::pow(10, 1..inf) => 10..inf
number::pow(10, 1!..inf) => 10..inf
number::pow(10, 1..!inf) => 10..inf
number::pow(10, 2..inf) => 100..inf
number::pow(10, 2!..inf) => 100..inf
number::pow(10, 2.5..inf) => 316.22776601683825..inf
number::pow(10, -inf..0) => 0..1
number::pow(10, -inf..inf) => 0..inf
number::pow(10, -inf!..inf) => 0..inf
number::pow(10, -inf..!inf) => 0..inf
number::pow(10, -inf!..!inf) => 0..inf
number::pow(10, int(0..1)) => 1 | 10
number::pow(10, int(0..2)) => 1 | 10 | 100
number::pow(10, int(1..2)) => 10 | 100
number::pow(10, int(5..20)) => int(100000..100000000000000000000)
number::pow(10, int(-20..-5)) => 1e-20..0.00001
number::pow(10, int(-10..10)) => 1e-10..0.01 | 0.1 | 1 | 10 | int(100..10000000000)
number::pow(10, int(0..inf)) => 1 | 10 | int(100..inf)
number::pow(10, int(1..inf)) => 10 | int(100..inf)
number::pow(10, int(-inf..0)) => 0!..0.01 | 0.1 | 1
number::pow(10, int(-inf..1)) => 0!..0.01 | 0.1 | 1 | 10
number::pow(10, int(-inf..inf)) => 0!..0.01 | 0.1 | 1 | 10 | int(100..inf)
number::pow(10, nonInt(0..1)) => 1..10
number::pow(10, nonInt(0..2)) => 1..100
number::pow(10, nonInt(-1..2)) => 0.1..100
number::pow(10, nonInt(0..inf)) => 1..inf
number::pow(10, nonInt(-1..inf)) => 0.1..inf
number::pow(10, nonInt(-inf..0)) => 0..1
number::pow(10, nonInt(-inf..1)) => 0..10
number::pow(10, nonInt(-inf..inf)) => 0..inf
number::pow(10, 1 | int(3..4)) => 10 | 1000 | 10000
number::pow(100, number) => 0..inf | nan
number::pow(100, -3.14) => 5.248074602497715e-7
number::pow(100, -2) => 0.0001
number::pow(100, -1) => 0.01
number::pow(100, -0.5) => 0.1
number::pow(100, 0) => 1
number::pow(100, 0.5) => 10
number::pow(100, 1) => 100
number::pow(100, 2) => 10000
number::pow(100, 2.78) => 363078.0547701014
number::pow(100, 3) => 1000000
number::pow(100, 3.14) => 1905460.7179632513
number::pow(100, 10) => 100000000000000000000
number::pow(100, 100) => 1e+200
number::pow(100, -inf) => 0
number::pow(100, inf) => inf
number::pow(100, nan) => nan
number::pow(100, 0..1) => 1..100
number::pow(100, 0!..1) => 1..100
number::pow(100, 0..!1) => 1..100
number::pow(100, 0..2) => 1..10000
number::pow(100, 0!..!2) => 1..10000
number::pow(100, 0.5..1.5) => 10..1000
number::pow(100, 0.5..2.5) => 10..100000
number::pow(100, 0.5!..2.5) => 10..100000
number::pow(100, 0.5..!2.5) => 10..100000
number::pow(100, -2.56..3.35) => 0.000007585775750291832..5011872.336272731
number::pow(100, 0.5..0.75) => 10..31.622776601683803
number::pow(100, 1..2) => 100..10000
number::pow(100, 0..inf) => 1..inf
number::pow(100, 0!..inf) => 1..inf
number::pow(100, 0..!inf) => 1..inf
number::pow(100, 0!..!inf) => 1..inf
number::pow(100, 1..inf) => 100..inf
number::pow(100, 1!..inf) => 100..inf
number::pow(100, 1..!inf) => 100..inf
number::pow(100, 2..inf) => 10000..inf
number::pow(100, 2!..inf) => 10000..inf
number::pow(100, 2.5..inf) => 100000..inf
number::pow(100, -inf..0) => 0..1
number::pow(100, -inf..inf) => 0..inf
number::pow(100, -inf!..inf) => 0..inf
number::pow(100, -inf..!inf) => 0..inf
number::pow(100, -inf!..!inf) => 0..inf
number::pow(100, int(0..1)) => 1 | 100
number::pow(100, int(0..2)) => 1 | 100 | 10000
number::pow(100, int(1..2)) => 100 | 10000
number::pow(100, int(5..20)) => int(10000000000..1e+40)
number::pow(100, int(-20..-5)) => 1e-40..1e-10
number::pow(100, int(-10..10)) => 1e-20..0.0001 | 0.01 | 1 | 100 | int(10000..100000000000000000000)
number::pow(100, int(0..inf)) => 1 | 100 | int(10000..inf)
number::pow(100, int(1..inf)) => 100 | int(10000..inf)
number::pow(100, int(-inf..0)) => 0!..0.0001 | 0.01 | 1
number::pow(100, int(-inf..1)) => 0!..0.0001 | 0.01 | 1 | 100
number::pow(100, int(-inf..inf)) => 0!..0.0001 | 0.01 | 1 | 100 | int(10000..inf)
number::pow(100, nonInt(0..1)) => 1..100
number::pow(100, nonInt(0..2)) => 1..10000
number::pow(100, nonInt(-1..2)) => 0.01..10000
number::pow(100, nonInt(0..inf)) => 1..inf
number::pow(100, nonInt(-1..inf)) => 0.01..inf
number::pow(100, nonInt(-inf..0)) => 0..1
number::pow(100, nonInt(-inf..1)) => 0..100
number::pow(100, nonInt(-inf..inf)) => 0..inf
number::pow(100, 1 | int(3..4)) => 100 | 1000000 | 100000000
number::pow(-inf, number) => -inf | int(0..1) | inf | nan
number::pow(-inf, -3.14) => 0
number::pow(-inf, -2) => 0
number::pow(-inf, -1) => 0
number::pow(-inf, -0.5) => 0
number::pow(-inf, 0) => 1
number::pow(-inf, 0.5) => inf
number::pow(-inf, 1) => -inf
number::pow(-inf, 2) => inf
number::pow(-inf, 2.78) => inf
number::pow(-inf, 3) => -inf
number::pow(-inf, 3.14) => inf
number::pow(-inf, 10) => inf
number::pow(-inf, 100) => inf
number::pow(-inf, -inf) => 0
number::pow(-inf, inf) => inf
number::pow(-inf, nan) => nan
number::pow(-inf, 0..1) => -inf | 1 | inf
number::pow(-inf, 0!..1) => -inf | inf
number::pow(-inf, 0..!1) => 1 | inf
number::pow(-inf, 0..2) => -inf | 1 | inf
number::pow(-inf, 0!..!2) => -inf | inf
number::pow(-inf, 0.5..1.5) => -inf | inf
number::pow(-inf, 0.5..2.5) => -inf | inf
number::pow(-inf, 0.5!..2.5) => -inf | inf
number::pow(-inf, 0.5..!2.5) => -inf | inf
number::pow(-inf, -2.56..3.35) => -inf | int(0..1) | inf
number::pow(-inf, 0.5..0.75) => inf
number::pow(-inf, 1..2) => -inf | inf
number::pow(-inf, 0..inf) => -inf | 1 | inf
number::pow(-inf, 0!..inf) => -inf | inf
number::pow(-inf, 0..!inf) => -inf | 1 | inf
number::pow(-inf, 0!..!inf) => -inf | inf
number::pow(-inf, 1..inf) => -inf | inf
number::pow(-inf, 1!..inf) => -inf | inf
number::pow(-inf, 1..!inf) => -inf | inf
number::pow(-inf, 2..inf) => -inf | inf
number::pow(-inf, 2!..inf) => -inf | inf
number::pow(-inf, 2.5..inf) => -inf | inf
number::pow(-inf, -inf..0) => int(0..1)
number::pow(-inf, -inf..inf) => -inf | int(0..1) | inf
number::pow(-inf, -inf!..inf) => -inf | int(0..1) | inf
number::pow(-inf, -inf..!inf) => -inf | int(0..1) | inf
number::pow(-inf, -inf!..!inf) => -inf | int(0..1) | inf
number::pow(-inf, int(0..1)) => -inf | 1
number::pow(-inf, int(0..2)) => -inf | 1 | inf
number::pow(-inf, int(1..2)) => -inf | inf
number::pow(-inf, int(5..20)) => -inf | inf
number::pow(-inf, int(-20..-5)) => 0
number::pow(-inf, int(-10..10)) => -inf | int(0..1) | inf
number::pow(-inf, int(0..inf)) => -inf | 1 | inf
number::pow(-inf, int(1..inf)) => -inf | inf
number::pow(-inf, int(-inf..0)) => int(0..1)
number::pow(-inf, int(-inf..1)) => -inf | int(0..1)
number::pow(-inf, int(-inf..inf)) => -inf | int(0..1) | inf
number::pow(-inf, nonInt(0..1)) => inf
number::pow(-inf, nonInt(0..2)) => inf
number::pow(-inf, nonInt(-1..2)) => 0 | inf
number::pow(-inf, nonInt(0..inf)) => inf
number::pow(-inf, nonInt(-1..inf)) => 0 | inf
number::pow(-inf, nonInt(-inf..0)) => 0
number::pow(-inf, nonInt(-inf..1)) => 0 | inf
number::pow(-inf, nonInt(-inf..inf)) => 0 | inf
number::pow(-inf, 1 | int(3..4)) => -inf | inf
number::pow(inf, number) => int(0..1) | inf | nan
number::pow(inf, -3.14) => 0
number::pow(inf, -2) => 0
number::pow(inf, -1) => 0
number::pow(inf, -0.5) => 0
number::pow(inf, 0) => 1
number::pow(inf, 0.5) => inf
number::pow(inf, 1) => inf
number::pow(inf, 2) => inf
number::pow(inf, 2.78) => inf
number::pow(inf, 3) => inf
number::pow(inf, 3.14) => inf
number::pow(inf, 10) => inf
number::pow(inf, 100) => inf
number::pow(inf, -inf) => 0
number::pow(inf, inf) => inf
number::pow(inf, nan) => nan
number::pow(inf, 0..1) => 1 | inf
number::pow(inf, 0!..1) => inf
number::pow(inf, 0..!1) => 1 | inf
number::pow(inf, 0..2) => 1 | inf
number::pow(inf, 0!..!2) => inf
number::pow(inf, 0.5..1.5) => inf
number::pow(inf, 0.5..2.5) => inf
number::pow(inf, 0.5!..2.5) => inf
number::pow(inf, 0.5..!2.5) => inf
number::pow(inf, -2.56..3.35) => int(0..1) | inf
number::pow(inf, 0.5..0.75) => inf
number::pow(inf, 1..2) => inf
number::pow(inf, 0..inf) => 1 | inf
number::pow(inf, 0!..inf) => inf
number::pow(inf, 0..!inf) => 1 | inf
number::pow(inf, 0!..!inf) => inf
number::pow(inf, 1..inf) => inf
number::pow(inf, 1!..inf) => inf
number::pow(inf, 1..!inf) => inf
number::pow(inf, 2..inf) => inf
number::pow(inf, 2!..inf) => inf
number::pow(inf, 2.5..inf) => inf
number::pow(inf, -inf..0) => int(0..1)
number::pow(inf, -inf..inf) => int(0..1) | inf
number::pow(inf, -inf!..inf) => int(0..1) | inf
number::pow(inf, -inf..!inf) => int(0..1) | inf
number::pow(inf, -inf!..!inf) => int(0..1) | inf
number::pow(inf, int(0..1)) => 1 | inf
number::pow(inf, int(0..2)) => 1 | inf
number::pow(inf, int(1..2)) => inf
number::pow(inf, int(5..20)) => inf
number::pow(inf, int(-20..-5)) => 0
number::pow(inf, int(-10..10)) => int(0..1) | inf
number::pow(inf, int(0..inf)) => 1 | inf
number::pow(inf, int(1..inf)) => inf
number::pow(inf, int(-inf..0)) => int(0..1)
number::pow(inf, int(-inf..1)) => int(0..1) | inf
number::pow(inf, int(-inf..inf)) => int(0..1) | inf
number::pow(inf, nonInt(0..1)) => inf
number::pow(inf, nonInt(0..2)) => inf
number::pow(inf, nonInt(-1..2)) => 0 | inf
number::pow(inf, nonInt(0..inf)) => inf
number::pow(inf, nonInt(-1..inf)) => 0 | inf
number::pow(inf, nonInt(-inf..0)) => 0
number::pow(inf, nonInt(-inf..1)) => 0 | inf
number::pow(inf, nonInt(-inf..inf)) => 0 | inf
number::pow(inf, 1 | int(3..4)) => inf
number::pow(nan, number) => 1 | nan
number::pow(nan, -3.14) => nan
number::pow(nan, -2) => nan
number::pow(nan, -1) => nan
number::pow(nan, -0.5) => nan
number::pow(nan, 0) => 1
number::pow(nan, 0.5) => nan
number::pow(nan, 1) => nan
number::pow(nan, 2) => nan
number::pow(nan, 2.78) => nan
number::pow(nan, 3) => nan
number::pow(nan, 3.14) => nan
number::pow(nan, 10) => nan
number::pow(nan, 100) => nan
number::pow(nan, -inf) => nan
number::pow(nan, inf) => nan
number::pow(nan, nan) => nan
number::pow(nan, 0..1) => 1 | nan
number::pow(nan, 0!..1) => nan
number::pow(nan, 0..!1) => 1 | nan
number::pow(nan, 0..2) => 1 | nan
number::pow(nan, 0!..!2) => nan
number::pow(nan, 0.5..1.5) => nan
number::pow(nan, 0.5..2.5) => nan
number::pow(nan, 0.5!..2.5) => nan
number::pow(nan, 0.5..!2.5) => nan
number::pow(nan, -2.56..3.35) => 1 | nan
number::pow(nan, 0.5..0.75) => nan
number::pow(nan, 1..2) => nan
number::pow(nan, 0..inf) => 1 | nan
number::pow(nan, 0!..inf) => nan
number::pow(nan, 0..!inf) => 1 | nan
number::pow(nan, 0!..!inf) => nan
number::pow(nan, 1..inf) => nan
number::pow(nan, 1!..inf) => nan
number::pow(nan, 1..!inf) => nan
number::pow(nan, 2..inf) => nan
number::pow(nan, 2!..inf) => nan
number::pow(nan, 2.5..inf) => nan
number::pow(nan, -inf..0) => 1 | nan
number::pow(nan, -inf..inf) => 1 | nan
number::pow(nan, -inf!..inf) => 1 | nan
number::pow(nan, -inf..!inf) => 1 | nan
number::pow(nan, -inf!..!inf) => 1 | nan
number::pow(nan, int(0..1)) => 1 | nan
number::pow(nan, int(0..2)) => 1 | nan
number::pow(nan, int(1..2)) => nan
number::pow(nan, int(5..20)) => nan
number::pow(nan, int(-20..-5)) => nan
number::pow(nan, int(-10..10)) => 1 | nan
number::pow(nan, int(0..inf)) => 1 | nan
number::pow(nan, int(1..inf)) => nan
number::pow(nan, int(-inf..0)) => 1 | nan
number::pow(nan, int(-inf..1)) => 1 | nan
number::pow(nan, int(-inf..inf)) => 1 | nan
number::pow(nan, nonInt(0..1)) => nan
number::pow(nan, nonInt(0..2)) => nan
number::pow(nan, nonInt(-1..2)) => nan
number::pow(nan, nonInt(0..inf)) => nan
number::pow(nan, nonInt(-1..inf)) => nan
number::pow(nan, nonInt(-inf..0)) => nan
number::pow(nan, nonInt(-inf..1)) => nan
number::pow(nan, nonInt(-inf..inf)) => nan
number::pow(nan, 1 | int(3..4)) => nan
number::pow(0..1, number) => -inf | 0..inf | nan
number::pow(0..1, -3.14) => -inf | 1..inf
number::pow(0..1, -2) => 1..!inf
number::pow(0..1, -1) => 1..!inf
number::pow(0..1, -0.5) => -inf | 1..inf
number::pow(0..1, 0) => 1
number::pow(0..1, 0.5) => 0..1
number::pow(0..1, 1) => 0..1
number::pow(0..1, 2) => 0..1
number::pow(0..1, 2.78) => 0..1
number::pow(0..1, 3) => 0..1
number::pow(0..1, 3.14) => 0..1
number::pow(0..1, 10) => 0..1
number::pow(0..1, 100) => 0..1
number::pow(0..1, -inf) => 1 | inf
number::pow(0..1, inf) => int(0..1)
number::pow(0..1, nan) => 1 | nan
number::pow(0..1, 0..1) => 0..1
number::pow(0..1, 0!..1) => 0..1
number::pow(0..1, 0..!1) => 0..1
number::pow(0..1, 0..2) => 0..1
number::pow(0..1, 0!..!2) => 0..1
number::pow(0..1, 0.5..1.5) => 0..1
number::pow(0..1, 0.5..2.5) => 0..1
number::pow(0..1, 0.5!..2.5) => 0..1
number::pow(0..1, 0.5..!2.5) => 0..1
number::pow(0..1, -2.56..3.35) => -inf | 0..inf
number::pow(0..1, 0.5..0.75) => 0..1
number::pow(0..1, 1..2) => 0..1
number::pow(0..1, 0..inf) => 0..1
number::pow(0..1, 0!..inf) => 0..1
number::pow(0..1, 0..!inf) => 0..1
number::pow(0..1, 0!..!inf) => 0..1
number::pow(0..1, 1..inf) => 0..1
number::pow(0..1, 1!..inf) => 0..1
number::pow(0..1, 1..!inf) => 0..1
number::pow(0..1, 2..inf) => 0..1
number::pow(0..1, 2!..inf) => 0..1
number::pow(0..1, 2.5..inf) => 0..1
number::pow(0..1, -inf..0) => -inf | 1..inf
number::pow(0..1, -inf..inf) => -inf | 0..inf
number::pow(0..1, -inf!..inf) => -inf | 0..inf
number::pow(0..1, -inf..!inf) => -inf | 0..inf
number::pow(0..1, -inf!..!inf) => -inf | 0..inf
number::pow(0..1, int(0..1)) => 0..1
number::pow(0..1, int(0..2)) => 0..1
number::pow(0..1, int(1..2)) => 0..1
number::pow(0..1, int(5..20)) => 0..1
number::pow(0..1, int(-20..-5)) => 1..!inf
number::pow(0..1, int(-10..10)) => 0..!inf
number::pow(0..1, int(0..inf)) => 0..1
number::pow(0..1, int(1..inf)) => 0..1
number::pow(0..1, int(-inf..0)) => 1..!inf
number::pow(0..1, int(-inf..1)) => 0..!inf
number::pow(0..1, int(-inf..inf)) => 0..!inf
number::pow(0..1, nonInt(0..1)) => 0..1
number::pow(0..1, nonInt(0..2)) => 0..1
number::pow(0..1, nonInt(-1..2)) => -inf | 0..inf
number::pow(0..1, nonInt(0..inf)) => 0..1
number::pow(0..1, nonInt(-1..inf)) => -inf | 0..inf
number::pow(0..1, nonInt(-inf..0)) => -inf | 1..inf
number::pow(0..1, nonInt(-inf..1)) => -inf | 0..inf
number::pow(0..1, nonInt(-inf..inf)) => -inf | 0..inf
number::pow(0..1, 1 | int(3..4)) => 0..1
number::pow(0!..1, number) => -inf | 0..inf | nan
number::pow(0!..1, -3.14) => -inf | 1..inf
number::pow(0!..1, -2) => 1..!inf
number::pow(0!..1, -1) => 1..!inf
number::pow(0!..1, -0.5) => -inf | 1..inf
number::pow(0!..1, 0) => 1
number::pow(0!..1, 0.5) => 0..1
number::pow(0!..1, 1) => 0!..1
number::pow(0!..1, 2) => 0!..1
number::pow(0!..1, 2.78) => 0..1
number::pow(0!..1, 3) => 0!..1
number::pow(0!..1, 3.14) => 0..1
number::pow(0!..1, 10) => 0!..1
number::pow(0!..1, 100) => 0!..1
number::pow(0!..1, -inf) => 1 | inf
number::pow(0!..1, inf) => int(0..1)
number::pow(0!..1, nan) => 1 | nan
number::pow(0!..1, 0..1) => 0..1
number::pow(0!..1, 0!..1) => 0..1
number::pow(0!..1, 0..!1) => 0..1
number::pow(0!..1, 0..2) => 0..1
number::pow(0!..1, 0!..!2) => 0..1
number::pow(0!..1, 0.5..1.5) => 0..1
number::pow(0!..1, 0.5..2.5) => 0..1
number::pow(0!..1, 0.5!..2.5) => 0..1
number::pow(0!..1, 0.5..!2.5) => 0..1
number::pow(0!..1, -2.56..3.35) => -inf | 0..inf
number::pow(0!..1, 0.5..0.75) => 0..1
number::pow(0!..1, 1..2) => 0..1
number::pow(0!..1, 0..inf) => 0..1
number::pow(0!..1, 0!..inf) => 0..1
number::pow(0!..1, 0..!inf) => 0..1
number::pow(0!..1, 0!..!inf) => 0..1
number::pow(0!..1, 1..inf) => 0..1
number::pow(0!..1, 1!..inf) => 0..1
number::pow(0!..1, 1..!inf) => 0..1
number::pow(0!..1, 2..inf) => 0..1
number::pow(0!..1, 2!..inf) => 0..1
number::pow(0!..1, 2.5..inf) => 0..1
number::pow(0!..1, -inf..0) => -inf | 1..inf
number::pow(0!..1, -inf..inf) => -inf | 0..inf
number::pow(0!..1, -inf!..inf) => -inf | 0..inf
number::pow(0!..1, -inf..!inf) => -inf | 0..inf
number::pow(0!..1, -inf!..!inf) => -inf | 0..inf
number::pow(0!..1, int(0..1)) => 0!..1
number::pow(0!..1, int(0..2)) => 0!..1
number::pow(0!..1, int(1..2)) => 0!..1
number::pow(0!..1, int(5..20)) => 0!..1
number::pow(0!..1, int(-20..-5)) => 1..!inf
number::pow(0!..1, int(-10..10)) => 0!..!inf
number::pow(0!..1, int(0..inf)) => 0!..1
number::pow(0!..1, int(1..inf)) => 0!..1
number::pow(0!..1, int(-inf..0)) => 1..!inf
number::pow(0!..1, int(-inf..1)) => 0!..!inf
number::pow(0!..1, int(-inf..inf)) => 0!..!inf
number::pow(0!..1, nonInt(0..1)) => 0..1
number::pow(0!..1, nonInt(0..2)) => 0..1
number::pow(0!..1, nonInt(-1..2)) => -inf | 0..inf
number::pow(0!..1, nonInt(0..inf)) => 0..1
number::pow(0!..1, nonInt(-1..inf)) => -inf | 0..inf
number::pow(0!..1, nonInt(-inf..0)) => -inf | 1..inf
number::pow(0!..1, nonInt(-inf..1)) => -inf | 0..inf
number::pow(0!..1, nonInt(-inf..inf)) => -inf | 0..inf
number::pow(0!..1, 1 | int(3..4)) => 0!..1
number::pow(0..!1, number) => -inf | 0..inf | nan
number::pow(0..!1, -3.14) => -inf | 1..inf
number::pow(0..!1, -2) => 1!..!inf
number::pow(0..!1, -1) => 1!..!inf
number::pow(0..!1, -0.5) => -inf | 1..inf
number::pow(0..!1, 0) => 1
number::pow(0..!1, 0.5) => 0..1
number::pow(0..!1, 1) => 0..!1
number::pow(0..!1, 2) => 0..!1
number::pow(0..!1, 2.78) => 0..1
number::pow(0..!1, 3) => 0..!1
number::pow(0..!1, 3.14) => 0..1
number::pow(0..!1, 10) => 0..!1
number::pow(0..!1, 100) => 0..!1
number::pow(0..!1, -inf) => inf
number::pow(0..!1, inf) => 0
number::pow(0..!1, nan) => nan
number::pow(0..!1, 0..1) => 0..1
number::pow(0..!1, 0!..1) => 0..1
number::pow(0..!1, 0..!1) => 0..1
number::pow(0..!1, 0..2) => 0..1
number::pow(0..!1, 0!..!2) => 0..1
number::pow(0..!1, 0.5..1.5) => 0..1
number::pow(0..!1, 0.5..2.5) => 0..1
number::pow(0..!1, 0.5!..2.5) => 0..1
number::pow(0..!1, 0.5..!2.5) => 0..1
number::pow(0..!1, -2.56..3.35) => -inf | 0..inf
number::pow(0..!1, 0.5..0.75) => 0..1
number::pow(0..!1, 1..2) => 0..1
number::pow(0..!1, 0..inf) => 0..1
number::pow(0..!1, 0!..inf) => 0..1
number::pow(0..!1, 0..!inf) => 0..1
number::pow(0..!1, 0!..!inf) => 0..1
number::pow(0..!1, 1..inf) => 0..1
number::pow(0..!1, 1!..inf) => 0..1
number::pow(0..!1, 1..!inf) => 0..1
number::pow(0..!1, 2..inf) => 0..1
number::pow(0..!1, 2!..inf) => 0..1
number::pow(0..!1, 2.5..inf) => 0..1
number::pow(0..!1, -inf..0) => -inf | 1..inf
number::pow(0..!1, -inf..inf) => -inf | 0..inf
number::pow(0..!1, -inf!..inf) => -inf | 0..inf
number::pow(0..!1, -inf..!inf) => -inf | 0..inf
number::pow(0..!1, -inf!..!inf) => -inf | 0..inf
number::pow(0..!1, int(0..1)) => 0..1
number::pow(0..!1, int(0..2)) => 0..1
number::pow(0..!1, int(1..2)) => 0..!1
number::pow(0..!1, int(5..20)) => 0..!1
number::pow(0..!1, int(-20..-5)) => 1!..!inf
number::pow(0..!1, int(-10..10)) => 0..!inf
number::pow(0..!1, int(0..inf)) => 0..1
number::pow(0..!1, int(1..inf)) => 0..!1
number::pow(0..!1, int(-inf..0)) => 1..!inf
number::pow(0..!1, int(-inf..1)) => 0..!inf
number::pow(0..!1, int(-inf..inf)) => 0..!inf
number::pow(0..!1, nonInt(0..1)) => 0..1
number::pow(0..!1, nonInt(0..2)) => 0..1
number::pow(0..!1, nonInt(-1..2)) => -inf | 0..inf
number::pow(0..!1, nonInt(0..inf)) => 0..1
number::pow(0..!1, nonInt(-1..inf)) => -inf | 0..inf
number::pow(0..!1, nonInt(-inf..0)) => -inf | 1..inf
number::pow(0..!1, nonInt(-inf..1)) => -inf | 0..inf
number::pow(0..!1, nonInt(-inf..inf)) => -inf | 0..inf
number::pow(0..!1, 1 | int(3..4)) => 0..!1
number::pow(0..2, number) => -inf | 0..inf | nan
number::pow(0..2, -3.14) => -inf | 0.11343989441464511..inf
number::pow(0..2, -2) => 0.25..!inf
number::pow(0..2, -1) => 0.5..!inf
number::pow(0..2, -0.5) => -inf | 0.7071067811865476..inf
number::pow(0..2, 0) => 1
number::pow(0..2, 0.5) => 0..1.414213562373095
number::pow(0..2, 1) => 0..2
number::pow(0..2, 2) => 0..4
number::pow(0..2, 2.78) => 0..6.868523491502028
number::pow(0..2, 3) => 0..8
number::pow(0..2, 3.14) => 0..8.815240927012885
number::pow(0..2, 10) => 0..1024
number::pow(0..2, 100) => 0..1.2676506002282294e+30
number::pow(0..2, -inf) => int(0..1) | inf
number::pow(0..2, inf) => int(0..1) | inf
number::pow(0..2, nan) => 1 | nan
number::pow(0..2, 0..1) => 0..2
number::pow(0..2, 0!..1) => 0..2
number::pow(0..2, 0..!1) => 0..2
number::pow(0..2, 0..2) => 0..4
number::pow(0..2, 0!..!2) => 0..4
number::pow(0..2, 0.5..1.5) => 0..2.82842712474619
number::pow(0..2, 0.5..2.5) => 0..5.65685424949238
number::pow(0..2, 0.5!..2.5) => 0..5.65685424949238
number::pow(0..2, 0.5..!2.5) => 0..5.65685424949238
number::pow(0..2, -2.56..3.35) => -inf | 0..inf
number::pow(0..2, 0.5..0.75) => 0..1.681792830507429
number::pow(0..2, 1..2) => 0..4
number::pow(0..2, 0..inf) => 0..inf
number::pow(0..2, 0!..inf) => 0..inf
number::pow(0..2, 0..!inf) => 0..inf
number::pow(0..2, 0!..!inf) => 0..inf
number::pow(0..2, 1..inf) => 0..inf
number::pow(0..2, 1!..inf) => 0..inf
number::pow(0..2, 1..!inf) => 0..inf
number::pow(0..2, 2..inf) => 0..inf
number::pow(0..2, 2!..inf) => 0..inf
number::pow(0..2, 2.5..inf) => 0..inf
number::pow(0..2, -inf..0) => -inf | 0..inf
number::pow(0..2, -inf..inf) => -inf | 0..inf
number::pow(0..2, -inf!..inf) => -inf | 0..inf
number::pow(0..2, -inf..!inf) => -inf | 0..inf
number::pow(0..2, -inf!..!inf) => -inf | 0..inf
number::pow(0..2, int(0..1)) => 0..2
number::pow(0..2, int(0..2)) => 0..4
number::pow(0..2, int(1..2)) => 0..4
number::pow(0..2, int(5..20)) => 0..1048576
number::pow(0..2, int(-20..-5)) => 9.5367431640625e-7..!inf
number::pow(0..2, int(-10..10)) => 0..!inf
number::pow(0..2, int(0..inf)) => 0..inf
number::pow(0..2, int(1..inf)) => 0..inf
number::pow(0..2, int(-inf..0)) => 0..!inf
number::pow(0..2, int(-inf..1)) => 0..!inf
number::pow(0..2, int(-inf..inf)) => 0..inf
number::pow(0..2, nonInt(0..1)) => 0..2
number::pow(0..2, nonInt(0..2)) => 0..4
number::pow(0..2, nonInt(-1..2)) => -inf | 0..inf
number::pow(0..2, nonInt(0..inf)) => 0..inf
number::pow(0..2, nonInt(-1..inf)) => -inf | 0..inf
number::pow(0..2, nonInt(-inf..0)) => -inf | 0..inf
number::pow(0..2, nonInt(-inf..1)) => -inf | 0..inf
number::pow(0..2, nonInt(-inf..inf)) => -inf | 0..inf
number::pow(0..2, 1 | int(3..4)) => 0..16
number::pow(0!..!2, number) => -inf | 0..inf | nan
number::pow(0!..!2, -3.14) => -inf | 0.11343989441464511..inf
number::pow(0!..!2, -2) => 0.25!..!inf
number::pow(0!..!2, -1) => 0.5!..!inf
number::pow(0!..!2, -0.5) => -inf | 0.7071067811865476..inf
number::pow(0!..!2, 0) => 1
number::pow(0!..!2, 0.5) => 0..1.414213562373095
number::pow(0!..!2, 1) => 0!..!2
number::pow(0!..!2, 2) => 0!..!4
number::pow(0!..!2, 2.78) => 0..6.868523491502028
number::pow(0!..!2, 3) => 0!..!8
number::pow(0!..!2, 3.14) => 0..8.815240927012885
number::pow(0!..!2, 10) => 0!..!1024
number::pow(0!..!2, 100) => 0!..!1.2676506002282294e+30
number::pow(0!..!2, -inf) => int(0..1) | inf
number::pow(0!..!2, inf) => int(0..1) | inf
number::pow(0!..!2, nan) => 1 | nan
number::pow(0!..!2, 0..1) => 0..2
number::pow(0!..!2, 0!..1) => 0..2
number::pow(0!..!2, 0..!1) => 0..2
number::pow(0!..!2, 0..2) => 0..4
number::pow(0!..!2, 0!..!2) => 0..4
number::pow(0!..!2, 0.5..1.5) => 0..2.82842712474619
number::pow(0!..!2, 0.5..2.5) => 0..5.65685424949238
number::pow(0!..!2, 0.5!..2.5) => 0..5.65685424949238
number::pow(0!..!2, 0.5..!2.5) => 0..5.65685424949238
number::pow(0!..!2, -2.56..3.35) => -inf | 0..inf
number::pow(0!..!2, 0.5..0.75) => 0..1.681792830507429
number::pow(0!..!2, 1..2) => 0..4
number::pow(0!..!2, 0..inf) => 0..inf
number::pow(0!..!2, 0!..inf) => 0..inf
number::pow(0!..!2, 0..!inf) => 0..inf
number::pow(0!..!2, 0!..!inf) => 0..inf
number::pow(0!..!2, 1..inf) => 0..inf
number::pow(0!..!2, 1!..inf) => 0..inf
number::pow(0!..!2, 1..!inf) => 0..inf
number::pow(0!..!2, 2..inf) => 0..inf
number::pow(0!..!2, 2!..inf) => 0..inf
number::pow(0!..!2, 2.5..inf) => 0..inf
number::pow(0!..!2, -inf..0) => -inf | 0..inf
number::pow(0!..!2, -inf..inf) => -inf | 0..inf
number::pow(0!..!2, -inf!..inf) => -inf | 0..inf
number::pow(0!..!2, -inf..!inf) => -inf | 0..inf
number::pow(0!..!2, -inf!..!inf) => -inf | 0..inf
number::pow(0!..!2, int(0..1)) => 0!..!2
number::pow(0!..!2, int(0..2)) => 0!..!4
number::pow(0!..!2, int(1..2)) => 0!..!4
number::pow(0!..!2, int(5..20)) => 0!..!1048576
number::pow(0!..!2, int(-20..-5)) => 9.5367431640625e-7!..!inf
number::pow(0!..!2, int(-10..10)) => 0!..!inf
number::pow(0!..!2, int(0..inf)) => 0!..inf
number::pow(0!..!2, int(1..inf)) => 0!..inf
number::pow(0!..!2, int(-inf..0)) => 0..!inf
number::pow(0!..!2, int(-inf..1)) => 0..!inf
number::pow(0!..!2, int(-inf..inf)) => 0..inf
number::pow(0!..!2, nonInt(0..1)) => 0..2
number::pow(0!..!2, nonInt(0..2)) => 0..4
number::pow(0!..!2, nonInt(-1..2)) => -inf | 0..inf
number::pow(0!..!2, nonInt(0..inf)) => 0..inf
number::pow(0!..!2, nonInt(-1..inf)) => -inf | 0..inf
number::pow(0!..!2, nonInt(-inf..0)) => -inf | 0..inf
number::pow(0!..!2, nonInt(-inf..1)) => -inf | 0..inf
number::pow(0!..!2, nonInt(-inf..inf)) => -inf | 0..inf
number::pow(0!..!2, 1 | int(3..4)) => 0!..!16
number::pow(0.5..1.5, number) => -inf | 0..inf | nan
number::pow(0.5..1.5, -3.14) => 0.2799454714891685..8.815240927012885
number::pow(0.5..1.5, -2) => 0.4444444444444444..4
number::pow(0.5..1.5, -1) => 0.6666666666666666..2
number::pow(0.5..1.5, -0.5) => 0.8164965809277261..1.4142135623730951
number::pow(0.5..1.5, 0) => 1
number::pow(0.5..1.5, 0.5) => 0.7071067811865475..1.224744871391589
number::pow(0.5..1.5, 1) => 0.5..1.5
number::pow(0.5..1.5, 2) => 0.25..2.25
number::pow(0.5..1.5, 2.78) => 0.14559169830855703..3.086979178319044
number::pow(0.5..1.5, 3) => 0.125..3.375
number::pow(0.5..1.5, 3.14) => 0.11343989441464511..3.572124223622926
number::pow(0.5..1.5, 10) => 0.0009765625..57.6650390625
number::pow(0.5..1.5, 100) => 7.888609052210118e-31..406561177535215200
number::pow(0.5..1.5, -inf) => int(0..1) | inf
number::pow(0.5..1.5, inf) => int(0..1) | inf
number::pow(0.5..1.5, nan) => 1 | nan
number::pow(0.5..1.5, 0..1) => 0.5..1.5
number::pow(0.5..1.5, 0!..1) => 0.5..1.5
number::pow(0.5..1.5, 0..!1) => 0.5..1.5
number::pow(0.5..1.5, 0..2) => 0.25..2.25
number::pow(0.5..1.5, 0!..!2) => 0.25..2.25
number::pow(0.5..1.5, 0.5..1.5) => 0.3535533905932738..1.8371173070873836
number::pow(0.5..1.5, 0.5..2.5) => 0.17677669529663687..2.7556759606310757
number::pow(0.5..1.5, 0.5!..2.5) => 0.17677669529663687..2.7556759606310757
number::pow(0.5..1.5, 0.5..!2.5) => 0.17677669529663687..2.7556759606310757
number::pow(0.5..1.5, -2.56..3.35) => 0.09807301223709386..5.8970768691644055
number::pow(0.5..1.5, 0.5..0.75) => 0.5946035575013605..1.3554030054147672
number::pow(0.5..1.5, 1..2) => 0.25..2.25
number::pow(0.5..1.5, 0..inf) => 0..inf
number::pow(0.5..1.5, 0!..inf) => 0..inf
number::pow(0.5..1.5, 0..!inf) => 0..inf
number::pow(0.5..1.5, 0!..!inf) => 0..inf
number::pow(0.5..1.5, 1..inf) => 0..inf
number::pow(0.5..1.5, 1!..inf) => 0..inf
number::pow(0.5..1.5, 1..!inf) => 0..inf
number::pow(0.5..1.5, 2..inf) => 0..inf
number::pow(0.5..1.5, 2!..inf) => 0..inf
number::pow(0.5..1.5, 2.5..inf) => 0..inf
number::pow(0.5..1.5, -inf..0) => -inf | 0..inf
number::pow(0.5..1.5, -inf..inf) => -inf | 0..inf
number::pow(0.5..1.5, -inf!..inf) => -inf | 0..inf
number::pow(0.5..1.5, -inf..!inf) => -inf | 0..inf
number::pow(0.5..1.5, -inf!..!inf) => -inf | 0..inf
number::pow(0.5..1.5, int(0..1)) => 0.5..1.5
number::pow(0.5..1.5, int(0..2)) => 0.25..2.25
number::pow(0.5..1.5, int(1..2)) => 0.25..2.25
number::pow(0.5..1.5, int(5..20)) => 9.5367431640625e-7..3325.256730079651
number::pow(0.5..1.5, int(-20..-5)) => 0.0003007286598217175..1048576
number::pow(0.5..1.5, int(-10..10)) => 0.0009765625..1024
number::pow(0.5..1.5, int(0..inf)) => 0..inf
number::pow(0.5..1.5, int(1..inf)) => 0..inf
number::pow(0.5..1.5, int(-inf..0)) => -inf | 0..inf
number::pow(0.5..1.5, int(-inf..1)) => -inf | 0..inf
number::pow(0.5..1.5, int(-inf..inf)) => -inf | 0..inf
number::pow(0.5..1.5, nonInt(0..1)) => 0.5..1.5
number::pow(0.5..1.5, nonInt(0..2)) => 0.25..2.25
number::pow(0.5..1.5, nonInt(-1..2)) => 0.25..2.25
number::pow(0.5..1.5, nonInt(0..inf)) => 0..inf
number::pow(0.5..1.5, nonInt(-1..inf)) => 0..inf
number::pow(0.5..1.5, nonInt(-inf..0)) => -inf | 0..inf
number::pow(0.5..1.5, nonInt(-inf..1)) => -inf | 0..inf
number::pow(0.5..1.5, nonInt(-inf..inf)) => -inf | 0..inf
number::pow(0.5..1.5, 1 | int(3..4)) => 0.0625..5.0625
number::pow(0.5..2.5, number) => -inf | 0..inf | nan
number::pow(0.5..2.5, -3.14) => 0.056294811954871495..8.815240927012885
number::pow(0.5..2.5, -2) => 0.16..4
number::pow(0.5..2.5, -1) => 0.4..2
number::pow(0.5..2.5, -0.5) => 0.6324555320336759..1.4142135623730951
number::pow(0.5..2.5, 0) => 1
number::pow(0.5..2.5, 0.5) => 0.7071067811865475..1.5811388300841898
number::pow(0.5..2.5, 1) => 0.5..2.5
number::pow(0.5..2.5, 2) => 0.25..6.25
number::pow(0.5..2.5, 2.78) => 0.14559169830855703..12.772420968961741
number::pow(0.5..2.5, 3) => 0.125..15.625
number::pow(0.5..2.5, 3.14) => 0.11343989441464511..17.76362626100689
number::pow(0.5..2.5, 10) => 0.0009765625..9536.7431640625
number::pow(0.5..2.5, 100) => 7.888609052210118e-31..6.223015277861142e+39
number::pow(0.5..2.5, -inf) => int(0..1) | inf
number::pow(0.5..2.5, inf) => int(0..1) | inf
number::pow(0.5..2.5, nan) => 1 | nan
number::pow(0.5..2.5, 0..1) => 0.5..2.5
number::pow(0.5..2.5, 0!..1) => 0.5..2.5
number::pow(0.5..2.5, 0..!1) => 0.5..2.5
number::pow(0.5..2.5, 0..2) => 0.25..6.25
number::pow(0.5..2.5, 0!..!2) => 0.25..6.25
number::pow(0.5..2.5, 0.5..1.5) => 0.3535533905932738..3.9528470752104745
number::pow(0.5..2.5, 0.5..2.5) => 0.17677669529663687..9.882117688026186
number::pow(0.5..2.5, 0.5!..2.5) => 0.17677669529663687..9.882117688026186
number::pow(0.5..2.5, 0.5..!2.5) => 0.17677669529663687..9.882117688026186
number::pow(0.5..2.5, -2.56..3.35) => 0.09577972324120078..21.53272674051236
number::pow(0.5..2.5, 0.5..0.75) => 0.5946035575013605..1.9881768219176268
number::pow(0.5..2.5, 1..2) => 0.25..6.25
number::pow(0.5..2.5, 0..inf) => 0..inf
number::pow(0.5..2.5, 0!..inf) => 0..inf
number::pow(0.5..2.5, 0..!inf) => 0..inf
number::pow(0.5..2.5, 0!..!inf) => 0..inf
number::pow(0.5..2.5, 1..inf) => 0..inf
number::pow(0.5..2.5, 1!..inf) => 0..inf
number::pow(0.5..2.5, 1..!inf) => 0..inf
number::pow(0.5..2.5, 2..inf) => 0..inf
number::pow(0.5..2.5, 2!..inf) => 0..inf
number::pow(0.5..2.5, 2.5..inf) => 0..inf
number::pow(0.5..2.5, -inf..0) => -inf | 0..inf
number::pow(0.5..2.5, -inf..inf) => -inf | 0..inf
number::pow(0.5..2.5, -inf!..inf) => -inf | 0..inf
number::pow(0.5..2.5, -inf..!inf) => -inf | 0..inf
number::pow(0.5..2.5, -inf!..!inf) => -inf | 0..inf
number::pow(0.5..2.5, int(0..1)) => 0.5..2.5
number::pow(0.5..2.5, int(0..2)) => 0.25..6.25
number::pow(0.5..2.5, int(1..2)) => 0.25..6.25
number::pow(0.5..2.5, int(5..20)) => 9.5367431640625e-7..90949470.17729282
number::pow(0.5..2.5, int(-20..-5)) => 1.099511627776e-8..1048576
number::pow(0.5..2.5, int(-10..10)) => 0.0001048576..9536.7431640625
number::pow(0.5..2.5, int(0..inf)) => 0..inf
number::pow(0.5..2.5, int(1..inf)) => 0..inf
number::pow(0.5..2.5, int(-inf..0)) => -inf | 0..inf
number::pow(0.5..2.5, int(-inf..1)) => -inf | 0..inf
number::pow(0.5..2.5, int(-inf..inf)) => -inf | 0..inf
number::pow(0.5..2.5, nonInt(0..1)) => 0.5..2.5
number::pow(0.5..2.5, nonInt(0..2)) => 0.25..6.25
number::pow(0.5..2.5, nonInt(-1..2)) => 0.25..6.25
number::pow(0.5..2.5, nonInt(0..inf)) => 0..inf
number::pow(0.5..2.5, nonInt(-1..inf)) => 0..inf
number::pow(0.5..2.5, nonInt(-inf..0)) => -inf | 0..inf
number::pow(0.5..2.5, nonInt(-inf..1)) => -inf | 0..inf
number::pow(0.5..2.5, nonInt(-inf..inf)) => -inf | 0..inf
number::pow(0.5..2.5, 1 | int(3..4)) => 0.0625..39.0625
number::pow(0.5!..2.5, number) => -inf | 0..inf | nan
number::pow(0.5!..2.5, -3.14) => 0.056294811954871495..8.815240927012885
number::pow(0.5!..2.5, -2) => 0.16..!4
number::pow(0.5!..2.5, -1) => 0.4..!2
number::pow(0.5!..2.5, -0.5) => 0.6324555320336759..1.4142135623730951
number::pow(0.5!..2.5, 0) => 1
number::pow(0.5!..2.5, 0.5) => 0.7071067811865475..1.5811388300841898
number::pow(0.5!..2.5, 1) => 0.5!..2.5
number::pow(0.5!..2.5, 2) => 0.25!..6.25
number::pow(0.5!..2.5, 2.78) => 0.14559169830855703..12.772420968961741
number::pow(0.5!..2.5, 3) => 0.125!..15.625
number::pow(0.5!..2.5, 3.14) => 0.11343989441464511..17.76362626100689
number::pow(0.5!..2.5, 10) => 0.0009765625!..9536.7431640625
number::pow(0.5!..2.5, 100) => 7.888609052210118e-31!..6.223015277861142e+39
number::pow(0.5!..2.5, -inf) => int(0..1) | inf
number::pow(0.5!..2.5, inf) => int(0..1) | inf
number::pow(0.5!..2.5, nan) => 1 | nan
number::pow(0.5!..2.5, 0..1) => 0.5..2.5
number::pow(0.5!..2.5, 0!..1) => 0.5..2.5
number::pow(0.5!..2.5, 0..!1) => 0.5..2.5
number::pow(0.5!..2.5, 0..2) => 0.25..6.25
number::pow(0.5!..2.5, 0!..!2) => 0.25..6.25
number::pow(0.5!..2.5, 0.5..1.5) => 0.3535533905932738..3.9528470752104745
number::pow(0.5!..2.5, 0.5..2.5) => 0.17677669529663687..9.882117688026186
number::pow(0.5!..2.5, 0.5!..2.5) => 0.17677669529663687..9.882117688026186
number::pow(0.5!..2.5, 0.5..!2.5) => 0.17677669529663687..9.882117688026186
number::pow(0.5!..2.5, -2.56..3.35) => 0.09577972324120078..21.53272674051236
number::pow(0.5!..2.5, 0.5..0.75) => 0.5946035575013605..1.9881768219176268
number::pow(0.5!..2.5, 1..2) => 0.25..6.25
number::pow(0.5!..2.5, 0..inf) => 0..inf
number::pow(0.5!..2.5, 0!..inf) => 0..inf
number::pow(0.5!..2.5, 0..!inf) => 0..inf
number::pow(0.5!..2.5, 0!..!inf) => 0..inf
number::pow(0.5!..2.5, 1..inf) => 0..inf
number::pow(0.5!..2.5, 1!..inf) => 0..inf
number::pow(0.5!..2.5, 1..!inf) => 0..inf
number::pow(0.5!..2.5, 2..inf) => 0..inf
number::pow(0.5!..2.5, 2!..inf) => 0..inf
number::pow(0.5!..2.5, 2.5..inf) => 0..inf
number::pow(0.5!..2.5, -inf..0) => -inf | 0..inf
number::pow(0.5!..2.5, -inf..inf) => -inf | 0..inf
number::pow(0.5!..2.5, -inf!..inf) => -inf | 0..inf
number::pow(0.5!..2.5, -inf..!inf) => -inf | 0..inf
number::pow(0.5!..2.5, -inf!..!inf) => -inf | 0..inf
number::pow(0.5!..2.5, int(0..1)) => 0.5!..2.5
number::pow(0.5!..2.5, int(0..2)) => 0.25!..6.25
number::pow(0.5!..2.5, int(1..2)) => 0.25!..6.25
number::pow(0.5!..2.5, int(5..20)) => 9.5367431640625e-7!..90949470.17729282
number::pow(0.5!..2.5, int(-20..-5)) => 1.099511627776e-8..!1048576
number::pow(0.5!..2.5, int(-10..10)) => 0.0001048576..9536.7431640625
number::pow(0.5!..2.5, int(0..inf)) => 0!..inf
number::pow(0.5!..2.5, int(1..inf)) => 0!..inf
number::pow(0.5!..2.5, int(-inf..0)) => 0..!inf
number::pow(0.5!..2.5, int(-inf..1)) => 0..!inf
number::pow(0.5!..2.5, int(-inf..inf)) => 0..inf
number::pow(0.5!..2.5, nonInt(0..1)) => 0.5..2.5
number::pow(0.5!..2.5, nonInt(0..2)) => 0.25..6.25
number::pow(0.5!..2.5, nonInt(-1..2)) => 0.25..6.25
number::pow(0.5!..2.5, nonInt(0..inf)) => 0..inf
number::pow(0.5!..2.5, nonInt(-1..inf)) => 0..inf
number::pow(0.5!..2.5, nonInt(-inf..0)) => -inf | 0..inf
number::pow(0.5!..2.5, nonInt(-inf..1)) => -inf | 0..inf
number::pow(0.5!..2.5, nonInt(-inf..inf)) => -inf | 0..inf
number::pow(0.5!..2.5, 1 | int(3..4)) => 0.0625!..39.0625
number::pow(0.5..!2.5, number) => -inf | 0..inf | nan
number::pow(0.5..!2.5, -3.14) => 0.056294811954871495..8.815240927012885
number::pow(0.5..!2.5, -2) => 0.16!..4
number::pow(0.5..!2.5, -1) => 0.4!..2
number::pow(0.5..!2.5, -0.5) => 0.6324555320336759..1.4142135623730951
number::pow(0.5..!2.5, 0) => 1
number::pow(0.5..!2.5, 0.5) => 0.7071067811865475..1.5811388300841898
number::pow(0.5..!2.5, 1) => 0.5..!2.5
number::pow(0.5..!2.5, 2) => 0.25..!6.25
number::pow(0.5..!2.5, 2.78) => 0.14559169830855703..12.772420968961741
number::pow(0.5..!2.5, 3) => 0.125..!15.625
number::pow(0.5..!2.5, 3.14) => 0.11343989441464511..17.76362626100689
number::pow(0.5..!2.5, 10) => 0.0009765625..!9536.7431640625
number::pow(0.5..!2.5, 100) => 7.888609052210118e-31..!6.223015277861142e+39
number::pow(0.5..!2.5, -inf) => int(0..1) | inf
number::pow(0.5..!2.5, inf) => int(0..1) | inf
number::pow(0.5..!2.5, nan) => 1 | nan
number::pow(0.5..!2.5, 0..1) => 0.5..2.5
number::pow(0.5..!2.5, 0!..1) => 0.5..2.5
number::pow(0.5..!2.5, 0..!1) => 0.5..2.5
number::pow(0.5..!2.5, 0..2) => 0.25..6.25
number::pow(0.5..!2.5, 0!..!2) => 0.25..6.25
number::pow(0.5..!2.5, 0.5..1.5) => 0.3535533905932738..3.9528470752104745
number::pow(0.5..!2.5, 0.5..2.5) => 0.17677669529663687..9.882117688026186
number::pow(0.5..!2.5, 0.5!..2.5) => 0.17677669529663687..9.882117688026186
number::pow(0.5..!2.5, 0.5..!2.5) => 0.17677669529663687..9.882117688026186
number::pow(0.5..!2.5, -2.56..3.35) => 0.09577972324120078..21.53272674051236
number::pow(0.5..!2.5, 0.5..0.75) => 0.5946035575013605..1.9881768219176268
number::pow(0.5..!2.5, 1..2) => 0.25..6.25
number::pow(0.5..!2.5, 0..inf) => 0..inf
number::pow(0.5..!2.5, 0!..inf) => 0..inf
number::pow(0.5..!2.5, 0..!inf) => 0..inf
number::pow(0.5..!2.5, 0!..!inf) => 0..inf
number::pow(0.5..!2.5, 1..inf) => 0..inf
number::pow(0.5..!2.5, 1!..inf) => 0..inf
number::pow(0.5..!2.5, 1..!inf) => 0..inf
number::pow(0.5..!2.5, 2..inf) => 0..inf
number::pow(0.5..!2.5, 2!..inf) => 0..inf
number::pow(0.5..!2.5, 2.5..inf) => 0..inf
number::pow(0.5..!2.5, -inf..0) => -inf | 0..inf
number::pow(0.5..!2.5, -inf..inf) => -inf | 0..inf
number::pow(0.5..!2.5, -inf!..inf) => -inf | 0..inf
number::pow(0.5..!2.5, -inf..!inf) => -inf | 0..inf
number::pow(0.5..!2.5, -inf!..!inf) => -inf | 0..inf
number::pow(0.5..!2.5, int(0..1)) => 0.5..!2.5
number::pow(0.5..!2.5, int(0..2)) => 0.25..!6.25
number::pow(0.5..!2.5, int(1..2)) => 0.25..!6.25
number::pow(0.5..!2.5, int(5..20)) => 9.5367431640625e-7..!90949470.17729282
number::pow(0.5..!2.5, int(-20..-5)) => 1.099511627776e-8!..1048576
number::pow(0.5..!2.5, int(-10..10)) => 0.0001048576!..!9536.7431640625
number::pow(0.5..!2.5, int(0..inf)) => 0..inf
number::pow(0.5..!2.5, int(1..inf)) => 0..inf
number::pow(0.5..!2.5, int(-inf..0)) => -inf | 0..inf
number::pow(0.5..!2.5, int(-inf..1)) => -inf | 0..inf
number::pow(0.5..!2.5, int(-inf..inf)) => -inf | 0..inf
number::pow(0.5..!2.5, nonInt(0..1)) => 0.5..2.5
number::pow(0.5..!2.5, nonInt(0..2)) => 0.25..6.25
number::pow(0.5..!2.5, nonInt(-1..2)) => 0.25..6.25
number::pow(0.5..!2.5, nonInt(0..inf)) => 0..inf
number::pow(0.5..!2.5, nonInt(-1..inf)) => 0..inf
number::pow(0.5..!2.5, nonInt(-inf..0)) => -inf | 0..inf
number::pow(0.5..!2.5, nonInt(-inf..1)) => -inf | 0..inf
number::pow(0.5..!2.5, nonInt(-inf..inf)) => -inf | 0..inf
number::pow(0.5..!2.5, 1 | int(3..4)) => 0.0625..!39.0625
number::pow(-2.56..3.35, number) => number
number::pow(-2.56..3.35, -3.14) => -inf | 0.02245739128199675..inf
number::pow(-2.56..3.35, -2) => 0.08910670527957229..!inf
number::pow(-2.56..3.35, -1) => -inf!..-0.390625 | 0.29850746268656714..!inf
number::pow(-2.56..3.35, -0.5) => -inf | 0.546358364708153..inf
number::pow(-2.56..3.35, 0) => 1
number::pow(-2.56..3.35, 0.5) => 0..1.8303005217723127
number::pow(-2.56..3.35, 1) => -2.56..3.35
number::pow(-2.56..3.35, 2) => 0..11.2225
number::pow(-2.56..3.35, 2.78) => 0..28.815394092142004
number::pow(-2.56..3.35, 3) => -16.777216..37.595375
number::pow(-2.56..3.35, 3.14) => 0..44.528769501454185
number::pow(-2.56..3.35, 10) => 0..178011.50435075798
number::pow(-2.56..3.35, 100) => 0..3.195072400087842e+52
number::pow(-2.56..3.35, -inf) => int(0..1) | inf
number::pow(-2.56..3.35, inf) => int(0..1) | inf
number::pow(-2.56..3.35, nan) => 1 | nan
number::pow(-2.56..3.35, 0..1) => -2.56..3.35
number::pow(-2.56..3.35, 0!..1) => -2.56..3.35
number::pow(-2.56..3.35, 0..!1) => 0..3.35
number::pow(-2.56..3.35, 0..2) => -2.56..11.2225
number::pow(-2.56..3.35, 0!..!2) => -2.56..11.2225
number::pow(-2.56..3.35, 0.5..1.5) => -2.56..6.131506747937247
number::pow(-2.56..3.35, 0.5..2.5) => -2.56..20.540547605589783
number::pow(-2.56..3.35, 0.5!..2.5) => -2.56..20.540547605589783
number::pow(-2.56..3.35, 0.5..!2.5) => -2.56..20.540547605589783
number::pow(-2.56..3.35, -2.56..3.35) => -inf..inf
number::pow(-2.56..3.35, 0.5..0.75) => 0..2.4761879468120442
number::pow(-2.56..3.35, 1..2) => -2.56..11.2225
number::pow(-2.56..3.35, 0..inf) => -inf..inf
number::pow(-2.56..3.35, 0!..inf) => -inf..inf
number::pow(-2.56..3.35, 0..!inf) => -inf..inf
number::pow(-2.56..3.35, 0!..!inf) => -inf..inf
number::pow(-2.56..3.35, 1..inf) => -inf..inf
number::pow(-2.56..3.35, 1!..inf) => -inf..inf
number::pow(-2.56..3.35, 1..!inf) => -inf..inf
number::pow(-2.56..3.35, 2..inf) => -inf..inf
number::pow(-2.56..3.35, 2!..inf) => -inf..inf
number::pow(-2.56..3.35, 2.5..inf) => -inf..inf
number::pow(-2.56..3.35, -inf..0) => -inf..inf
number::pow(-2.56..3.35, -inf..inf) => -inf..inf
number::pow(-2.56..3.35, -inf!..inf) => -inf..inf
number::pow(-2.56..3.35, -inf..!inf) => -inf..inf
number::pow(-2.56..3.35, -inf!..!inf) => -inf..inf
number::pow(-2.56..3.35, int(0..1)) => -2.56..3.35
number::pow(-2.56..3.35, int(0..2)) => -2.56..11.2225
number::pow(-2.56..3.35, int(1..2)) => -2.56..11.2225
number::pow(-2.56..3.35, int(5..20)) => -57089907.70823842..31688095681.219933
number::pow(-2.56..3.35, int(-20..-5)) => -inf!..-1.7516230804060206e-8 | 3.155759216520713e-11..!inf
number::pow(-2.56..3.35, int(-10..10)) => -inf!..!inf
number::pow(-2.56..3.35, int(0..inf)) => -inf..inf
number::pow(-2.56..3.35, int(1..inf)) => -inf..inf
number::pow(-2.56..3.35, int(-inf..0)) => -inf!..!inf
number::pow(-2.56..3.35, int(-inf..1)) => -inf!..!inf
number::pow(-2.56..3.35, int(-inf..inf)) => -inf..inf
number::pow(-2.56..3.35, nonInt(0..1)) => 0..3.35
number::pow(-2.56..3.35, nonInt(0..2)) => 0..11.2225
number::pow(-2.56..3.35, nonInt(-1..2)) => -inf | 0..inf
number::pow(-2.56..3.35, nonInt(0..inf)) => 0..inf
number::pow(-2.56..3.35, nonInt(-1..inf)) => -inf | 0..inf
number::pow(-2.56..3.35, nonInt(-inf..0)) => -inf | 0..inf
number::pow(-2.56..3.35, nonInt(-inf..1)) => -inf | 0..inf
number::pow(-2.56..3.35, nonInt(-inf..inf)) => -inf | 0..inf
number::pow(-2.56..3.35, 1 | int(3..4)) => -16.777216..125.94450625000002
number::pow(0.5..0.75, number) => -inf | 0..inf | nan
number::pow(0.5..0.75, -3.14) => 2.467786777603237..8.815240927012885
number::pow(0.5..0.75, -2) => 1.7777777777777777..4
number::pow(0.5..0.75, -1) => 1.3333333333333333..2
number::pow(0.5..0.75, -0.5) => 1.1547005383792517..1.4142135623730951
number::pow(0.5..0.75, 0) => 1
number::pow(0.5..0.75, 0.5) => 0.7071067811865475..0.8660254037844386
number::pow(0.5..0.75, 1) => 0.5..0.75
number::pow(0.5..0.75, 2) => 0.25..0.5625
number::pow(0.5..0.75, 2.78) => 0.14559169830855703..0.4494385412146234
number::pow(0.5..0.75, 3) => 0.125..0.421875
number::pow(0.5..0.75, 3.14) => 0.11343989441464511..0.40522139476378083
number::pow(0.5..0.75, 10) => 0.0009765625..0.056313514709472656
number::pow(0.5..0.75, 100) => 7.888609052210118e-31..3.207202185381504e-13
number::pow(0.5..0.75, -inf) => inf
number::pow(0.5..0.75, inf) => 0
number::pow(0.5..0.75, nan) => nan
number::pow(0.5..0.75, 0..1) => 0.5..1
number::pow(0.5..0.75, 0!..1) => 0.5..1
number::pow(0.5..0.75, 0..!1) => 0.5..1
number::pow(0.5..0.75, 0..2) => 0.25..1
number::pow(0.5..0.75, 0!..!2) => 0.25..1
number::pow(0.5..0.75, 0.5..1.5) => 0.3535533905932738..0.8660254037844386
number::pow(0.5..0.75, 0.5..2.5) => 0.17677669529663687..0.8660254037844386
number::pow(0.5..0.75, 0.5!..2.5) => 0.17677669529663687..0.8660254037844386
number::pow(0.5..0.75, 0.5..!2.5) => 0.17677669529663687..0.8660254037844386
number::pow(0.5..0.75, -2.56..3.35) => 0.09807301223709386..5.8970768691644055
number::pow(0.5..0.75, 0.5..0.75) => 0.5946035575013605..0.8660254037844386
number::pow(0.5..0.75, 1..2) => 0.25..0.75
number::pow(0.5..0.75, 0..inf) => 0..1
number::pow(0.5..0.75, 0!..inf) => 0..1
number::pow(0.5..0.75, 0..!inf) => 0..1
number::pow(0.5..0.75, 0!..!inf) => 0..1
number::pow(0.5..0.75, 1..inf) => 0..0.75
number::pow(0.5..0.75, 1!..inf) => 0..0.75
number::pow(0.5..0.75, 1..!inf) => 0..0.75
number::pow(0.5..0.75, 2..inf) => 0..0.5625
number::pow(0.5..0.75, 2!..inf) => 0..0.5625
number::pow(0.5..0.75, 2.5..inf) => 0..0.4871392896287468
number::pow(0.5..0.75, -inf..0) => -inf | 1..inf
number::pow(0.5..0.75, -inf..inf) => -inf | 0..inf
number::pow(0.5..0.75, -inf!..inf) => -inf | 0..inf
number::pow(0.5..0.75, -inf..!inf) => -inf | 0..inf
number::pow(0.5..0.75, -inf!..!inf) => -inf | 0..inf
number::pow(0.5..0.75, int(0..1)) => 0.5..0.75 | 1
number::pow(0.5..0.75, int(0..2)) => 0.25..0.75 | 1
number::pow(0.5..0.75, int(1..2)) => 0.25..0.75
number::pow(0.5..0.75, int(5..20)) => 9.5367431640625e-7..0.2373046875
number::pow(0.5..0.75, int(-20..-5)) => 4.2139917695473255..1048576
number::pow(0.5..0.75, int(-10..10)) => 0.0009765625..0.75 | 1 | 1.3333333333333333..1024
number::pow(0.5..0.75, int(0..inf)) => 0..0.75 | 1
number::pow(0.5..0.75, int(1..inf)) => 0..0.75
number::pow(0.5..0.75, int(-inf..0)) => -inf | 1 | 1.3333333333333333..inf
number::pow(0.5..0.75, int(-inf..1)) => -inf | 0.5..0.75 | 1 | 1.3333333333333333..inf
number::pow(0.5..0.75, int(-inf..inf)) => -inf | 0..0.75 | 1 | 1.3333333333333333..inf
number::pow(0.5..0.75, nonInt(0..1)) => 0.5..1
number::pow(0.5..0.75, nonInt(0..2)) => 0.25..1
number::pow(0.5..0.75, nonInt(-1..2)) => 0.25..2
number::pow(0.5..0.75, nonInt(0..inf)) => 0..1
number::pow(0.5..0.75, nonInt(-1..inf)) => 0..2
number::pow(0.5..0.75, nonInt(-inf..0)) => -inf | 1..inf
number::pow(0.5..0.75, nonInt(-inf..1)) => -inf | 0.5..inf
number::pow(0.5..0.75, nonInt(-inf..inf)) => -inf | 0..inf
number::pow(0.5..0.75, 1 | int(3..4)) => 0.0625..0.421875 | 0.5..0.75
number::pow(1..2, number) => 0..inf | nan
number::pow(1..2, -3.14) => 0.11343989441464511..1
number::pow(1..2, -2) => 0.25..1
number::pow(1..2, -1) => 0.5..1
number::pow(1..2, -0.5) => 0.7071067811865476..1
number::pow(1..2, 0) => 1
number::pow(1..2, 0.5) => 1..1.414213562373095
number::pow(1..2, 1) => 1..2
number::pow(1..2, 2) => 1..4
number::pow(1..2, 2.78) => 1..6.868523491502028
number::pow(1..2, 3) => 1..8
number::pow(1..2, 3.14) => 1..8.815240927012885
number::pow(1..2, 10) => 1..1024
number::pow(1..2, 100) => 1..1.2676506002282294e+30
number::pow(1..2, -inf) => int(0..1)
number::pow(1..2, inf) => 1 | inf
number::pow(1..2, nan) => 1 | nan
number::pow(1..2, 0..1) => 1..2
number::pow(1..2, 0!..1) => 1..2
number::pow(1..2, 0..!1) => 1..2
number::pow(1..2, 0..2) => 1..4
number::pow(1..2, 0!..!2) => 1..4
number::pow(1..2, 0.5..1.5) => 1..2.82842712474619
number::pow(1..2, 0.5..2.5) => 1..5.65685424949238
number::pow(1..2, 0.5!..2.5) => 1..5.65685424949238
number::pow(1..2, 0.5..!2.5) => 1..5.65685424949238
number::pow(1..2, -2.56..3.35) => 0.169575540930959..10.196485018554096
number::pow(1..2, 0.5..0.75) => 1..1.681792830507429
number::pow(1..2, 1..2) => 1..4
number::pow(1..2, 0..inf) => 1..inf
number::pow(1..2, 0!..inf) => 1..inf
number::pow(1..2, 0..!inf) => 1..inf
number::pow(1..2, 0!..!inf) => 1..inf
number::pow(1..2, 1..inf) => 1..inf
number::pow(1..2, 1!..inf) => 1..inf
number::pow(1..2, 1..!inf) => 1..inf
number::pow(1..2, 2..inf) => 1..inf
number::pow(1..2, 2!..inf) => 1..inf
number::pow(1..2, 2.5..inf) => 1..inf
number::pow(1..2, -inf..0) => 0..1
number::pow(1..2, -inf..inf) => 0..inf
number::pow(1..2, -inf!..inf) => 0..inf
number::pow(1..2, -inf..!inf) => 0..inf
number::pow(1..2, -inf!..!inf) => 0..inf
number::pow(1..2, int(0..1)) => 1..2
number::pow(1..2, int(0..2)) => 1..4
number::pow(1..2, int(1..2)) => 1..4
number::pow(1..2, int(5..20)) => 1..1048576
number::pow(1..2, int(-20..-5)) => 9.5367431640625e-7..1
number::pow(1..2, int(-10..10)) => 0.0009765625..1024
number::pow(1..2, int(0..inf)) => 1..inf
number::pow(1..2, int(1..inf)) => 1..inf
number::pow(1..2, int(-inf..0)) => 0..1
number::pow(1..2, int(-inf..1)) => 0..2
number::pow(1..2, int(-inf..inf)) => 0..inf
number::pow(1..2, nonInt(0..1)) => 1..2
number::pow(1..2, nonInt(0..2)) => 1..4
number::pow(1..2, nonInt(-1..2)) => 0.5..4
number::pow(1..2, nonInt(0..inf)) => 1..inf
number::pow(1..2, nonInt(-1..inf)) => 0.5..inf
number::pow(1..2, nonInt(-inf..0)) => 0..1
number::pow(1..2, nonInt(-inf..1)) => 0..2
number::pow(1..2, nonInt(-inf..inf)) => 0..inf
number::pow(1..2, 1 | int(3..4)) => 1..16
number::pow(0..inf, number) => -inf | 0..inf | nan
number::pow(0..inf, -3.14) => -inf | 0..inf
number::pow(0..inf, -2) => 0..!inf
number::pow(0..inf, -1) => 0..!inf
number::pow(0..inf, -0.5) => -inf | 0..inf
number::pow(0..inf, 0) => 1
number::pow(0..inf, 0.5) => 0..inf
number::pow(0..inf, 1) => 0..inf
number::pow(0..inf, 2) => 0..inf
number::pow(0..inf, 2.78) => 0..inf
number::pow(0..inf, 3) => 0..inf
number::pow(0..inf, 3.14) => 0..inf
number::pow(0..inf, 10) => 0..inf
number::pow(0..inf, 100) => 0..inf
number::pow(0..inf, -inf) => int(0..1) | inf
number::pow(0..inf, inf) => int(0..1) | inf
number::pow(0..inf, nan) => 1 | nan
number::pow(0..inf, 0..1) => 0..inf
number::pow(0..inf, 0!..1) => 0..inf
number::pow(0..inf, 0..!1) => 0..inf
number::pow(0..inf, 0..2) => 0..inf
number::pow(0..inf, 0!..!2) => 0..inf
number::pow(0..inf, 0.5..1.5) => 0..inf
number::pow(0..inf, 0.5..2.5) => 0..inf
number::pow(0..inf, 0.5!..2.5) => 0..inf
number::pow(0..inf, 0.5..!2.5) => 0..inf
number::pow(0..inf, -2.56..3.35) => -inf | 0..inf
number::pow(0..inf, 0.5..0.75) => 0..inf
number::pow(0..inf, 1..2) => 0..inf
number::pow(0..inf, 0..inf) => 0..inf
number::pow(0..inf, 0!..inf) => 0..inf
number::pow(0..inf, 0..!inf) => 0..inf
number::pow(0..inf, 0!..!inf) => 0..inf
number::pow(0..inf, 1..inf) => 0..inf
number::pow(0..inf, 1!..inf) => 0..inf
number::pow(0..inf, 1..!inf) => 0..inf
number::pow(0..inf, 2..inf) => 0..inf
number::pow(0..inf, 2!..inf) => 0..inf
number::pow(0..inf, 2.5..inf) => 0..inf
number::pow(0..inf, -inf..0) => -inf | 0..inf
number::pow(0..inf, -inf..inf) => -inf | 0..inf
number::pow(0..inf, -inf!..inf) => -inf | 0..inf
number::pow(0..inf, -inf..!inf) => -inf | 0..inf
number::pow(0..inf, -inf!..!inf) => -inf | 0..inf
number::pow(0..inf, int(0..1)) => 0..inf
number::pow(0..inf, int(0..2)) => 0..inf
number::pow(0..inf, int(1..2)) => 0..inf
number::pow(0..inf, int(5..20)) => 0..inf
number::pow(0..inf, int(-20..-5)) => 0..!inf
number::pow(0..inf, int(-10..10)) => 0..inf
number::pow(0..inf, int(0..inf)) => 0..inf
number::pow(0..inf, int(1..inf)) => 0..inf
number::pow(0..inf, int(-inf..0)) => 0..!inf
number::pow(0..inf, int(-inf..1)) => 0..inf
number::pow(0..inf, int(-inf..inf)) => 0..inf
number::pow(0..inf, nonInt(0..1)) => 0..inf
number::pow(0..inf, nonInt(0..2)) => 0..inf
number::pow(0..inf, nonInt(-1..2)) => -inf | 0..inf
number::pow(0..inf, nonInt(0..inf)) => 0..inf
number::pow(0..inf, nonInt(-1..inf)) => -inf | 0..inf
number::pow(0..inf, nonInt(-inf..0)) => -inf | 0..inf
number::pow(0..inf, nonInt(-inf..1)) => -inf | 0..inf
number::pow(0..inf, nonInt(-inf..inf)) => -inf | 0..inf
number::pow(0..inf, 1 | int(3..4)) => 0..inf
number::pow(0!..inf, number) => -inf | 0..inf | nan
number::pow(0!..inf, -3.14) => -inf | 0..inf
number::pow(0!..inf, -2) => 0..!inf
number::pow(0!..inf, -1) => 0..!inf
number::pow(0!..inf, -0.5) => -inf | 0..inf
number::pow(0!..inf, 0) => 1
number::pow(0!..inf, 0.5) => 0..inf
number::pow(0!..inf, 1) => 0!..inf
number::pow(0!..inf, 2) => 0!..inf
number::pow(0!..inf, 2.78) => 0..inf
number::pow(0!..inf, 3) => 0!..inf
number::pow(0!..inf, 3.14) => 0..inf
number::pow(0!..inf, 10) => 0!..inf
number::pow(0!..inf, 100) => 0!..inf
number::pow(0!..inf, -inf) => int(0..1) | inf
number::pow(0!..inf, inf) => int(0..1) | inf
number::pow(0!..inf, nan) => 1 | nan
number::pow(0!..inf, 0..1) => 0..inf
number::pow(0!..inf, 0!..1) => 0..inf
number::pow(0!..inf, 0..!1) => 0..inf
number::pow(0!..inf, 0..2) => 0..inf
number::pow(0!..inf, 0!..!2) => 0..inf
number::pow(0!..inf, 0.5..1.5) => 0..inf
number::pow(0!..inf, 0.5..2.5) => 0..inf
number::pow(0!..inf, 0.5!..2.5) => 0..inf
number::pow(0!..inf, 0.5..!2.5) => 0..inf
number::pow(0!..inf, -2.56..3.35) => -inf | 0..inf
number::pow(0!..inf, 0.5..0.75) => 0..inf
number::pow(0!..inf, 1..2) => 0..inf
number::pow(0!..inf, 0..inf) => 0..inf
number::pow(0!..inf, 0!..inf) => 0..inf
number::pow(0!..inf, 0..!inf) => 0..inf
number::pow(0!..inf, 0!..!inf) => 0..inf
number::pow(0!..inf, 1..inf) => 0..inf
number::pow(0!..inf, 1!..inf) => 0..inf
number::pow(0!..inf, 1..!inf) => 0..inf
number::pow(0!..inf, 2..inf) => 0..inf
number::pow(0!..inf, 2!..inf) => 0..inf
number::pow(0!..inf, 2.5..inf) => 0..inf
number::pow(0!..inf, -inf..0) => -inf | 0..inf
number::pow(0!..inf, -inf..inf) => -inf | 0..inf
number::pow(0!..inf, -inf!..inf) => -inf | 0..inf
number::pow(0!..inf, -inf..!inf) => -inf | 0..inf
number::pow(0!..inf, -inf!..!inf) => -inf | 0..inf
number::pow(0!..inf, int(0..1)) => 0!..inf
number::pow(0!..inf, int(0..2)) => 0!..inf
number::pow(0!..inf, int(1..2)) => 0!..inf
number::pow(0!..inf, int(5..20)) => 0!..inf
number::pow(0!..inf, int(-20..-5)) => 0..!inf
number::pow(0!..inf, int(-10..10)) => 0..inf
number::pow(0!..inf, int(0..inf)) => 0!..inf
number::pow(0!..inf, int(1..inf)) => 0!..inf
number::pow(0!..inf, int(-inf..0)) => 0..!inf
number::pow(0!..inf, int(-inf..1)) => 0..inf
number::pow(0!..inf, int(-inf..inf)) => 0..inf
number::pow(0!..inf, nonInt(0..1)) => 0..inf
number::pow(0!..inf, nonInt(0..2)) => 0..inf
number::pow(0!..inf, nonInt(-1..2)) => -inf | 0..inf
number::pow(0!..inf, nonInt(0..inf)) => 0..inf
number::pow(0!..inf, nonInt(-1..inf)) => -inf | 0..inf
number::pow(0!..inf, nonInt(-inf..0)) => -inf | 0..inf
number::pow(0!..inf, nonInt(-inf..1)) => -inf | 0..inf
number::pow(0!..inf, nonInt(-inf..inf)) => -inf | 0..inf
number::pow(0!..inf, 1 | int(3..4)) => 0!..inf
number::pow(0..!inf, number) => -inf | 0..inf | nan
number::pow(0..!inf, -3.14) => -inf | 0..inf
number::pow(0..!inf, -2) => 0!..!inf
number::pow(0..!inf, -1) => 0!..!inf
number::pow(0..!inf, -0.5) => -inf | 0..inf
number::pow(0..!inf, 0) => 1
number::pow(0..!inf, 0.5) => 0..inf
number::pow(0..!inf, 1) => 0..!inf
number::pow(0..!inf, 2) => 0..!inf
number::pow(0..!inf, 2.78) => 0..inf
number::pow(0..!inf, 3) => 0..!inf
number::pow(0..!inf, 3.14) => 0..inf
number::pow(0..!inf, 10) => 0..!inf
number::pow(0..!inf, 100) => 0..!inf
number::pow(0..!inf, -inf) => int(0..1) | inf
number::pow(0..!inf, inf) => int(0..1) | inf
number::pow(0..!inf, nan) => 1 | nan
number::pow(0..!inf, 0..1) => 0..inf
number::pow(0..!inf, 0!..1) => 0..inf
number::pow(0..!inf, 0..!1) => 0..inf
number::pow(0..!inf, 0..2) => 0..inf
number::pow(0..!inf, 0!..!2) => 0..inf
number::pow(0..!inf, 0.5..1.5) => 0..inf
number::pow(0..!inf, 0.5..2.5) => 0..inf
number::pow(0..!inf, 0.5!..2.5) => 0..inf
number::pow(0..!inf, 0.5..!2.5) => 0..inf
number::pow(0..!inf, -2.56..3.35) => -inf | 0..inf
number::pow(0..!inf, 0.5..0.75) => 0..inf
number::pow(0..!inf, 1..2) => 0..inf
number::pow(0..!inf, 0..inf) => 0..inf
number::pow(0..!inf, 0!..inf) => 0..inf
number::pow(0..!inf, 0..!inf) => 0..inf
number::pow(0..!inf, 0!..!inf) => 0..inf
number::pow(0..!inf, 1..inf) => 0..inf
number::pow(0..!inf, 1!..inf) => 0..inf
number::pow(0..!inf, 1..!inf) => 0..inf
number::pow(0..!inf, 2..inf) => 0..inf
number::pow(0..!inf, 2!..inf) => 0..inf
number::pow(0..!inf, 2.5..inf) => 0..inf
number::pow(0..!inf, -inf..0) => -inf | 0..inf
number::pow(0..!inf, -inf..inf) => -inf | 0..inf
number::pow(0..!inf, -inf!..inf) => -inf | 0..inf
number::pow(0..!inf, -inf..!inf) => -inf | 0..inf
number::pow(0..!inf, -inf!..!inf) => -inf | 0..inf
number::pow(0..!inf, int(0..1)) => 0..!inf
number::pow(0..!inf, int(0..2)) => 0..!inf
number::pow(0..!inf, int(1..2)) => 0..!inf
number::pow(0..!inf, int(5..20)) => 0..!inf
number::pow(0..!inf, int(-20..-5)) => 0!..!inf
number::pow(0..!inf, int(-10..10)) => 0..!inf
number::pow(0..!inf, int(0..inf)) => 0..!inf
number::pow(0..!inf, int(1..inf)) => 0..!inf
number::pow(0..!inf, int(-inf..0)) => 0!..!inf
number::pow(0..!inf, int(-inf..1)) => 0..!inf
number::pow(0..!inf, int(-inf..inf)) => 0..!inf
number::pow(0..!inf, nonInt(0..1)) => 0..inf
number::pow(0..!inf, nonInt(0..2)) => 0..inf
number::pow(0..!inf, nonInt(-1..2)) => -inf | 0..inf
number::pow(0..!inf, nonInt(0..inf)) => 0..inf
number::pow(0..!inf, nonInt(-1..inf)) => -inf | 0..inf
number::pow(0..!inf, nonInt(-inf..0)) => -inf | 0..inf
number::pow(0..!inf, nonInt(-inf..1)) => -inf | 0..inf
number::pow(0..!inf, nonInt(-inf..inf)) => -inf | 0..inf
number::pow(0..!inf, 1 | int(3..4)) => 0..!inf
number::pow(0!..!inf, number) => -inf | 0..inf | nan
number::pow(0!..!inf, -3.14) => -inf | 0..inf
number::pow(0!..!inf, -2) => 0!..!inf
number::pow(0!..!inf, -1) => 0!..!inf
number::pow(0!..!inf, -0.5) => -inf | 0..inf
number::pow(0!..!inf, 0) => 1
number::pow(0!..!inf, 0.5) => 0..inf
number::pow(0!..!inf, 1) => 0!..!inf
number::pow(0!..!inf, 2) => 0!..!inf
number::pow(0!..!inf, 2.78) => 0..inf
number::pow(0!..!inf, 3) => 0!..!inf
number::pow(0!..!inf, 3.14) => 0..inf
number::pow(0!..!inf, 10) => 0!..!inf
number::pow(0!..!inf, 100) => 0!..!inf
number::pow(0!..!inf, -inf) => int(0..1) | inf
number::pow(0!..!inf, inf) => int(0..1) | inf
number::pow(0!..!inf, nan) => 1 | nan
number::pow(0!..!inf, 0..1) => 0..inf
number::pow(0!..!inf, 0!..1) => 0..inf
number::pow(0!..!inf, 0..!1) => 0..inf
number::pow(0!..!inf, 0..2) => 0..inf
number::pow(0!..!inf, 0!..!2) => 0..inf
number::pow(0!..!inf, 0.5..1.5) => 0..inf
number::pow(0!..!inf, 0.5..2.5) => 0..inf
number::pow(0!..!inf, 0.5!..2.5) => 0..inf
number::pow(0!..!inf, 0.5..!2.5) => 0..inf
number::pow(0!..!inf, -2.56..3.35) => -inf | 0..inf
number::pow(0!..!inf, 0.5..0.75) => 0..inf
number::pow(0!..!inf, 1..2) => 0..inf
number::pow(0!..!inf, 0..inf) => 0..inf
number::pow(0!..!inf, 0!..inf) => 0..inf
number::pow(0!..!inf, 0..!inf) => 0..inf
number::pow(0!..!inf, 0!..!inf) => 0..inf
number::pow(0!..!inf, 1..inf) => 0..inf
number::pow(0!..!inf, 1!..inf) => 0..inf
number::pow(0!..!inf, 1..!inf) => 0..inf
number::pow(0!..!inf, 2..inf) => 0..inf
number::pow(0!..!inf, 2!..inf) => 0..inf
number::pow(0!..!inf, 2.5..inf) => 0..inf
number::pow(0!..!inf, -inf..0) => -inf | 0..inf
number::pow(0!..!inf, -inf..inf) => -inf | 0..inf
number::pow(0!..!inf, -inf!..inf) => -inf | 0..inf
number::pow(0!..!inf, -inf..!inf) => -inf | 0..inf
number::pow(0!..!inf, -inf!..!inf) => -inf | 0..inf
number::pow(0!..!inf, int(0..1)) => 0!..!inf
number::pow(0!..!inf, int(0..2)) => 0!..!inf
number::pow(0!..!inf, int(1..2)) => 0!..!inf
number::pow(0!..!inf, int(5..20)) => 0!..!inf
number::pow(0!..!inf, int(-20..-5)) => 0!..!inf
number::pow(0!..!inf, int(-10..10)) => 0!..!inf
number::pow(0!..!inf, int(0..inf)) => 0!..!inf
number::pow(0!..!inf, int(1..inf)) => 0!..!inf
number::pow(0!..!inf, int(-inf..0)) => 0!..!inf
number::pow(0!..!inf, int(-inf..1)) => 0!..!inf
number::pow(0!..!inf, int(-inf..inf)) => 0!..!inf
number::pow(0!..!inf, nonInt(0..1)) => 0..inf
number::pow(0!..!inf, nonInt(0..2)) => 0..inf
number::pow(0!..!inf, nonInt(-1..2)) => -inf | 0..inf
number::pow(0!..!inf, nonInt(0..inf)) => 0..inf
number::pow(0!..!inf, nonInt(-1..inf)) => -inf | 0..inf
number::pow(0!..!inf, nonInt(-inf..0)) => -inf | 0..inf
number::pow(0!..!inf, nonInt(-inf..1)) => -inf | 0..inf
number::pow(0!..!inf, nonInt(-inf..inf)) => -inf | 0..inf
number::pow(0!..!inf, 1 | int(3..4)) => 0!..!inf
number::pow(1..inf, number) => 0..inf | nan
number::pow(1..inf, -3.14) => 0..1
number::pow(1..inf, -2) => 0..1
number::pow(1..inf, -1) => 0..1
number::pow(1..inf, -0.5) => 0..1
number::pow(1..inf, 0) => 1
number::pow(1..inf, 0.5) => 1..inf
number::pow(1..inf, 1) => 1..inf
number::pow(1..inf, 2) => 1..inf
number::pow(1..inf, 2.78) => 1..inf
number::pow(1..inf, 3) => 1..inf
number::pow(1..inf, 3.14) => 1..inf
number::pow(1..inf, 10) => 1..inf
number::pow(1..inf, 100) => 1..inf
number::pow(1..inf, -inf) => int(0..1)
number::pow(1..inf, inf) => 1 | inf
number::pow(1..inf, nan) => 1 | nan
number::pow(1..inf, 0..1) => 1..inf
number::pow(1..inf, 0!..1) => 1..inf
number::pow(1..inf, 0..!1) => 1..inf
number::pow(1..inf, 0..2) => 1..inf
number::pow(1..inf, 0!..!2) => 1..inf
number::pow(1..inf, 0.5..1.5) => 1..inf
number::pow(1..inf, 0.5..2.5) => 1..inf
number::pow(1..inf, 0.5!..2.5) => 1..inf
number::pow(1..inf, 0.5..!2.5) => 1..inf
number::pow(1..inf, -2.56..3.35) => 0..inf
number::pow(1..inf, 0.5..0.75) => 1..inf
number::pow(1..inf, 1..2) => 1..inf
number::pow(1..inf, 0..inf) => 1..inf
number::pow(1..inf, 0!..inf) => 1..inf
number::pow(1..inf, 0..!inf) => 1..inf
number::pow(1..inf, 0!..!inf) => 1..inf
number::pow(1..inf, 1..inf) => 1..inf
number::pow(1..inf, 1!..inf) => 1..inf
number::pow(1..inf, 1..!inf) => 1..inf
number::pow(1..inf, 2..inf) => 1..inf
number::pow(1..inf, 2!..inf) => 1..inf
number::pow(1..inf, 2.5..inf) => 1..inf
number::pow(1..inf, -inf..0) => 0..1
number::pow(1..inf, -inf..inf) => 0..inf
number::pow(1..inf, -inf!..inf) => 0..inf
number::pow(1..inf, -inf..!inf) => 0..inf
number::pow(1..inf, -inf!..!inf) => 0..inf
number::pow(1..inf, int(0..1)) => 1..inf
number::pow(1..inf, int(0..2)) => 1..inf
number::pow(1..inf, int(1..2)) => 1..inf
number::pow(1..inf, int(5..20)) => 1..inf
number::pow(1..inf, int(-20..-5)) => 0..1
number::pow(1..inf, int(-10..10)) => 0..inf
number::pow(1..inf, int(0..inf)) => 1..inf
number::pow(1..inf, int(1..inf)) => 1..inf
number::pow(1..inf, int(-inf..0)) => 0..1
number::pow(1..inf, int(-inf..1)) => 0..inf
number::pow(1..inf, int(-inf..inf)) => 0..inf
number::pow(1..inf, nonInt(0..1)) => 1..inf
number::pow(1..inf, nonInt(0..2)) => 1..inf
number::pow(1..inf, nonInt(-1..2)) => 0..inf
number::pow(1..inf, nonInt(0..inf)) => 1..inf
number::pow(1..inf, nonInt(-1..inf)) => 0..inf
number::pow(1..inf, nonInt(-inf..0)) => 0..1
number::pow(1..inf, nonInt(-inf..1)) => 0..inf
number::pow(1..inf, nonInt(-inf..inf)) => 0..inf
number::pow(1..inf, 1 | int(3..4)) => 1..inf
number::pow(1!..inf, number) => 0..inf | nan
number::pow(1!..inf, -3.14) => 0..1
number::pow(1!..inf, -2) => 0..!1
number::pow(1!..inf, -1) => 0..!1
number::pow(1!..inf, -0.5) => 0..1
number::pow(1!..inf, 0) => 1
number::pow(1!..inf, 0.5) => 1..inf
number::pow(1!..inf, 1) => 1!..inf
number::pow(1!..inf, 2) => 1!..inf
number::pow(1!..inf, 2.78) => 1..inf
number::pow(1!..inf, 3) => 1!..inf
number::pow(1!..inf, 3.14) => 1..inf
number::pow(1!..inf, 10) => 1!..inf
number::pow(1!..inf, 100) => 1!..inf
number::pow(1!..inf, -inf) => 0
number::pow(1!..inf, inf) => inf
number::pow(1!..inf, nan) => nan
number::pow(1!..inf, 0..1) => 1..inf
number::pow(1!..inf, 0!..1) => 1..inf
number::pow(1!..inf, 0..!1) => 1..inf
number::pow(1!..inf, 0..2) => 1..inf
number::pow(1!..inf, 0!..!2) => 1..inf
number::pow(1!..inf, 0.5..1.5) => 1..inf
number::pow(1!..inf, 0.5..2.5) => 1..inf
number::pow(1!..inf, 0.5!..2.5) => 1..inf
number::pow(1!..inf, 0.5..!2.5) => 1..inf
number::pow(1!..inf, -2.56..3.35) => 0..inf
number::pow(1!..inf, 0.5..0.75) => 1..inf
number::pow(1!..inf, 1..2) => 1..inf
number::pow(1!..inf, 0..inf) => 1..inf
number::pow(1!..inf, 0!..inf) => 1..inf
number::pow(1!..inf, 0..!inf) => 1..inf
number::pow(1!..inf, 0!..!inf) => 1..inf
number::pow(1!..inf, 1..inf) => 1..inf
number::pow(1!..inf, 1!..inf) => 1..inf
number::pow(1!..inf, 1..!inf) => 1..inf
number::pow(1!..inf, 2..inf) => 1..inf
number::pow(1!..inf, 2!..inf) => 1..inf
number::pow(1!..inf, 2.5..inf) => 1..inf
number::pow(1!..inf, -inf..0) => 0..1
number::pow(1!..inf, -inf..inf) => 0..inf
number::pow(1!..inf, -inf!..inf) => 0..inf
number::pow(1!..inf, -inf..!inf) => 0..inf
number::pow(1!..inf, -inf!..!inf) => 0..inf
number::pow(1!..inf, int(0..1)) => 1..inf
number::pow(1!..inf, int(0..2)) => 1..inf
number::pow(1!..inf, int(1..2)) => 1!..inf
number::pow(1!..inf, int(5..20)) => 1!..inf
number::pow(1!..inf, int(-20..-5)) => 0..!1
number::pow(1!..inf, int(-10..10)) => 0..inf
number::pow(1!..inf, int(0..inf)) => 1..inf
number::pow(1!..inf, int(1..inf)) => 1!..inf
number::pow(1!..inf, int(-inf..0)) => 0..1
number::pow(1!..inf, int(-inf..1)) => 0..inf
number::pow(1!..inf, int(-inf..inf)) => 0..inf
number::pow(1!..inf, nonInt(0..1)) => 1..inf
number::pow(1!..inf, nonInt(0..2)) => 1..inf
number::pow(1!..inf, nonInt(-1..2)) => 0..inf
number::pow(1!..inf, nonInt(0..inf)) => 1..inf
number::pow(1!..inf, nonInt(-1..inf)) => 0..inf
number::pow(1!..inf, nonInt(-inf..0)) => 0..1
number::pow(1!..inf, nonInt(-inf..1)) => 0..inf
number::pow(1!..inf, nonInt(-inf..inf)) => 0..inf
number::pow(1!..inf, 1 | int(3..4)) => 1!..inf
number::pow(1..!inf, number) => 0..inf | nan
number::pow(1..!inf, -3.14) => 0..1
number::pow(1..!inf, -2) => 0!..1
number::pow(1..!inf, -1) => 0!..1
number::pow(1..!inf, -0.5) => 0..1
number::pow(1..!inf, 0) => 1
number::pow(1..!inf, 0.5) => 1..inf
number::pow(1..!inf, 1) => 1..!inf
number::pow(1..!inf, 2) => 1..!inf
number::pow(1..!inf, 2.78) => 1..inf
number::pow(1..!inf, 3) => 1..!inf
number::pow(1..!inf, 3.14) => 1..inf
number::pow(1..!inf, 10) => 1..!inf
number::pow(1..!inf, 100) => 1..!inf
number::pow(1..!inf, -inf) => int(0..1)
number::pow(1..!inf, inf) => 1 | inf
number::pow(1..!inf, nan) => 1 | nan
number::pow(1..!inf, 0..1) => 1..inf
number::pow(1..!inf, 0!..1) => 1..inf
number::pow(1..!inf, 0..!1) => 1..inf
number::pow(1..!inf, 0..2) => 1..inf
number::pow(1..!inf, 0!..!2) => 1..inf
number::pow(1..!inf, 0.5..1.5) => 1..inf
number::pow(1..!inf, 0.5..2.5) => 1..inf
number::pow(1..!inf, 0.5!..2.5) => 1..inf
number::pow(1..!inf, 0.5..!2.5) => 1..inf
number::pow(1..!inf, -2.56..3.35) => 0..inf
number::pow(1..!inf, 0.5..0.75) => 1..inf
number::pow(1..!inf, 1..2) => 1..inf
number::pow(1..!inf, 0..inf) => 1..inf
number::pow(1..!inf, 0!..inf) => 1..inf
number::pow(1..!inf, 0..!inf) => 1..inf
number::pow(1..!inf, 0!..!inf) => 1..inf
number::pow(1..!inf, 1..inf) => 1..inf
number::pow(1..!inf, 1!..inf) => 1..inf
number::pow(1..!inf, 1..!inf) => 1..inf
number::pow(1..!inf, 2..inf) => 1..inf
number::pow(1..!inf, 2!..inf) => 1..inf
number::pow(1..!inf, 2.5..inf) => 1..inf
number::pow(1..!inf, -inf..0) => 0..1
number::pow(1..!inf, -inf..inf) => 0..inf
number::pow(1..!inf, -inf!..inf) => 0..inf
number::pow(1..!inf, -inf..!inf) => 0..inf
number::pow(1..!inf, -inf!..!inf) => 0..inf
number::pow(1..!inf, int(0..1)) => 1..!inf
number::pow(1..!inf, int(0..2)) => 1..!inf
number::pow(1..!inf, int(1..2)) => 1..!inf
number::pow(1..!inf, int(5..20)) => 1..!inf
number::pow(1..!inf, int(-20..-5)) => 0!..1
number::pow(1..!inf, int(-10..10)) => 0!..!inf
number::pow(1..!inf, int(0..inf)) => 1..!inf
number::pow(1..!inf, int(1..inf)) => 1..!inf
number::pow(1..!inf, int(-inf..0)) => 0!..1
number::pow(1..!inf, int(-inf..1)) => 0!..!inf
number::pow(1..!inf, int(-inf..inf)) => 0!..!inf
number::pow(1..!inf, nonInt(0..1)) => 1..inf
number::pow(1..!inf, nonInt(0..2)) => 1..inf
number::pow(1..!inf, nonInt(-1..2)) => 0..inf
number::pow(1..!inf, nonInt(0..inf)) => 1..inf
number::pow(1..!inf, nonInt(-1..inf)) => 0..inf
number::pow(1..!inf, nonInt(-inf..0)) => 0..1
number::pow(1..!inf, nonInt(-inf..1)) => 0..inf
number::pow(1..!inf, nonInt(-inf..inf)) => 0..inf
number::pow(1..!inf, 1 | int(3..4)) => 1..!inf
number::pow(2..inf, number) => 0..inf | nan
number::pow(2..inf, -3.14) => 0..0.11343989441464511
number::pow(2..inf, -2) => 0..0.25
number::pow(2..inf, -1) => 0..0.5
number::pow(2..inf, -0.5) => 0..0.7071067811865476
number::pow(2..inf, 0) => 1
number::pow(2..inf, 0.5) => 1.414213562373095..inf
number::pow(2..inf, 1) => 2..inf
number::pow(2..inf, 2) => 4..inf
number::pow(2..inf, 2.78) => 6.868523491502028..inf
number::pow(2..inf, 3) => 8..inf
number::pow(2..inf, 3.14) => 8.815240927012885..inf
number::pow(2..inf, 10) => 1024..inf
number::pow(2..inf, 100) => 1.2676506002282294e+30..inf
number::pow(2..inf, -inf) => 0
number::pow(2..inf, inf) => inf
number::pow(2..inf, nan) => nan
number::pow(2..inf, 0..1) => 1..inf
number::pow(2..inf, 0!..1) => 1..inf
number::pow(2..inf, 0..!1) => 1..inf
number::pow(2..inf, 0..2) => 1..inf
number::pow(2..inf, 0!..!2) => 1..inf
number::pow(2..inf, 0.5..1.5) => 1.414213562373095..inf
number::pow(2..inf, 0.5..2.5) => 1.414213562373095..inf
number::pow(2..inf, 0.5!..2.5) => 1.414213562373095..inf
number::pow(2..inf, 0.5..!2.5) => 1.414213562373095..inf
number::pow(2..inf, -2.56..3.35) => 0..inf
number::pow(2..inf, 0.5..0.75) => 1.414213562373095..inf
number::pow(2..inf, 1..2) => 2..inf
number::pow(2..inf, 0..inf) => 1..inf
number::pow(2..inf, 0!..inf) => 1..inf
number::pow(2..inf, 0..!inf) => 1..inf
number::pow(2..inf, 0!..!inf) => 1..inf
number::pow(2..inf, 1..inf) => 2..inf
number::pow(2..inf, 1!..inf) => 2..inf
number::pow(2..inf, 1..!inf) => 2..inf
number::pow(2..inf, 2..inf) => 4..inf
number::pow(2..inf, 2!..inf) => 4..inf
number::pow(2..inf, 2.5..inf) => 5.65685424949238..inf
number::pow(2..inf, -inf..0) => 0..1
number::pow(2..inf, -inf..inf) => 0..inf
number::pow(2..inf, -inf!..inf) => 0..inf
number::pow(2..inf, -inf..!inf) => 0..inf
number::pow(2..inf, -inf!..!inf) => 0..inf
number::pow(2..inf, int(0..1)) => 1 | 2..inf
number::pow(2..inf, int(0..2)) => 1 | 2..inf
number::pow(2..inf, int(1..2)) => 2..inf
number::pow(2..inf, int(5..20)) => 32..inf
number::pow(2..inf, int(-20..-5)) => 0..0.03125
number::pow(2..inf, int(-10..10)) => 0..0.5 | 1 | 2..inf
number::pow(2..inf, int(0..inf)) => 1 | 2..inf
number::pow(2..inf, int(1..inf)) => 2..inf
number::pow(2..inf, int(-inf..0)) => 0..0.5 | 1
number::pow(2..inf, int(-inf..1)) => 0..0.5 | 1 | 2..inf
number::pow(2..inf, int(-inf..inf)) => 0..0.5 | 1 | 2..inf
number::pow(2..inf, nonInt(0..1)) => 1..inf
number::pow(2..inf, nonInt(0..2)) => 1..inf
number::pow(2..inf, nonInt(-1..2)) => 0..inf
number::pow(2..inf, nonInt(0..inf)) => 1..inf
number::pow(2..inf, nonInt(-1..inf)) => 0..inf
number::pow(2..inf, nonInt(-inf..0)) => 0..1
number::pow(2..inf, nonInt(-inf..1)) => 0..inf
number::pow(2..inf, nonInt(-inf..inf)) => 0..inf
number::pow(2..inf, 1 | int(3..4)) => 2..inf
number::pow(2!..inf, number) => 0..inf | nan
number::pow(2!..inf, -3.14) => 0..0.11343989441464511
number::pow(2!..inf, -2) => 0..!0.25
number::pow(2!..inf, -1) => 0..!0.5
number::pow(2!..inf, -0.5) => 0..0.7071067811865476
number::pow(2!..inf, 0) => 1
number::pow(2!..inf, 0.5) => 1.414213562373095..inf
number::pow(2!..inf, 1) => 2!..inf
number::pow(2!..inf, 2) => 4!..inf
number::pow(2!..inf, 2.78) => 6.868523491502028..inf
number::pow(2!..inf, 3) => 8!..inf
number::pow(2!..inf, 3.14) => 8.815240927012885..inf
number::pow(2!..inf, 10) => 1024!..inf
number::pow(2!..inf, 100) => 1.2676506002282294e+30!..inf
number::pow(2!..inf, -inf) => 0
number::pow(2!..inf, inf) => inf
number::pow(2!..inf, nan) => nan
number::pow(2!..inf, 0..1) => 1..inf
number::pow(2!..inf, 0!..1) => 1..inf
number::pow(2!..inf, 0..!1) => 1..inf
number::pow(2!..inf, 0..2) => 1..inf
number::pow(2!..inf, 0!..!2) => 1..inf
number::pow(2!..inf, 0.5..1.5) => 1.414213562373095..inf
number::pow(2!..inf, 0.5..2.5) => 1.414213562373095..inf
number::pow(2!..inf, 0.5!..2.5) => 1.414213562373095..inf
number::pow(2!..inf, 0.5..!2.5) => 1.414213562373095..inf
number::pow(2!..inf, -2.56..3.35) => 0..inf
number::pow(2!..inf, 0.5..0.75) => 1.414213562373095..inf
number::pow(2!..inf, 1..2) => 2..inf
number::pow(2!..inf, 0..inf) => 1..inf
number::pow(2!..inf, 0!..inf) => 1..inf
number::pow(2!..inf, 0..!inf) => 1..inf
number::pow(2!..inf, 0!..!inf) => 1..inf
number::pow(2!..inf, 1..inf) => 2..inf
number::pow(2!..inf, 1!..inf) => 2..inf
number::pow(2!..inf, 1..!inf) => 2..inf
number::pow(2!..inf, 2..inf) => 4..inf
number::pow(2!..inf, 2!..inf) => 4..inf
number::pow(2!..inf, 2.5..inf) => 5.65685424949238..inf
number::pow(2!..inf, -inf..0) => 0..1
number::pow(2!..inf, -inf..inf) => 0..inf
number::pow(2!..inf, -inf!..inf) => 0..inf
number::pow(2!..inf, -inf..!inf) => 0..inf
number::pow(2!..inf, -inf!..!inf) => 0..inf
number::pow(2!..inf, int(0..1)) => 1 | 2!..inf
number::pow(2!..inf, int(0..2)) => 1 | 2!..inf
number::pow(2!..inf, int(1..2)) => 2!..inf
number::pow(2!..inf, int(5..20)) => 32!..inf
number::pow(2!..inf, int(-20..-5)) => 0..!0.03125
number::pow(2!..inf, int(-10..10)) => 0..!0.5 | 1 | 2!..inf
number::pow(2!..inf, int(0..inf)) => 1 | 2!..inf
number::pow(2!..inf, int(1..inf)) => 2!..inf
number::pow(2!..inf, int(-inf..0)) => 0..!0.5 | 1
number::pow(2!..inf, int(-inf..1)) => 0..!0.5 | 1 | 2!..inf
number::pow(2!..inf, int(-inf..inf)) => 0..!0.5 | 1 | 2!..inf
number::pow(2!..inf, nonInt(0..1)) => 1..inf
number::pow(2!..inf, nonInt(0..2)) => 1..inf
number::pow(2!..inf, nonInt(-1..2)) => 0..inf
number::pow(2!..inf, nonInt(0..inf)) => 1..inf
number::pow(2!..inf, nonInt(-1..inf)) => 0..inf
number::pow(2!..inf, nonInt(-inf..0)) => 0..1
number::pow(2!..inf, nonInt(-inf..1)) => 0..inf
number::pow(2!..inf, nonInt(-inf..inf)) => 0..inf
number::pow(2!..inf, 1 | int(3..4)) => 2!..inf
number::pow(2.5..inf, number) => 0..inf | nan
number::pow(2.5..inf, -3.14) => 0..0.056294811954871495
number::pow(2.5..inf, -2) => 0..0.16
number::pow(2.5..inf, -1) => 0..0.4
number::pow(2.5..inf, -0.5) => 0..0.6324555320336759
number::pow(2.5..inf, 0) => 1
number::pow(2.5..inf, 0.5) => 1.5811388300841898..inf
number::pow(2.5..inf, 1) => 2.5..inf
number::pow(2.5..inf, 2) => 6.25..inf
number::pow(2.5..inf, 2.78) => 12.772420968961741..inf
number::pow(2.5..inf, 3) => 15.625..inf
number::pow(2.5..inf, 3.14) => 17.76362626100689..inf
number::pow(2.5..inf, 10) => 9536.7431640625..inf
number::pow(2.5..inf, 100) => 6.223015277861142e+39..inf
number::pow(2.5..inf, -inf) => 0
number::pow(2.5..inf, inf) => inf
number::pow(2.5..inf, nan) => nan
number::pow(2.5..inf, 0..1) => 1..inf
number::pow(2.5..inf, 0!..1) => 1..inf
number::pow(2.5..inf, 0..!1) => 1..inf
number::pow(2.5..inf, 0..2) => 1..inf
number::pow(2.5..inf, 0!..!2) => 1..inf
number::pow(2.5..inf, 0.5..1.5) => 1.5811388300841898..inf
number::pow(2.5..inf, 0.5..2.5) => 1.5811388300841898..inf
number::pow(2.5..inf, 0.5!..2.5) => 1.5811388300841898..inf
number::pow(2.5..inf, 0.5..!2.5) => 1.5811388300841898..inf
number::pow(2.5..inf, -2.56..3.35) => 0..inf
number::pow(2.5..inf, 0.5..0.75) => 1.5811388300841898..inf
number::pow(2.5..inf, 1..2) => 2.5..inf
number::pow(2.5..inf, 0..inf) => 1..inf
number::pow(2.5..inf, 0!..inf) => 1..inf
number::pow(2.5..inf, 0..!inf) => 1..inf
number::pow(2.5..inf, 0!..!inf) => 1..inf
number::pow(2.5..inf, 1..inf) => 2.5..inf
number::pow(2.5..inf, 1!..inf) => 2.5..inf
number::pow(2.5..inf, 1..!inf) => 2.5..inf
number::pow(2.5..inf, 2..inf) => 6.25..inf
number::pow(2.5..inf, 2!..inf) => 6.25..inf
number::pow(2.5..inf, 2.5..inf) => 9.882117688026186..inf
number::pow(2.5..inf, -inf..0) => 0..1
number::pow(2.5..inf, -inf..inf) => 0..inf
number::pow(2.5..inf, -inf!..inf) => 0..inf
number::pow(2.5..inf, -inf..!inf) => 0..inf
number::pow(2.5..inf, -inf!..!inf) => 0..inf
number::pow(2.5..inf, int(0..1)) => 1 | 2.5..inf
number::pow(2.5..inf, int(0..2)) => 1 | 2.5..inf
number::pow(2.5..inf, int(1..2)) => 2.5..inf
number::pow(2.5..inf, int(5..20)) => 97.65625..inf
number::pow(2.5..inf, int(-20..-5)) => 0..0.01024
number::pow(2.5..inf, int(-10..10)) => 0..0.4 | 1 | 2.5..inf
number::pow(2.5..inf, int(0..inf)) => 1 | 2.5..inf
number::pow(2.5..inf, int(1..inf)) => 2.5..inf
number::pow(2.5..inf, int(-inf..0)) => 0..0.4 | 1
number::pow(2.5..inf, int(-inf..1)) => 0..0.4 | 1 | 2.5..inf
number::pow(2.5..inf, int(-inf..inf)) => 0..0.4 | 1 | 2.5..inf
number::pow(2.5..inf, nonInt(0..1)) => 1..inf
number::pow(2.5..inf, nonInt(0..2)) => 1..inf
number::pow(2.5..inf, nonInt(-1..2)) => 0..inf
number::pow(2.5..inf, nonInt(0..inf)) => 1..inf
number::pow(2.5..inf, nonInt(-1..inf)) => 0..inf
number::pow(2.5..inf, nonInt(-inf..0)) => 0..1
number::pow(2.5..inf, nonInt(-inf..1)) => 0..inf
number::pow(2.5..inf, nonInt(-inf..inf)) => 0..inf
number::pow(2.5..inf, 1 | int(3..4)) => 2.5..inf
number::pow(-inf..0, number) => number
number::pow(-inf..0, -3.14) => 0
number::pow(-inf..0, -2) => 0..!inf
number::pow(-inf..0, -1) => -inf!..0
number::pow(-inf..0, -0.5) => 0
number::pow(-inf..0, 0) => 1
number::pow(-inf..0, 0.5) => 0 | inf
number::pow(-inf..0, 1) => -inf..0
number::pow(-inf..0, 2) => 0..inf
number::pow(-inf..0, 2.78) => 0 | inf
number::pow(-inf..0, 3) => -inf..0
number::pow(-inf..0, 3.14) => 0 | inf
number::pow(-inf..0, 10) => 0..inf
number::pow(-inf..0, 100) => 0..inf
number::pow(-inf..0, -inf) => int(0..1) | inf
number::pow(-inf..0, inf) => int(0..1) | inf
number::pow(-inf..0, nan) => nan
number::pow(-inf..0, 0..1) => -inf..0 | 1 | inf
number::pow(-inf..0, 0!..1) => -inf..0 | inf
number::pow(-inf..0, 0..!1) => int(0..1) | inf
number::pow(-inf..0, 0..2) => -inf..inf
number::pow(-inf..0, 0!..!2) => -inf..0 | inf
number::pow(-inf..0, 0.5..1.5) => -inf..0 | inf
number::pow(-inf..0, 0.5..2.5) => -inf..inf
number::pow(-inf..0, 0.5!..2.5) => -inf..inf
number::pow(-inf..0, 0.5..!2.5) => -inf..inf
number::pow(-inf..0, -2.56..3.35) => -inf..inf
number::pow(-inf..0, 0.5..0.75) => 0 | inf
number::pow(-inf..0, 1..2) => -inf..inf
number::pow(-inf..0, 0..inf) => -inf..inf
number::pow(-inf..0, 0!..inf) => -inf..inf
number::pow(-inf..0, 0..!inf) => -inf..inf
number::pow(-inf..0, 0!..!inf) => -inf..inf
number::pow(-inf..0, 1..inf) => -inf..inf
number::pow(-inf..0, 1!..inf) => -inf..inf
number::pow(-inf..0, 1..!inf) => -inf..inf
number::pow(-inf..0, 2..inf) => -inf..inf
number::pow(-inf..0, 2!..inf) => -inf..inf
number::pow(-inf..0, 2.5..inf) => -inf..inf
number::pow(-inf..0, -inf..0) => -inf!..inf
number::pow(-inf..0, -inf..inf) => -inf..inf
number::pow(-inf..0, -inf!..inf) => -inf..inf
number::pow(-inf..0, -inf..!inf) => -inf..inf
number::pow(-inf..0, -inf!..!inf) => -inf..inf
number::pow(-inf..0, int(0..1)) => -inf..0 | 1
number::pow(-inf..0, int(0..2)) => -inf..inf
number::pow(-inf..0, int(1..2)) => -inf..inf
number::pow(-inf..0, int(5..20)) => -inf..inf
number::pow(-inf..0, int(-20..-5)) => -inf!..!inf
number::pow(-inf..0, int(-10..10)) => -inf..inf
number::pow(-inf..0, int(0..inf)) => -inf..inf
number::pow(-inf..0, int(1..inf)) => -inf..inf
number::pow(-inf..0, int(-inf..0)) => -inf!..!inf
number::pow(-inf..0, int(-inf..1)) => -inf..!inf
number::pow(-inf..0, int(-inf..inf)) => -inf..inf
number::pow(-inf..0, nonInt(0..1)) => 0 | inf
number::pow(-inf..0, nonInt(0..2)) => 0 | inf
number::pow(-inf..0, nonInt(-1..2)) => 0 | inf
number::pow(-inf..0, nonInt(0..inf)) => 0 | inf
number::pow(-inf..0, nonInt(-1..inf)) => 0 | inf
number::pow(-inf..0, nonInt(-inf..0)) => 0
number::pow(-inf..0, nonInt(-inf..1)) => 0 | inf
number::pow(-inf..0, nonInt(-inf..inf)) => 0 | inf
number::pow(-inf..0, 1 | int(3..4)) => -inf..inf
number::pow(-inf..inf, number) => number
number::pow(-inf..inf, -3.14) => -inf | 0..inf
number::pow(-inf..inf, -2) => 0..!inf
number::pow(-inf..inf, -1) => -inf!..!inf
number::pow(-inf..inf, -0.5) => -inf | 0..inf
number::pow(-inf..inf, 0) => 1
number::pow(-inf..inf, 0.5) => 0..inf
number::pow(-inf..inf, 1) => -inf..inf
number::pow(-inf..inf, 2) => 0..inf
number::pow(-inf..inf, 2.78) => 0..inf
number::pow(-inf..inf, 3) => -inf..inf
number::pow(-inf..inf, 3.14) => 0..inf
number::pow(-inf..inf, 10) => 0..inf
number::pow(-inf..inf, 100) => 0..inf
number::pow(-inf..inf, -inf) => int(0..1) | inf
number::pow(-inf..inf, inf) => int(0..1) | inf
number::pow(-inf..inf, nan) => 1 | nan
number::pow(-inf..inf, 0..1) => -inf..inf
number::pow(-inf..inf, 0!..1) => -inf..inf
number::pow(-inf..inf, 0..!1) => 0..inf
number::pow(-inf..inf, 0..2) => -inf..inf
number::pow(-inf..inf, 0!..!2) => -inf..inf
number::pow(-inf..inf, 0.5..1.5) => -inf..inf
number::pow(-inf..inf, 0.5..2.5) => -inf..inf
number::pow(-inf..inf, 0.5!..2.5) => -inf..inf
number::pow(-inf..inf, 0.5..!2.5) => -inf..inf
number::pow(-inf..inf, -2.56..3.35) => -inf..inf
number::pow(-inf..inf, 0.5..0.75) => 0..inf
number::pow(-inf..inf, 1..2) => -inf..inf
number::pow(-inf..inf, 0..inf) => -inf..inf
number::pow(-inf..inf, 0!..inf) => -inf..inf
number::pow(-inf..inf, 0..!inf) => -inf..inf
number::pow(-inf..inf, 0!..!inf) => -inf..inf
number::pow(-inf..inf, 1..inf) => -inf..inf
number::pow(-inf..inf, 1!..inf) => -inf..inf
number::pow(-inf..inf, 1..!inf) => -inf..inf
number::pow(-inf..inf, 2..inf) => -inf..inf
number::pow(-inf..inf, 2!..inf) => -inf..inf
number::pow(-inf..inf, 2.5..inf) => -inf..inf
number::pow(-inf..inf, -inf..0) => -inf..inf
number::pow(-inf..inf, -inf..inf) => -inf..inf
number::pow(-inf..inf, -inf!..inf) => -inf..inf
number::pow(-inf..inf, -inf..!inf) => -inf..inf
number::pow(-inf..inf, -inf!..!inf) => -inf..inf
number::pow(-inf..inf, int(0..1)) => -inf..inf
number::pow(-inf..inf, int(0..2)) => -inf..inf
number::pow(-inf..inf, int(1..2)) => -inf..inf
number::pow(-inf..inf, int(5..20)) => -inf..inf
number::pow(-inf..inf, int(-20..-5)) => -inf!..!inf
number::pow(-inf..inf, int(-10..10)) => -inf..inf
number::pow(-inf..inf, int(0..inf)) => -inf..inf
number::pow(-inf..inf, int(1..inf)) => -inf..inf
number::pow(-inf..inf, int(-inf..0)) => -inf!..!inf
number::pow(-inf..inf, int(-inf..1)) => -inf..inf
number::pow(-inf..inf, int(-inf..inf)) => -inf..inf
number::pow(-inf..inf, nonInt(0..1)) => 0..inf
number::pow(-inf..inf, nonInt(0..2)) => 0..inf
number::pow(-inf..inf, nonInt(-1..2)) => -inf | 0..inf
number::pow(-inf..inf, nonInt(0..inf)) => 0..inf
number::pow(-inf..inf, nonInt(-1..inf)) => -inf | 0..inf
number::pow(-inf..inf, nonInt(-inf..0)) => -inf | 0..inf
number::pow(-inf..inf, nonInt(-inf..1)) => -inf | 0..inf
number::pow(-inf..inf, nonInt(-inf..inf)) => -inf | 0..inf
number::pow(-inf..inf, 1 | int(3..4)) => -inf..inf
number::pow(-inf!..inf, number) => number
number::pow(-inf!..inf, -3.14) => -inf | 0..inf
number::pow(-inf!..inf, -2) => 0..!inf
number::pow(-inf!..inf, -1) => -inf!..!inf
number::pow(-inf!..inf, -0.5) => -inf | 0..inf
number::pow(-inf!..inf, 0) => 1
number::pow(-inf!..inf, 0.5) => 0..inf
number::pow(-inf!..inf, 1) => -inf!..inf
number::pow(-inf!..inf, 2) => 0..inf
number::pow(-inf!..inf, 2.78) => 0..inf
number::pow(-inf!..inf, 3) => -inf!..inf
number::pow(-inf!..inf, 3.14) => 0..inf
number::pow(-inf!..inf, 10) => 0..inf
number::pow(-inf!..inf, 100) => 0..inf
number::pow(-inf!..inf, -inf) => int(0..1) | inf
number::pow(-inf!..inf, inf) => int(0..1) | inf
number::pow(-inf!..inf, nan) => 1 | nan
number::pow(-inf!..inf, 0..1) => -inf!..inf
number::pow(-inf!..inf, 0!..1) => -inf!..inf
number::pow(-inf!..inf, 0..!1) => 0..inf
number::pow(-inf!..inf, 0..2) => -inf!..inf
number::pow(-inf!..inf, 0!..!2) => -inf!..inf
number::pow(-inf!..inf, 0.5..1.5) => -inf!..inf
number::pow(-inf!..inf, 0.5..2.5) => -inf!..inf
number::pow(-inf!..inf, 0.5!..2.5) => -inf!..inf
number::pow(-inf!..inf, 0.5..!2.5) => -inf!..inf
number::pow(-inf!..inf, -2.56..3.35) => -inf..inf
number::pow(-inf!..inf, 0.5..0.75) => 0..inf
number::pow(-inf!..inf, 1..2) => -inf!..inf
number::pow(-inf!..inf, 0..inf) => -inf!..inf
number::pow(-inf!..inf, 0!..inf) => -inf!..inf
number::pow(-inf!..inf, 0..!inf) => -inf!..inf
number::pow(-inf!..inf, 0!..!inf) => -inf!..inf
number::pow(-inf!..inf, 1..inf) => -inf!..inf
number::pow(-inf!..inf, 1!..inf) => -inf!..inf
number::pow(-inf!..inf, 1..!inf) => -inf!..inf
number::pow(-inf!..inf, 2..inf) => -inf!..inf
number::pow(-inf!..inf, 2!..inf) => -inf!..inf
number::pow(-inf!..inf, 2.5..inf) => -inf!..inf
number::pow(-inf!..inf, -inf..0) => -inf..inf
number::pow(-inf!..inf, -inf..inf) => -inf..inf
number::pow(-inf!..inf, -inf!..inf) => -inf..inf
number::pow(-inf!..inf, -inf..!inf) => -inf..inf
number::pow(-inf!..inf, -inf!..!inf) => -inf..inf
number::pow(-inf!..inf, int(0..1)) => -inf!..inf
number::pow(-inf!..inf, int(0..2)) => -inf!..inf
number::pow(-inf!..inf, int(1..2)) => -inf!..inf
number::pow(-inf!..inf, int(5..20)) => -inf!..inf
number::pow(-inf!..inf, int(-20..-5)) => -inf!..!inf
number::pow(-inf!..inf, int(-10..10)) => -inf!..inf
number::pow(-inf!..inf, int(0..inf)) => -inf!..inf
number::pow(-inf!..inf, int(1..inf)) => -inf!..inf
number::pow(-inf!..inf, int(-inf..0)) => -inf!..!inf
number::pow(-inf!..inf, int(-inf..1)) => -inf!..inf
number::pow(-inf!..inf, int(-inf..inf)) => -inf!..inf
number::pow(-inf!..inf, nonInt(0..1)) => 0..inf
number::pow(-inf!..inf, nonInt(0..2)) => 0..inf
number::pow(-inf!..inf, nonInt(-1..2)) => -inf | 0..inf
number::pow(-inf!..inf, nonInt(0..inf)) => 0..inf
number::pow(-inf!..inf, nonInt(-1..inf)) => -inf | 0..inf
number::pow(-inf!..inf, nonInt(-inf..0)) => -inf | 0..inf
number::pow(-inf!..inf, nonInt(-inf..1)) => -inf | 0..inf
number::pow(-inf!..inf, nonInt(-inf..inf)) => -inf | 0..inf
number::pow(-inf!..inf, 1 | int(3..4)) => -inf!..inf
number::pow(-inf..!inf, number) => number
number::pow(-inf..!inf, -3.14) => -inf | 0..inf
number::pow(-inf..!inf, -2) => 0..!inf
number::pow(-inf..!inf, -1) => -inf!..!inf
number::pow(-inf..!inf, -0.5) => -inf | 0..inf
number::pow(-inf..!inf, 0) => 1
number::pow(-inf..!inf, 0.5) => 0..inf
number::pow(-inf..!inf, 1) => -inf..!inf
number::pow(-inf..!inf, 2) => 0..inf
number::pow(-inf..!inf, 2.78) => 0..inf
number::pow(-inf..!inf, 3) => -inf..!inf
number::pow(-inf..!inf, 3.14) => 0..inf
number::pow(-inf..!inf, 10) => 0..inf
number::pow(-inf..!inf, 100) => 0..inf
number::pow(-inf..!inf, -inf) => int(0..1) | inf
number::pow(-inf..!inf, inf) => int(0..1) | inf
number::pow(-inf..!inf, nan) => 1 | nan
number::pow(-inf..!inf, 0..1) => -inf..inf
number::pow(-inf..!inf, 0!..1) => -inf..inf
number::pow(-inf..!inf, 0..!1) => 0..inf
number::pow(-inf..!inf, 0..2) => -inf..inf
number::pow(-inf..!inf, 0!..!2) => -inf..inf
number::pow(-inf..!inf, 0.5..1.5) => -inf..inf
number::pow(-inf..!inf, 0.5..2.5) => -inf..inf
number::pow(-inf..!inf, 0.5!..2.5) => -inf..inf
number::pow(-inf..!inf, 0.5..!2.5) => -inf..inf
number::pow(-inf..!inf, -2.56..3.35) => -inf..inf
number::pow(-inf..!inf, 0.5..0.75) => 0..inf
number::pow(-inf..!inf, 1..2) => -inf..inf
number::pow(-inf..!inf, 0..inf) => -inf..inf
number::pow(-inf..!inf, 0!..inf) => -inf..inf
number::pow(-inf..!inf, 0..!inf) => -inf..inf
number::pow(-inf..!inf, 0!..!inf) => -inf..inf
number::pow(-inf..!inf, 1..inf) => -inf..inf
number::pow(-inf..!inf, 1!..inf) => -inf..inf
number::pow(-inf..!inf, 1..!inf) => -inf..inf
number::pow(-inf..!inf, 2..inf) => -inf..inf
number::pow(-inf..!inf, 2!..inf) => -inf..inf
number::pow(-inf..!inf, 2.5..inf) => -inf..inf
number::pow(-inf..!inf, -inf..0) => -inf..inf
number::pow(-inf..!inf, -inf..inf) => -inf..inf
number::pow(-inf..!inf, -inf!..inf) => -inf..inf
number::pow(-inf..!inf, -inf..!inf) => -inf..inf
number::pow(-inf..!inf, -inf!..!inf) => -inf..inf
number::pow(-inf..!inf, int(0..1)) => -inf..!inf
number::pow(-inf..!inf, int(0..2)) => -inf..inf
number::pow(-inf..!inf, int(1..2)) => -inf..inf
number::pow(-inf..!inf, int(5..20)) => -inf..inf
number::pow(-inf..!inf, int(-20..-5)) => -inf!..!inf
number::pow(-inf..!inf, int(-10..10)) => -inf..inf
number::pow(-inf..!inf, int(0..inf)) => -inf..inf
number::pow(-inf..!inf, int(1..inf)) => -inf..inf
number::pow(-inf..!inf, int(-inf..0)) => -inf!..!inf
number::pow(-inf..!inf, int(-inf..1)) => -inf..!inf
number::pow(-inf..!inf, int(-inf..inf)) => -inf..inf
number::pow(-inf..!inf, nonInt(0..1)) => 0..inf
number::pow(-inf..!inf, nonInt(0..2)) => 0..inf
number::pow(-inf..!inf, nonInt(-1..2)) => -inf | 0..inf
number::pow(-inf..!inf, nonInt(0..inf)) => 0..inf
number::pow(-inf..!inf, nonInt(-1..inf)) => -inf | 0..inf
number::pow(-inf..!inf, nonInt(-inf..0)) => -inf | 0..inf
number::pow(-inf..!inf, nonInt(-inf..1)) => -inf | 0..inf
number::pow(-inf..!inf, nonInt(-inf..inf)) => -inf | 0..inf
number::pow(-inf..!inf, 1 | int(3..4)) => -inf..inf
number::pow(-inf!..!inf, number) => number
number::pow(-inf!..!inf, -3.14) => -inf | 0..inf
number::pow(-inf!..!inf, -2) => 0!..!inf
number::pow(-inf!..!inf, -1) => -inf!..!0 | 0!..!inf
number::pow(-inf!..!inf, -0.5) => -inf | 0..inf
number::pow(-inf!..!inf, 0) => 1
number::pow(-inf!..!inf, 0.5) => 0..inf
number::pow(-inf!..!inf, 1) => -inf!..!inf
number::pow(-inf!..!inf, 2) => 0..!inf
number::pow(-inf!..!inf, 2.78) => 0..inf
number::pow(-inf!..!inf, 3) => -inf!..!inf
number::pow(-inf!..!inf, 3.14) => 0..inf
number::pow(-inf!..!inf, 10) => 0..!inf
number::pow(-inf!..!inf, 100) => 0..!inf
number::pow(-inf!..!inf, -inf) => int(0..1) | inf
number::pow(-inf!..!inf, inf) => int(0..1) | inf
number::pow(-inf!..!inf, nan) => 1 | nan
number::pow(-inf!..!inf, 0..1) => -inf!..inf
number::pow(-inf!..!inf, 0!..1) => -inf!..inf
number::pow(-inf!..!inf, 0..!1) => 0..inf
number::pow(-inf!..!inf, 0..2) => -inf!..inf
number::pow(-inf!..!inf, 0!..!2) => -inf!..inf
number::pow(-inf!..!inf, 0.5..1.5) => -inf!..inf
number::pow(-inf!..!inf, 0.5..2.5) => -inf!..inf
number::pow(-inf!..!inf, 0.5!..2.5) => -inf!..inf
number::pow(-inf!..!inf, 0.5..!2.5) => -inf!..inf
number::pow(-inf!..!inf, -2.56..3.35) => -inf..inf
number::pow(-inf!..!inf, 0.5..0.75) => 0..inf
number::pow(-inf!..!inf, 1..2) => -inf!..inf
number::pow(-inf!..!inf, 0..inf) => -inf!..inf
number::pow(-inf!..!inf, 0!..inf) => -inf!..inf
number::pow(-inf!..!inf, 0..!inf) => -inf!..inf
number::pow(-inf!..!inf, 0!..!inf) => -inf!..inf
number::pow(-inf!..!inf, 1..inf) => -inf!..inf
number::pow(-inf!..!inf, 1!..inf) => -inf!..inf
number::pow(-inf!..!inf, 1..!inf) => -inf!..inf
number::pow(-inf!..!inf, 2..inf) => -inf!..inf
number::pow(-inf!..!inf, 2!..inf) => -inf!..inf
number::pow(-inf!..!inf, 2.5..inf) => -inf!..inf
number::pow(-inf!..!inf, -inf..0) => -inf..inf
number::pow(-inf!..!inf, -inf..inf) => -inf..inf
number::pow(-inf!..!inf, -inf!..inf) => -inf..inf
number::pow(-inf!..!inf, -inf..!inf) => -inf..inf
number::pow(-inf!..!inf, -inf!..!inf) => -inf..inf
number::pow(-inf!..!inf, int(0..1)) => -inf!..!inf
number::pow(-inf!..!inf, int(0..2)) => -inf!..!inf
number::pow(-inf!..!inf, int(1..2)) => -inf!..!inf
number::pow(-inf!..!inf, int(5..20)) => -inf!..!inf
number::pow(-inf!..!inf, int(-20..-5)) => -inf!..!0 | 0!..!inf
number::pow(-inf!..!inf, int(-10..10)) => -inf!..!inf
number::pow(-inf!..!inf, int(0..inf)) => -inf!..!inf
number::pow(-inf!..!inf, int(1..inf)) => -inf!..!inf
number::pow(-inf!..!inf, int(-inf..0)) => -inf!..!0 | 0!..!inf
number::pow(-inf!..!inf, int(-inf..1)) => -inf!..!inf
number::pow(-inf!..!inf, int(-inf..inf)) => -inf!..!inf
number::pow(-inf!..!inf, nonInt(0..1)) => 0..inf
number::pow(-inf!..!inf, nonInt(0..2)) => 0..inf
number::pow(-inf!..!inf, nonInt(-1..2)) => -inf | 0..inf
number::pow(-inf!..!inf, nonInt(0..inf)) => 0..inf
number::pow(-inf!..!inf, nonInt(-1..inf)) => -inf | 0..inf
number::pow(-inf!..!inf, nonInt(-inf..0)) => -inf | 0..inf
number::pow(-inf!..!inf, nonInt(-inf..1)) => -inf | 0..inf
number::pow(-inf!..!inf, nonInt(-inf..inf)) => -inf | 0..inf
number::pow(-inf!..!inf, 1 | int(3..4)) => -inf!..!inf
number::pow(int(0..1), number) => int(0..1) | inf | nan
number::pow(int(0..1), -3.14) => 1
number::pow(int(0..1), -2) => 1
number::pow(int(0..1), -1) => 1
number::pow(int(0..1), -0.5) => 1
number::pow(int(0..1), 0) => 1
number::pow(int(0..1), 0.5) => int(0..1)
number::pow(int(0..1), 1) => int(0..1)
number::pow(int(0..1), 2) => int(0..1)
number::pow(int(0..1), 2.78) => int(0..1)
number::pow(int(0..1), 3) => int(0..1)
number::pow(int(0..1), 3.14) => int(0..1)
number::pow(int(0..1), 10) => int(0..1)
number::pow(int(0..1), 100) => int(0..1)
number::pow(int(0..1), -inf) => 1 | inf
number::pow(int(0..1), inf) => int(0..1)
number::pow(int(0..1), nan) => 1 | nan
number::pow(int(0..1), 0..1) => int(0..1)
number::pow(int(0..1), 0!..1) => int(0..1)
number::pow(int(0..1), 0..!1) => int(0..1)
number::pow(int(0..1), 0..2) => int(0..1)
number::pow(int(0..1), 0!..!2) => int(0..1)
number::pow(int(0..1), 0.5..1.5) => int(0..1)
number::pow(int(0..1), 0.5..2.5) => int(0..1)
number::pow(int(0..1), 0.5!..2.5) => int(0..1)
number::pow(int(0..1), 0.5..!2.5) => int(0..1)
number::pow(int(0..1), -2.56..3.35) => int(0..1)
number::pow(int(0..1), 0.5..0.75) => int(0..1)
number::pow(int(0..1), 1..2) => int(0..1)
number::pow(int(0..1), 0..inf) => int(0..1)
number::pow(int(0..1), 0!..inf) => int(0..1)
number::pow(int(0..1), 0..!inf) => int(0..1)
number::pow(int(0..1), 0!..!inf) => int(0..1)
number::pow(int(0..1), 1..inf) => int(0..1)
number::pow(int(0..1), 1!..inf) => int(0..1)
number::pow(int(0..1), 1..!inf) => int(0..1)
number::pow(int(0..1), 2..inf) => int(0..1)
number::pow(int(0..1), 2!..inf) => int(0..1)
number::pow(int(0..1), 2.5..inf) => int(0..1)
number::pow(int(0..1), -inf..0) => 1 | inf
number::pow(int(0..1), -inf..inf) => int(0..1) | inf
number::pow(int(0..1), -inf!..inf) => int(0..1)
number::pow(int(0..1), -inf..!inf) => int(0..1) | inf
number::pow(int(0..1), -inf!..!inf) => int(0..1)
number::pow(int(0..1), int(0..1)) => int(0..1)
number::pow(int(0..1), int(0..2)) => int(0..1)
number::pow(int(0..1), int(1..2)) => int(0..1)
number::pow(int(0..1), int(5..20)) => int(0..1)
number::pow(int(0..1), int(-20..-5)) => 1
number::pow(int(0..1), int(-10..10)) => int(0..1)
number::pow(int(0..1), int(0..inf)) => int(0..1)
number::pow(int(0..1), int(1..inf)) => int(0..1)
number::pow(int(0..1), int(-inf..0)) => 1
number::pow(int(0..1), int(-inf..1)) => int(0..1)
number::pow(int(0..1), int(-inf..inf)) => int(0..1)
number::pow(int(0..1), nonInt(0..1)) => int(0..1)
number::pow(int(0..1), nonInt(0..2)) => int(0..1)
number::pow(int(0..1), nonInt(-1..2)) => int(0..1)
number::pow(int(0..1), nonInt(0..inf)) => int(0..1)
number::pow(int(0..1), nonInt(-1..inf)) => int(0..1)
number::pow(int(0..1), nonInt(-inf..0)) => 1
number::pow(int(0..1), nonInt(-inf..1)) => int(0..1)
number::pow(int(0..1), nonInt(-inf..inf)) => int(0..1)
number::pow(int(0..1), 1 | int(3..4)) => int(0..1)
number::pow(int(0..2), number) => 0..inf | nan
number::pow(int(0..2), -3.14) => 0.11343989441464511 | 1
number::pow(int(0..2), -2) => 0.25 | 1
number::pow(int(0..2), -1) => 0.5 | 1
number::pow(int(0..2), -0.5) => 0.7071067811865476 | 1
number::pow(int(0..2), 0) => 1
number::pow(int(0..2), 0.5) => int(0..1) | 1.414213562373095
number::pow(int(0..2), 1) => int(0..2)
number::pow(int(0..2), 2) => int(0..1) | 4
number::pow(int(0..2), 2.78) => int(0..1) | 6.868523491502028
number::pow(int(0..2), 3) => int(0..1) | 8
number::pow(int(0..2), 3.14) => int(0..1) | 8.815240927012885
number::pow(int(0..2), 10) => int(0..1) | 1024
number::pow(int(0..2), 100) => int(0..1) | 1.2676506002282294e+30
number::pow(int(0..2), -inf) => int(0..1) | inf
number::pow(int(0..2), inf) => int(0..1) | inf
number::pow(int(0..2), nan) => 1 | nan
number::pow(int(0..2), 0..1) => 0 | 1..2
number::pow(int(0..2), 0!..1) => 0 | 1..2
number::pow(int(0..2), 0..!1) => 0 | 1..2
number::pow(int(0..2), 0..2) => 0 | 1..4
number::pow(int(0..2), 0!..!2) => 0 | 1..4
number::pow(int(0..2), 0.5..1.5) => int(0..1) | 1.414213562373095..2.82842712474619
number::pow(int(0..2), 0.5..2.5) => int(0..1) | 1.414213562373095..5.65685424949238
number::pow(int(0..2), 0.5!..2.5) => int(0..1) | 1.414213562373095..5.65685424949238
number::pow(int(0..2), 0.5..!2.5) => int(0..1) | 1.414213562373095..5.65685424949238
number::pow(int(0..2), -2.56..3.35) => 0 | 0.169575540930959..10.196485018554096
number::pow(int(0..2), 0.5..0.75) => int(0..1) | 1.414213562373095..1.681792830507429
number::pow(int(0..2), 1..2) => int(0..1) | 2..4
number::pow(int(0..2), 0..inf) => 0 | 1..inf
number::pow(int(0..2), 0!..inf) => 0 | 1..inf
number::pow(int(0..2), 0..!inf) => 0 | 1..inf
number::pow(int(0..2), 0!..!inf) => 0 | 1..inf
number::pow(int(0..2), 1..inf) => int(0..1) | 2..inf
number::pow(int(0..2), 1!..inf) => int(0..1) | 2..inf
number::pow(int(0..2), 1..!inf) => int(0..1) | 2..inf
number::pow(int(0..2), 2..inf) => int(0..1) | 4..inf
number::pow(int(0..2), 2!..inf) => int(0..1) | 4..inf
number::pow(int(0..2), 2.5..inf) => int(0..1) | 5.65685424949238..inf
number::pow(int(0..2), -inf..0) => 0..1 | inf
number::pow(int(0..2), -inf..inf) => 0..inf
number::pow(int(0..2), -inf!..inf) => 0..inf
number::pow(int(0..2), -inf..!inf) => 0..inf
number::pow(int(0..2), -inf!..!inf) => 0..inf
number::pow(int(0..2), int(0..1)) => int(0..2)
number::pow(int(0..2), int(0..2)) => int(0..2) | 4
number::pow(int(0..2), int(1..2)) => int(0..2) | 4
number::pow(int(0..2), int(5..20)) => int(0..1) | int(32..1048576)
number::pow(int(0..2), int(-20..-5)) => 9.5367431640625e-7..0.03125 | 1
number::pow(int(0..2), int(-10..10)) => int(0..2) | 0.0009765625..0.25 | 0.5 | int(4..1024)
number::pow(int(0..2), int(0..inf)) => int(0..2) | int(4..inf)
number::pow(int(0..2), int(1..inf)) => int(0..2) | int(4..inf)
number::pow(int(0..2), int(-inf..0)) => 0!..0.25 | 0.5 | 1
number::pow(int(0..2), int(-inf..1)) => 0..0.25 | 0.5 | int(1..2)
number::pow(int(0..2), int(-inf..inf)) => 0..0.25 | 0.5 | int(1..2) | int(4..inf)
number::pow(int(0..2), nonInt(0..1)) => 0 | 1..2
number::pow(int(0..2), nonInt(0..2)) => 0 | 1..4
number::pow(int(0..2), nonInt(-1..2)) => 0 | 0.5..4
number::pow(int(0..2), nonInt(0..inf)) => 0 | 1..inf
number::pow(int(0..2), nonInt(-1..inf)) => 0 | 0.5..inf
number::pow(int(0..2), nonInt(-inf..0)) => 0..1
number::pow(int(0..2), nonInt(-inf..1)) => 0..2
number::pow(int(0..2), nonInt(-inf..inf)) => 0..inf
number::pow(int(0..2), 1 | int(3..4)) => int(0..2) | 8 | 16
number::pow(int(1..2), number) => 0..inf | nan
number::pow(int(1..2), -3.14) => 0.11343989441464511 | 1
number::pow(int(1..2), -2) => 0.25 | 1
number::pow(int(1..2), -1) => 0.5 | 1
number::pow(int(1..2), -0.5) => 0.7071067811865476 | 1
number::pow(int(1..2), 0) => 1
number::pow(int(1..2), 0.5) => 1 | 1.414213562373095
number::pow(int(1..2), 1) => int(1..2)
number::pow(int(1..2), 2) => 1 | 4
number::pow(int(1..2), 2.78) => 1 | 6.868523491502028
number::pow(int(1..2), 3) => 1 | 8
number::pow(int(1..2), 3.14) => 1 | 8.815240927012885
number::pow(int(1..2), 10) => 1 | 1024
number::pow(int(1..2), 100) => 1 | 1.2676506002282294e+30
number::pow(int(1..2), -inf) => int(0..1)
number::pow(int(1..2), inf) => 1 | inf
number::pow(int(1..2), nan) => 1 | nan
number::pow(int(1..2), 0..1) => 1..2
number::pow(int(1..2), 0!..1) => 1..2
number::pow(int(1..2), 0..!1) => 1..2
number::pow(int(1..2), 0..2) => 1..4
number::pow(int(1..2), 0!..!2) => 1..4
number::pow(int(1..2), 0.5..1.5) => 1 | 1.414213562373095..2.82842712474619
number::pow(int(1..2), 0.5..2.5) => 1 | 1.414213562373095..5.65685424949238
number::pow(int(1..2), 0.5!..2.5) => 1 | 1.414213562373095..5.65685424949238
number::pow(int(1..2), 0.5..!2.5) => 1 | 1.414213562373095..5.65685424949238
number::pow(int(1..2), -2.56..3.35) => 0.169575540930959..10.196485018554096
number::pow(int(1..2), 0.5..0.75) => 1 | 1.414213562373095..1.681792830507429
number::pow(int(1..2), 1..2) => 1 | 2..4
number::pow(int(1..2), 0..inf) => 1..inf
number::pow(int(1..2), 0!..inf) => 1..inf
number::pow(int(1..2), 0..!inf) => 1..inf
number::pow(int(1..2), 0!..!inf) => 1..inf
number::pow(int(1..2), 1..inf) => 1 | 2..inf
number::pow(int(1..2), 1!..inf) => 1 | 2..inf
number::pow(int(1..2), 1..!inf) => 1 | 2..inf
number::pow(int(1..2), 2..inf) => 1 | 4..inf
number::pow(int(1..2), 2!..inf) => 1 | 4..inf
number::pow(int(1..2), 2.5..inf) => 1 | 5.65685424949238..inf
number::pow(int(1..2), -inf..0) => 0..1
number::pow(int(1..2), -inf..inf) => 0..inf
number::pow(int(1..2), -inf!..inf) => 0..inf
number::pow(int(1..2), -inf..!inf) => 0..inf
number::pow(int(1..2), -inf!..!inf) => 0..inf
number::pow(int(1..2), int(0..1)) => int(1..2)
number::pow(int(1..2), int(0..2)) => int(1..2) | 4
number::pow(int(1..2), int(1..2)) => int(1..2) | 4
number::pow(int(1..2), int(5..20)) => 1 | int(32..1048576)
number::pow(int(1..2), int(-20..-5)) => 9.5367431640625e-7..0.03125 | 1
number::pow(int(1..2), int(-10..10)) => 0.0009765625..0.25 | 0.5 | int(1..2) | int(4..1024)
number::pow(int(1..2), int(0..inf)) => int(1..2) | int(4..inf)
number::pow(int(1..2), int(1..inf)) => int(1..2) | int(4..inf)
number::pow(int(1..2), int(-inf..0)) => 0!..0.25 | 0.5 | 1
number::pow(int(1..2), int(-inf..1)) => 0!..0.25 | 0.5 | int(1..2)
number::pow(int(1..2), int(-inf..inf)) => 0!..0.25 | 0.5 | int(1..2) | int(4..inf)
number::pow(int(1..2), nonInt(0..1)) => 1..2
number::pow(int(1..2), nonInt(0..2)) => 1..4
number::pow(int(1..2), nonInt(-1..2)) => 0.5..4
number::pow(int(1..2), nonInt(0..inf)) => 1..inf
number::pow(int(1..2), nonInt(-1..inf)) => 0.5..inf
number::pow(int(1..2), nonInt(-inf..0)) => 0..1
number::pow(int(1..2), nonInt(-inf..1)) => 0..2
number::pow(int(1..2), nonInt(-inf..inf)) => 0..inf
number::pow(int(1..2), 1 | int(3..4)) => int(1..2) | 8 | 16
number::pow(int(5..20), number) => 0..inf | nan
number::pow(int(5..20), -3.14) => 0.00008217993882107887..0.006386077524252927
number::pow(int(5..20), -2) => 0.0025..0.04
number::pow(int(5..20), -1) => 0.05..0.2
number::pow(int(5..20), -0.5) => 0.223606797749979..0.4472135954999579
number::pow(int(5..20), 0) => 1
number::pow(int(5..20), 0.5) => 2.23606797749979..4.472135954999579
number::pow(int(5..20), 1) => int(5..20)
number::pow(int(5..20), 2) => int(25..400)
number::pow(int(5..20), 2.78) => 87.72767346866682..4138.694671981465
number::pow(int(5..20), 3) => int(125..8000)
number::pow(int(5..20), 3.14) => 156.59064522818875..12168.419864331943
number::pow(int(5..20), 10) => int(9765625..10240000000000)
number::pow(int(5..20), 100) => int(7.888609052210118e+69..1.2676506002282294e+130)
number::pow(int(5..20), -inf) => 0
number::pow(int(5..20), inf) => inf
number::pow(int(5..20), nan) => nan
number::pow(int(5..20), 0..1) => 1..20
number::pow(int(5..20), 0!..1) => 1..20
number::pow(int(5..20), 0..!1) => 1..20
number::pow(int(5..20), 0..2) => 1..400
number::pow(int(5..20), 0!..!2) => 1..400
number::pow(int(5..20), 0.5..1.5) => 2.23606797749979..89.44271909999159
number::pow(int(5..20), 0.5..2.5) => 2.23606797749979..1788.8543819998308
number::pow(int(5..20), 0.5!..2.5) => 2.23606797749979..1788.8543819998308
number::pow(int(5..20), 0.5..!2.5) => 2.23606797749979..1788.8543819998308
number::pow(int(5..20), -2.56..3.35) => 0.0004670498222161435..22827.08655013244
number::pow(int(5..20), 0.5..0.75) => 2.23606797749979..9.457416090031758
number::pow(int(5..20), 1..2) => 5..400
number::pow(int(5..20), 0..inf) => 1..inf
number::pow(int(5..20), 0!..inf) => 1..inf
number::pow(int(5..20), 0..!inf) => 1..inf
number::pow(int(5..20), 0!..!inf) => 1..inf
number::pow(int(5..20), 1..inf) => 5..inf
number::pow(int(5..20), 1!..inf) => 5..inf
number::pow(int(5..20), 1..!inf) => 5..inf
number::pow(int(5..20), 2..inf) => 25..inf
number::pow(int(5..20), 2!..inf) => 25..inf
number::pow(int(5..20), 2.5..inf) => 55.901699437494734..inf
number::pow(int(5..20), -inf..0) => 0..1
number::pow(int(5..20), -inf..inf) => 0..inf
number::pow(int(5..20), -inf!..inf) => 0..inf
number::pow(int(5..20), -inf..!inf) => 0..inf
number::pow(int(5..20), -inf!..!inf) => 0..inf
number::pow(int(5..20), int(0..1)) => 1 | int(5..20)
number::pow(int(5..20), int(0..2)) => 1 | int(5..20) | int(25..400)
number::pow(int(5..20), int(1..2)) => int(5..20) | int(25..400)
number::pow(int(5..20), int(5..20)) => int(3125..1.048576e+26)
number::pow(int(5..20), int(-20..-5)) => 9.5367431640625e-27..0.00032
number::pow(int(5..20), int(-10..10)) => 9.765625e-14..0.04 | 0.05..0.2 | 1 | int(5..20) | int(25..10240000000000)
number::pow(int(5..20), int(0..inf)) => 1 | int(5..20) | int(25..inf)
number::pow(int(5..20), int(1..inf)) => int(5..20) | int(25..inf)
number::pow(int(5..20), int(-inf..0)) => 0!..0.04 | 0.05..0.2 | 1
number::pow(int(5..20), int(-inf..1)) => 0!..0.04 | 0.05..0.2 | 1 | int(5..20)
number::pow(int(5..20), int(-inf..inf)) => 0!..0.04 | 0.05..0.2 | 1 | int(5..20) | int(25..inf)
number::pow(int(5..20), nonInt(0..1)) => 1..20
number::pow(int(5..20), nonInt(0..2)) => 1..400
number::pow(int(5..20), nonInt(-1..2)) => 0.05..400
number::pow(int(5..20), nonInt(0..inf)) => 1..inf
number::pow(int(5..20), nonInt(-1..inf)) => 0.05..inf
number::pow(int(5..20), nonInt(-inf..0)) => 0..1
number::pow(int(5..20), nonInt(-inf..1)) => 0..20
number::pow(int(5..20), nonInt(-inf..inf)) => 0..inf
number::pow(int(5..20), 1 | int(3..4)) => int(5..20) | int(125..160000)
number::pow(int(-20..-5), number) => int(-inf..-125) | int(-20..-5) | -0.2..-0.05 | -0.008..0.04 | 1 | int(25..inf) | inf | nan
number::pow(int(-20..-5), -3.14) => never
number::pow(int(-20..-5), -2) => 0.0025..0.04
number::pow(int(-20..-5), -1) => -0.2..-0.05
number::pow(int(-20..-5), -0.5) => never
number::pow(int(-20..-5), 0) => 1
number::pow(int(-20..-5), 0.5) => never
number::pow(int(-20..-5), 1) => int(-20..-5)
number::pow(int(-20..-5), 2) => int(25..400)
number::pow(int(-20..-5), 2.78) => never
number::pow(int(-20..-5), 3) => int(-8000..-125)
number::pow(int(-20..-5), 3.14) => never
number::pow(int(-20..-5), 10) => int(9765625..10240000000000)
number::pow(int(-20..-5), 100) => int(7.888609052210118e+69..1.2676506002282294e+130)
number::pow(int(-20..-5), -inf) => 0
number::pow(int(-20..-5), inf) => inf
number::pow(int(-20..-5), nan) => nan
number::pow(int(-20..-5), 0..1) => int(-20..-5) | 1
number::pow(int(-20..-5), 0!..1) => int(-20..-5)
number::pow(int(-20..-5), 0..!1) => 1
number::pow(int(-20..-5), 0..2) => int(-20..-5) | 1 | int(25..400)
number::pow(int(-20..-5), 0!..!2) => int(-20..-5)
number::pow(int(-20..-5), 0.5..1.5) => int(-20..-5)
number::pow(int(-20..-5), 0.5..2.5) => int(-20..-5) | int(25..400)
number::pow(int(-20..-5), 0.5!..2.5) => int(-20..-5) | int(25..400)
number::pow(int(-20..-5), 0.5..!2.5) => int(-20..-5) | int(25..400)
number::pow(int(-20..-5), -2.56..3.35) => int(-8000..-125) | int(-20..-5) | -0.2..-0.05 | 0.0025..0.04 | 1 | int(25..400)
number::pow(int(-20..-5), 0.5..0.75) => never
number::pow(int(-20..-5), 1..2) => int(-20..-5) | int(25..400)
number::pow(int(-20..-5), 0..inf) => int(-inf..-125) | int(-20..-5) | 1 | int(25..inf) | inf
number::pow(int(-20..-5), 0!..inf) => int(-inf..-125) | int(-20..-5) | int(25..inf) | inf
number::pow(int(-20..-5), 0..!inf) => int(-inf..-125) | int(-20..-5) | 1 | int(25..inf)
number::pow(int(-20..-5), 0!..!inf) => int(-inf..-125) | int(-20..-5) | int(25..inf)
number::pow(int(-20..-5), 1..inf) => int(-inf..-125) | int(-20..-5) | int(25..inf) | inf
number::pow(int(-20..-5), 1!..inf) => int(-inf..-125) | int(25..inf) | inf
number::pow(int(-20..-5), 1..!inf) => int(-inf..-125) | int(-20..-5) | int(25..inf)
number::pow(int(-20..-5), 2..inf) => int(-inf..-125) | int(25..inf) | inf
number::pow(int(-20..-5), 2!..inf) => int(-inf..-125) | int(625..inf) | inf
number::pow(int(-20..-5), 2.5..inf) => int(-inf..-125) | int(625..inf) | inf
number::pow(int(-20..-5), -inf..0) => -0.2..-0.05 | -0.008..0.04 | 1
number::pow(int(-20..-5), -inf..inf) => int(-inf..-125) | int(-20..-5) | -0.2..-0.05 | -0.008..0.04 | 1 | int(25..inf) | inf
number::pow(int(-20..-5), -inf!..inf) => int(-inf..-125) | int(-20..-5) | -0.2..-0.05 | -0.008..!0 | 0!..0.04 | 1 | int(25..inf) | inf
number::pow(int(-20..-5), -inf..!inf) => int(-inf..-125) | int(-20..-5) | -0.2..-0.05 | -0.008..0.04 | 1 | int(25..inf)
number::pow(int(-20..-5), -inf!..!inf) => int(-inf..-125) | int(-20..-5) | -0.2..-0.05 | -0.008..!0 | 0!..0.04 | 1 | int(25..inf)
number::pow(int(-20..-5), int(0..1)) => int(-20..-5) | 1
number::pow(int(-20..-5), int(0..2)) => int(-20..-5) | 1 | int(25..400)
number::pow(int(-20..-5), int(1..2)) => int(-20..-5) | int(25..400)
number::pow(int(-20..-5), int(5..20)) => int(-5.24288e+24..-3125) | int(15625..1.048576e+26)
number::pow(int(-20..-5), int(-20..-5)) => -0.00032..-1.9073486328125e-25 | 9.5367431640625e-27..0.000064
number::pow(int(-20..-5), int(-10..10)) => int(-512000000000..-125) | int(-20..-5) | -0.2..-0.05 | -0.008..-1.953125e-12 | 9.765625e-14..0.04 | 1 | int(25..10240000000000)
number::pow(int(-20..-5), int(0..inf)) => int(-inf..-125) | int(-20..-5) | 1 | int(25..inf)
number::pow(int(-20..-5), int(1..inf)) => int(-inf..-125) | int(-20..-5) | int(25..inf)
number::pow(int(-20..-5), int(-inf..0)) => -0.2..-0.05 | -0.008..!0 | 0!..0.04 | 1
number::pow(int(-20..-5), int(-inf..1)) => int(-20..-5) | -0.2..-0.05 | -0.008..!0 | 0!..0.04 | 1
number::pow(int(-20..-5), int(-inf..inf)) => int(-inf..-125) | int(-20..-5) | -0.2..-0.05 | -0.008..!0 | 0!..0.04 | 1 | int(25..inf)
number::pow(int(-20..-5), nonInt(0..1)) => never
number::pow(int(-20..-5), nonInt(0..2)) => never
number::pow(int(-20..-5), nonInt(-1..2)) => never
number::pow(int(-20..-5), nonInt(0..inf)) => never
number::pow(int(-20..-5), nonInt(-1..inf)) => never
number::pow(int(-20..-5), nonInt(-inf..0)) => never
number::pow(int(-20..-5), nonInt(-inf..1)) => never
number::pow(int(-20..-5), nonInt(-inf..inf)) => never
number::pow(int(-20..-5), 1 | int(3..4)) => int(-8000..-125) | int(-20..-5) | int(625..160000)
number::pow(int(-10..10), number) => int(-inf..-2) | -1..inf | nan
number::pow(int(-10..10), -3.14) => 0.0007244359600749893 | 0.0010085060789883406 | 0.0014598137193700578 | 0.002220200286476961 | 0.0036025089944252287 | 0.006386077524252927 | 0.01286860964480583 | 0.031756984727589324 | 0.11343989441464511 | 1
number::pow(int(-10..10), -2) => 0.01..1
number::pow(int(-10..10), -1) => -1 | -0.5 | -0.3333333333333333 | -0.25 | -0.2 | -0.16666666666666666 | -0.14285714285714285 | -0.125 | -0.1111111111111111 | -0.1 | 0.1 | 0.1111111111111111 | 0.125 | 0.14285714285714285 | 0.16666666666666666 | 0.2 | 0.25 | 0.3333333333333333 | 0.5 | 1
number::pow(int(-10..10), -0.5) => 0.3162277660168379 | 0.3333333333333333 | 0.3535533905932738 | 0.3779644730092272 | 0.4082482904638631 | 0.4472135954999579 | 0.5 | 0.5773502691896258 | 0.7071067811865476 | 1
number::pow(int(-10..10), 0) => 1
number::pow(int(-10..10), 0.5) => int(0..3) | 1.414213562373095 | 1.7320508075688772 | 2.23606797749979 | 2.449489742783178 | 2.6457513110645907 | 2.82842712474619 | 3.16227766016838
number::pow(int(-10..10), 1) => int(-10..10)
number::pow(int(-10..10), 2) => int(0..100)
number::pow(int(-10..10), 2.78) => int(0..1) | 6.868523491502028 | 21.20298900406197 | 47.17661495331521 | 87.72767346866682 | 145.63322806445896 | 223.54890722181557 | 324.0336880563914 | 449.56674270637365 | 602.5595860743578
number::pow(int(-10..10), 3) => int(-1000..1) | int(8..1000)
number::pow(int(-10..10), 3.14) => int(0..1) | 8.815240927012885 | 31.48913565245494 | 77.708472601283 | 156.59064522818875 | 277.5843173597815 | 450.40981486711337 | 685.018908050489 | 991.5656641387097 | 1380.3842646028863
number::pow(int(-10..10), 10) => int(0..10000000000)
number::pow(int(-10..10), 100) => int(0..1e+100)
number::pow(int(-10..10), -inf) => int(0..1) | inf
number::pow(int(-10..10), inf) => int(0..1) | inf
number::pow(int(-10..10), nan) => 1 | nan
number::pow(int(-10..10), 0..1) => int(-10..0) | 1..10
number::pow(int(-10..10), 0!..1) => int(-10..0) | 1..10
number::pow(int(-10..10), 0..!1) => 0 | 1..10
number::pow(int(-10..10), 0..2) => int(-10..0) | 1..100
number::pow(int(-10..10), 0!..!2) => int(-10..0) | 1..100
number::pow(int(-10..10), 0.5..1.5) => int(-10..1) | 1.414213562373095..31.622776601683803
number::pow(int(-10..10), 0.5..2.5) => int(-10..1) | 1.414213562373095..316.22776601683825
number::pow(int(-10..10), 0.5!..2.5) => int(-10..1) | 1.414213562373095..316.22776601683825
number::pow(int(-10..10), 0.5..!2.5) => int(-10..1) | 1.414213562373095..316.22776601683825
number::pow(int(-10..10), -2.56..3.35) => int(-1000..0) | -0.5 | -0.3333333333333333 | -0.25 | -0.2 | -0.16666666666666666 | -0.14285714285714285 | -0.125 | -0.1111111111111111 | -0.1 | 0.002754228703338165..2238.7211385683413
number::pow(int(-10..10), 0.5..0.75) => int(0..1) | 1.414213562373095..1.681792830507429 | 1.7320508075688772..5.623413251903491
number::pow(int(-10..10), 1..2) => int(-10..1) | 2..100
number::pow(int(-10..10), 0..inf) => int(-inf..0) | 1..inf
number::pow(int(-10..10), 0!..inf) => int(-inf..0) | 1..inf
number::pow(int(-10..10), 0..!inf) => int(-inf..0) | 1..inf
number::pow(int(-10..10), 0!..!inf) => int(-inf..0) | 1..inf
number::pow(int(-10..10), 1..inf) => int(-inf..1) | 2..inf
number::pow(int(-10..10), 1!..inf) => int(-inf..1) | 2..inf
number::pow(int(-10..10), 1..!inf) => int(-inf..1) | 2..inf
number::pow(int(-10..10), 2..inf) => int(-inf..3) | 4..inf
number::pow(int(-10..10), 2!..inf) => int(-inf..3) | 4..inf
number::pow(int(-10..10), 2.5..inf) => int(-inf..5) | 5.65685424949238..inf
number::pow(int(-10..10), -inf..0) => -1..1 | inf
number::pow(int(-10..10), -inf..inf) => int(-inf..-2) | -1..inf
number::pow(int(-10..10), -inf!..inf) => int(-inf..-2) | -1..inf
number::pow(int(-10..10), -inf..!inf) => int(-inf..-2) | -1..inf
number::pow(int(-10..10), -inf!..!inf) => int(-inf..-2) | -1..inf
number::pow(int(-10..10), int(0..1)) => int(-10..10)
number::pow(int(-10..10), int(0..2)) => int(-10..100)
number::pow(int(-10..10), int(1..2)) => int(-10..100)
number::pow(int(-10..10), int(5..20)) => int(-10000000000000000000..100000000000000000000)
number::pow(int(-10..10), int(-20..-5)) => -1..-1e-19 | 1e-20..1
number::pow(int(-10..10), int(-10..10)) => int(-1000000000..-2) | -1..-1e-9 | 0 | 1e-10..1 | int(2..10000000000)
number::pow(int(-10..10), int(0..inf)) => int(-inf..inf)
number::pow(int(-10..10), int(1..inf)) => int(-inf..inf)
number::pow(int(-10..10), int(-inf..0)) => -1..!0 | 0!..1
number::pow(int(-10..10), int(-inf..1)) => int(-10..-2) | -1..1 | int(2..10)
number::pow(int(-10..10), int(-inf..inf)) => int(-inf..-2) | -1..1 | int(2..inf)
number::pow(int(-10..10), nonInt(0..1)) => 0 | 1..10
number::pow(int(-10..10), nonInt(0..2)) => 0 | 1..100
number::pow(int(-10..10), nonInt(-1..2)) => 0 | 0.1..100
number::pow(int(-10..10), nonInt(0..inf)) => 0 | 1..inf
number::pow(int(-10..10), nonInt(-1..inf)) => 0 | 0.1..inf
number::pow(int(-10..10), nonInt(-inf..0)) => 0..1
number::pow(int(-10..10), nonInt(-inf..1)) => 0..10
number::pow(int(-10..10), nonInt(-inf..inf)) => 0..inf
number::pow(int(-10..10), 1 | int(3..4)) => int(-1000..10000)
number::pow(int(0..inf), number) => 0..inf | nan
number::pow(int(0..inf), -3.14) => 0..0.11343989441464511 | 1
number::pow(int(0..inf), -2) => 0!..0.25 | 1
number::pow(int(0..inf), -1) => 0!..0.5 | 1
number::pow(int(0..inf), -0.5) => 0..0.7071067811865476 | 1
number::pow(int(0..inf), 0) => 1
number::pow(int(0..inf), 0.5) => int(0..1) | 1.414213562373095..inf
number::pow(int(0..inf), 1) => int(0..inf)
number::pow(int(0..inf), 2) => int(0..1) | int(4..inf)
number::pow(int(0..inf), 2.78) => int(0..1) | 6.868523491502028..inf
number::pow(int(0..inf), 3) => int(0..1) | int(8..inf)
number::pow(int(0..inf), 3.14) => int(0..1) | 8.815240927012885..inf
number::pow(int(0..inf), 10) => int(0..1) | int(1024..inf)
number::pow(int(0..inf), 100) => int(0..1) | int(1.2676506002282294e+30..inf)
number::pow(int(0..inf), -inf) => int(0..1) | inf
number::pow(int(0..inf), inf) => int(0..1) | inf
number::pow(int(0..inf), nan) => 1 | nan
number::pow(int(0..inf), 0..1) => 0 | 1..inf
number::pow(int(0..inf), 0!..1) => 0 | 1..inf
number::pow(int(0..inf), 0..!1) => 0 | 1..inf
number::pow(int(0..inf), 0..2) => 0 | 1..inf
number::pow(int(0..inf), 0!..!2) => 0 | 1..inf
number::pow(int(0..inf), 0.5..1.5) => int(0..1) | 1.414213562373095..inf
number::pow(int(0..inf), 0.5..2.5) => int(0..1) | 1.414213562373095..inf
number::pow(int(0..inf), 0.5!..2.5) => int(0..1) | 1.414213562373095..inf
number::pow(int(0..inf), 0.5..!2.5) => int(0..1) | 1.414213562373095..inf
number::pow(int(0..inf), -2.56..3.35) => 0..inf
number::pow(int(0..inf), 0.5..0.75) => int(0..1) | 1.414213562373095..inf
number::pow(int(0..inf), 1..2) => int(0..1) | 2..inf
number::pow(int(0..inf), 0..inf) => 0 | 1..inf
number::pow(int(0..inf), 0!..inf) => 0 | 1..inf
number::pow(int(0..inf), 0..!inf) => 0 | 1..inf
number::pow(int(0..inf), 0!..!inf) => 0 | 1..inf
number::pow(int(0..inf), 1..inf) => int(0..1) | 2..inf
number::pow(int(0..inf), 1!..inf) => int(0..1) | 2..inf
number::pow(int(0..inf), 1..!inf) => int(0..1) | 2..inf
number::pow(int(0..inf), 2..inf) => int(0..1) | 4..inf
number::pow(int(0..inf), 2!..inf) => int(0..1) | 4..inf
number::pow(int(0..inf), 2.5..inf) => int(0..1) | 5.65685424949238..inf
number::pow(int(0..inf), -inf..0) => 0..1 | inf
number::pow(int(0..inf), -inf..inf) => 0..inf
number::pow(int(0..inf), -inf!..inf) => 0..inf
number::pow(int(0..inf), -inf..!inf) => 0..inf
number::pow(int(0..inf), -inf!..!inf) => 0..inf
number::pow(int(0..inf), int(0..1)) => int(0..inf)
number::pow(int(0..inf), int(0..2)) => int(0..inf)
number::pow(int(0..inf), int(1..2)) => int(0..inf)
number::pow(int(0..inf), int(5..20)) => int(0..1) | int(32..inf)
number::pow(int(0..inf), int(-20..-5)) => 0!..0.03125 | 1
number::pow(int(0..inf), int(-10..10)) => 0..0.5 | int(1..inf)
number::pow(int(0..inf), int(0..inf)) => int(0..inf)
number::pow(int(0..inf), int(1..inf)) => int(0..inf)
number::pow(int(0..inf), int(-inf..0)) => 0!..0.5 | 1
number::pow(int(0..inf), int(-inf..1)) => 0..0.5 | int(1..inf)
number::pow(int(0..inf), int(-inf..inf)) => 0..0.5 | int(1..inf)
number::pow(int(0..inf), nonInt(0..1)) => 0 | 1..inf
number::pow(int(0..inf), nonInt(0..2)) => 0 | 1..inf
number::pow(int(0..inf), nonInt(-1..2)) => 0..inf
number::pow(int(0..inf), nonInt(0..inf)) => 0 | 1..inf
number::pow(int(0..inf), nonInt(-1..inf)) => 0..inf
number::pow(int(0..inf), nonInt(-inf..0)) => 0..1
number::pow(int(0..inf), nonInt(-inf..1)) => 0..inf
number::pow(int(0..inf), nonInt(-inf..inf)) => 0..inf
number::pow(int(0..inf), 1 | int(3..4)) => int(0..inf)
number::pow(int(1..inf), number) => 0..inf | nan
number::pow(int(1..inf), -3.14) => 0..0.11343989441464511 | 1
number::pow(int(1..inf), -2) => 0!..0.25 | 1
number::pow(int(1..inf), -1) => 0!..0.5 | 1
number::pow(int(1..inf), -0.5) => 0..0.7071067811865476 | 1
number::pow(int(1..inf), 0) => 1
number::pow(int(1..inf), 0.5) => 1 | 1.414213562373095..inf
number::pow(int(1..inf), 1) => int(1..inf)
number::pow(int(1..inf), 2) => 1 | int(4..inf)
number::pow(int(1..inf), 2.78) => 1 | 6.868523491502028..inf
number::pow(int(1..inf), 3) => 1 | int(8..inf)
number::pow(int(1..inf), 3.14) => 1 | 8.815240927012885..inf
number::pow(int(1..inf), 10) => 1 | int(1024..inf)
number::pow(int(1..inf), 100) => 1 | int(1.2676506002282294e+30..inf)
number::pow(int(1..inf), -inf) => int(0..1)
number::pow(int(1..inf), inf) => 1 | inf
number::pow(int(1..inf), nan) => 1 | nan
number::pow(int(1..inf), 0..1) => 1..inf
number::pow(int(1..inf), 0!..1) => 1..inf
number::pow(int(1..inf), 0..!1) => 1..inf
number::pow(int(1..inf), 0..2) => 1..inf
number::pow(int(1..inf), 0!..!2) => 1..inf
number::pow(int(1..inf), 0.5..1.5) => 1 | 1.414213562373095..inf
number::pow(int(1..inf), 0.5..2.5) => 1 | 1.414213562373095..inf
number::pow(int(1..inf), 0.5!..2.5) => 1 | 1.414213562373095..inf
number::pow(int(1..inf), 0.5..!2.5) => 1 | 1.414213562373095..inf
number::pow(int(1..inf), -2.56..3.35) => 0..inf
number::pow(int(1..inf), 0.5..0.75) => 1 | 1.414213562373095..inf
number::pow(int(1..inf), 1..2) => 1 | 2..inf
number::pow(int(1..inf), 0..inf) => 1..inf
number::pow(int(1..inf), 0!..inf) => 1..inf
number::pow(int(1..inf), 0..!inf) => 1..inf
number::pow(int(1..inf), 0!..!inf) => 1..inf
number::pow(int(1..inf), 1..inf) => 1 | 2..inf
number::pow(int(1..inf), 1!..inf) => 1 | 2..inf
number::pow(int(1..inf), 1..!inf) => 1 | 2..inf
number::pow(int(1..inf), 2..inf) => 1 | 4..inf
number::pow(int(1..inf), 2!..inf) => 1 | 4..inf
number::pow(int(1..inf), 2.5..inf) => 1 | 5.65685424949238..inf
number::pow(int(1..inf), -inf..0) => 0..1
number::pow(int(1..inf), -inf..inf) => 0..inf
number::pow(int(1..inf), -inf!..inf) => 0..inf
number::pow(int(1..inf), -inf..!inf) => 0..inf
number::pow(int(1..inf), -inf!..!inf) => 0..inf
number::pow(int(1..inf), int(0..1)) => int(1..inf)
number::pow(int(1..inf), int(0..2)) => int(1..inf)
number::pow(int(1..inf), int(1..2)) => int(1..inf)
number::pow(int(1..inf), int(5..20)) => 1 | int(32..inf)
number::pow(int(1..inf), int(-20..-5)) => 0!..0.03125 | 1
number::pow(int(1..inf), int(-10..10)) => 0!..0.5 | int(1..inf)
number::pow(int(1..inf), int(0..inf)) => int(1..inf)
number::pow(int(1..inf), int(1..inf)) => int(1..inf)
number::pow(int(1..inf), int(-inf..0)) => 0!..0.5 | 1
number::pow(int(1..inf), int(-inf..1)) => 0!..0.5 | int(1..inf)
number::pow(int(1..inf), int(-inf..inf)) => 0!..0.5 | int(1..inf)
number::pow(int(1..inf), nonInt(0..1)) => 1..inf
number::pow(int(1..inf), nonInt(0..2)) => 1..inf
number::pow(int(1..inf), nonInt(-1..2)) => 0..inf
number::pow(int(1..inf), nonInt(0..inf)) => 1..inf
number::pow(int(1..inf), nonInt(-1..inf)) => 0..inf
number::pow(int(1..inf), nonInt(-inf..0)) => 0..1
number::pow(int(1..inf), nonInt(-inf..1)) => 0..inf
number::pow(int(1..inf), nonInt(-inf..inf)) => 0..inf
number::pow(int(1..inf), 1 | int(3..4)) => int(1..inf)
number::pow(int(-inf..0), number) => int(-inf..-2) | -1..1 | int(2..inf) | inf | nan
number::pow(int(-inf..0), -3.14) => never
number::pow(int(-inf..0), -2) => 0!..1
number::pow(int(-inf..0), -1) => -1..!0
number::pow(int(-inf..0), -0.5) => never
number::pow(int(-inf..0), 0) => 1
number::pow(int(-inf..0), 0.5) => 0
number::pow(int(-inf..0), 1) => int(-inf..0)
number::pow(int(-inf..0), 2) => int(0..inf)
number::pow(int(-inf..0), 2.78) => 0
number::pow(int(-inf..0), 3) => int(-inf..0)
number::pow(int(-inf..0), 3.14) => 0
number::pow(int(-inf..0), 10) => int(0..inf)
number::pow(int(-inf..0), 100) => int(0..inf)
number::pow(int(-inf..0), -inf) => int(0..1) | inf
number::pow(int(-inf..0), inf) => int(0..1) | inf
number::pow(int(-inf..0), nan) => nan
number::pow(int(-inf..0), 0..1) => int(-inf..1)
number::pow(int(-inf..0), 0!..1) => int(-inf..0)
number::pow(int(-inf..0), 0..!1) => int(0..1)
number::pow(int(-inf..0), 0..2) => int(-inf..inf)
number::pow(int(-inf..0), 0!..!2) => int(-inf..0)
number::pow(int(-inf..0), 0.5..1.5) => int(-inf..0)
number::pow(int(-inf..0), 0.5..2.5) => int(-inf..inf)
number::pow(int(-inf..0), 0.5!..2.5) => int(-inf..inf)
number::pow(int(-inf..0), 0.5..!2.5) => int(-inf..inf)
number::pow(int(-inf..0), -2.56..3.35) => int(-inf..-2) | -1..1 | int(2..inf)
number::pow(int(-inf..0), 0.5..0.75) => 0
number::pow(int(-inf..0), 1..2) => int(-inf..inf)
number::pow(int(-inf..0), 0..inf) => int(-inf..inf) | inf
number::pow(int(-inf..0), 0!..inf) => int(-inf..inf) | inf
number::pow(int(-inf..0), 0..!inf) => int(-inf..inf)
number::pow(int(-inf..0), 0!..!inf) => int(-inf..inf)
number::pow(int(-inf..0), 1..inf) => int(-inf..inf) | inf
number::pow(int(-inf..0), 1!..inf) => int(-inf..inf) | inf
number::pow(int(-inf..0), 1..!inf) => int(-inf..inf)
number::pow(int(-inf..0), 2..inf) => int(-inf..inf) | inf
number::pow(int(-inf..0), 2!..inf) => int(-inf..inf) | inf
number::pow(int(-inf..0), 2.5..inf) => int(-inf..inf) | inf
number::pow(int(-inf..0), -inf..0) => -1..1 | inf
number::pow(int(-inf..0), -inf..inf) => int(-inf..-2) | -1..1 | int(2..inf) | inf
number::pow(int(-inf..0), -inf!..inf) => int(-inf..-2) | -1..1 | int(2..inf) | inf
number::pow(int(-inf..0), -inf..!inf) => int(-inf..-2) | -1..1 | int(2..inf) | inf
number::pow(int(-inf..0), -inf!..!inf) => int(-inf..-2) | -1..1 | int(2..inf)
number::pow(int(-inf..0), int(0..1)) => int(-inf..1)
number::pow(int(-inf..0), int(0..2)) => int(-inf..inf)
number::pow(int(-inf..0), int(1..2)) => int(-inf..inf)
number::pow(int(-inf..0), int(5..20)) => int(-inf..inf)
number::pow(int(-inf..0), int(-20..-5)) => -1..!0 | 0!..1
number::pow(int(-inf..0), int(-10..10)) => int(-inf..-2) | -1..1 | int(2..inf)
number::pow(int(-inf..0), int(0..inf)) => int(-inf..inf)
number::pow(int(-inf..0), int(1..inf)) => int(-inf..inf)
number::pow(int(-inf..0), int(-inf..0)) => -1..!0 | 0!..1
number::pow(int(-inf..0), int(-inf..1)) => int(-inf..-2) | -1..1
number::pow(int(-inf..0), int(-inf..inf)) => int(-inf..-2) | -1..1 | int(2..inf)
number::pow(int(-inf..0), nonInt(0..1)) => 0
number::pow(int(-inf..0), nonInt(0..2)) => 0
number::pow(int(-inf..0), nonInt(-1..2)) => 0
number::pow(int(-inf..0), nonInt(0..inf)) => 0
number::pow(int(-inf..0), nonInt(-1..inf)) => 0
number::pow(int(-inf..0), nonInt(-inf..0)) => never
number::pow(int(-inf..0), nonInt(-inf..1)) => 0
number::pow(int(-inf..0), nonInt(-inf..inf)) => 0
number::pow(int(-inf..0), 1 | int(3..4)) => int(-inf..inf)
number::pow(int(-inf..1), number) => int(-inf..-2) | -1..1 | int(2..inf) | inf | nan
number::pow(int(-inf..1), -3.14) => 1
number::pow(int(-inf..1), -2) => 0!..1
number::pow(int(-inf..1), -1) => -1..!0 | 1
number::pow(int(-inf..1), -0.5) => 1
number::pow(int(-inf..1), 0) => 1
number::pow(int(-inf..1), 0.5) => int(0..1)
number::pow(int(-inf..1), 1) => int(-inf..1)
number::pow(int(-inf..1), 2) => int(0..inf)
number::pow(int(-inf..1), 2.78) => int(0..1)
number::pow(int(-inf..1), 3) => int(-inf..1)
number::pow(int(-inf..1), 3.14) => int(0..1)
number::pow(int(-inf..1), 10) => int(0..inf)
number::pow(int(-inf..1), 100) => int(0..inf)
number::pow(int(-inf..1), -inf) => int(0..1) | inf
number::pow(int(-inf..1), inf) => int(0..1) | inf
number::pow(int(-inf..1), nan) => 1 | nan
number::pow(int(-inf..1), 0..1) => int(-inf..1)
number::pow(int(-inf..1), 0!..1) => int(-inf..1)
number::pow(int(-inf..1), 0..!1) => int(0..1)
number::pow(int(-inf..1), 0..2) => int(-inf..inf)
number::pow(int(-inf..1), 0!..!2) => int(-inf..1)
number::pow(int(-inf..1), 0.5..1.5) => int(-inf..1)
number::pow(int(-inf..1), 0.5..2.5) => int(-inf..inf)
number::pow(int(-inf..1), 0.5!..2.5) => int(-inf..inf)
number::pow(int(-inf..1), 0.5..!2.5) => int(-inf..inf)
number::pow(int(-inf..1), -2.56..3.35) => int(-inf..-2) | -1..1 | int(2..inf)
number::pow(int(-inf..1), 0.5..0.75) => int(0..1)
number::pow(int(-inf..1), 1..2) => int(-inf..inf)
number::pow(int(-inf..1), 0..inf) => int(-inf..inf) | inf
number::pow(int(-inf..1), 0!..inf) => int(-inf..inf) | inf
number::pow(int(-inf..1), 0..!inf) => int(-inf..inf)
number::pow(int(-inf..1), 0!..!inf) => int(-inf..inf)
number::pow(int(-inf..1), 1..inf) => int(-inf..inf) | inf
number::pow(int(-inf..1), 1!..inf) => int(-inf..inf) | inf
number::pow(int(-inf..1), 1..!inf) => int(-inf..inf)
number::pow(int(-inf..1), 2..inf) => int(-inf..inf) | inf
number::pow(int(-inf..1), 2!..inf) => int(-inf..inf) | inf
number::pow(int(-inf..1), 2.5..inf) => int(-inf..inf) | inf
number::pow(int(-inf..1), -inf..0) => -1..1 | inf
number::pow(int(-inf..1), -inf..inf) => int(-inf..-2) | -1..1 | int(2..inf) | inf
number::pow(int(-inf..1), -inf!..inf) => int(-inf..-2) | -1..1 | int(2..inf) | inf
number::pow(int(-inf..1), -inf..!inf) => int(-inf..-2) | -1..1 | int(2..inf) | inf
number::pow(int(-inf..1), -inf!..!inf) => int(-inf..-2) | -1..1 | int(2..inf)
number::pow(int(-inf..1), int(0..1)) => int(-inf..1)
number::pow(int(-inf..1), int(0..2)) => int(-inf..inf)
number::pow(int(-inf..1), int(1..2)) => int(-inf..inf)
number::pow(int(-inf..1), int(5..20)) => int(-inf..inf)
number::pow(int(-inf..1), int(-20..-5)) => -1..!0 | 0!..1
number::pow(int(-inf..1), int(-10..10)) => int(-inf..-2) | -1..1 | int(2..inf)
number::pow(int(-inf..1), int(0..inf)) => int(-inf..inf)
number::pow(int(-inf..1), int(1..inf)) => int(-inf..inf)
number::pow(int(-inf..1), int(-inf..0)) => -1..!0 | 0!..1
number::pow(int(-inf..1), int(-inf..1)) => int(-inf..-2) | -1..1
number::pow(int(-inf..1), int(-inf..inf)) => int(-inf..-2) | -1..1 | int(2..inf)
number::pow(int(-inf..1), nonInt(0..1)) => int(0..1)
number::pow(int(-inf..1), nonInt(0..2)) => int(0..1)
number::pow(int(-inf..1), nonInt(-1..2)) => int(0..1)
number::pow(int(-inf..1), nonInt(0..inf)) => int(0..1)
number::pow(int(-inf..1), nonInt(-1..inf)) => int(0..1)
number::pow(int(-inf..1), nonInt(-inf..0)) => 1
number::pow(int(-inf..1), nonInt(-inf..1)) => int(0..1)
number::pow(int(-inf..1), nonInt(-inf..inf)) => int(0..1)
number::pow(int(-inf..1), 1 | int(3..4)) => int(-inf..inf)
number::pow(int(-inf..inf), number) => int(-inf..-2) | -1..inf | nan
number::pow(int(-inf..inf), -3.14) => 0..0.11343989441464511 | 1
number::pow(int(-inf..inf), -2) => 0!..1
number::pow(int(-inf..inf), -1) => -1..!0 | 0!..0.5 | 1
number::pow(int(-inf..inf), -0.5) => 0..0.7071067811865476 | 1
number::pow(int(-inf..inf), 0) => 1
number::pow(int(-inf..inf), 0.5) => int(0..1) | 1.414213562373095..inf
number::pow(int(-inf..inf), 1) => int(-inf..inf)
number::pow(int(-inf..inf), 2) => int(0..inf)
number::pow(int(-inf..inf), 2.78) => int(0..1) | 6.868523491502028..inf
number::pow(int(-inf..inf), 3) => int(-inf..1) | int(8..inf)
number::pow(int(-inf..inf), 3.14) => int(0..1) | 8.815240927012885..inf
number::pow(int(-inf..inf), 10) => int(0..inf)
number::pow(int(-inf..inf), 100) => int(0..inf)
number::pow(int(-inf..inf), -inf) => int(0..1) | inf
number::pow(int(-inf..inf), inf) => int(0..1) | inf
number::pow(int(-inf..inf), nan) => 1 | nan
number::pow(int(-inf..inf), 0..1) => int(-inf..0) | 1..inf
number::pow(int(-inf..inf), 0!..1) => int(-inf..0) | 1..inf
number::pow(int(-inf..inf), 0..!1) => 0 | 1..inf
number::pow(int(-inf..inf), 0..2) => int(-inf..0) | 1..inf
number::pow(int(-inf..inf), 0!..!2) => int(-inf..0) | 1..inf
number::pow(int(-inf..inf), 0.5..1.5) => int(-inf..1) | 1.414213562373095..inf
number::pow(int(-inf..inf), 0.5..2.5) => int(-inf..1) | 1.414213562373095..inf
number::pow(int(-inf..inf), 0.5!..2.5) => int(-inf..1) | 1.414213562373095..inf
number::pow(int(-inf..inf), 0.5..!2.5) => int(-inf..1) | 1.414213562373095..inf
number::pow(int(-inf..inf), -2.56..3.35) => int(-inf..-2) | -1..inf
number::pow(int(-inf..inf), 0.5..0.75) => int(0..1) | 1.414213562373095..inf
number::pow(int(-inf..inf), 1..2) => int(-inf..1) | 2..inf
number::pow(int(-inf..inf), 0..inf) => int(-inf..0) | 1..inf
number::pow(int(-inf..inf), 0!..inf) => int(-inf..0) | 1..inf
number::pow(int(-inf..inf), 0..!inf) => int(-inf..0) | 1..inf
number::pow(int(-inf..inf), 0!..!inf) => int(-inf..0) | 1..inf
number::pow(int(-inf..inf), 1..inf) => int(-inf..1) | 2..inf
number::pow(int(-inf..inf), 1!..inf) => int(-inf..1) | 2..inf
number::pow(int(-inf..inf), 1..!inf) => int(-inf..1) | 2..inf
number::pow(int(-inf..inf), 2..inf) => int(-inf..3) | 4..inf
number::pow(int(-inf..inf), 2!..inf) => int(-inf..3) | 4..inf
number::pow(int(-inf..inf), 2.5..inf) => int(-inf..5) | 5.65685424949238..inf
number::pow(int(-inf..inf), -inf..0) => -1..1 | inf
number::pow(int(-inf..inf), -inf..inf) => int(-inf..-2) | -1..inf
number::pow(int(-inf..inf), -inf!..inf) => int(-inf..-2) | -1..inf
number::pow(int(-inf..inf), -inf..!inf) => int(-inf..-2) | -1..inf
number::pow(int(-inf..inf), -inf!..!inf) => int(-inf..-2) | -1..inf
number::pow(int(-inf..inf), int(0..1)) => int(-inf..inf)
number::pow(int(-inf..inf), int(0..2)) => int(-inf..inf)
number::pow(int(-inf..inf), int(1..2)) => int(-inf..inf)
number::pow(int(-inf..inf), int(5..20)) => int(-inf..inf)
number::pow(int(-inf..inf), int(-20..-5)) => -1..!0 | 0!..1
number::pow(int(-inf..inf), int(-10..10)) => int(-inf..-2) | -1..1 | int(2..inf)
number::pow(int(-inf..inf), int(0..inf)) => int(-inf..inf)
number::pow(int(-inf..inf), int(1..inf)) => int(-inf..inf)
number::pow(int(-inf..inf), int(-inf..0)) => -1..!0 | 0!..1
number::pow(int(-inf..inf), int(-inf..1)) => int(-inf..-2) | -1..1 | int(2..inf)
number::pow(int(-inf..inf), int(-inf..inf)) => int(-inf..-2) | -1..1 | int(2..inf)
number::pow(int(-inf..inf), nonInt(0..1)) => 0 | 1..inf
number::pow(int(-inf..inf), nonInt(0..2)) => 0 | 1..inf
number::pow(int(-inf..inf), nonInt(-1..2)) => 0..inf
number::pow(int(-inf..inf), nonInt(0..inf)) => 0 | 1..inf
number::pow(int(-inf..inf), nonInt(-1..inf)) => 0..inf
number::pow(int(-inf..inf), nonInt(-inf..0)) => 0..1
number::pow(int(-inf..inf), nonInt(-inf..1)) => 0..inf
number::pow(int(-inf..inf), nonInt(-inf..inf)) => 0..inf
number::pow(int(-inf..inf), 1 | int(3..4)) => int(-inf..inf)
number::pow(nonInt(0..1), number) => -inf | 0..inf | nan
number::pow(nonInt(0..1), -3.14) => -inf | 1..inf
number::pow(nonInt(0..1), -2) => 1!..!inf
number::pow(nonInt(0..1), -1) => 1!..!inf
number::pow(nonInt(0..1), -0.5) => -inf | 1..inf
number::pow(nonInt(0..1), 0) => 1
number::pow(nonInt(0..1), 0.5) => 0..1
number::pow(nonInt(0..1), 1) => nonInt(0..1)
number::pow(nonInt(0..1), 2) => nonInt(0..1)
number::pow(nonInt(0..1), 2.78) => 0..1
number::pow(nonInt(0..1), 3) => nonInt(0..1)
number::pow(nonInt(0..1), 3.14) => 0..1
number::pow(nonInt(0..1), 10) => nonInt(0..1)
number::pow(nonInt(0..1), 100) => nonInt(0..1)
number::pow(nonInt(0..1), -inf) => inf
number::pow(nonInt(0..1), inf) => 0
number::pow(nonInt(0..1), nan) => nan
number::pow(nonInt(0..1), 0..1) => 0..1
number::pow(nonInt(0..1), 0!..1) => 0..1
number::pow(nonInt(0..1), 0..!1) => 0..1
number::pow(nonInt(0..1), 0..2) => 0..1
number::pow(nonInt(0..1), 0!..!2) => 0..1
number::pow(nonInt(0..1), 0.5..1.5) => 0..1
number::pow(nonInt(0..1), 0.5..2.5) => 0..1
number::pow(nonInt(0..1), 0.5!..2.5) => 0..1
number::pow(nonInt(0..1), 0.5..!2.5) => 0..1
number::pow(nonInt(0..1), -2.56..3.35) => -inf | 0..inf
number::pow(nonInt(0..1), 0.5..0.75) => 0..1
number::pow(nonInt(0..1), 1..2) => 0..1
number::pow(nonInt(0..1), 0..inf) => 0..1
number::pow(nonInt(0..1), 0!..inf) => 0..1
number::pow(nonInt(0..1), 0..!inf) => 0..1
number::pow(nonInt(0..1), 0!..!inf) => 0..1
number::pow(nonInt(0..1), 1..inf) => 0..1
number::pow(nonInt(0..1), 1!..inf) => 0..1
number::pow(nonInt(0..1), 1..!inf) => 0..1
number::pow(nonInt(0..1), 2..inf) => 0..1
number::pow(nonInt(0..1), 2!..inf) => 0..1
number::pow(nonInt(0..1), 2.5..inf) => 0..1
number::pow(nonInt(0..1), -inf..0) => -inf | 1..inf
number::pow(nonInt(0..1), -inf..inf) => -inf | 0..inf
number::pow(nonInt(0..1), -inf!..inf) => -inf | 0..inf
number::pow(nonInt(0..1), -inf..!inf) => -inf | 0..inf
number::pow(nonInt(0..1), -inf!..!inf) => -inf | 0..inf
number::pow(nonInt(0..1), int(0..1)) => 0!..1
number::pow(nonInt(0..1), int(0..2)) => 0!..1
number::pow(nonInt(0..1), int(1..2)) => nonInt(0..1)
number::pow(nonInt(0..1), int(5..20)) => nonInt(0..1)
number::pow(nonInt(0..1), int(-20..-5)) => 1!..!inf
number::pow(nonInt(0..1), int(-10..10)) => 0!..!inf
number::pow(nonInt(0..1), int(0..inf)) => 0!..1
number::pow(nonInt(0..1), int(1..inf)) => nonInt(0..1)
number::pow(nonInt(0..1), int(-inf..0)) => 1..!inf
number::pow(nonInt(0..1), int(-inf..1)) => 0!..!inf
number::pow(nonInt(0..1), int(-inf..inf)) => 0!..!inf
number::pow(nonInt(0..1), nonInt(0..1)) => 0..1
number::pow(nonInt(0..1), nonInt(0..2)) => 0..1
number::pow(nonInt(0..1), nonInt(-1..2)) => -inf | 0..inf
number::pow(nonInt(0..1), nonInt(0..inf)) => 0..1
number::pow(nonInt(0..1), nonInt(-1..inf)) => -inf | 0..inf
number::pow(nonInt(0..1), nonInt(-inf..0)) => -inf | 1..inf
number::pow(nonInt(0..1), nonInt(-inf..1)) => -inf | 0..inf
number::pow(nonInt(0..1), nonInt(-inf..inf)) => -inf | 0..inf
number::pow(nonInt(0..1), 1 | int(3..4)) => nonInt(0..1)
number::pow(nonInt(0..2), number) => -inf | 0..inf | nan
number::pow(nonInt(0..2), -3.14) => -inf | 0.11343989441464511..inf
number::pow(nonInt(0..2), -2) => 0.25!..!inf
number::pow(nonInt(0..2), -1) => 0.5!..!inf
number::pow(nonInt(0..2), -0.5) => -inf | 0.7071067811865476..inf
number::pow(nonInt(0..2), 0) => 1
number::pow(nonInt(0..2), 0.5) => 0..1.414213562373095
number::pow(nonInt(0..2), 1) => nonInt(0..2)
number::pow(nonInt(0..2), 2) => 0!..!4
number::pow(nonInt(0..2), 2.78) => 0..6.868523491502028
number::pow(nonInt(0..2), 3) => 0!..!8
number::pow(nonInt(0..2), 3.14) => 0..8.815240927012885
number::pow(nonInt(0..2), 10) => 0!..!1024
number::pow(nonInt(0..2), 100) => 0!..!1.2676506002282294e+30
number::pow(nonInt(0..2), -inf) => 0 | inf
number::pow(nonInt(0..2), inf) => 0 | inf
number::pow(nonInt(0..2), nan) => nan
number::pow(nonInt(0..2), 0..1) => 0..2
number::pow(nonInt(0..2), 0!..1) => 0..2
number::pow(nonInt(0..2), 0..!1) => 0..2
number::pow(nonInt(0..2), 0..2) => 0..4
number::pow(nonInt(0..2), 0!..!2) => 0..4
number::pow(nonInt(0..2), 0.5..1.5) => 0..2.82842712474619
number::pow(nonInt(0..2), 0.5..2.5) => 0..5.65685424949238
number::pow(nonInt(0..2), 0.5!..2.5) => 0..5.65685424949238
number::pow(nonInt(0..2), 0.5..!2.5) => 0..5.65685424949238
number::pow(nonInt(0..2), -2.56..3.35) => -inf | 0..inf
number::pow(nonInt(0..2), 0.5..0.75) => 0..1.681792830507429
number::pow(nonInt(0..2), 1..2) => 0..4
number::pow(nonInt(0..2), 0..inf) => 0..inf
number::pow(nonInt(0..2), 0!..inf) => 0..inf
number::pow(nonInt(0..2), 0..!inf) => 0..inf
number::pow(nonInt(0..2), 0!..!inf) => 0..inf
number::pow(nonInt(0..2), 1..inf) => 0..inf
number::pow(nonInt(0..2), 1!..inf) => 0..inf
number::pow(nonInt(0..2), 1..!inf) => 0..inf
number::pow(nonInt(0..2), 2..inf) => 0..inf
number::pow(nonInt(0..2), 2!..inf) => 0..inf
number::pow(nonInt(0..2), 2.5..inf) => 0..inf
number::pow(nonInt(0..2), -inf..0) => -inf | 0..inf
number::pow(nonInt(0..2), -inf..inf) => -inf | 0..inf
number::pow(nonInt(0..2), -inf!..inf) => -inf | 0..inf
number::pow(nonInt(0..2), -inf..!inf) => -inf | 0..inf
number::pow(nonInt(0..2), -inf!..!inf) => -inf | 0..inf
number::pow(nonInt(0..2), int(0..1)) => 0!..!2
number::pow(nonInt(0..2), int(0..2)) => 0!..!4
number::pow(nonInt(0..2), int(1..2)) => 0!..!4
number::pow(nonInt(0..2), int(5..20)) => 0!..!1048576
number::pow(nonInt(0..2), int(-20..-5)) => 9.5367431640625e-7!..!inf
number::pow(nonInt(0..2), int(-10..10)) => 0!..!inf
number::pow(nonInt(0..2), int(0..inf)) => 0!..inf
number::pow(nonInt(0..2), int(1..inf)) => 0!..inf
number::pow(nonInt(0..2), int(-inf..0)) => 0..!inf
number::pow(nonInt(0..2), int(-inf..1)) => 0..!inf
number::pow(nonInt(0..2), int(-inf..inf)) => 0..inf
number::pow(nonInt(0..2), nonInt(0..1)) => 0..2
number::pow(nonInt(0..2), nonInt(0..2)) => 0..4
number::pow(nonInt(0..2), nonInt(-1..2)) => -inf | 0..inf
number::pow(nonInt(0..2), nonInt(0..inf)) => 0..inf
number::pow(nonInt(0..2), nonInt(-1..inf)) => -inf | 0..inf
number::pow(nonInt(0..2), nonInt(-inf..0)) => -inf | 0..inf
number::pow(nonInt(0..2), nonInt(-inf..1)) => -inf | 0..inf
number::pow(nonInt(0..2), nonInt(-inf..inf)) => -inf | 0..inf
number::pow(nonInt(0..2), 1 | int(3..4)) => 0!..!16
number::pow(nonInt(-1..2), number) => -inf..!-1 | -1!..inf | nan
number::pow(nonInt(-1..2), -3.14) => -inf | 0.11343989441464511..inf
number::pow(nonInt(-1..2), -2) => 0.25!..!1
number::pow(nonInt(-1..2), -1) => -inf..!-1 | 0.5!..inf
number::pow(nonInt(-1..2), -0.5) => -inf | 0.7071067811865476..inf
number::pow(nonInt(-1..2), 0) => 1
number::pow(nonInt(-1..2), 0.5) => 0..1.414213562373095
number::pow(nonInt(-1..2), 1) => nonInt(-1..2)
number::pow(nonInt(-1..2), 2) => 1!..!4
number::pow(nonInt(-1..2), 2.78) => 0..6.868523491502028
number::pow(nonInt(-1..2), 3) => -1!..!8
number::pow(nonInt(-1..2), 3.14) => 0..8.815240927012885
number::pow(nonInt(-1..2), 10) => 1!..!1024
number::pow(nonInt(-1..2), 100) => 1!..!1.2676506002282294e+30
number::pow(nonInt(-1..2), -inf) => 0 | inf
number::pow(nonInt(-1..2), inf) => 0 | inf
number::pow(nonInt(-1..2), nan) => nan
number::pow(nonInt(-1..2), 0..1) => -1!..2
number::pow(nonInt(-1..2), 0!..1) => -1!..2
number::pow(nonInt(-1..2), 0..!1) => 0..2
number::pow(nonInt(-1..2), 0..2) => -1!..4
number::pow(nonInt(-1..2), 0!..!2) => -1!..4
number::pow(nonInt(-1..2), 0.5..1.5) => -1!..2.82842712474619
number::pow(nonInt(-1..2), 0.5..2.5) => -1!..5.65685424949238
number::pow(nonInt(-1..2), 0.5!..2.5) => -1!..5.65685424949238
number::pow(nonInt(-1..2), 0.5..!2.5) => -1!..5.65685424949238
number::pow(nonInt(-1..2), -2.56..3.35) => -inf..!-1 | -1!..inf
number::pow(nonInt(-1..2), 0.5..0.75) => 0..1.681792830507429
number::pow(nonInt(-1..2), 1..2) => -1!..4
number::pow(nonInt(-1..2), 0..inf) => -1!..inf
number::pow(nonInt(-1..2), 0!..inf) => -1!..inf
number::pow(nonInt(-1..2), 0..!inf) => -1!..inf
number::pow(nonInt(-1..2), 0!..!inf) => -1!..inf
number::pow(nonInt(-1..2), 1..inf) => -1!..inf
number::pow(nonInt(-1..2), 1!..inf) => -1!..inf
number::pow(nonInt(-1..2), 1..!inf) => -1!..inf
number::pow(nonInt(-1..2), 2..inf) => -1!..inf
number::pow(nonInt(-1..2), 2!..inf) => -1!..inf
number::pow(nonInt(-1..2), 2.5..inf) => -1!..inf
number::pow(nonInt(-1..2), -inf..0) => -inf..!-1 | 0..inf
number::pow(nonInt(-1..2), -inf..inf) => -inf..!-1 | -1!..inf
number::pow(nonInt(-1..2), -inf!..inf) => -inf..!-1 | -1!..inf
number::pow(nonInt(-1..2), -inf..!inf) => -inf..!-1 | -1!..inf
number::pow(nonInt(-1..2), -inf!..!inf) => -inf..!-1 | -1!..inf
number::pow(nonInt(-1..2), int(0..1)) => nonInt(-1..0) | 0!..!2
number::pow(nonInt(-1..2), int(0..2)) => nonInt(-1..0) | 0!..!4
number::pow(nonInt(-1..2), int(1..2)) => nonInt(-1..1) | 1!..!4
number::pow(nonInt(-1..2), int(5..20)) => -1!..!1048576
number::pow(nonInt(-1..2), int(-20..-5)) => -inf..!-1 | 9.5367431640625e-7!..inf
number::pow(nonInt(-1..2), int(-10..10)) => -inf..!-1 | -1!..inf
number::pow(nonInt(-1..2), int(0..inf)) => -1!..inf
number::pow(nonInt(-1..2), int(1..inf)) => -1!..inf
number::pow(nonInt(-1..2), int(-inf..0)) => -inf..!-1 | 0..inf
number::pow(nonInt(-1..2), int(-inf..1)) => -inf..!-1 | -1!..inf
number::pow(nonInt(-1..2), int(-inf..inf)) => -inf..!-1 | -1!..inf
number::pow(nonInt(-1..2), nonInt(0..1)) => 0..2
number::pow(nonInt(-1..2), nonInt(0..2)) => 0..4
number::pow(nonInt(-1..2), nonInt(-1..2)) => -inf | 0..inf
number::pow(nonInt(-1..2), nonInt(0..inf)) => 0..inf
number::pow(nonInt(-1..2), nonInt(-1..inf)) => -inf | 0..inf
number::pow(nonInt(-1..2), nonInt(-inf..0)) => -inf | 0..inf
number::pow(nonInt(-1..2), nonInt(-inf..1)) => -inf | 0..inf
number::pow(nonInt(-1..2), nonInt(-inf..inf)) => -inf | 0..inf
number::pow(nonInt(-1..2), 1 | int(3..4)) => -1!..!16
number::pow(nonInt(0..inf), number) => -inf | 0..inf | nan
number::pow(nonInt(0..inf), -3.14) => -inf | 0..inf
number::pow(nonInt(0..inf), -2) => 0!..!inf
number::pow(nonInt(0..inf), -1) => 0!..!inf
number::pow(nonInt(0..inf), -0.5) => -inf | 0..inf
number::pow(nonInt(0..inf), 0) => 1
number::pow(nonInt(0..inf), 0.5) => 0..inf
number::pow(nonInt(0..inf), 1) => nonInt(0..inf)
number::pow(nonInt(0..inf), 2) => 0!..!inf
number::pow(nonInt(0..inf), 2.78) => 0..inf
number::pow(nonInt(0..inf), 3) => 0!..!inf
number::pow(nonInt(0..inf), 3.14) => 0..inf
number::pow(nonInt(0..inf), 10) => 0!..!inf
number::pow(nonInt(0..inf), 100) => 0!..!inf
number::pow(nonInt(0..inf), -inf) => 0 | inf
number::pow(nonInt(0..inf), inf) => 0 | inf
number::pow(nonInt(0..inf), nan) => nan
number::pow(nonInt(0..inf), 0..1) => 0..inf
number::pow(nonInt(0..inf), 0!..1) => 0..inf
number::pow(nonInt(0..inf), 0..!1) => 0..inf
number::pow(nonInt(0..inf), 0..2) => 0..inf
number::pow(nonInt(0..inf), 0!..!2) => 0..inf
number::pow(nonInt(0..inf), 0.5..1.5) => 0..inf
number::pow(nonInt(0..inf), 0.5..2.5) => 0..inf
number::pow(nonInt(0..inf), 0.5!..2.5) => 0..inf
number::pow(nonInt(0..inf), 0.5..!2.5) => 0..inf
number::pow(nonInt(0..inf), -2.56..3.35) => -inf | 0..inf
number::pow(nonInt(0..inf), 0.5..0.75) => 0..inf
number::pow(nonInt(0..inf), 1..2) => 0..inf
number::pow(nonInt(0..inf), 0..inf) => 0..inf
number::pow(nonInt(0..inf), 0!..inf) => 0..inf
number::pow(nonInt(0..inf), 0..!inf) => 0..inf
number::pow(nonInt(0..inf), 0!..!inf) => 0..inf
number::pow(nonInt(0..inf), 1..inf) => 0..inf
number::pow(nonInt(0..inf), 1!..inf) => 0..inf
number::pow(nonInt(0..inf), 1..!inf) => 0..inf
number::pow(nonInt(0..inf), 2..inf) => 0..inf
number::pow(nonInt(0..inf), 2!..inf) => 0..inf
number::pow(nonInt(0..inf), 2.5..inf) => 0..inf
number::pow(nonInt(0..inf), -inf..0) => -inf | 0..inf
number::pow(nonInt(0..inf), -inf..inf) => -inf | 0..inf
number::pow(nonInt(0..inf), -inf!..inf) => -inf | 0..inf
number::pow(nonInt(0..inf), -inf..!inf) => -inf | 0..inf
number::pow(nonInt(0..inf), -inf!..!inf) => -inf | 0..inf
number::pow(nonInt(0..inf), int(0..1)) => 0!..!2 | nonInt(2..inf)
number::pow(nonInt(0..inf), int(0..2)) => 0!..!inf
number::pow(nonInt(0..inf), int(1..2)) => 0!..!inf
number::pow(nonInt(0..inf), int(5..20)) => 0!..!inf
number::pow(nonInt(0..inf), int(-20..-5)) => 0!..!inf
number::pow(nonInt(0..inf), int(-10..10)) => 0!..!inf
number::pow(nonInt(0..inf), int(0..inf)) => 0!..!inf
number::pow(nonInt(0..inf), int(1..inf)) => 0!..!inf
number::pow(nonInt(0..inf), int(-inf..0)) => 0!..!inf
number::pow(nonInt(0..inf), int(-inf..1)) => 0!..!inf
number::pow(nonInt(0..inf), int(-inf..inf)) => 0!..!inf
number::pow(nonInt(0..inf), nonInt(0..1)) => 0..inf
number::pow(nonInt(0..inf), nonInt(0..2)) => 0..inf
number::pow(nonInt(0..inf), nonInt(-1..2)) => -inf | 0..inf
number::pow(nonInt(0..inf), nonInt(0..inf)) => 0..inf
number::pow(nonInt(0..inf), nonInt(-1..inf)) => -inf | 0..inf
number::pow(nonInt(0..inf), nonInt(-inf..0)) => -inf | 0..inf
number::pow(nonInt(0..inf), nonInt(-inf..1)) => -inf | 0..inf
number::pow(nonInt(0..inf), nonInt(-inf..inf)) => -inf | 0..inf
number::pow(nonInt(0..inf), 1 | int(3..4)) => 0!..!inf
number::pow(nonInt(-1..inf), number) => -inf..!-1 | -1!..inf | nan
number::pow(nonInt(-1..inf), -3.14) => -inf | 0..inf
number::pow(nonInt(-1..inf), -2) => nonInt(0..1)
number::pow(nonInt(-1..inf), -1) => -inf..!-1 | 0!..inf
number::pow(nonInt(-1..inf), -0.5) => -inf | 0..inf
number::pow(nonInt(-1..inf), 0) => 1
number::pow(nonInt(-1..inf), 0.5) => 0..inf
number::pow(nonInt(-1..inf), 1) => nonInt(-1..inf)
number::pow(nonInt(-1..inf), 2) => 1!..!inf
number::pow(nonInt(-1..inf), 2.78) => 0..inf
number::pow(nonInt(-1..inf), 3) => -1!..!inf
number::pow(nonInt(-1..inf), 3.14) => 0..inf
number::pow(nonInt(-1..inf), 10) => 1!..!inf
number::pow(nonInt(-1..inf), 100) => 1!..!inf
number::pow(nonInt(-1..inf), -inf) => 0 | inf
number::pow(nonInt(-1..inf), inf) => 0 | inf
number::pow(nonInt(-1..inf), nan) => nan
number::pow(nonInt(-1..inf), 0..1) => -1!..inf
number::pow(nonInt(-1..inf), 0!..1) => -1!..inf
number::pow(nonInt(-1..inf), 0..!1) => 0..inf
number::pow(nonInt(-1..inf), 0..2) => -1!..inf
number::pow(nonInt(-1..inf), 0!..!2) => -1!..inf
number::pow(nonInt(-1..inf), 0.5..1.5) => -1!..inf
number::pow(nonInt(-1..inf), 0.5..2.5) => -1!..inf
number::pow(nonInt(-1..inf), 0.5!..2.5) => -1!..inf
number::pow(nonInt(-1..inf), 0.5..!2.5) => -1!..inf
number::pow(nonInt(-1..inf), -2.56..3.35) => -inf..!-1 | -1!..inf
number::pow(nonInt(-1..inf), 0.5..0.75) => 0..inf
number::pow(nonInt(-1..inf), 1..2) => -1!..inf
number::pow(nonInt(-1..inf), 0..inf) => -1!..inf
number::pow(nonInt(-1..inf), 0!..inf) => -1!..inf
number::pow(nonInt(-1..inf), 0..!inf) => -1!..inf
number::pow(nonInt(-1..inf), 0!..!inf) => -1!..inf
number::pow(nonInt(-1..inf), 1..inf) => -1!..inf
number::pow(nonInt(-1..inf), 1!..inf) => -1!..inf
number::pow(nonInt(-1..inf), 1..!inf) => -1!..inf
number::pow(nonInt(-1..inf), 2..inf) => -1!..inf
number::pow(nonInt(-1..inf), 2!..inf) => -1!..inf
number::pow(nonInt(-1..inf), 2.5..inf) => -1!..inf
number::pow(nonInt(-1..inf), -inf..0) => -inf..!-1 | 0..inf
number::pow(nonInt(-1..inf), -inf..inf) => -inf..!-1 | -1!..inf
number::pow(nonInt(-1..inf), -inf!..inf) => -inf..!-1 | -1!..inf
number::pow(nonInt(-1..inf), -inf..!inf) => -inf..!-1 | -1!..inf
number::pow(nonInt(-1..inf), -inf!..!inf) => -inf..!-1 | -1!..inf
number::pow(nonInt(-1..inf), int(0..1)) => nonInt(-1..0) | 0!..!2 | nonInt(2..inf)
number::pow(nonInt(-1..inf), int(0..2)) => nonInt(-1..0) | 0!..!inf
number::pow(nonInt(-1..inf), int(1..2)) => nonInt(-1..1) | 1!..!inf
number::pow(nonInt(-1..inf), int(5..20)) => -1!..!inf
number::pow(nonInt(-1..inf), int(-20..-5)) => -inf..!-1 | 0!..inf
number::pow(nonInt(-1..inf), int(-10..10)) => -inf..!-1 | -1!..inf
number::pow(nonInt(-1..inf), int(0..inf)) => -1!..!inf
number::pow(nonInt(-1..inf), int(1..inf)) => -1!..!inf
number::pow(nonInt(-1..inf), int(-inf..0)) => -inf..!-1 | 0!..inf
number::pow(nonInt(-1..inf), int(-inf..1)) => -inf..!-1 | nonInt(-1..0) | 0!..inf
number::pow(nonInt(-1..inf), int(-inf..inf)) => -inf..!-1 | -1!..inf
number::pow(nonInt(-1..inf), nonInt(0..1)) => 0..inf
number::pow(nonInt(-1..inf), nonInt(0..2)) => 0..inf
number::pow(nonInt(-1..inf), nonInt(-1..2)) => -inf | 0..inf
number::pow(nonInt(-1..inf), nonInt(0..inf)) => 0..inf
number::pow(nonInt(-1..inf), nonInt(-1..inf)) => -inf | 0..inf
number::pow(nonInt(-1..inf), nonInt(-inf..0)) => -inf | 0..inf
number::pow(nonInt(-1..inf), nonInt(-inf..1)) => -inf | 0..inf
number::pow(nonInt(-1..inf), nonInt(-inf..inf)) => -inf | 0..inf
number::pow(nonInt(-1..inf), 1 | int(3..4)) => -1!..!inf
number::pow(nonInt(-inf..0), number) => -inf!..inf | nan
number::pow(nonInt(-inf..0), -3.14) => never
number::pow(nonInt(-inf..0), -2) => 0!..!inf
number::pow(nonInt(-inf..0), -1) => -inf!..!0
number::pow(nonInt(-inf..0), -0.5) => never
number::pow(nonInt(-inf..0), 0) => 1
number::pow(nonInt(-inf..0), 0.5) => never
number::pow(nonInt(-inf..0), 1) => nonInt(-inf..0)
number::pow(nonInt(-inf..0), 2) => 0!..!inf
number::pow(nonInt(-inf..0), 2.78) => never
number::pow(nonInt(-inf..0), 3) => -inf!..!0
number::pow(nonInt(-inf..0), 3.14) => never
number::pow(nonInt(-inf..0), 10) => 0!..!inf
number::pow(nonInt(-inf..0), 100) => 0!..!inf
number::pow(nonInt(-inf..0), -inf) => 0 | inf
number::pow(nonInt(-inf..0), inf) => 0 | inf
number::pow(nonInt(-inf..0), nan) => nan
number::pow(nonInt(-inf..0), 0..1) => nonInt(-inf..0) | 1
number::pow(nonInt(-inf..0), 0!..1) => nonInt(-inf..0)
number::pow(nonInt(-inf..0), 0..!1) => 1
number::pow(nonInt(-inf..0), 0..2) => nonInt(-inf..0) | 0!..!inf
number::pow(nonInt(-inf..0), 0!..!2) => nonInt(-inf..0)
number::pow(nonInt(-inf..0), 0.5..1.5) => nonInt(-inf..0)
number::pow(nonInt(-inf..0), 0.5..2.5) => nonInt(-inf..0) | 0!..!inf
number::pow(nonInt(-inf..0), 0.5!..2.5) => nonInt(-inf..0) | 0!..!inf
number::pow(nonInt(-inf..0), 0.5..!2.5) => nonInt(-inf..0) | 0!..!inf
number::pow(nonInt(-inf..0), -2.56..3.35) => -inf!..!0 | 0!..!inf
number::pow(nonInt(-inf..0), 0.5..0.75) => never
number::pow(nonInt(-inf..0), 1..2) => nonInt(-inf..0) | 0!..!inf
number::pow(nonInt(-inf..0), 0..inf) => -inf!..inf
number::pow(nonInt(-inf..0), 0!..inf) => -inf!..inf
number::pow(nonInt(-inf..0), 0..!inf) => -inf!..!0 | 0!..!inf
number::pow(nonInt(-inf..0), 0!..!inf) => -inf!..!0 | 0!..!inf
number::pow(nonInt(-inf..0), 1..inf) => -inf!..inf
number::pow(nonInt(-inf..0), 1!..inf) => -inf!..inf
number::pow(nonInt(-inf..0), 1..!inf) => -inf!..!0 | 0!..!inf
number::pow(nonInt(-inf..0), 2..inf) => -inf!..inf
number::pow(nonInt(-inf..0), 2!..inf) => -inf!..inf
number::pow(nonInt(-inf..0), 2.5..inf) => -inf!..inf
number::pow(nonInt(-inf..0), -inf..0) => -inf!..inf
number::pow(nonInt(-inf..0), -inf..inf) => -inf!..inf
number::pow(nonInt(-inf..0), -inf!..inf) => -inf!..inf
number::pow(nonInt(-inf..0), -inf..!inf) => -inf!..inf
number::pow(nonInt(-inf..0), -inf!..!inf) => -inf!..!0 | 0!..!inf
number::pow(nonInt(-inf..0), int(0..1)) => nonInt(-inf..0) | 1
number::pow(nonInt(-inf..0), int(0..2)) => nonInt(-inf..0) | 0!..!inf
number::pow(nonInt(-inf..0), int(1..2)) => nonInt(-inf..0) | 0!..!inf
number::pow(nonInt(-inf..0), int(5..20)) => -inf!..!0 | 0!..!inf
number::pow(nonInt(-inf..0), int(-20..-5)) => -inf!..!0 | 0!..!inf
number::pow(nonInt(-inf..0), int(-10..10)) => -inf!..!0 | 0!..!inf
number::pow(nonInt(-inf..0), int(0..inf)) => -inf!..!0 | 0!..!inf
number::pow(nonInt(-inf..0), int(1..inf)) => -inf!..!0 | 0!..!inf
number::pow(nonInt(-inf..0), int(-inf..0)) => -inf!..!0 | 0!..!inf
number::pow(nonInt(-inf..0), int(-inf..1)) => -inf!..!0 | 0!..!inf
number::pow(nonInt(-inf..0), int(-inf..inf)) => -inf!..!0 | 0!..!inf
number::pow(nonInt(-inf..0), nonInt(0..1)) => never
number::pow(nonInt(-inf..0), nonInt(0..2)) => never
number::pow(nonInt(-inf..0), nonInt(-1..2)) => never
number::pow(nonInt(-inf..0), nonInt(0..inf)) => never
number::pow(nonInt(-inf..0), nonInt(-1..inf)) => never
number::pow(nonInt(-inf..0), nonInt(-inf..0)) => never
number::pow(nonInt(-inf..0), nonInt(-inf..1)) => never
number::pow(nonInt(-inf..0), nonInt(-inf..inf)) => never
number::pow(nonInt(-inf..0), 1 | int(3..4)) => -inf!..!0 | 0!..!inf
number::pow(nonInt(-inf..1), number) => number
number::pow(nonInt(-inf..1), -3.14) => -inf | 1..inf
number::pow(nonInt(-inf..1), -2) => nonInt(0..1)
number::pow(nonInt(-inf..1), -1) => -inf..!0 | 1!..inf
number::pow(nonInt(-inf..1), -0.5) => -inf | 1..inf
number::pow(nonInt(-inf..1), 0) => 1
number::pow(nonInt(-inf..1), 0.5) => 0..1
number::pow(nonInt(-inf..1), 1) => nonInt(-inf..1)
number::pow(nonInt(-inf..1), 2) => 1!..!inf
number::pow(nonInt(-inf..1), 2.78) => 0..1
number::pow(nonInt(-inf..1), 3) => -inf!..!1
number::pow(nonInt(-inf..1), 3.14) => 0..1
number::pow(nonInt(-inf..1), 10) => 1!..!inf
number::pow(nonInt(-inf..1), 100) => 1!..!inf
number::pow(nonInt(-inf..1), -inf) => 0 | inf
number::pow(nonInt(-inf..1), inf) => 0 | inf
number::pow(nonInt(-inf..1), nan) => nan
number::pow(nonInt(-inf..1), 0..1) => nonInt(-inf..-1) | -1!..1
number::pow(nonInt(-inf..1), 0!..1) => nonInt(-inf..-1) | -1!..1
number::pow(nonInt(-inf..1), 0..!1) => 0..1
number::pow(nonInt(-inf..1), 0..2) => nonInt(-inf..-1) | -1!..!inf
number::pow(nonInt(-inf..1), 0!..!2) => nonInt(-inf..-1) | -1!..1
number::pow(nonInt(-inf..1), 0.5..1.5) => nonInt(-inf..-1) | -1!..1
number::pow(nonInt(-inf..1), 0.5..2.5) => nonInt(-inf..-1) | -1!..!inf
number::pow(nonInt(-inf..1), 0.5!..2.5) => nonInt(-inf..-1) | -1!..!inf
number::pow(nonInt(-inf..1), 0.5..!2.5) => nonInt(-inf..-1) | -1!..!inf
number::pow(nonInt(-inf..1), -2.56..3.35) => -inf..inf
number::pow(nonInt(-inf..1), 0.5..0.75) => 0..1
number::pow(nonInt(-inf..1), 1..2) => nonInt(-inf..-1) | -1!..!inf
number::pow(nonInt(-inf..1), 0..inf) => -inf!..inf
number::pow(nonInt(-inf..1), 0!..inf) => -inf!..inf
number::pow(nonInt(-inf..1), 0..!inf) => -inf!..!inf
number::pow(nonInt(-inf..1), 0!..!inf) => -inf!..!inf
number::pow(nonInt(-inf..1), 1..inf) => -inf!..inf
number::pow(nonInt(-inf..1), 1!..inf) => -inf!..inf
number::pow(nonInt(-inf..1), 1..!inf) => -inf!..!inf
number::pow(nonInt(-inf..1), 2..inf) => -inf!..inf
number::pow(nonInt(-inf..1), 2!..inf) => -inf!..inf
number::pow(nonInt(-inf..1), 2.5..inf) => -inf!..inf
number::pow(nonInt(-inf..1), -inf..0) => -inf..inf
number::pow(nonInt(-inf..1), -inf..inf) => -inf..inf
number::pow(nonInt(-inf..1), -inf!..inf) => -inf..inf
number::pow(nonInt(-inf..1), -inf..!inf) => -inf..inf
number::pow(nonInt(-inf..1), -inf!..!inf) => -inf..inf
number::pow(nonInt(-inf..1), int(0..1)) => nonInt(-inf..0) | 0!..1
number::pow(nonInt(-inf..1), int(0..2)) => nonInt(-inf..0) | 0!..!inf
number::pow(nonInt(-inf..1), int(1..2)) => nonInt(-inf..1) | 1!..!inf
number::pow(nonInt(-inf..1), int(5..20)) => -inf!..!1 | 1!..!inf
number::pow(nonInt(-inf..1), int(-20..-5)) => -inf..!0 | nonInt(0..1) | 1!..inf
number::pow(nonInt(-inf..1), int(-10..10)) => -inf..inf
number::pow(nonInt(-inf..1), int(0..inf)) => -inf!..!inf
number::pow(nonInt(-inf..1), int(1..inf)) => -inf!..!inf
number::pow(nonInt(-inf..1), int(-inf..0)) => -inf..!0 | 0!..inf
number::pow(nonInt(-inf..1), int(-inf..1)) => -inf..!0 | 0!..inf
number::pow(nonInt(-inf..1), int(-inf..inf)) => -inf..inf
number::pow(nonInt(-inf..1), nonInt(0..1)) => 0..1
number::pow(nonInt(-inf..1), nonInt(0..2)) => 0..1
number::pow(nonInt(-inf..1), nonInt(-1..2)) => -inf | 0..inf
number::pow(nonInt(-inf..1), nonInt(0..inf)) => 0..1
number::pow(nonInt(-inf..1), nonInt(-1..inf)) => -inf | 0..inf
number::pow(nonInt(-inf..1), nonInt(-inf..0)) => -inf | 1..inf
number::pow(nonInt(-inf..1), nonInt(-inf..1)) => -inf | 0..inf
number::pow(nonInt(-inf..1), nonInt(-inf..inf)) => -inf | 0..inf
number::pow(nonInt(-inf..1), 1 | int(3..4)) => -inf!..!1 | 1!..!inf
number::pow(nonInt(-inf..inf), number) => number
number::pow(nonInt(-inf..inf), -3.14) => -inf | 0..inf
number::pow(nonInt(-inf..inf), -2) => never
number::pow(nonInt(-inf..inf), -1) => -inf..!0 | 0!..inf
number::pow(nonInt(-inf..inf), -0.5) => -inf | 0..inf
number::pow(nonInt(-inf..inf), 0) => 1
number::pow(nonInt(-inf..inf), 0.5) => 0..inf
number::pow(nonInt(-inf..inf), 1) => nonInt(-inf..inf)
number::pow(nonInt(-inf..inf), 2) => never
number::pow(nonInt(-inf..inf), 2.78) => 0..inf
number::pow(nonInt(-inf..inf), 3) => -inf!..!inf
number::pow(nonInt(-inf..inf), 3.14) => 0..inf
number::pow(nonInt(-inf..inf), 10) => never
number::pow(nonInt(-inf..inf), 100) => never
number::pow(nonInt(-inf..inf), -inf) => 0 | inf
number::pow(nonInt(-inf..inf), inf) => 0 | inf
number::pow(nonInt(-inf..inf), nan) => nan
number::pow(nonInt(-inf..inf), 0..1) => nonInt(-inf..-1) | -1!..inf
number::pow(nonInt(-inf..inf), 0!..1) => nonInt(-inf..-1) | -1!..inf
number::pow(nonInt(-inf..inf), 0..!1) => 0..inf
number::pow(nonInt(-inf..inf), 0..2) => nonInt(-inf..-1) | -1!..inf
number::pow(nonInt(-inf..inf), 0!..!2) => nonInt(-inf..-1) | -1!..inf
number::pow(nonInt(-inf..inf), 0.5..1.5) => nonInt(-inf..-1) | -1!..inf
number::pow(nonInt(-inf..inf), 0.5..2.5) => nonInt(-inf..-1) | -1!..inf
number::pow(nonInt(-inf..inf), 0.5!..2.5) => nonInt(-inf..-1) | -1!..inf
number::pow(nonInt(-inf..inf), 0.5..!2.5) => nonInt(-inf..-1) | -1!..inf
number::pow(nonInt(-inf..inf), -2.56..3.35) => -inf..inf
number::pow(nonInt(-inf..inf), 0.5..0.75) => 0..inf
number::pow(nonInt(-inf..inf), 1..2) => nonInt(-inf..-1) | -1!..inf
number::pow(nonInt(-inf..inf), 0..inf) => -inf!..inf
number::pow(nonInt(-inf..inf), 0!..inf) => -inf!..inf
number::pow(nonInt(-inf..inf), 0..!inf) => -inf!..inf
number::pow(nonInt(-inf..inf), 0!..!inf) => -inf!..inf
number::pow(nonInt(-inf..inf), 1..inf) => -inf!..inf
number::pow(nonInt(-inf..inf), 1!..inf) => -inf!..inf
number::pow(nonInt(-inf..inf), 1..!inf) => -inf!..inf
number::pow(nonInt(-inf..inf), 2..inf) => -inf!..inf
number::pow(nonInt(-inf..inf), 2!..inf) => -inf!..inf
number::pow(nonInt(-inf..inf), 2.5..inf) => -inf!..inf
number::pow(nonInt(-inf..inf), -inf..0) => -inf..inf
number::pow(nonInt(-inf..inf), -inf..inf) => -inf..inf
number::pow(nonInt(-inf..inf), -inf!..inf) => -inf..inf
number::pow(nonInt(-inf..inf), -inf..!inf) => -inf..inf
number::pow(nonInt(-inf..inf), -inf!..!inf) => -inf..inf
number::pow(nonInt(-inf..inf), int(0..1)) => nonInt(-inf..0) | 0!..!2 | nonInt(2..inf)
number::pow(nonInt(-inf..inf), int(0..2)) => nonInt(-inf..0) | 0!..!2 | nonInt(2..inf)
number::pow(nonInt(-inf..inf), int(1..2)) => nonInt(-inf..inf)
number::pow(nonInt(-inf..inf), int(5..20)) => -inf!..!inf
number::pow(nonInt(-inf..inf), int(-20..-5)) => -inf..!0 | 0!..inf
number::pow(nonInt(-inf..inf), int(-10..10)) => -inf..inf
number::pow(nonInt(-inf..inf), int(0..inf)) => -inf!..!inf
number::pow(nonInt(-inf..inf), int(1..inf)) => -inf!..!inf
number::pow(nonInt(-inf..inf), int(-inf..0)) => -inf..!0 | 0!..inf
number::pow(nonInt(-inf..inf), int(-inf..1)) => -inf..!0 | 0!..inf
number::pow(nonInt(-inf..inf), int(-inf..inf)) => -inf..inf
number::pow(nonInt(-inf..inf), nonInt(0..1)) => 0..inf
number::pow(nonInt(-inf..inf), nonInt(0..2)) => 0..inf
number::pow(nonInt(-inf..inf), nonInt(-1..2)) => -inf | 0..inf
number::pow(nonInt(-inf..inf), nonInt(0..inf)) => 0..inf
number::pow(nonInt(-inf..inf), nonInt(-1..inf)) => -inf | 0..inf
number::pow(nonInt(-inf..inf), nonInt(-inf..0)) => -inf | 0..inf
number::pow(nonInt(-inf..inf), nonInt(-inf..1)) => -inf | 0..inf
number::pow(nonInt(-inf..inf), nonInt(-inf..inf)) => -inf | 0..inf
number::pow(nonInt(-inf..inf), 1 | int(3..4)) => -inf!..!inf
number::pow(1 | int(3..4), number) => 0..inf | nan
number::pow(1 | int(3..4), -3.14) => 0.01286860964480583 | 0.031756984727589324 | 1
number::pow(1 | int(3..4), -2) => 0.0625 | 0.06666666666666667 | 0.07142857142857142 | 0.07692307692307693 | 0.08333333333333333 | 0.09090909090909091 | 0.1 | 0.1111111111111111 | 1
number::pow(1 | int(3..4), -1) => 0.25 | 0.3333333333333333 | 1
number::pow(1 | int(3..4), -0.5) => 0.5 | 0.5773502691896258 | 1
number::pow(1 | int(3..4), 0) => 1
number::pow(1 | int(3..4), 0.5) => int(1..2) | 1.7320508075688772
number::pow(1 | int(3..4), 1) => 1 | int(3..4)
number::pow(1 | int(3..4), 2) => 1 | int(9..16)
number::pow(1 | int(3..4), 2.78) => 1 | 21.20298900406197 | 47.17661495331521
number::pow(1 | int(3..4), 3) => 1 | int(27..64)
number::pow(1 | int(3..4), 3.14) => 1 | 31.48913565245494 | 77.708472601283
number::pow(1 | int(3..4), 10) => 1 | int(59049..1048576)
number::pow(1 | int(3..4), 100) => 1 | int(5.153775207320113e+47..1.6069380442589903e+60)
number::pow(1 | int(3..4), -inf) => int(0..1)
number::pow(1 | int(3..4), inf) => 1 | inf
number::pow(1 | int(3..4), nan) => 1 | nan
number::pow(1 | int(3..4), 0..1) => 1..4
number::pow(1 | int(3..4), 0!..1) => 1..4
number::pow(1 | int(3..4), 0..!1) => 1..4
number::pow(1 | int(3..4), 0..2) => 1..16
number::pow(1 | int(3..4), 0!..!2) => 1..16
number::pow(1 | int(3..4), 0.5..1.5) => 1 | 1.7320508075688772..8
number::pow(1 | int(3..4), 0.5..2.5) => 1 | 1.7320508075688772..32
number::pow(1 | int(3..4), 0.5!..2.5) => 1 | 1.7320508075688772..32
number::pow(1 | int(3..4), 0.5..!2.5) => 1 | 1.7320508075688772..32
number::pow(1 | int(3..4), -2.56..3.35) => 0.028755864082027342..103.96830673359811
number::pow(1 | int(3..4), 0.5..0.75) => 1 | 1.7320508075688772..2.82842712474619
number::pow(1 | int(3..4), 1..2) => 1 | 3..16
number::pow(1 | int(3..4), 0..inf) => 1..inf
number::pow(1 | int(3..4), 0!..inf) => 1..inf
number::pow(1 | int(3..4), 0..!inf) => 1..inf
number::pow(1 | int(3..4), 0!..!inf) => 1..inf
number::pow(1 | int(3..4), 1..inf) => 1 | 3..inf
number::pow(1 | int(3..4), 1!..inf) => 1 | 3..inf
number::pow(1 | int(3..4), 1..!inf) => 1 | 3..inf
number::pow(1 | int(3..4), 2..inf) => 1 | 9..inf
number::pow(1 | int(3..4), 2!..inf) => 1 | 9..inf
number::pow(1 | int(3..4), 2.5..inf) => 1 | 15.588457268119887..inf
number::pow(1 | int(3..4), -inf..0) => 0..1
number::pow(1 | int(3..4), -inf..inf) => 0..inf
number::pow(1 | int(3..4), -inf!..inf) => 0..inf
number::pow(1 | int(3..4), -inf..!inf) => 0..inf
number::pow(1 | int(3..4), -inf!..!inf) => 0..inf
number::pow(1 | int(3..4), int(0..1)) => 1 | int(3..4)
number::pow(1 | int(3..4), int(0..2)) => 1 | int(3..4) | int(9..16)
number::pow(1 | int(3..4), int(1..2)) => 1 | int(3..4) | int(9..16)
number::pow(1 | int(3..4), int(5..20)) => 1 | int(243..1099511627776)
number::pow(1 | int(3..4), int(-20..-5)) => 9.094947017729282e-13..0.00411522633744856 | 1
number::pow(1 | int(3..4), int(-10..10)) => 9.5367431640625e-7..0.1111111111111111 | 0.25 | 0.3333333333333333 | 1 | int(3..4) | int(9..1048576)
number::pow(1 | int(3..4), int(0..inf)) => 1 | int(3..4) | int(9..inf)
number::pow(1 | int(3..4), int(1..inf)) => 1 | int(3..4) | int(9..inf)
number::pow(1 | int(3..4), int(-inf..0)) => 0!..0.1111111111111111 | 0.25 | 0.3333333333333333 | 1
number::pow(1 | int(3..4), int(-inf..1)) => 0!..0.1111111111111111 | 0.25 | 0.3333333333333333 | 1 | int(3..4)
number::pow(1 | int(3..4), int(-inf..inf)) => 0!..0.1111111111111111 | 0.25 | 0.3333333333333333 | 1 | int(3..4) | int(9..inf)
number::pow(1 | int(3..4), nonInt(0..1)) => 1..4
number::pow(1 | int(3..4), nonInt(0..2)) => 1..16
number::pow(1 | int(3..4), nonInt(-1..2)) => 0.25..16
number::pow(1 | int(3..4), nonInt(0..inf)) => 1..inf
number::pow(1 | int(3..4), nonInt(-1..inf)) => 0.25..inf
number::pow(1 | int(3..4), nonInt(-inf..0)) => 0..1
number::pow(1 | int(3..4), nonInt(-inf..1)) => 0..4
number::pow(1 | int(3..4), nonInt(-inf..inf)) => 0..inf
number::pow(1 | int(3..4), 1 | int(3..4)) => 1 | int(3..4) | int(27..64) | int(81..256)"
`;

exports[`Builtin functions number::rec evaluate 1`] = `
"number::rec(number) => number
number::rec(-3.14) => -0.3184713375796178
number::rec(-2) => -0.5
number::rec(-1) => -1
number::rec(-0.5) => -2
number::rec(0) => -inf | inf
number::rec(0.5) => 2
number::rec(1) => 1
number::rec(2) => 0.5
number::rec(2.78) => 0.3597122302158274
number::rec(3) => 0.3333333333333333
number::rec(3.14) => 0.3184713375796178
number::rec(10) => 0.1
number::rec(100) => 0.01
number::rec(-inf) => 0
number::rec(inf) => 0
number::rec(nan) => nan
number::rec(0..1) => -inf | 1..inf
number::rec(0!..1) => 1..!inf
number::rec(0..!1) => -inf | 1!..inf
number::rec(0..2) => -inf | 0.5..inf
number::rec(0!..!2) => 0.5!..!inf
number::rec(0.5..1.5) => 0.6666666666666666..2
number::rec(0.5..2.5) => 0.4..2
number::rec(0.5!..2.5) => 0.4..!2
number::rec(0.5..!2.5) => 0.4!..2
number::rec(-2.56..3.35) => -inf..-0.390625 | 0.29850746268656714..inf
number::rec(0.5..0.75) => 1.3333333333333333..2
number::rec(1..2) => 0.5..1
number::rec(0..inf) => -inf | 0..inf
number::rec(0!..inf) => 0..!inf
number::rec(0..!inf) => -inf | 0!..inf
number::rec(0!..!inf) => 0!..!inf
number::rec(1..inf) => 0..1
number::rec(1!..inf) => 0..!1
number::rec(1..!inf) => 0!..1
number::rec(2..inf) => 0..0.5
number::rec(2!..inf) => 0..!0.5
number::rec(2.5..inf) => 0..0.4
number::rec(-inf..0) => -inf..0 | inf
number::rec(-inf..inf) => -inf..inf
number::rec(-inf!..inf) => -inf..inf
number::rec(-inf..!inf) => -inf..inf
number::rec(-inf!..!inf) => -inf..!0 | 0!..inf
number::rec(int(0..1)) => -inf | 1 | inf
number::rec(int(0..2)) => -inf | 0.5 | 1 | inf
number::rec(int(1..2)) => 0.5 | 1
number::rec(int(5..20)) => 0.05..0.2
number::rec(int(-20..-5)) => -0.2..-0.05
number::rec(int(-10..10)) => -inf | -1..-0.1 | 0.1..1 | inf
number::rec(int(0..inf)) => -inf | 0!..1 | inf
number::rec(int(1..inf)) => 0!..1
number::rec(int(-inf..0)) => -inf | -1..!0 | inf
number::rec(int(-inf..1)) => -inf | -1..!0 | 1 | inf
number::rec(int(-inf..inf)) => -inf | -1..!0 | 0!..1 | inf
number::rec(nonInt(0..1)) => 1!..!inf
number::rec(nonInt(0..2)) => 0.5!..!inf
number::rec(nonInt(-1..2)) => -inf..!-1 | 0.5!..inf
number::rec(nonInt(0..inf)) => 0!..!inf
number::rec(nonInt(-1..inf)) => -inf..!-1 | 0!..inf
number::rec(nonInt(-inf..0)) => -inf!..!0
number::rec(nonInt(-inf..1)) => -inf..!0 | 1!..inf
number::rec(nonInt(-inf..inf)) => -inf..!0 | 0!..inf
number::rec(1 | int(3..4)) => 0.25 | 0.3333333333333333 | 1
number::rec(never) => never
number::rec(any) => Error: Incompatible argument type: The supplied argument type any is not compatible with the definition type."
`;

exports[`Builtin functions number::sin evaluate 1`] = `
"number::sin(number) => -1..1 | nan
number::sin(-3.14) => -0.0015926529164868282
number::sin(-2) => -0.9092974268256817
number::sin(-1) => -0.8414709848078965
number::sin(-0.5) => -0.479425538604203
number::sin(0) => 0
number::sin(0.5) => 0.479425538604203
number::sin(1) => 0.8414709848078965
number::sin(2) => 0.9092974268256817
number::sin(2.78) => 0.3537643453011431
number::sin(3) => 0.1411200080598672
number::sin(3.14) => 0.0015926529164868282
number::sin(10) => -0.5440211108893698
number::sin(100) => -0.5063656411097588
number::sin(-inf) => nan
number::sin(inf) => nan
number::sin(nan) => nan
number::sin(0..1) => 0..0.8414709848078965
number::sin(0!..1) => 0!..0.8414709848078965
number::sin(0..!1) => 0..!0.8414709848078965
number::sin(0..2) => 0..1
number::sin(0!..!2) => 0!..1
number::sin(0.5..1.5) => 0.479425538604203..0.9974949866040544
number::sin(0.5..2.5) => 0.479425538604203..1
number::sin(0.5!..2.5) => 0.479425538604203!..1
number::sin(0.5..!2.5) => 0.479425538604203..1
number::sin(-2.56..3.35) => -1..1
number::sin(0.5..0.75) => 0.479425538604203..0.6816387600233341
number::sin(1..2) => 0.8414709848078965..1
number::sin(0..inf) => -1..1 | nan
number::sin(0!..inf) => -1..1 | nan
number::sin(0..!inf) => -1..1
number::sin(0!..!inf) => -1..1
number::sin(1..inf) => -1..1 | nan
number::sin(1!..inf) => -1..1 | nan
number::sin(1..!inf) => -1..1
number::sin(2..inf) => -1..1 | nan
number::sin(2!..inf) => -1..1 | nan
number::sin(2.5..inf) => -1..1 | nan
number::sin(-inf..0) => -1..1 | nan
number::sin(-inf..inf) => -1..1 | nan
number::sin(-inf!..inf) => -1..1 | nan
number::sin(-inf..!inf) => -1..1 | nan
number::sin(-inf!..!inf) => -1..1
number::sin(int(0..1)) => 0 | 0.8414709848078965
number::sin(int(0..2)) => 0 | 0.8414709848078965 | 0.9092974268256817
number::sin(int(1..2)) => 0.8414709848078965 | 0.9092974268256817
number::sin(int(5..20)) => -1..1
number::sin(int(-20..-5)) => -1..1
number::sin(int(-10..10)) => -1..1
number::sin(int(0..inf)) => -1..1
number::sin(int(1..inf)) => -1..1
number::sin(int(-inf..0)) => -1..1
number::sin(int(-inf..1)) => -1..1
number::sin(int(-inf..inf)) => -1..1
number::sin(nonInt(0..1)) => 0!..!0.8414709848078965
number::sin(nonInt(0..2)) => 0!..1
number::sin(nonInt(-1..2)) => -0.8414709848078965!..1
number::sin(nonInt(0..inf)) => -1..1
number::sin(nonInt(-1..inf)) => -1..1
number::sin(nonInt(-inf..0)) => -1..1
number::sin(nonInt(-inf..1)) => -1..1
number::sin(nonInt(-inf..inf)) => -1..1
number::sin(1 | int(3..4)) => -0.7568024953079282 | 0.1411200080598672 | 0.8414709848078965
number::sin(never) => never
number::sin(any) => Error: Incompatible argument type: The supplied argument type any is not compatible with the definition type."
`;

exports[`Builtin functions round evaluate 1`] = `
"round(number) => -inf | int(-inf..inf) | inf | nan
round(-3.14) => -3
round(-2) => -2
round(-1) => -1
round(-0.5) => 0
round(0) => 0
round(0.5) => 1
round(1) => 1
round(2) => 2
round(2.78) => 3
round(3) => 3
round(3.14) => 3
round(10) => 10
round(100) => 100
round(-inf) => -inf
round(inf) => inf
round(nan) => nan
round(0..1) => int(0..1)
round(0!..1) => int(0..1)
round(0..!1) => int(0..1)
round(0..2) => int(0..2)
round(0!..!2) => int(0..2)
round(0.5..1.5) => int(1..2)
round(0.5..2.5) => int(1..3)
round(0.5!..2.5) => int(1..3)
round(0.5..!2.5) => int(1..2)
round(-2.56..3.35) => int(-3..3)
round(0.5..0.75) => 1
round(1..2) => int(1..2)
round(0..inf) => int(0..inf) | inf
round(0!..inf) => int(0..inf) | inf
round(0..!inf) => int(0..inf)
round(0!..!inf) => int(0..inf)
round(1..inf) => int(1..inf) | inf
round(1!..inf) => int(1..inf) | inf
round(1..!inf) => int(1..inf)
round(2..inf) => int(2..inf) | inf
round(2!..inf) => int(2..inf) | inf
round(2.5..inf) => int(3..inf) | inf
round(-inf..0) => -inf | int(-inf..0)
round(-inf..inf) => -inf | int(-inf..inf) | inf
round(-inf!..inf) => int(-inf..inf) | inf
round(-inf..!inf) => -inf | int(-inf..inf)
round(-inf!..!inf) => int(-inf..inf)
round(int(0..1)) => int(0..1)
round(int(0..2)) => int(0..2)
round(int(1..2)) => int(1..2)
round(int(5..20)) => int(5..20)
round(int(-20..-5)) => int(-20..-5)
round(int(-10..10)) => int(-10..10)
round(int(0..inf)) => int(0..inf)
round(int(1..inf)) => int(1..inf)
round(int(-inf..0)) => int(-inf..0)
round(int(-inf..1)) => int(-inf..1)
round(int(-inf..inf)) => int(-inf..inf)
round(nonInt(0..1)) => int(0..1)
round(nonInt(0..2)) => int(0..2)
round(nonInt(-1..2)) => int(-1..2)
round(nonInt(0..inf)) => int(0..inf)
round(nonInt(-1..inf)) => int(-1..inf)
round(nonInt(-inf..0)) => int(-inf..0)
round(nonInt(-inf..1)) => int(-inf..1)
round(nonInt(-inf..inf)) => int(-inf..inf)
round(1 | int(3..4)) => 1 | int(3..4)
round(never) => never
round(any) => Error: Incompatible argument type: The supplied argument type any is not compatible with the definition type."
`;

exports[`Builtin functions string::endsWith evaluate 1`] = `
"string::endsWith(string, string) => false | true
string::endsWith(string, "") => true
string::endsWith(string, "foo") => false | true
string::endsWith(string, "bar") => false | true
string::endsWith(string, "ðŸ’©") => false | true
string::endsWith(string, "bar" | "foo") => false | true
string::endsWith(string, "baz" | "foo") => false | true
string::endsWith(string, invStrSet("foo")) => false | true
string::endsWith(string, invStrSet("bar" | "foo")) => false | true
string::endsWith(string, invStrSet("bar")) => false | true
string::endsWith(string, invStrSet("")) => false | true
string::endsWith("", string) => false | true
string::endsWith("", "") => true
string::endsWith("", "foo") => false
string::endsWith("", "bar") => false
string::endsWith("", "ðŸ’©") => false
string::endsWith("", "bar" | "foo") => false
string::endsWith("", "baz" | "foo") => false
string::endsWith("", invStrSet("foo")) => false | true
string::endsWith("", invStrSet("bar" | "foo")) => false | true
string::endsWith("", invStrSet("bar")) => false | true
string::endsWith("", invStrSet("")) => false
string::endsWith("foo", string) => false | true
string::endsWith("foo", "") => true
string::endsWith("foo", "foo") => true
string::endsWith("foo", "bar") => false
string::endsWith("foo", "ðŸ’©") => false
string::endsWith("foo", "bar" | "foo") => false | true
string::endsWith("foo", "baz" | "foo") => false | true
string::endsWith("foo", invStrSet("foo")) => false | true
string::endsWith("foo", invStrSet("bar" | "foo")) => false | true
string::endsWith("foo", invStrSet("bar")) => false | true
string::endsWith("foo", invStrSet("")) => false | true
string::endsWith("bar", string) => false | true
string::endsWith("bar", "") => true
string::endsWith("bar", "foo") => false
string::endsWith("bar", "bar") => true
string::endsWith("bar", "ðŸ’©") => false
string::endsWith("bar", "bar" | "foo") => false | true
string::endsWith("bar", "baz" | "foo") => false
string::endsWith("bar", invStrSet("foo")) => false | true
string::endsWith("bar", invStrSet("bar" | "foo")) => false | true
string::endsWith("bar", invStrSet("bar")) => false | true
string::endsWith("bar", invStrSet("")) => false | true
string::endsWith("ðŸ’©", string) => false | true
string::endsWith("ðŸ’©", "") => true
string::endsWith("ðŸ’©", "foo") => false
string::endsWith("ðŸ’©", "bar") => false
string::endsWith("ðŸ’©", "ðŸ’©") => true
string::endsWith("ðŸ’©", "bar" | "foo") => false
string::endsWith("ðŸ’©", "baz" | "foo") => false
string::endsWith("ðŸ’©", invStrSet("foo")) => false | true
string::endsWith("ðŸ’©", invStrSet("bar" | "foo")) => false | true
string::endsWith("ðŸ’©", invStrSet("bar")) => false | true
string::endsWith("ðŸ’©", invStrSet("")) => false | true
string::endsWith("bar" | "foo", string) => false | true
string::endsWith("bar" | "foo", "") => true
string::endsWith("bar" | "foo", "foo") => false | true
string::endsWith("bar" | "foo", "bar") => false | true
string::endsWith("bar" | "foo", "ðŸ’©") => false
string::endsWith("bar" | "foo", "bar" | "foo") => false | true
string::endsWith("bar" | "foo", "baz" | "foo") => false | true
string::endsWith("bar" | "foo", invStrSet("foo")) => false | true
string::endsWith("bar" | "foo", invStrSet("bar" | "foo")) => false | true
string::endsWith("bar" | "foo", invStrSet("bar")) => false | true
string::endsWith("bar" | "foo", invStrSet("")) => false | true
string::endsWith("baz" | "foo", string) => false | true
string::endsWith("baz" | "foo", "") => true
string::endsWith("baz" | "foo", "foo") => false | true
string::endsWith("baz" | "foo", "bar") => false
string::endsWith("baz" | "foo", "ðŸ’©") => false
string::endsWith("baz" | "foo", "bar" | "foo") => false | true
string::endsWith("baz" | "foo", "baz" | "foo") => false | true
string::endsWith("baz" | "foo", invStrSet("foo")) => false | true
string::endsWith("baz" | "foo", invStrSet("bar" | "foo")) => false | true
string::endsWith("baz" | "foo", invStrSet("bar")) => false | true
string::endsWith("baz" | "foo", invStrSet("")) => false | true
string::endsWith(invStrSet("foo"), string) => false | true
string::endsWith(invStrSet("foo"), "") => true
string::endsWith(invStrSet("foo"), "foo") => false | true
string::endsWith(invStrSet("foo"), "bar") => false | true
string::endsWith(invStrSet("foo"), "ðŸ’©") => false | true
string::endsWith(invStrSet("foo"), "bar" | "foo") => false | true
string::endsWith(invStrSet("foo"), "baz" | "foo") => false | true
string::endsWith(invStrSet("foo"), invStrSet("foo")) => false | true
string::endsWith(invStrSet("foo"), invStrSet("bar" | "foo")) => false | true
string::endsWith(invStrSet("foo"), invStrSet("bar")) => false | true
string::endsWith(invStrSet("foo"), invStrSet("")) => false | true
string::endsWith(invStrSet("bar" | "foo"), string) => false | true
string::endsWith(invStrSet("bar" | "foo"), "") => true
string::endsWith(invStrSet("bar" | "foo"), "foo") => false | true
string::endsWith(invStrSet("bar" | "foo"), "bar") => false | true
string::endsWith(invStrSet("bar" | "foo"), "ðŸ’©") => false | true
string::endsWith(invStrSet("bar" | "foo"), "bar" | "foo") => false | true
string::endsWith(invStrSet("bar" | "foo"), "baz" | "foo") => false | true
string::endsWith(invStrSet("bar" | "foo"), invStrSet("foo")) => false | true
string::endsWith(invStrSet("bar" | "foo"), invStrSet("bar" | "foo")) => false | true
string::endsWith(invStrSet("bar" | "foo"), invStrSet("bar")) => false | true
string::endsWith(invStrSet("bar" | "foo"), invStrSet("")) => false | true
string::endsWith(invStrSet("bar"), string) => false | true
string::endsWith(invStrSet("bar"), "") => true
string::endsWith(invStrSet("bar"), "foo") => false | true
string::endsWith(invStrSet("bar"), "bar") => false | true
string::endsWith(invStrSet("bar"), "ðŸ’©") => false | true
string::endsWith(invStrSet("bar"), "bar" | "foo") => false | true
string::endsWith(invStrSet("bar"), "baz" | "foo") => false | true
string::endsWith(invStrSet("bar"), invStrSet("foo")) => false | true
string::endsWith(invStrSet("bar"), invStrSet("bar" | "foo")) => false | true
string::endsWith(invStrSet("bar"), invStrSet("bar")) => false | true
string::endsWith(invStrSet("bar"), invStrSet("")) => false | true
string::endsWith(invStrSet(""), string) => false | true
string::endsWith(invStrSet(""), "") => true
string::endsWith(invStrSet(""), "foo") => false | true
string::endsWith(invStrSet(""), "bar") => false | true
string::endsWith(invStrSet(""), "ðŸ’©") => false | true
string::endsWith(invStrSet(""), "bar" | "foo") => false | true
string::endsWith(invStrSet(""), "baz" | "foo") => false | true
string::endsWith(invStrSet(""), invStrSet("foo")) => false | true
string::endsWith(invStrSet(""), invStrSet("bar" | "foo")) => false | true
string::endsWith(invStrSet(""), invStrSet("bar")) => false | true
string::endsWith(invStrSet(""), invStrSet("")) => false | true"
`;

exports[`Builtin functions string::includes evaluate 1`] = `
"string::includes(string, string) => false | true
string::includes(string, "") => true
string::includes(string, "foo") => false | true
string::includes(string, "bar") => false | true
string::includes(string, "ðŸ’©") => false | true
string::includes(string, "bar" | "foo") => false | true
string::includes(string, "baz" | "foo") => false | true
string::includes(string, invStrSet("foo")) => false | true
string::includes(string, invStrSet("bar" | "foo")) => false | true
string::includes(string, invStrSet("bar")) => false | true
string::includes(string, invStrSet("")) => false | true
string::includes("", string) => false | true
string::includes("", "") => true
string::includes("", "foo") => false
string::includes("", "bar") => false
string::includes("", "ðŸ’©") => false
string::includes("", "bar" | "foo") => false
string::includes("", "baz" | "foo") => false
string::includes("", invStrSet("foo")) => false | true
string::includes("", invStrSet("bar" | "foo")) => false | true
string::includes("", invStrSet("bar")) => false | true
string::includes("", invStrSet("")) => false
string::includes("foo", string) => false | true
string::includes("foo", "") => true
string::includes("foo", "foo") => true
string::includes("foo", "bar") => false
string::includes("foo", "ðŸ’©") => false
string::includes("foo", "bar" | "foo") => false | true
string::includes("foo", "baz" | "foo") => false | true
string::includes("foo", invStrSet("foo")) => false | true
string::includes("foo", invStrSet("bar" | "foo")) => false | true
string::includes("foo", invStrSet("bar")) => false | true
string::includes("foo", invStrSet("")) => false | true
string::includes("bar", string) => false | true
string::includes("bar", "") => true
string::includes("bar", "foo") => false
string::includes("bar", "bar") => true
string::includes("bar", "ðŸ’©") => false
string::includes("bar", "bar" | "foo") => false | true
string::includes("bar", "baz" | "foo") => false
string::includes("bar", invStrSet("foo")) => false | true
string::includes("bar", invStrSet("bar" | "foo")) => false | true
string::includes("bar", invStrSet("bar")) => false | true
string::includes("bar", invStrSet("")) => false | true
string::includes("ðŸ’©", string) => false | true
string::includes("ðŸ’©", "") => true
string::includes("ðŸ’©", "foo") => false
string::includes("ðŸ’©", "bar") => false
string::includes("ðŸ’©", "ðŸ’©") => true
string::includes("ðŸ’©", "bar" | "foo") => false
string::includes("ðŸ’©", "baz" | "foo") => false
string::includes("ðŸ’©", invStrSet("foo")) => false | true
string::includes("ðŸ’©", invStrSet("bar" | "foo")) => false | true
string::includes("ðŸ’©", invStrSet("bar")) => false | true
string::includes("ðŸ’©", invStrSet("")) => false | true
string::includes("bar" | "foo", string) => false | true
string::includes("bar" | "foo", "") => true
string::includes("bar" | "foo", "foo") => false | true
string::includes("bar" | "foo", "bar") => false | true
string::includes("bar" | "foo", "ðŸ’©") => false
string::includes("bar" | "foo", "bar" | "foo") => false | true
string::includes("bar" | "foo", "baz" | "foo") => false | true
string::includes("bar" | "foo", invStrSet("foo")) => false | true
string::includes("bar" | "foo", invStrSet("bar" | "foo")) => false | true
string::includes("bar" | "foo", invStrSet("bar")) => false | true
string::includes("bar" | "foo", invStrSet("")) => false | true
string::includes("baz" | "foo", string) => false | true
string::includes("baz" | "foo", "") => true
string::includes("baz" | "foo", "foo") => false | true
string::includes("baz" | "foo", "bar") => false
string::includes("baz" | "foo", "ðŸ’©") => false
string::includes("baz" | "foo", "bar" | "foo") => false | true
string::includes("baz" | "foo", "baz" | "foo") => false | true
string::includes("baz" | "foo", invStrSet("foo")) => false | true
string::includes("baz" | "foo", invStrSet("bar" | "foo")) => false | true
string::includes("baz" | "foo", invStrSet("bar")) => false | true
string::includes("baz" | "foo", invStrSet("")) => false | true
string::includes(invStrSet("foo"), string) => false | true
string::includes(invStrSet("foo"), "") => true
string::includes(invStrSet("foo"), "foo") => false | true
string::includes(invStrSet("foo"), "bar") => false | true
string::includes(invStrSet("foo"), "ðŸ’©") => false | true
string::includes(invStrSet("foo"), "bar" | "foo") => false | true
string::includes(invStrSet("foo"), "baz" | "foo") => false | true
string::includes(invStrSet("foo"), invStrSet("foo")) => false | true
string::includes(invStrSet("foo"), invStrSet("bar" | "foo")) => false | true
string::includes(invStrSet("foo"), invStrSet("bar")) => false | true
string::includes(invStrSet("foo"), invStrSet("")) => false | true
string::includes(invStrSet("bar" | "foo"), string) => false | true
string::includes(invStrSet("bar" | "foo"), "") => true
string::includes(invStrSet("bar" | "foo"), "foo") => false | true
string::includes(invStrSet("bar" | "foo"), "bar") => false | true
string::includes(invStrSet("bar" | "foo"), "ðŸ’©") => false | true
string::includes(invStrSet("bar" | "foo"), "bar" | "foo") => false | true
string::includes(invStrSet("bar" | "foo"), "baz" | "foo") => false | true
string::includes(invStrSet("bar" | "foo"), invStrSet("foo")) => false | true
string::includes(invStrSet("bar" | "foo"), invStrSet("bar" | "foo")) => false | true
string::includes(invStrSet("bar" | "foo"), invStrSet("bar")) => false | true
string::includes(invStrSet("bar" | "foo"), invStrSet("")) => false | true
string::includes(invStrSet("bar"), string) => false | true
string::includes(invStrSet("bar"), "") => true
string::includes(invStrSet("bar"), "foo") => false | true
string::includes(invStrSet("bar"), "bar") => false | true
string::includes(invStrSet("bar"), "ðŸ’©") => false | true
string::includes(invStrSet("bar"), "bar" | "foo") => false | true
string::includes(invStrSet("bar"), "baz" | "foo") => false | true
string::includes(invStrSet("bar"), invStrSet("foo")) => false | true
string::includes(invStrSet("bar"), invStrSet("bar" | "foo")) => false | true
string::includes(invStrSet("bar"), invStrSet("bar")) => false | true
string::includes(invStrSet("bar"), invStrSet("")) => false | true
string::includes(invStrSet(""), string) => false | true
string::includes(invStrSet(""), "") => true
string::includes(invStrSet(""), "foo") => false | true
string::includes(invStrSet(""), "bar") => false | true
string::includes(invStrSet(""), "ðŸ’©") => false | true
string::includes(invStrSet(""), "bar" | "foo") => false | true
string::includes(invStrSet(""), "baz" | "foo") => false | true
string::includes(invStrSet(""), invStrSet("foo")) => false | true
string::includes(invStrSet(""), invStrSet("bar" | "foo")) => false | true
string::includes(invStrSet(""), invStrSet("bar")) => false | true
string::includes(invStrSet(""), invStrSet("")) => false | true"
`;

exports[`Builtin functions string::indexOf evaluate 1`] = `
"string::indexOf(string, string) => int(0..inf) | nan
string::indexOf(string, "") => 0
string::indexOf(string, "foo") => int(0..inf) | nan
string::indexOf(string, "bar") => int(0..inf) | nan
string::indexOf(string, "ðŸ’©") => int(0..inf) | nan
string::indexOf(string, "bar" | "foo") => int(0..inf) | nan
string::indexOf(string, "baz" | "foo") => int(0..inf) | nan
string::indexOf(string, invStrSet("foo")) => int(0..inf) | nan
string::indexOf(string, invStrSet("bar" | "foo")) => int(0..inf) | nan
string::indexOf(string, invStrSet("bar")) => int(0..inf) | nan
string::indexOf(string, invStrSet("")) => int(0..inf) | nan
string::indexOf("", string) => 0 | nan
string::indexOf("", "") => 0
string::indexOf("", "foo") => nan
string::indexOf("", "bar") => nan
string::indexOf("", "ðŸ’©") => nan
string::indexOf("", "bar" | "foo") => nan
string::indexOf("", "baz" | "foo") => nan
string::indexOf("", invStrSet("foo")) => 0 | nan
string::indexOf("", invStrSet("bar" | "foo")) => 0 | nan
string::indexOf("", invStrSet("bar")) => 0 | nan
string::indexOf("", invStrSet("")) => nan
string::indexOf("foo", string) => int(0..2) | nan
string::indexOf("foo", "") => 0
string::indexOf("foo", "foo") => 0
string::indexOf("foo", "bar") => nan
string::indexOf("foo", "ðŸ’©") => nan
string::indexOf("foo", "bar" | "foo") => 0 | nan
string::indexOf("foo", "baz" | "foo") => 0 | nan
string::indexOf("foo", invStrSet("foo")) => int(0..2) | nan
string::indexOf("foo", invStrSet("bar" | "foo")) => int(0..2) | nan
string::indexOf("foo", invStrSet("bar")) => int(0..2) | nan
string::indexOf("foo", invStrSet("")) => int(0..2) | nan
string::indexOf("bar", string) => int(0..2) | nan
string::indexOf("bar", "") => 0
string::indexOf("bar", "foo") => nan
string::indexOf("bar", "bar") => 0
string::indexOf("bar", "ðŸ’©") => nan
string::indexOf("bar", "bar" | "foo") => 0 | nan
string::indexOf("bar", "baz" | "foo") => nan
string::indexOf("bar", invStrSet("foo")) => int(0..2) | nan
string::indexOf("bar", invStrSet("bar" | "foo")) => int(0..2) | nan
string::indexOf("bar", invStrSet("bar")) => int(0..2) | nan
string::indexOf("bar", invStrSet("")) => int(0..2) | nan
string::indexOf("ðŸ’©", string) => 0 | nan
string::indexOf("ðŸ’©", "") => 0
string::indexOf("ðŸ’©", "foo") => nan
string::indexOf("ðŸ’©", "bar") => nan
string::indexOf("ðŸ’©", "ðŸ’©") => 0
string::indexOf("ðŸ’©", "bar" | "foo") => nan
string::indexOf("ðŸ’©", "baz" | "foo") => nan
string::indexOf("ðŸ’©", invStrSet("foo")) => 0 | nan
string::indexOf("ðŸ’©", invStrSet("bar" | "foo")) => 0 | nan
string::indexOf("ðŸ’©", invStrSet("bar")) => 0 | nan
string::indexOf("ðŸ’©", invStrSet("")) => 0 | nan
string::indexOf("bar" | "foo", string) => int(0..2) | nan
string::indexOf("bar" | "foo", "") => 0
string::indexOf("bar" | "foo", "foo") => 0 | nan
string::indexOf("bar" | "foo", "bar") => 0 | nan
string::indexOf("bar" | "foo", "ðŸ’©") => nan
string::indexOf("bar" | "foo", "bar" | "foo") => 0 | nan
string::indexOf("bar" | "foo", "baz" | "foo") => 0 | nan
string::indexOf("bar" | "foo", invStrSet("foo")) => int(0..2) | nan
string::indexOf("bar" | "foo", invStrSet("bar" | "foo")) => int(0..2) | nan
string::indexOf("bar" | "foo", invStrSet("bar")) => int(0..2) | nan
string::indexOf("bar" | "foo", invStrSet("")) => int(0..2) | nan
string::indexOf("baz" | "foo", string) => int(0..2) | nan
string::indexOf("baz" | "foo", "") => 0
string::indexOf("baz" | "foo", "foo") => 0 | nan
string::indexOf("baz" | "foo", "bar") => nan
string::indexOf("baz" | "foo", "ðŸ’©") => nan
string::indexOf("baz" | "foo", "bar" | "foo") => 0 | nan
string::indexOf("baz" | "foo", "baz" | "foo") => 0 | nan
string::indexOf("baz" | "foo", invStrSet("foo")) => int(0..2) | nan
string::indexOf("baz" | "foo", invStrSet("bar" | "foo")) => int(0..2) | nan
string::indexOf("baz" | "foo", invStrSet("bar")) => int(0..2) | nan
string::indexOf("baz" | "foo", invStrSet("")) => int(0..2) | nan
string::indexOf(invStrSet("foo"), string) => int(0..inf) | nan
string::indexOf(invStrSet("foo"), "") => 0
string::indexOf(invStrSet("foo"), "foo") => int(0..inf) | nan
string::indexOf(invStrSet("foo"), "bar") => int(0..inf) | nan
string::indexOf(invStrSet("foo"), "ðŸ’©") => int(0..inf) | nan
string::indexOf(invStrSet("foo"), "bar" | "foo") => int(0..inf) | nan
string::indexOf(invStrSet("foo"), "baz" | "foo") => int(0..inf) | nan
string::indexOf(invStrSet("foo"), invStrSet("foo")) => int(0..inf) | nan
string::indexOf(invStrSet("foo"), invStrSet("bar" | "foo")) => int(0..inf) | nan
string::indexOf(invStrSet("foo"), invStrSet("bar")) => int(0..inf) | nan
string::indexOf(invStrSet("foo"), invStrSet("")) => int(0..inf) | nan
string::indexOf(invStrSet("bar" | "foo"), string) => int(0..inf) | nan
string::indexOf(invStrSet("bar" | "foo"), "") => 0
string::indexOf(invStrSet("bar" | "foo"), "foo") => int(0..inf) | nan
string::indexOf(invStrSet("bar" | "foo"), "bar") => int(0..inf) | nan
string::indexOf(invStrSet("bar" | "foo"), "ðŸ’©") => int(0..inf) | nan
string::indexOf(invStrSet("bar" | "foo"), "bar" | "foo") => int(0..inf) | nan
string::indexOf(invStrSet("bar" | "foo"), "baz" | "foo") => int(0..inf) | nan
string::indexOf(invStrSet("bar" | "foo"), invStrSet("foo")) => int(0..inf) | nan
string::indexOf(invStrSet("bar" | "foo"), invStrSet("bar" | "foo")) => int(0..inf) | nan
string::indexOf(invStrSet("bar" | "foo"), invStrSet("bar")) => int(0..inf) | nan
string::indexOf(invStrSet("bar" | "foo"), invStrSet("")) => int(0..inf) | nan
string::indexOf(invStrSet("bar"), string) => int(0..inf) | nan
string::indexOf(invStrSet("bar"), "") => 0
string::indexOf(invStrSet("bar"), "foo") => int(0..inf) | nan
string::indexOf(invStrSet("bar"), "bar") => int(0..inf) | nan
string::indexOf(invStrSet("bar"), "ðŸ’©") => int(0..inf) | nan
string::indexOf(invStrSet("bar"), "bar" | "foo") => int(0..inf) | nan
string::indexOf(invStrSet("bar"), "baz" | "foo") => int(0..inf) | nan
string::indexOf(invStrSet("bar"), invStrSet("foo")) => int(0..inf) | nan
string::indexOf(invStrSet("bar"), invStrSet("bar" | "foo")) => int(0..inf) | nan
string::indexOf(invStrSet("bar"), invStrSet("bar")) => int(0..inf) | nan
string::indexOf(invStrSet("bar"), invStrSet("")) => int(0..inf) | nan
string::indexOf(invStrSet(""), string) => int(0..inf) | nan
string::indexOf(invStrSet(""), "") => 0
string::indexOf(invStrSet(""), "foo") => int(0..inf) | nan
string::indexOf(invStrSet(""), "bar") => int(0..inf) | nan
string::indexOf(invStrSet(""), "ðŸ’©") => int(0..inf) | nan
string::indexOf(invStrSet(""), "bar" | "foo") => int(0..inf) | nan
string::indexOf(invStrSet(""), "baz" | "foo") => int(0..inf) | nan
string::indexOf(invStrSet(""), invStrSet("foo")) => int(0..inf) | nan
string::indexOf(invStrSet(""), invStrSet("bar" | "foo")) => int(0..inf) | nan
string::indexOf(invStrSet(""), invStrSet("bar")) => int(0..inf) | nan
string::indexOf(invStrSet(""), invStrSet("")) => int(0..inf) | nan"
`;

exports[`Builtin functions string::len evaluate 1`] = `
"string::len(string) => int(0..inf)
string::len("") => 0
string::len("foo") => 3
string::len("bar") => 3
string::len("ðŸ’©") => 1
string::len("bar" | "foo") => 3
string::len("baz" | "foo") => 3
string::len(invStrSet("foo")) => int(0..inf)
string::len(invStrSet("bar" | "foo")) => int(0..inf)
string::len(invStrSet("bar")) => int(0..inf)
string::len(invStrSet("")) => int(1..inf)
string::len(never) => never
string::len(any) => Error: Incompatible argument type: The supplied argument type any is not compatible with the definition type."
`;

exports[`Builtin functions string::repeat evaluate 1`] = `
"string::repeat(string, 0) => ""
string::repeat(string, 1) => string
string::repeat(string, 2) => string
string::repeat(string, 10) => string
string::repeat(string, 100) => string
string::repeat(string, int(0..1)) => string
string::repeat(string, int(2..6)) => string
string::repeat(string, int(0..inf)) => string
string::repeat(string, int(-1..inf)) => Error: Incompatible argument type: The supplied argument type int(-1..inf) is not compatible with the definition type.
string::repeat("", 0) => ""
string::repeat("", 1) => ""
string::repeat("", 2) => ""
string::repeat("", 10) => ""
string::repeat("", 100) => ""
string::repeat("", int(0..1)) => ""
string::repeat("", int(2..6)) => ""
string::repeat("", int(0..inf)) => ""
string::repeat("", int(-1..inf)) => Error: Incompatible argument type: The supplied argument type int(-1..inf) is not compatible with the definition type.
string::repeat("foo", 0) => ""
string::repeat("foo", 1) => "foo"
string::repeat("foo", 2) => "foofoo"
string::repeat("foo", 10) => "foofoofoofoofoofoofoofoofoofoo"
string::repeat("foo", 100) => "foofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoo"
string::repeat("foo", int(0..1)) => "" | "foo"
string::repeat("foo", int(2..6)) => "foofoo" | "foofoofoo" | "foofoofoofoo" | "foofoofoofoofoo" | "foofoofoofoofoofoo"
string::repeat("foo", int(0..inf)) => string
string::repeat("foo", int(-1..inf)) => Error: Incompatible argument type: The supplied argument type int(-1..inf) is not compatible with the definition type.
string::repeat("bar", 0) => ""
string::repeat("bar", 1) => "bar"
string::repeat("bar", 2) => "barbar"
string::repeat("bar", 10) => "barbarbarbarbarbarbarbarbarbar"
string::repeat("bar", 100) => "barbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbar"
string::repeat("bar", int(0..1)) => "" | "bar"
string::repeat("bar", int(2..6)) => "barbar" | "barbarbar" | "barbarbarbar" | "barbarbarbarbar" | "barbarbarbarbarbar"
string::repeat("bar", int(0..inf)) => string
string::repeat("bar", int(-1..inf)) => Error: Incompatible argument type: The supplied argument type int(-1..inf) is not compatible with the definition type.
string::repeat("ðŸ’©", 0) => ""
string::repeat("ðŸ’©", 1) => "ðŸ’©"
string::repeat("ðŸ’©", 2) => "ðŸ’©ðŸ’©"
string::repeat("ðŸ’©", 10) => "ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©"
string::repeat("ðŸ’©", 100) => "ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©"
string::repeat("ðŸ’©", int(0..1)) => "" | "ðŸ’©"
string::repeat("ðŸ’©", int(2..6)) => "ðŸ’©ðŸ’©" | "ðŸ’©ðŸ’©ðŸ’©" | "ðŸ’©ðŸ’©ðŸ’©ðŸ’©" | "ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©" | "ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©"
string::repeat("ðŸ’©", int(0..inf)) => string
string::repeat("ðŸ’©", int(-1..inf)) => Error: Incompatible argument type: The supplied argument type int(-1..inf) is not compatible with the definition type.
string::repeat("bar" | "foo", 0) => ""
string::repeat("bar" | "foo", 1) => "bar" | "foo"
string::repeat("bar" | "foo", 2) => "barbar" | "foofoo"
string::repeat("bar" | "foo", 10) => "barbarbarbarbarbarbarbarbarbar" | "foofoofoofoofoofoofoofoofoofoo"
string::repeat("bar" | "foo", 100) => "barbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbarbar" | "foofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoo"
string::repeat("bar" | "foo", int(0..1)) => "" | "bar" | "foo"
string::repeat("bar" | "foo", int(2..6)) => "barbar" | "barbarbar" | "barbarbarbar" | "barbarbarbarbar" | "barbarbarbarbarbar" | "foofoo" | "foofoofoo" | "foofoofoofoo" | "foofoofoofoofoo" | "foofoofoofoofoofoo"
string::repeat("bar" | "foo", int(0..inf)) => string
string::repeat("bar" | "foo", int(-1..inf)) => Error: Incompatible argument type: The supplied argument type int(-1..inf) is not compatible with the definition type.
string::repeat("baz" | "foo", 0) => ""
string::repeat("baz" | "foo", 1) => "baz" | "foo"
string::repeat("baz" | "foo", 2) => "bazbaz" | "foofoo"
string::repeat("baz" | "foo", 10) => "bazbazbazbazbazbazbazbazbazbaz" | "foofoofoofoofoofoofoofoofoofoo"
string::repeat("baz" | "foo", 100) => "bazbazbazbazbazbazbazbazbazbazbazbazbazbazbazbazbazbazbazbazbazbazbazbazbazbazbazbazbazbazbazbazbazbazbazbazbazbazbazbazbazbazbazbazbazbazbazbazbazbazbazbazbazbazbazbazbazbazbazbazbazbazbazbazbazbazbazbazbazbazbazbazbazbazbazbazbazbazbazbazbazbazbazbazbazbazbazbazbazbazbazbazbazbazbazbazbazbazbazbaz" | "foofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoo"
string::repeat("baz" | "foo", int(0..1)) => "" | "baz" | "foo"
string::repeat("baz" | "foo", int(2..6)) => "bazbaz" | "bazbazbaz" | "bazbazbazbaz" | "bazbazbazbazbaz" | "bazbazbazbazbazbaz" | "foofoo" | "foofoofoo" | "foofoofoofoo" | "foofoofoofoofoo" | "foofoofoofoofoofoo"
string::repeat("baz" | "foo", int(0..inf)) => string
string::repeat("baz" | "foo", int(-1..inf)) => Error: Incompatible argument type: The supplied argument type int(-1..inf) is not compatible with the definition type.
string::repeat(invStrSet("foo"), 0) => ""
string::repeat(invStrSet("foo"), 1) => invStrSet("foo")
string::repeat(invStrSet("foo"), 2) => string
string::repeat(invStrSet("foo"), 10) => string
string::repeat(invStrSet("foo"), 100) => string
string::repeat(invStrSet("foo"), int(0..1)) => invStrSet("foo")
string::repeat(invStrSet("foo"), int(2..6)) => string
string::repeat(invStrSet("foo"), int(0..inf)) => string
string::repeat(invStrSet("foo"), int(-1..inf)) => Error: Incompatible argument type: The supplied argument type int(-1..inf) is not compatible with the definition type.
string::repeat(invStrSet("bar" | "foo"), 0) => ""
string::repeat(invStrSet("bar" | "foo"), 1) => invStrSet("bar" | "foo")
string::repeat(invStrSet("bar" | "foo"), 2) => string
string::repeat(invStrSet("bar" | "foo"), 10) => string
string::repeat(invStrSet("bar" | "foo"), 100) => string
string::repeat(invStrSet("bar" | "foo"), int(0..1)) => invStrSet("bar" | "foo")
string::repeat(invStrSet("bar" | "foo"), int(2..6)) => string
string::repeat(invStrSet("bar" | "foo"), int(0..inf)) => string
string::repeat(invStrSet("bar" | "foo"), int(-1..inf)) => Error: Incompatible argument type: The supplied argument type int(-1..inf) is not compatible with the definition type.
string::repeat(invStrSet("bar"), 0) => ""
string::repeat(invStrSet("bar"), 1) => invStrSet("bar")
string::repeat(invStrSet("bar"), 2) => string
string::repeat(invStrSet("bar"), 10) => string
string::repeat(invStrSet("bar"), 100) => string
string::repeat(invStrSet("bar"), int(0..1)) => invStrSet("bar")
string::repeat(invStrSet("bar"), int(2..6)) => string
string::repeat(invStrSet("bar"), int(0..inf)) => string
string::repeat(invStrSet("bar"), int(-1..inf)) => Error: Incompatible argument type: The supplied argument type int(-1..inf) is not compatible with the definition type.
string::repeat(invStrSet(""), 0) => ""
string::repeat(invStrSet(""), 1) => invStrSet("")
string::repeat(invStrSet(""), 2) => string
string::repeat(invStrSet(""), 10) => string
string::repeat(invStrSet(""), 100) => string
string::repeat(invStrSet(""), int(0..1)) => string
string::repeat(invStrSet(""), int(2..6)) => string
string::repeat(invStrSet(""), int(0..inf)) => string
string::repeat(invStrSet(""), int(-1..inf)) => Error: Incompatible argument type: The supplied argument type int(-1..inf) is not compatible with the definition type."
`;

exports[`Builtin functions string::replace evaluate 1`] = `
"string::replace(string, string, "x", 0) => string
string::replace(string, string, "x", 1) => string
string::replace(string, string, "x", int(0..2)) => string
string::replace(string, string, "x", inf) => string
string::replace(string, "", "x", 0) => string
string::replace(string, "", "x", 1) => string
string::replace(string, "", "x", int(0..2)) => string
string::replace(string, "", "x", inf) => string
string::replace(string, "foo", "x", 0) => string
string::replace(string, "foo", "x", 1) => string
string::replace(string, "foo", "x", int(0..2)) => string
string::replace(string, "foo", "x", inf) => string
string::replace(string, "bar", "x", 0) => string
string::replace(string, "bar", "x", 1) => string
string::replace(string, "bar", "x", int(0..2)) => string
string::replace(string, "bar", "x", inf) => string
string::replace(string, "ðŸ’©", "x", 0) => string
string::replace(string, "ðŸ’©", "x", 1) => string
string::replace(string, "ðŸ’©", "x", int(0..2)) => string
string::replace(string, "ðŸ’©", "x", inf) => string
string::replace(string, "bar" | "foo", "x", 0) => string
string::replace(string, "bar" | "foo", "x", 1) => string
string::replace(string, "bar" | "foo", "x", int(0..2)) => string
string::replace(string, "bar" | "foo", "x", inf) => string
string::replace(string, "baz" | "foo", "x", 0) => string
string::replace(string, "baz" | "foo", "x", 1) => string
string::replace(string, "baz" | "foo", "x", int(0..2)) => string
string::replace(string, "baz" | "foo", "x", inf) => string
string::replace(string, invStrSet("foo"), "x", 0) => string
string::replace(string, invStrSet("foo"), "x", 1) => string
string::replace(string, invStrSet("foo"), "x", int(0..2)) => string
string::replace(string, invStrSet("foo"), "x", inf) => string
string::replace(string, invStrSet("bar" | "foo"), "x", 0) => string
string::replace(string, invStrSet("bar" | "foo"), "x", 1) => string
string::replace(string, invStrSet("bar" | "foo"), "x", int(0..2)) => string
string::replace(string, invStrSet("bar" | "foo"), "x", inf) => string
string::replace(string, invStrSet("bar"), "x", 0) => string
string::replace(string, invStrSet("bar"), "x", 1) => string
string::replace(string, invStrSet("bar"), "x", int(0..2)) => string
string::replace(string, invStrSet("bar"), "x", inf) => string
string::replace(string, invStrSet(""), "x", 0) => string
string::replace(string, invStrSet(""), "x", 1) => string
string::replace(string, invStrSet(""), "x", int(0..2)) => string
string::replace(string, invStrSet(""), "x", inf) => string
string::replace("", string, "x", 0) => ""
string::replace("", string, "x", 1) => string
string::replace("", string, "x", int(0..2)) => string
string::replace("", string, "x", inf) => string
string::replace("", "", "x", 0) => ""
string::replace("", "", "x", 1) => "x"
string::replace("", "", "x", int(0..2)) => "" | "x"
string::replace("", "", "x", inf) => "x"
string::replace("", "foo", "x", 0) => ""
string::replace("", "foo", "x", 1) => ""
string::replace("", "foo", "x", int(0..2)) => ""
string::replace("", "foo", "x", inf) => ""
string::replace("", "bar", "x", 0) => ""
string::replace("", "bar", "x", 1) => ""
string::replace("", "bar", "x", int(0..2)) => ""
string::replace("", "bar", "x", inf) => ""
string::replace("", "ðŸ’©", "x", 0) => ""
string::replace("", "ðŸ’©", "x", 1) => ""
string::replace("", "ðŸ’©", "x", int(0..2)) => ""
string::replace("", "ðŸ’©", "x", inf) => ""
string::replace("", "bar" | "foo", "x", 0) => ""
string::replace("", "bar" | "foo", "x", 1) => ""
string::replace("", "bar" | "foo", "x", int(0..2)) => ""
string::replace("", "bar" | "foo", "x", inf) => ""
string::replace("", "baz" | "foo", "x", 0) => ""
string::replace("", "baz" | "foo", "x", 1) => ""
string::replace("", "baz" | "foo", "x", int(0..2)) => ""
string::replace("", "baz" | "foo", "x", inf) => ""
string::replace("", invStrSet("foo"), "x", 0) => ""
string::replace("", invStrSet("foo"), "x", 1) => string
string::replace("", invStrSet("foo"), "x", int(0..2)) => string
string::replace("", invStrSet("foo"), "x", inf) => string
string::replace("", invStrSet("bar" | "foo"), "x", 0) => ""
string::replace("", invStrSet("bar" | "foo"), "x", 1) => string
string::replace("", invStrSet("bar" | "foo"), "x", int(0..2)) => string
string::replace("", invStrSet("bar" | "foo"), "x", inf) => string
string::replace("", invStrSet("bar"), "x", 0) => ""
string::replace("", invStrSet("bar"), "x", 1) => string
string::replace("", invStrSet("bar"), "x", int(0..2)) => string
string::replace("", invStrSet("bar"), "x", inf) => string
string::replace("", invStrSet(""), "x", 0) => ""
string::replace("", invStrSet(""), "x", 1) => string
string::replace("", invStrSet(""), "x", int(0..2)) => string
string::replace("", invStrSet(""), "x", inf) => string
string::replace("foo", string, "x", 0) => "foo"
string::replace("foo", string, "x", 1) => string
string::replace("foo", string, "x", int(0..2)) => string
string::replace("foo", string, "x", inf) => string
string::replace("foo", "", "x", 0) => "foo"
string::replace("foo", "", "x", 1) => "xfoo"
string::replace("foo", "", "x", int(0..2)) => "foo" | "xfoo" | "xfxoo"
string::replace("foo", "", "x", inf) => "xfxoxox"
string::replace("foo", "foo", "x", 0) => "foo"
string::replace("foo", "foo", "x", 1) => "x"
string::replace("foo", "foo", "x", int(0..2)) => "foo" | "x"
string::replace("foo", "foo", "x", inf) => "x"
string::replace("foo", "bar", "x", 0) => "foo"
string::replace("foo", "bar", "x", 1) => "foo"
string::replace("foo", "bar", "x", int(0..2)) => "foo"
string::replace("foo", "bar", "x", inf) => "foo"
string::replace("foo", "ðŸ’©", "x", 0) => "foo"
string::replace("foo", "ðŸ’©", "x", 1) => "foo"
string::replace("foo", "ðŸ’©", "x", int(0..2)) => "foo"
string::replace("foo", "ðŸ’©", "x", inf) => "foo"
string::replace("foo", "bar" | "foo", "x", 0) => "foo"
string::replace("foo", "bar" | "foo", "x", 1) => "foo" | "x"
string::replace("foo", "bar" | "foo", "x", int(0..2)) => "foo" | "x"
string::replace("foo", "bar" | "foo", "x", inf) => "foo" | "x"
string::replace("foo", "baz" | "foo", "x", 0) => "foo"
string::replace("foo", "baz" | "foo", "x", 1) => "foo" | "x"
string::replace("foo", "baz" | "foo", "x", int(0..2)) => "foo" | "x"
string::replace("foo", "baz" | "foo", "x", inf) => "foo" | "x"
string::replace("foo", invStrSet("foo"), "x", 0) => "foo"
string::replace("foo", invStrSet("foo"), "x", 1) => string
string::replace("foo", invStrSet("foo"), "x", int(0..2)) => string
string::replace("foo", invStrSet("foo"), "x", inf) => string
string::replace("foo", invStrSet("bar" | "foo"), "x", 0) => "foo"
string::replace("foo", invStrSet("bar" | "foo"), "x", 1) => string
string::replace("foo", invStrSet("bar" | "foo"), "x", int(0..2)) => string
string::replace("foo", invStrSet("bar" | "foo"), "x", inf) => string
string::replace("foo", invStrSet("bar"), "x", 0) => "foo"
string::replace("foo", invStrSet("bar"), "x", 1) => string
string::replace("foo", invStrSet("bar"), "x", int(0..2)) => string
string::replace("foo", invStrSet("bar"), "x", inf) => string
string::replace("foo", invStrSet(""), "x", 0) => "foo"
string::replace("foo", invStrSet(""), "x", 1) => string
string::replace("foo", invStrSet(""), "x", int(0..2)) => string
string::replace("foo", invStrSet(""), "x", inf) => string
string::replace("bar", string, "x", 0) => "bar"
string::replace("bar", string, "x", 1) => string
string::replace("bar", string, "x", int(0..2)) => string
string::replace("bar", string, "x", inf) => string
string::replace("bar", "", "x", 0) => "bar"
string::replace("bar", "", "x", 1) => "xbar"
string::replace("bar", "", "x", int(0..2)) => "bar" | "xbar" | "xbxar"
string::replace("bar", "", "x", inf) => "xbxaxrx"
string::replace("bar", "foo", "x", 0) => "bar"
string::replace("bar", "foo", "x", 1) => "bar"
string::replace("bar", "foo", "x", int(0..2)) => "bar"
string::replace("bar", "foo", "x", inf) => "bar"
string::replace("bar", "bar", "x", 0) => "bar"
string::replace("bar", "bar", "x", 1) => "x"
string::replace("bar", "bar", "x", int(0..2)) => "bar" | "x"
string::replace("bar", "bar", "x", inf) => "x"
string::replace("bar", "ðŸ’©", "x", 0) => "bar"
string::replace("bar", "ðŸ’©", "x", 1) => "bar"
string::replace("bar", "ðŸ’©", "x", int(0..2)) => "bar"
string::replace("bar", "ðŸ’©", "x", inf) => "bar"
string::replace("bar", "bar" | "foo", "x", 0) => "bar"
string::replace("bar", "bar" | "foo", "x", 1) => "bar" | "x"
string::replace("bar", "bar" | "foo", "x", int(0..2)) => "bar" | "x"
string::replace("bar", "bar" | "foo", "x", inf) => "bar" | "x"
string::replace("bar", "baz" | "foo", "x", 0) => "bar"
string::replace("bar", "baz" | "foo", "x", 1) => "bar"
string::replace("bar", "baz" | "foo", "x", int(0..2)) => "bar"
string::replace("bar", "baz" | "foo", "x", inf) => "bar"
string::replace("bar", invStrSet("foo"), "x", 0) => "bar"
string::replace("bar", invStrSet("foo"), "x", 1) => string
string::replace("bar", invStrSet("foo"), "x", int(0..2)) => string
string::replace("bar", invStrSet("foo"), "x", inf) => string
string::replace("bar", invStrSet("bar" | "foo"), "x", 0) => "bar"
string::replace("bar", invStrSet("bar" | "foo"), "x", 1) => string
string::replace("bar", invStrSet("bar" | "foo"), "x", int(0..2)) => string
string::replace("bar", invStrSet("bar" | "foo"), "x", inf) => string
string::replace("bar", invStrSet("bar"), "x", 0) => "bar"
string::replace("bar", invStrSet("bar"), "x", 1) => string
string::replace("bar", invStrSet("bar"), "x", int(0..2)) => string
string::replace("bar", invStrSet("bar"), "x", inf) => string
string::replace("bar", invStrSet(""), "x", 0) => "bar"
string::replace("bar", invStrSet(""), "x", 1) => string
string::replace("bar", invStrSet(""), "x", int(0..2)) => string
string::replace("bar", invStrSet(""), "x", inf) => string
string::replace("ðŸ’©", string, "x", 0) => "ðŸ’©"
string::replace("ðŸ’©", string, "x", 1) => string
string::replace("ðŸ’©", string, "x", int(0..2)) => string
string::replace("ðŸ’©", string, "x", inf) => string
string::replace("ðŸ’©", "", "x", 0) => "ðŸ’©"
string::replace("ðŸ’©", "", "x", 1) => "xðŸ’©"
string::replace("ðŸ’©", "", "x", int(0..2)) => "xðŸ’©" | "xðŸ’©x" | "ðŸ’©"
string::replace("ðŸ’©", "", "x", inf) => "xðŸ’©x"
string::replace("ðŸ’©", "foo", "x", 0) => "ðŸ’©"
string::replace("ðŸ’©", "foo", "x", 1) => "ðŸ’©"
string::replace("ðŸ’©", "foo", "x", int(0..2)) => "ðŸ’©"
string::replace("ðŸ’©", "foo", "x", inf) => "ðŸ’©"
string::replace("ðŸ’©", "bar", "x", 0) => "ðŸ’©"
string::replace("ðŸ’©", "bar", "x", 1) => "ðŸ’©"
string::replace("ðŸ’©", "bar", "x", int(0..2)) => "ðŸ’©"
string::replace("ðŸ’©", "bar", "x", inf) => "ðŸ’©"
string::replace("ðŸ’©", "ðŸ’©", "x", 0) => "ðŸ’©"
string::replace("ðŸ’©", "ðŸ’©", "x", 1) => "x"
string::replace("ðŸ’©", "ðŸ’©", "x", int(0..2)) => "x" | "ðŸ’©"
string::replace("ðŸ’©", "ðŸ’©", "x", inf) => "x"
string::replace("ðŸ’©", "bar" | "foo", "x", 0) => "ðŸ’©"
string::replace("ðŸ’©", "bar" | "foo", "x", 1) => "ðŸ’©"
string::replace("ðŸ’©", "bar" | "foo", "x", int(0..2)) => "ðŸ’©"
string::replace("ðŸ’©", "bar" | "foo", "x", inf) => "ðŸ’©"
string::replace("ðŸ’©", "baz" | "foo", "x", 0) => "ðŸ’©"
string::replace("ðŸ’©", "baz" | "foo", "x", 1) => "ðŸ’©"
string::replace("ðŸ’©", "baz" | "foo", "x", int(0..2)) => "ðŸ’©"
string::replace("ðŸ’©", "baz" | "foo", "x", inf) => "ðŸ’©"
string::replace("ðŸ’©", invStrSet("foo"), "x", 0) => "ðŸ’©"
string::replace("ðŸ’©", invStrSet("foo"), "x", 1) => string
string::replace("ðŸ’©", invStrSet("foo"), "x", int(0..2)) => string
string::replace("ðŸ’©", invStrSet("foo"), "x", inf) => string
string::replace("ðŸ’©", invStrSet("bar" | "foo"), "x", 0) => "ðŸ’©"
string::replace("ðŸ’©", invStrSet("bar" | "foo"), "x", 1) => string
string::replace("ðŸ’©", invStrSet("bar" | "foo"), "x", int(0..2)) => string
string::replace("ðŸ’©", invStrSet("bar" | "foo"), "x", inf) => string
string::replace("ðŸ’©", invStrSet("bar"), "x", 0) => "ðŸ’©"
string::replace("ðŸ’©", invStrSet("bar"), "x", 1) => string
string::replace("ðŸ’©", invStrSet("bar"), "x", int(0..2)) => string
string::replace("ðŸ’©", invStrSet("bar"), "x", inf) => string
string::replace("ðŸ’©", invStrSet(""), "x", 0) => "ðŸ’©"
string::replace("ðŸ’©", invStrSet(""), "x", 1) => string
string::replace("ðŸ’©", invStrSet(""), "x", int(0..2)) => string
string::replace("ðŸ’©", invStrSet(""), "x", inf) => string
string::replace("bar" | "foo", string, "x", 0) => "bar" | "foo"
string::replace("bar" | "foo", string, "x", 1) => string
string::replace("bar" | "foo", string, "x", int(0..2)) => string
string::replace("bar" | "foo", string, "x", inf) => string
string::replace("bar" | "foo", "", "x", 0) => "bar" | "foo"
string::replace("bar" | "foo", "", "x", 1) => "xbar" | "xfoo"
string::replace("bar" | "foo", "", "x", int(0..2)) => "bar" | "foo" | "xbar" | "xbxar" | "xfoo" | "xfxoo"
string::replace("bar" | "foo", "", "x", inf) => "xbxaxrx" | "xfxoxox"
string::replace("bar" | "foo", "foo", "x", 0) => "bar" | "foo"
string::replace("bar" | "foo", "foo", "x", 1) => "bar" | "x"
string::replace("bar" | "foo", "foo", "x", int(0..2)) => "bar" | "foo" | "x"
string::replace("bar" | "foo", "foo", "x", inf) => "bar" | "x"
string::replace("bar" | "foo", "bar", "x", 0) => "bar" | "foo"
string::replace("bar" | "foo", "bar", "x", 1) => "foo" | "x"
string::replace("bar" | "foo", "bar", "x", int(0..2)) => "bar" | "foo" | "x"
string::replace("bar" | "foo", "bar", "x", inf) => "foo" | "x"
string::replace("bar" | "foo", "ðŸ’©", "x", 0) => "bar" | "foo"
string::replace("bar" | "foo", "ðŸ’©", "x", 1) => "bar" | "foo"
string::replace("bar" | "foo", "ðŸ’©", "x", int(0..2)) => "bar" | "foo"
string::replace("bar" | "foo", "ðŸ’©", "x", inf) => "bar" | "foo"
string::replace("bar" | "foo", "bar" | "foo", "x", 0) => "bar" | "foo"
string::replace("bar" | "foo", "bar" | "foo", "x", 1) => "bar" | "foo" | "x"
string::replace("bar" | "foo", "bar" | "foo", "x", int(0..2)) => "bar" | "foo" | "x"
string::replace("bar" | "foo", "bar" | "foo", "x", inf) => "bar" | "foo" | "x"
string::replace("bar" | "foo", "baz" | "foo", "x", 0) => "bar" | "foo"
string::replace("bar" | "foo", "baz" | "foo", "x", 1) => "bar" | "foo" | "x"
string::replace("bar" | "foo", "baz" | "foo", "x", int(0..2)) => "bar" | "foo" | "x"
string::replace("bar" | "foo", "baz" | "foo", "x", inf) => "bar" | "foo" | "x"
string::replace("bar" | "foo", invStrSet("foo"), "x", 0) => "bar" | "foo"
string::replace("bar" | "foo", invStrSet("foo"), "x", 1) => string
string::replace("bar" | "foo", invStrSet("foo"), "x", int(0..2)) => string
string::replace("bar" | "foo", invStrSet("foo"), "x", inf) => string
string::replace("bar" | "foo", invStrSet("bar" | "foo"), "x", 0) => "bar" | "foo"
string::replace("bar" | "foo", invStrSet("bar" | "foo"), "x", 1) => string
string::replace("bar" | "foo", invStrSet("bar" | "foo"), "x", int(0..2)) => string
string::replace("bar" | "foo", invStrSet("bar" | "foo"), "x", inf) => string
string::replace("bar" | "foo", invStrSet("bar"), "x", 0) => "bar" | "foo"
string::replace("bar" | "foo", invStrSet("bar"), "x", 1) => string
string::replace("bar" | "foo", invStrSet("bar"), "x", int(0..2)) => string
string::replace("bar" | "foo", invStrSet("bar"), "x", inf) => string
string::replace("bar" | "foo", invStrSet(""), "x", 0) => "bar" | "foo"
string::replace("bar" | "foo", invStrSet(""), "x", 1) => string
string::replace("bar" | "foo", invStrSet(""), "x", int(0..2)) => string
string::replace("bar" | "foo", invStrSet(""), "x", inf) => string
string::replace("baz" | "foo", string, "x", 0) => "baz" | "foo"
string::replace("baz" | "foo", string, "x", 1) => string
string::replace("baz" | "foo", string, "x", int(0..2)) => string
string::replace("baz" | "foo", string, "x", inf) => string
string::replace("baz" | "foo", "", "x", 0) => "baz" | "foo"
string::replace("baz" | "foo", "", "x", 1) => "xbaz" | "xfoo"
string::replace("baz" | "foo", "", "x", int(0..2)) => "baz" | "foo" | "xbaz" | "xbxaz" | "xfoo" | "xfxoo"
string::replace("baz" | "foo", "", "x", inf) => "xbxaxzx" | "xfxoxox"
string::replace("baz" | "foo", "foo", "x", 0) => "baz" | "foo"
string::replace("baz" | "foo", "foo", "x", 1) => "baz" | "x"
string::replace("baz" | "foo", "foo", "x", int(0..2)) => "baz" | "foo" | "x"
string::replace("baz" | "foo", "foo", "x", inf) => "baz" | "x"
string::replace("baz" | "foo", "bar", "x", 0) => "baz" | "foo"
string::replace("baz" | "foo", "bar", "x", 1) => "baz" | "foo"
string::replace("baz" | "foo", "bar", "x", int(0..2)) => "baz" | "foo"
string::replace("baz" | "foo", "bar", "x", inf) => "baz" | "foo"
string::replace("baz" | "foo", "ðŸ’©", "x", 0) => "baz" | "foo"
string::replace("baz" | "foo", "ðŸ’©", "x", 1) => "baz" | "foo"
string::replace("baz" | "foo", "ðŸ’©", "x", int(0..2)) => "baz" | "foo"
string::replace("baz" | "foo", "ðŸ’©", "x", inf) => "baz" | "foo"
string::replace("baz" | "foo", "bar" | "foo", "x", 0) => "baz" | "foo"
string::replace("baz" | "foo", "bar" | "foo", "x", 1) => "baz" | "foo" | "x"
string::replace("baz" | "foo", "bar" | "foo", "x", int(0..2)) => "baz" | "foo" | "x"
string::replace("baz" | "foo", "bar" | "foo", "x", inf) => "baz" | "foo" | "x"
string::replace("baz" | "foo", "baz" | "foo", "x", 0) => "baz" | "foo"
string::replace("baz" | "foo", "baz" | "foo", "x", 1) => "baz" | "foo" | "x"
string::replace("baz" | "foo", "baz" | "foo", "x", int(0..2)) => "baz" | "foo" | "x"
string::replace("baz" | "foo", "baz" | "foo", "x", inf) => "baz" | "foo" | "x"
string::replace("baz" | "foo", invStrSet("foo"), "x", 0) => "baz" | "foo"
string::replace("baz" | "foo", invStrSet("foo"), "x", 1) => string
string::replace("baz" | "foo", invStrSet("foo"), "x", int(0..2)) => string
string::replace("baz" | "foo", invStrSet("foo"), "x", inf) => string
string::replace("baz" | "foo", invStrSet("bar" | "foo"), "x", 0) => "baz" | "foo"
string::replace("baz" | "foo", invStrSet("bar" | "foo"), "x", 1) => string
string::replace("baz" | "foo", invStrSet("bar" | "foo"), "x", int(0..2)) => string
string::replace("baz" | "foo", invStrSet("bar" | "foo"), "x", inf) => string
string::replace("baz" | "foo", invStrSet("bar"), "x", 0) => "baz" | "foo"
string::replace("baz" | "foo", invStrSet("bar"), "x", 1) => string
string::replace("baz" | "foo", invStrSet("bar"), "x", int(0..2)) => string
string::replace("baz" | "foo", invStrSet("bar"), "x", inf) => string
string::replace("baz" | "foo", invStrSet(""), "x", 0) => "baz" | "foo"
string::replace("baz" | "foo", invStrSet(""), "x", 1) => string
string::replace("baz" | "foo", invStrSet(""), "x", int(0..2)) => string
string::replace("baz" | "foo", invStrSet(""), "x", inf) => string
string::replace(invStrSet("foo"), string, "x", 0) => invStrSet("foo")
string::replace(invStrSet("foo"), string, "x", 1) => string
string::replace(invStrSet("foo"), string, "x", int(0..2)) => string
string::replace(invStrSet("foo"), string, "x", inf) => string
string::replace(invStrSet("foo"), "", "x", 0) => invStrSet("foo")
string::replace(invStrSet("foo"), "", "x", 1) => string
string::replace(invStrSet("foo"), "", "x", int(0..2)) => string
string::replace(invStrSet("foo"), "", "x", inf) => string
string::replace(invStrSet("foo"), "foo", "x", 0) => invStrSet("foo")
string::replace(invStrSet("foo"), "foo", "x", 1) => string
string::replace(invStrSet("foo"), "foo", "x", int(0..2)) => string
string::replace(invStrSet("foo"), "foo", "x", inf) => string
string::replace(invStrSet("foo"), "bar", "x", 0) => invStrSet("foo")
string::replace(invStrSet("foo"), "bar", "x", 1) => string
string::replace(invStrSet("foo"), "bar", "x", int(0..2)) => string
string::replace(invStrSet("foo"), "bar", "x", inf) => string
string::replace(invStrSet("foo"), "ðŸ’©", "x", 0) => invStrSet("foo")
string::replace(invStrSet("foo"), "ðŸ’©", "x", 1) => string
string::replace(invStrSet("foo"), "ðŸ’©", "x", int(0..2)) => string
string::replace(invStrSet("foo"), "ðŸ’©", "x", inf) => string
string::replace(invStrSet("foo"), "bar" | "foo", "x", 0) => invStrSet("foo")
string::replace(invStrSet("foo"), "bar" | "foo", "x", 1) => string
string::replace(invStrSet("foo"), "bar" | "foo", "x", int(0..2)) => string
string::replace(invStrSet("foo"), "bar" | "foo", "x", inf) => string
string::replace(invStrSet("foo"), "baz" | "foo", "x", 0) => invStrSet("foo")
string::replace(invStrSet("foo"), "baz" | "foo", "x", 1) => string
string::replace(invStrSet("foo"), "baz" | "foo", "x", int(0..2)) => string
string::replace(invStrSet("foo"), "baz" | "foo", "x", inf) => string
string::replace(invStrSet("foo"), invStrSet("foo"), "x", 0) => invStrSet("foo")
string::replace(invStrSet("foo"), invStrSet("foo"), "x", 1) => string
string::replace(invStrSet("foo"), invStrSet("foo"), "x", int(0..2)) => string
string::replace(invStrSet("foo"), invStrSet("foo"), "x", inf) => string
string::replace(invStrSet("foo"), invStrSet("bar" | "foo"), "x", 0) => invStrSet("foo")
string::replace(invStrSet("foo"), invStrSet("bar" | "foo"), "x", 1) => string
string::replace(invStrSet("foo"), invStrSet("bar" | "foo"), "x", int(0..2)) => string
string::replace(invStrSet("foo"), invStrSet("bar" | "foo"), "x", inf) => string
string::replace(invStrSet("foo"), invStrSet("bar"), "x", 0) => invStrSet("foo")
string::replace(invStrSet("foo"), invStrSet("bar"), "x", 1) => string
string::replace(invStrSet("foo"), invStrSet("bar"), "x", int(0..2)) => string
string::replace(invStrSet("foo"), invStrSet("bar"), "x", inf) => string
string::replace(invStrSet("foo"), invStrSet(""), "x", 0) => invStrSet("foo")
string::replace(invStrSet("foo"), invStrSet(""), "x", 1) => string
string::replace(invStrSet("foo"), invStrSet(""), "x", int(0..2)) => string
string::replace(invStrSet("foo"), invStrSet(""), "x", inf) => string
string::replace(invStrSet("bar" | "foo"), string, "x", 0) => invStrSet("bar" | "foo")
string::replace(invStrSet("bar" | "foo"), string, "x", 1) => string
string::replace(invStrSet("bar" | "foo"), string, "x", int(0..2)) => string
string::replace(invStrSet("bar" | "foo"), string, "x", inf) => string
string::replace(invStrSet("bar" | "foo"), "", "x", 0) => invStrSet("bar" | "foo")
string::replace(invStrSet("bar" | "foo"), "", "x", 1) => string
string::replace(invStrSet("bar" | "foo"), "", "x", int(0..2)) => string
string::replace(invStrSet("bar" | "foo"), "", "x", inf) => string
string::replace(invStrSet("bar" | "foo"), "foo", "x", 0) => invStrSet("bar" | "foo")
string::replace(invStrSet("bar" | "foo"), "foo", "x", 1) => string
string::replace(invStrSet("bar" | "foo"), "foo", "x", int(0..2)) => string
string::replace(invStrSet("bar" | "foo"), "foo", "x", inf) => string
string::replace(invStrSet("bar" | "foo"), "bar", "x", 0) => invStrSet("bar" | "foo")
string::replace(invStrSet("bar" | "foo"), "bar", "x", 1) => string
string::replace(invStrSet("bar" | "foo"), "bar", "x", int(0..2)) => string
string::replace(invStrSet("bar" | "foo"), "bar", "x", inf) => string
string::replace(invStrSet("bar" | "foo"), "ðŸ’©", "x", 0) => invStrSet("bar" | "foo")
string::replace(invStrSet("bar" | "foo"), "ðŸ’©", "x", 1) => string
string::replace(invStrSet("bar" | "foo"), "ðŸ’©", "x", int(0..2)) => string
string::replace(invStrSet("bar" | "foo"), "ðŸ’©", "x", inf) => string
string::replace(invStrSet("bar" | "foo"), "bar" | "foo", "x", 0) => invStrSet("bar" | "foo")
string::replace(invStrSet("bar" | "foo"), "bar" | "foo", "x", 1) => string
string::replace(invStrSet("bar" | "foo"), "bar" | "foo", "x", int(0..2)) => string
string::replace(invStrSet("bar" | "foo"), "bar" | "foo", "x", inf) => string
string::replace(invStrSet("bar" | "foo"), "baz" | "foo", "x", 0) => invStrSet("bar" | "foo")
string::replace(invStrSet("bar" | "foo"), "baz" | "foo", "x", 1) => string
string::replace(invStrSet("bar" | "foo"), "baz" | "foo", "x", int(0..2)) => string
string::replace(invStrSet("bar" | "foo"), "baz" | "foo", "x", inf) => string
string::replace(invStrSet("bar" | "foo"), invStrSet("foo"), "x", 0) => invStrSet("bar" | "foo")
string::replace(invStrSet("bar" | "foo"), invStrSet("foo"), "x", 1) => string
string::replace(invStrSet("bar" | "foo"), invStrSet("foo"), "x", int(0..2)) => string
string::replace(invStrSet("bar" | "foo"), invStrSet("foo"), "x", inf) => string
string::replace(invStrSet("bar" | "foo"), invStrSet("bar" | "foo"), "x", 0) => invStrSet("bar" | "foo")
string::replace(invStrSet("bar" | "foo"), invStrSet("bar" | "foo"), "x", 1) => string
string::replace(invStrSet("bar" | "foo"), invStrSet("bar" | "foo"), "x", int(0..2)) => string
string::replace(invStrSet("bar" | "foo"), invStrSet("bar" | "foo"), "x", inf) => string
string::replace(invStrSet("bar" | "foo"), invStrSet("bar"), "x", 0) => invStrSet("bar" | "foo")
string::replace(invStrSet("bar" | "foo"), invStrSet("bar"), "x", 1) => string
string::replace(invStrSet("bar" | "foo"), invStrSet("bar"), "x", int(0..2)) => string
string::replace(invStrSet("bar" | "foo"), invStrSet("bar"), "x", inf) => string
string::replace(invStrSet("bar" | "foo"), invStrSet(""), "x", 0) => invStrSet("bar" | "foo")
string::replace(invStrSet("bar" | "foo"), invStrSet(""), "x", 1) => string
string::replace(invStrSet("bar" | "foo"), invStrSet(""), "x", int(0..2)) => string
string::replace(invStrSet("bar" | "foo"), invStrSet(""), "x", inf) => string
string::replace(invStrSet("bar"), string, "x", 0) => invStrSet("bar")
string::replace(invStrSet("bar"), string, "x", 1) => string
string::replace(invStrSet("bar"), string, "x", int(0..2)) => string
string::replace(invStrSet("bar"), string, "x", inf) => string
string::replace(invStrSet("bar"), "", "x", 0) => invStrSet("bar")
string::replace(invStrSet("bar"), "", "x", 1) => string
string::replace(invStrSet("bar"), "", "x", int(0..2)) => string
string::replace(invStrSet("bar"), "", "x", inf) => string
string::replace(invStrSet("bar"), "foo", "x", 0) => invStrSet("bar")
string::replace(invStrSet("bar"), "foo", "x", 1) => string
string::replace(invStrSet("bar"), "foo", "x", int(0..2)) => string
string::replace(invStrSet("bar"), "foo", "x", inf) => string
string::replace(invStrSet("bar"), "bar", "x", 0) => invStrSet("bar")
string::replace(invStrSet("bar"), "bar", "x", 1) => string
string::replace(invStrSet("bar"), "bar", "x", int(0..2)) => string
string::replace(invStrSet("bar"), "bar", "x", inf) => string
string::replace(invStrSet("bar"), "ðŸ’©", "x", 0) => invStrSet("bar")
string::replace(invStrSet("bar"), "ðŸ’©", "x", 1) => string
string::replace(invStrSet("bar"), "ðŸ’©", "x", int(0..2)) => string
string::replace(invStrSet("bar"), "ðŸ’©", "x", inf) => string
string::replace(invStrSet("bar"), "bar" | "foo", "x", 0) => invStrSet("bar")
string::replace(invStrSet("bar"), "bar" | "foo", "x", 1) => string
string::replace(invStrSet("bar"), "bar" | "foo", "x", int(0..2)) => string
string::replace(invStrSet("bar"), "bar" | "foo", "x", inf) => string
string::replace(invStrSet("bar"), "baz" | "foo", "x", 0) => invStrSet("bar")
string::replace(invStrSet("bar"), "baz" | "foo", "x", 1) => string
string::replace(invStrSet("bar"), "baz" | "foo", "x", int(0..2)) => string
string::replace(invStrSet("bar"), "baz" | "foo", "x", inf) => string
string::replace(invStrSet("bar"), invStrSet("foo"), "x", 0) => invStrSet("bar")
string::replace(invStrSet("bar"), invStrSet("foo"), "x", 1) => string
string::replace(invStrSet("bar"), invStrSet("foo"), "x", int(0..2)) => string
string::replace(invStrSet("bar"), invStrSet("foo"), "x", inf) => string
string::replace(invStrSet("bar"), invStrSet("bar" | "foo"), "x", 0) => invStrSet("bar")
string::replace(invStrSet("bar"), invStrSet("bar" | "foo"), "x", 1) => string
string::replace(invStrSet("bar"), invStrSet("bar" | "foo"), "x", int(0..2)) => string
string::replace(invStrSet("bar"), invStrSet("bar" | "foo"), "x", inf) => string
string::replace(invStrSet("bar"), invStrSet("bar"), "x", 0) => invStrSet("bar")
string::replace(invStrSet("bar"), invStrSet("bar"), "x", 1) => string
string::replace(invStrSet("bar"), invStrSet("bar"), "x", int(0..2)) => string
string::replace(invStrSet("bar"), invStrSet("bar"), "x", inf) => string
string::replace(invStrSet("bar"), invStrSet(""), "x", 0) => invStrSet("bar")
string::replace(invStrSet("bar"), invStrSet(""), "x", 1) => string
string::replace(invStrSet("bar"), invStrSet(""), "x", int(0..2)) => string
string::replace(invStrSet("bar"), invStrSet(""), "x", inf) => string
string::replace(invStrSet(""), string, "x", 0) => invStrSet("")
string::replace(invStrSet(""), string, "x", 1) => string
string::replace(invStrSet(""), string, "x", int(0..2)) => string
string::replace(invStrSet(""), string, "x", inf) => string
string::replace(invStrSet(""), "", "x", 0) => invStrSet("")
string::replace(invStrSet(""), "", "x", 1) => string
string::replace(invStrSet(""), "", "x", int(0..2)) => string
string::replace(invStrSet(""), "", "x", inf) => string
string::replace(invStrSet(""), "foo", "x", 0) => invStrSet("")
string::replace(invStrSet(""), "foo", "x", 1) => string
string::replace(invStrSet(""), "foo", "x", int(0..2)) => string
string::replace(invStrSet(""), "foo", "x", inf) => string
string::replace(invStrSet(""), "bar", "x", 0) => invStrSet("")
string::replace(invStrSet(""), "bar", "x", 1) => string
string::replace(invStrSet(""), "bar", "x", int(0..2)) => string
string::replace(invStrSet(""), "bar", "x", inf) => string
string::replace(invStrSet(""), "ðŸ’©", "x", 0) => invStrSet("")
string::replace(invStrSet(""), "ðŸ’©", "x", 1) => string
string::replace(invStrSet(""), "ðŸ’©", "x", int(0..2)) => string
string::replace(invStrSet(""), "ðŸ’©", "x", inf) => string
string::replace(invStrSet(""), "bar" | "foo", "x", 0) => invStrSet("")
string::replace(invStrSet(""), "bar" | "foo", "x", 1) => string
string::replace(invStrSet(""), "bar" | "foo", "x", int(0..2)) => string
string::replace(invStrSet(""), "bar" | "foo", "x", inf) => string
string::replace(invStrSet(""), "baz" | "foo", "x", 0) => invStrSet("")
string::replace(invStrSet(""), "baz" | "foo", "x", 1) => string
string::replace(invStrSet(""), "baz" | "foo", "x", int(0..2)) => string
string::replace(invStrSet(""), "baz" | "foo", "x", inf) => string
string::replace(invStrSet(""), invStrSet("foo"), "x", 0) => invStrSet("")
string::replace(invStrSet(""), invStrSet("foo"), "x", 1) => string
string::replace(invStrSet(""), invStrSet("foo"), "x", int(0..2)) => string
string::replace(invStrSet(""), invStrSet("foo"), "x", inf) => string
string::replace(invStrSet(""), invStrSet("bar" | "foo"), "x", 0) => invStrSet("")
string::replace(invStrSet(""), invStrSet("bar" | "foo"), "x", 1) => string
string::replace(invStrSet(""), invStrSet("bar" | "foo"), "x", int(0..2)) => string
string::replace(invStrSet(""), invStrSet("bar" | "foo"), "x", inf) => string
string::replace(invStrSet(""), invStrSet("bar"), "x", 0) => invStrSet("")
string::replace(invStrSet(""), invStrSet("bar"), "x", 1) => string
string::replace(invStrSet(""), invStrSet("bar"), "x", int(0..2)) => string
string::replace(invStrSet(""), invStrSet("bar"), "x", inf) => string
string::replace(invStrSet(""), invStrSet(""), "x", 0) => invStrSet("")
string::replace(invStrSet(""), invStrSet(""), "x", 1) => string
string::replace(invStrSet(""), invStrSet(""), "x", int(0..2)) => string
string::replace(invStrSet(""), invStrSet(""), "x", inf) => string"
`;

exports[`Builtin functions string::slice evaluate 1`] = `
"string::slice(string, 0, 0) => ""
string::slice(string, 0, 1) => string
string::slice(string, 0, 2) => string
string::slice(string, 0, 10) => string
string::slice(string, 0, 100) => string
string::slice(string, 0, inf) => string
string::slice(string, 0, int(0..1)) => string
string::slice(string, 0, int(2..6)) => string
string::slice(string, 0, int(0..inf)) => string
string::slice(string, 1, 0) => ""
string::slice(string, 1, 1) => string
string::slice(string, 1, 2) => string
string::slice(string, 1, 10) => string
string::slice(string, 1, 100) => string
string::slice(string, 1, inf) => string
string::slice(string, 1, int(0..1)) => string
string::slice(string, 1, int(2..6)) => string
string::slice(string, 1, int(0..inf)) => string
string::slice(string, 2, 0) => ""
string::slice(string, 2, 1) => string
string::slice(string, 2, 2) => string
string::slice(string, 2, 10) => string
string::slice(string, 2, 100) => string
string::slice(string, 2, inf) => string
string::slice(string, 2, int(0..1)) => string
string::slice(string, 2, int(2..6)) => string
string::slice(string, 2, int(0..inf)) => string
string::slice(string, 10, 0) => ""
string::slice(string, 10, 1) => string
string::slice(string, 10, 2) => string
string::slice(string, 10, 10) => string
string::slice(string, 10, 100) => string
string::slice(string, 10, inf) => string
string::slice(string, 10, int(0..1)) => string
string::slice(string, 10, int(2..6)) => string
string::slice(string, 10, int(0..inf)) => string
string::slice(string, 100, 0) => ""
string::slice(string, 100, 1) => string
string::slice(string, 100, 2) => string
string::slice(string, 100, 10) => string
string::slice(string, 100, 100) => string
string::slice(string, 100, inf) => string
string::slice(string, 100, int(0..1)) => string
string::slice(string, 100, int(2..6)) => string
string::slice(string, 100, int(0..inf)) => string
string::slice(string, -1, 0) => ""
string::slice(string, -1, 1) => string
string::slice(string, -1, 2) => string
string::slice(string, -1, 10) => string
string::slice(string, -1, 100) => string
string::slice(string, -1, inf) => string
string::slice(string, -1, int(0..1)) => string
string::slice(string, -1, int(2..6)) => string
string::slice(string, -1, int(0..inf)) => string
string::slice(string, -2, 0) => ""
string::slice(string, -2, 1) => string
string::slice(string, -2, 2) => string
string::slice(string, -2, 10) => string
string::slice(string, -2, 100) => string
string::slice(string, -2, inf) => string
string::slice(string, -2, int(0..1)) => string
string::slice(string, -2, int(2..6)) => string
string::slice(string, -2, int(0..inf)) => string
string::slice(string, -10, 0) => ""
string::slice(string, -10, 1) => string
string::slice(string, -10, 2) => string
string::slice(string, -10, 10) => string
string::slice(string, -10, 100) => string
string::slice(string, -10, inf) => string
string::slice(string, -10, int(0..1)) => string
string::slice(string, -10, int(2..6)) => string
string::slice(string, -10, int(0..inf)) => string
string::slice(string, -100, 0) => ""
string::slice(string, -100, 1) => string
string::slice(string, -100, 2) => string
string::slice(string, -100, 10) => string
string::slice(string, -100, 100) => string
string::slice(string, -100, inf) => string
string::slice(string, -100, int(0..1)) => string
string::slice(string, -100, int(2..6)) => string
string::slice(string, -100, int(0..inf)) => string
string::slice(string, int(0..1), 0) => ""
string::slice(string, int(0..1), 1) => string
string::slice(string, int(0..1), 2) => string
string::slice(string, int(0..1), 10) => string
string::slice(string, int(0..1), 100) => string
string::slice(string, int(0..1), inf) => string
string::slice(string, int(0..1), int(0..1)) => string
string::slice(string, int(0..1), int(2..6)) => string
string::slice(string, int(0..1), int(0..inf)) => string
string::slice(string, int(2..6), 0) => ""
string::slice(string, int(2..6), 1) => string
string::slice(string, int(2..6), 2) => string
string::slice(string, int(2..6), 10) => string
string::slice(string, int(2..6), 100) => string
string::slice(string, int(2..6), inf) => string
string::slice(string, int(2..6), int(0..1)) => string
string::slice(string, int(2..6), int(2..6)) => string
string::slice(string, int(2..6), int(0..inf)) => string
string::slice(string, int(0..inf), 0) => ""
string::slice(string, int(0..inf), 1) => string
string::slice(string, int(0..inf), 2) => string
string::slice(string, int(0..inf), 10) => string
string::slice(string, int(0..inf), 100) => string
string::slice(string, int(0..inf), inf) => string
string::slice(string, int(0..inf), int(0..1)) => string
string::slice(string, int(0..inf), int(2..6)) => string
string::slice(string, int(0..inf), int(0..inf)) => string
string::slice(string, int(-1..inf), 0) => ""
string::slice(string, int(-1..inf), 1) => string
string::slice(string, int(-1..inf), 2) => string
string::slice(string, int(-1..inf), 10) => string
string::slice(string, int(-1..inf), 100) => string
string::slice(string, int(-1..inf), inf) => string
string::slice(string, int(-1..inf), int(0..1)) => string
string::slice(string, int(-1..inf), int(2..6)) => string
string::slice(string, int(-1..inf), int(0..inf)) => string
string::slice(string, int(-1..1), 0) => ""
string::slice(string, int(-1..1), 1) => string
string::slice(string, int(-1..1), 2) => string
string::slice(string, int(-1..1), 10) => string
string::slice(string, int(-1..1), 100) => string
string::slice(string, int(-1..1), inf) => string
string::slice(string, int(-1..1), int(0..1)) => string
string::slice(string, int(-1..1), int(2..6)) => string
string::slice(string, int(-1..1), int(0..inf)) => string
string::slice("", 0, 0) => ""
string::slice("", 0, 1) => ""
string::slice("", 0, 2) => ""
string::slice("", 0, 10) => ""
string::slice("", 0, 100) => ""
string::slice("", 0, inf) => ""
string::slice("", 0, int(0..1)) => ""
string::slice("", 0, int(2..6)) => ""
string::slice("", 0, int(0..inf)) => ""
string::slice("", 1, 0) => ""
string::slice("", 1, 1) => ""
string::slice("", 1, 2) => ""
string::slice("", 1, 10) => ""
string::slice("", 1, 100) => ""
string::slice("", 1, inf) => ""
string::slice("", 1, int(0..1)) => ""
string::slice("", 1, int(2..6)) => ""
string::slice("", 1, int(0..inf)) => ""
string::slice("", 2, 0) => ""
string::slice("", 2, 1) => ""
string::slice("", 2, 2) => ""
string::slice("", 2, 10) => ""
string::slice("", 2, 100) => ""
string::slice("", 2, inf) => ""
string::slice("", 2, int(0..1)) => ""
string::slice("", 2, int(2..6)) => ""
string::slice("", 2, int(0..inf)) => ""
string::slice("", 10, 0) => ""
string::slice("", 10, 1) => ""
string::slice("", 10, 2) => ""
string::slice("", 10, 10) => ""
string::slice("", 10, 100) => ""
string::slice("", 10, inf) => ""
string::slice("", 10, int(0..1)) => ""
string::slice("", 10, int(2..6)) => ""
string::slice("", 10, int(0..inf)) => ""
string::slice("", 100, 0) => ""
string::slice("", 100, 1) => ""
string::slice("", 100, 2) => ""
string::slice("", 100, 10) => ""
string::slice("", 100, 100) => ""
string::slice("", 100, inf) => ""
string::slice("", 100, int(0..1)) => ""
string::slice("", 100, int(2..6)) => ""
string::slice("", 100, int(0..inf)) => ""
string::slice("", -1, 0) => ""
string::slice("", -1, 1) => ""
string::slice("", -1, 2) => ""
string::slice("", -1, 10) => ""
string::slice("", -1, 100) => ""
string::slice("", -1, inf) => ""
string::slice("", -1, int(0..1)) => ""
string::slice("", -1, int(2..6)) => ""
string::slice("", -1, int(0..inf)) => ""
string::slice("", -2, 0) => ""
string::slice("", -2, 1) => ""
string::slice("", -2, 2) => ""
string::slice("", -2, 10) => ""
string::slice("", -2, 100) => ""
string::slice("", -2, inf) => ""
string::slice("", -2, int(0..1)) => ""
string::slice("", -2, int(2..6)) => ""
string::slice("", -2, int(0..inf)) => ""
string::slice("", -10, 0) => ""
string::slice("", -10, 1) => ""
string::slice("", -10, 2) => ""
string::slice("", -10, 10) => ""
string::slice("", -10, 100) => ""
string::slice("", -10, inf) => ""
string::slice("", -10, int(0..1)) => ""
string::slice("", -10, int(2..6)) => ""
string::slice("", -10, int(0..inf)) => ""
string::slice("", -100, 0) => ""
string::slice("", -100, 1) => ""
string::slice("", -100, 2) => ""
string::slice("", -100, 10) => ""
string::slice("", -100, 100) => ""
string::slice("", -100, inf) => ""
string::slice("", -100, int(0..1)) => ""
string::slice("", -100, int(2..6)) => ""
string::slice("", -100, int(0..inf)) => ""
string::slice("", int(0..1), 0) => ""
string::slice("", int(0..1), 1) => ""
string::slice("", int(0..1), 2) => ""
string::slice("", int(0..1), 10) => ""
string::slice("", int(0..1), 100) => ""
string::slice("", int(0..1), inf) => ""
string::slice("", int(0..1), int(0..1)) => ""
string::slice("", int(0..1), int(2..6)) => ""
string::slice("", int(0..1), int(0..inf)) => ""
string::slice("", int(2..6), 0) => ""
string::slice("", int(2..6), 1) => ""
string::slice("", int(2..6), 2) => ""
string::slice("", int(2..6), 10) => ""
string::slice("", int(2..6), 100) => ""
string::slice("", int(2..6), inf) => ""
string::slice("", int(2..6), int(0..1)) => ""
string::slice("", int(2..6), int(2..6)) => ""
string::slice("", int(2..6), int(0..inf)) => ""
string::slice("", int(0..inf), 0) => ""
string::slice("", int(0..inf), 1) => ""
string::slice("", int(0..inf), 2) => ""
string::slice("", int(0..inf), 10) => ""
string::slice("", int(0..inf), 100) => ""
string::slice("", int(0..inf), inf) => ""
string::slice("", int(0..inf), int(0..1)) => ""
string::slice("", int(0..inf), int(2..6)) => ""
string::slice("", int(0..inf), int(0..inf)) => ""
string::slice("", int(-1..inf), 0) => ""
string::slice("", int(-1..inf), 1) => ""
string::slice("", int(-1..inf), 2) => ""
string::slice("", int(-1..inf), 10) => ""
string::slice("", int(-1..inf), 100) => ""
string::slice("", int(-1..inf), inf) => ""
string::slice("", int(-1..inf), int(0..1)) => ""
string::slice("", int(-1..inf), int(2..6)) => ""
string::slice("", int(-1..inf), int(0..inf)) => ""
string::slice("", int(-1..1), 0) => ""
string::slice("", int(-1..1), 1) => ""
string::slice("", int(-1..1), 2) => ""
string::slice("", int(-1..1), 10) => ""
string::slice("", int(-1..1), 100) => ""
string::slice("", int(-1..1), inf) => ""
string::slice("", int(-1..1), int(0..1)) => ""
string::slice("", int(-1..1), int(2..6)) => ""
string::slice("", int(-1..1), int(0..inf)) => ""
string::slice("foo", 0, 0) => ""
string::slice("foo", 0, 1) => "f"
string::slice("foo", 0, 2) => "fo"
string::slice("foo", 0, 10) => "foo"
string::slice("foo", 0, 100) => "foo"
string::slice("foo", 0, inf) => "foo"
string::slice("foo", 0, int(0..1)) => "" | "f"
string::slice("foo", 0, int(2..6)) => "fo" | "foo"
string::slice("foo", 0, int(0..inf)) => "" | "f" | "fo" | "foo"
string::slice("foo", 1, 0) => ""
string::slice("foo", 1, 1) => "o"
string::slice("foo", 1, 2) => "oo"
string::slice("foo", 1, 10) => "oo"
string::slice("foo", 1, 100) => "oo"
string::slice("foo", 1, inf) => "oo"
string::slice("foo", 1, int(0..1)) => "" | "o"
string::slice("foo", 1, int(2..6)) => "oo"
string::slice("foo", 1, int(0..inf)) => "" | "o" | "oo"
string::slice("foo", 2, 0) => ""
string::slice("foo", 2, 1) => "o"
string::slice("foo", 2, 2) => "o"
string::slice("foo", 2, 10) => "o"
string::slice("foo", 2, 100) => "o"
string::slice("foo", 2, inf) => "o"
string::slice("foo", 2, int(0..1)) => "" | "o"
string::slice("foo", 2, int(2..6)) => "o"
string::slice("foo", 2, int(0..inf)) => "" | "o"
string::slice("foo", 10, 0) => ""
string::slice("foo", 10, 1) => ""
string::slice("foo", 10, 2) => ""
string::slice("foo", 10, 10) => ""
string::slice("foo", 10, 100) => ""
string::slice("foo", 10, inf) => ""
string::slice("foo", 10, int(0..1)) => ""
string::slice("foo", 10, int(2..6)) => ""
string::slice("foo", 10, int(0..inf)) => ""
string::slice("foo", 100, 0) => ""
string::slice("foo", 100, 1) => ""
string::slice("foo", 100, 2) => ""
string::slice("foo", 100, 10) => ""
string::slice("foo", 100, 100) => ""
string::slice("foo", 100, inf) => ""
string::slice("foo", 100, int(0..1)) => ""
string::slice("foo", 100, int(2..6)) => ""
string::slice("foo", 100, int(0..inf)) => ""
string::slice("foo", -1, 0) => ""
string::slice("foo", -1, 1) => "o"
string::slice("foo", -1, 2) => "o"
string::slice("foo", -1, 10) => "o"
string::slice("foo", -1, 100) => "o"
string::slice("foo", -1, inf) => "o"
string::slice("foo", -1, int(0..1)) => "" | "o"
string::slice("foo", -1, int(2..6)) => "o"
string::slice("foo", -1, int(0..inf)) => "" | "o"
string::slice("foo", -2, 0) => ""
string::slice("foo", -2, 1) => "o"
string::slice("foo", -2, 2) => "oo"
string::slice("foo", -2, 10) => "oo"
string::slice("foo", -2, 100) => "oo"
string::slice("foo", -2, inf) => "oo"
string::slice("foo", -2, int(0..1)) => "" | "o"
string::slice("foo", -2, int(2..6)) => "oo"
string::slice("foo", -2, int(0..inf)) => "" | "o" | "oo"
string::slice("foo", -10, 0) => ""
string::slice("foo", -10, 1) => "f"
string::slice("foo", -10, 2) => "fo"
string::slice("foo", -10, 10) => "foo"
string::slice("foo", -10, 100) => "foo"
string::slice("foo", -10, inf) => "foo"
string::slice("foo", -10, int(0..1)) => "" | "f"
string::slice("foo", -10, int(2..6)) => "fo" | "foo"
string::slice("foo", -10, int(0..inf)) => "" | "f" | "fo" | "foo"
string::slice("foo", -100, 0) => ""
string::slice("foo", -100, 1) => "f"
string::slice("foo", -100, 2) => "fo"
string::slice("foo", -100, 10) => "foo"
string::slice("foo", -100, 100) => "foo"
string::slice("foo", -100, inf) => "foo"
string::slice("foo", -100, int(0..1)) => "" | "f"
string::slice("foo", -100, int(2..6)) => "fo" | "foo"
string::slice("foo", -100, int(0..inf)) => "" | "f" | "fo" | "foo"
string::slice("foo", int(0..1), 0) => ""
string::slice("foo", int(0..1), 1) => "f" | "o"
string::slice("foo", int(0..1), 2) => "fo" | "oo"
string::slice("foo", int(0..1), 10) => "foo" | "oo"
string::slice("foo", int(0..1), 100) => "foo" | "oo"
string::slice("foo", int(0..1), inf) => "foo" | "oo"
string::slice("foo", int(0..1), int(0..1)) => "" | "f" | "o"
string::slice("foo", int(0..1), int(2..6)) => "fo" | "foo" | "oo"
string::slice("foo", int(0..1), int(0..inf)) => "" | "f" | "fo" | "foo" | "o" | "oo"
string::slice("foo", int(2..6), 0) => ""
string::slice("foo", int(2..6), 1) => "" | "o"
string::slice("foo", int(2..6), 2) => "" | "o"
string::slice("foo", int(2..6), 10) => "" | "o"
string::slice("foo", int(2..6), 100) => "" | "o"
string::slice("foo", int(2..6), inf) => "" | "o"
string::slice("foo", int(2..6), int(0..1)) => "" | "o"
string::slice("foo", int(2..6), int(2..6)) => "" | "o"
string::slice("foo", int(2..6), int(0..inf)) => "" | "o"
string::slice("foo", int(0..inf), 0) => ""
string::slice("foo", int(0..inf), 1) => "" | "f" | "o"
string::slice("foo", int(0..inf), 2) => "" | "fo" | "o" | "oo"
string::slice("foo", int(0..inf), 10) => "" | "foo" | "o" | "oo"
string::slice("foo", int(0..inf), 100) => "" | "foo" | "o" | "oo"
string::slice("foo", int(0..inf), inf) => "" | "foo" | "o" | "oo"
string::slice("foo", int(0..inf), int(0..1)) => "" | "f" | "o"
string::slice("foo", int(0..inf), int(2..6)) => "" | "fo" | "foo" | "o" | "oo"
string::slice("foo", int(0..inf), int(0..inf)) => "" | "f" | "fo" | "foo" | "o" | "oo"
string::slice("foo", int(-1..inf), 0) => ""
string::slice("foo", int(-1..inf), 1) => "f" | "o"
string::slice("foo", int(-1..inf), 2) => "fo" | "o" | "oo"
string::slice("foo", int(-1..inf), 10) => "foo" | "o" | "oo"
string::slice("foo", int(-1..inf), 100) => "foo" | "o" | "oo"
string::slice("foo", int(-1..inf), inf) => "foo" | "o" | "oo"
string::slice("foo", int(-1..inf), int(0..1)) => "" | "f" | "o"
string::slice("foo", int(-1..inf), int(2..6)) => "fo" | "foo" | "o" | "oo"
string::slice("foo", int(-1..inf), int(0..inf)) => "" | "f" | "fo" | "foo" | "o" | "oo"
string::slice("foo", int(-1..1), 0) => ""
string::slice("foo", int(-1..1), 1) => "f" | "o"
string::slice("foo", int(-1..1), 2) => "fo" | "o" | "oo"
string::slice("foo", int(-1..1), 10) => "foo" | "o" | "oo"
string::slice("foo", int(-1..1), 100) => "foo" | "o" | "oo"
string::slice("foo", int(-1..1), inf) => "foo" | "o" | "oo"
string::slice("foo", int(-1..1), int(0..1)) => "" | "f" | "o"
string::slice("foo", int(-1..1), int(2..6)) => "fo" | "foo" | "o" | "oo"
string::slice("foo", int(-1..1), int(0..inf)) => "" | "f" | "fo" | "foo" | "o" | "oo"
string::slice("bar", 0, 0) => ""
string::slice("bar", 0, 1) => "b"
string::slice("bar", 0, 2) => "ba"
string::slice("bar", 0, 10) => "bar"
string::slice("bar", 0, 100) => "bar"
string::slice("bar", 0, inf) => "bar"
string::slice("bar", 0, int(0..1)) => "" | "b"
string::slice("bar", 0, int(2..6)) => "ba" | "bar"
string::slice("bar", 0, int(0..inf)) => "" | "b" | "ba" | "bar"
string::slice("bar", 1, 0) => ""
string::slice("bar", 1, 1) => "a"
string::slice("bar", 1, 2) => "ar"
string::slice("bar", 1, 10) => "ar"
string::slice("bar", 1, 100) => "ar"
string::slice("bar", 1, inf) => "ar"
string::slice("bar", 1, int(0..1)) => "" | "a"
string::slice("bar", 1, int(2..6)) => "ar"
string::slice("bar", 1, int(0..inf)) => "" | "a" | "ar"
string::slice("bar", 2, 0) => ""
string::slice("bar", 2, 1) => "r"
string::slice("bar", 2, 2) => "r"
string::slice("bar", 2, 10) => "r"
string::slice("bar", 2, 100) => "r"
string::slice("bar", 2, inf) => "r"
string::slice("bar", 2, int(0..1)) => "" | "r"
string::slice("bar", 2, int(2..6)) => "r"
string::slice("bar", 2, int(0..inf)) => "" | "r"
string::slice("bar", 10, 0) => ""
string::slice("bar", 10, 1) => ""
string::slice("bar", 10, 2) => ""
string::slice("bar", 10, 10) => ""
string::slice("bar", 10, 100) => ""
string::slice("bar", 10, inf) => ""
string::slice("bar", 10, int(0..1)) => ""
string::slice("bar", 10, int(2..6)) => ""
string::slice("bar", 10, int(0..inf)) => ""
string::slice("bar", 100, 0) => ""
string::slice("bar", 100, 1) => ""
string::slice("bar", 100, 2) => ""
string::slice("bar", 100, 10) => ""
string::slice("bar", 100, 100) => ""
string::slice("bar", 100, inf) => ""
string::slice("bar", 100, int(0..1)) => ""
string::slice("bar", 100, int(2..6)) => ""
string::slice("bar", 100, int(0..inf)) => ""
string::slice("bar", -1, 0) => ""
string::slice("bar", -1, 1) => "r"
string::slice("bar", -1, 2) => "r"
string::slice("bar", -1, 10) => "r"
string::slice("bar", -1, 100) => "r"
string::slice("bar", -1, inf) => "r"
string::slice("bar", -1, int(0..1)) => "" | "r"
string::slice("bar", -1, int(2..6)) => "r"
string::slice("bar", -1, int(0..inf)) => "" | "r"
string::slice("bar", -2, 0) => ""
string::slice("bar", -2, 1) => "a"
string::slice("bar", -2, 2) => "ar"
string::slice("bar", -2, 10) => "ar"
string::slice("bar", -2, 100) => "ar"
string::slice("bar", -2, inf) => "ar"
string::slice("bar", -2, int(0..1)) => "" | "a"
string::slice("bar", -2, int(2..6)) => "ar"
string::slice("bar", -2, int(0..inf)) => "" | "a" | "ar"
string::slice("bar", -10, 0) => ""
string::slice("bar", -10, 1) => "b"
string::slice("bar", -10, 2) => "ba"
string::slice("bar", -10, 10) => "bar"
string::slice("bar", -10, 100) => "bar"
string::slice("bar", -10, inf) => "bar"
string::slice("bar", -10, int(0..1)) => "" | "b"
string::slice("bar", -10, int(2..6)) => "ba" | "bar"
string::slice("bar", -10, int(0..inf)) => "" | "b" | "ba" | "bar"
string::slice("bar", -100, 0) => ""
string::slice("bar", -100, 1) => "b"
string::slice("bar", -100, 2) => "ba"
string::slice("bar", -100, 10) => "bar"
string::slice("bar", -100, 100) => "bar"
string::slice("bar", -100, inf) => "bar"
string::slice("bar", -100, int(0..1)) => "" | "b"
string::slice("bar", -100, int(2..6)) => "ba" | "bar"
string::slice("bar", -100, int(0..inf)) => "" | "b" | "ba" | "bar"
string::slice("bar", int(0..1), 0) => ""
string::slice("bar", int(0..1), 1) => "a" | "b"
string::slice("bar", int(0..1), 2) => "ar" | "ba"
string::slice("bar", int(0..1), 10) => "ar" | "bar"
string::slice("bar", int(0..1), 100) => "ar" | "bar"
string::slice("bar", int(0..1), inf) => "ar" | "bar"
string::slice("bar", int(0..1), int(0..1)) => "" | "a" | "b"
string::slice("bar", int(0..1), int(2..6)) => "ar" | "ba" | "bar"
string::slice("bar", int(0..1), int(0..inf)) => "" | "a" | "ar" | "b" | "ba" | "bar"
string::slice("bar", int(2..6), 0) => ""
string::slice("bar", int(2..6), 1) => "" | "r"
string::slice("bar", int(2..6), 2) => "" | "r"
string::slice("bar", int(2..6), 10) => "" | "r"
string::slice("bar", int(2..6), 100) => "" | "r"
string::slice("bar", int(2..6), inf) => "" | "r"
string::slice("bar", int(2..6), int(0..1)) => "" | "r"
string::slice("bar", int(2..6), int(2..6)) => "" | "r"
string::slice("bar", int(2..6), int(0..inf)) => "" | "r"
string::slice("bar", int(0..inf), 0) => ""
string::slice("bar", int(0..inf), 1) => "" | "a" | "b" | "r"
string::slice("bar", int(0..inf), 2) => "" | "ar" | "ba" | "r"
string::slice("bar", int(0..inf), 10) => "" | "ar" | "bar" | "r"
string::slice("bar", int(0..inf), 100) => "" | "ar" | "bar" | "r"
string::slice("bar", int(0..inf), inf) => "" | "ar" | "bar" | "r"
string::slice("bar", int(0..inf), int(0..1)) => "" | "a" | "b" | "r"
string::slice("bar", int(0..inf), int(2..6)) => "" | "ar" | "ba" | "bar" | "r"
string::slice("bar", int(0..inf), int(0..inf)) => "" | "a" | "ar" | "b" | "ba" | "bar" | "r"
string::slice("bar", int(-1..inf), 0) => ""
string::slice("bar", int(-1..inf), 1) => "a" | "b" | "r"
string::slice("bar", int(-1..inf), 2) => "ar" | "ba" | "r"
string::slice("bar", int(-1..inf), 10) => "ar" | "bar" | "r"
string::slice("bar", int(-1..inf), 100) => "ar" | "bar" | "r"
string::slice("bar", int(-1..inf), inf) => "ar" | "bar" | "r"
string::slice("bar", int(-1..inf), int(0..1)) => "" | "a" | "b" | "r"
string::slice("bar", int(-1..inf), int(2..6)) => "ar" | "ba" | "bar" | "r"
string::slice("bar", int(-1..inf), int(0..inf)) => "" | "a" | "ar" | "b" | "ba" | "bar" | "r"
string::slice("bar", int(-1..1), 0) => ""
string::slice("bar", int(-1..1), 1) => "a" | "b" | "r"
string::slice("bar", int(-1..1), 2) => "ar" | "ba" | "r"
string::slice("bar", int(-1..1), 10) => "ar" | "bar" | "r"
string::slice("bar", int(-1..1), 100) => "ar" | "bar" | "r"
string::slice("bar", int(-1..1), inf) => "ar" | "bar" | "r"
string::slice("bar", int(-1..1), int(0..1)) => "" | "a" | "b" | "r"
string::slice("bar", int(-1..1), int(2..6)) => "ar" | "ba" | "bar" | "r"
string::slice("bar", int(-1..1), int(0..inf)) => "" | "a" | "ar" | "b" | "ba" | "bar" | "r"
string::slice("ðŸ’©", 0, 0) => ""
string::slice("ðŸ’©", 0, 1) => "ðŸ’©"
string::slice("ðŸ’©", 0, 2) => "ðŸ’©"
string::slice("ðŸ’©", 0, 10) => "ðŸ’©"
string::slice("ðŸ’©", 0, 100) => "ðŸ’©"
string::slice("ðŸ’©", 0, inf) => "ðŸ’©"
string::slice("ðŸ’©", 0, int(0..1)) => "" | "ðŸ’©"
string::slice("ðŸ’©", 0, int(2..6)) => "ðŸ’©"
string::slice("ðŸ’©", 0, int(0..inf)) => "" | "ðŸ’©"
string::slice("ðŸ’©", 1, 0) => ""
string::slice("ðŸ’©", 1, 1) => ""
string::slice("ðŸ’©", 1, 2) => ""
string::slice("ðŸ’©", 1, 10) => ""
string::slice("ðŸ’©", 1, 100) => ""
string::slice("ðŸ’©", 1, inf) => ""
string::slice("ðŸ’©", 1, int(0..1)) => ""
string::slice("ðŸ’©", 1, int(2..6)) => ""
string::slice("ðŸ’©", 1, int(0..inf)) => ""
string::slice("ðŸ’©", 2, 0) => ""
string::slice("ðŸ’©", 2, 1) => ""
string::slice("ðŸ’©", 2, 2) => ""
string::slice("ðŸ’©", 2, 10) => ""
string::slice("ðŸ’©", 2, 100) => ""
string::slice("ðŸ’©", 2, inf) => ""
string::slice("ðŸ’©", 2, int(0..1)) => ""
string::slice("ðŸ’©", 2, int(2..6)) => ""
string::slice("ðŸ’©", 2, int(0..inf)) => ""
string::slice("ðŸ’©", 10, 0) => ""
string::slice("ðŸ’©", 10, 1) => ""
string::slice("ðŸ’©", 10, 2) => ""
string::slice("ðŸ’©", 10, 10) => ""
string::slice("ðŸ’©", 10, 100) => ""
string::slice("ðŸ’©", 10, inf) => ""
string::slice("ðŸ’©", 10, int(0..1)) => ""
string::slice("ðŸ’©", 10, int(2..6)) => ""
string::slice("ðŸ’©", 10, int(0..inf)) => ""
string::slice("ðŸ’©", 100, 0) => ""
string::slice("ðŸ’©", 100, 1) => ""
string::slice("ðŸ’©", 100, 2) => ""
string::slice("ðŸ’©", 100, 10) => ""
string::slice("ðŸ’©", 100, 100) => ""
string::slice("ðŸ’©", 100, inf) => ""
string::slice("ðŸ’©", 100, int(0..1)) => ""
string::slice("ðŸ’©", 100, int(2..6)) => ""
string::slice("ðŸ’©", 100, int(0..inf)) => ""
string::slice("ðŸ’©", -1, 0) => ""
string::slice("ðŸ’©", -1, 1) => "ðŸ’©"
string::slice("ðŸ’©", -1, 2) => "ðŸ’©"
string::slice("ðŸ’©", -1, 10) => "ðŸ’©"
string::slice("ðŸ’©", -1, 100) => "ðŸ’©"
string::slice("ðŸ’©", -1, inf) => "ðŸ’©"
string::slice("ðŸ’©", -1, int(0..1)) => "" | "ðŸ’©"
string::slice("ðŸ’©", -1, int(2..6)) => "ðŸ’©"
string::slice("ðŸ’©", -1, int(0..inf)) => "" | "ðŸ’©"
string::slice("ðŸ’©", -2, 0) => ""
string::slice("ðŸ’©", -2, 1) => "ðŸ’©"
string::slice("ðŸ’©", -2, 2) => "ðŸ’©"
string::slice("ðŸ’©", -2, 10) => "ðŸ’©"
string::slice("ðŸ’©", -2, 100) => "ðŸ’©"
string::slice("ðŸ’©", -2, inf) => "ðŸ’©"
string::slice("ðŸ’©", -2, int(0..1)) => "" | "ðŸ’©"
string::slice("ðŸ’©", -2, int(2..6)) => "ðŸ’©"
string::slice("ðŸ’©", -2, int(0..inf)) => "" | "ðŸ’©"
string::slice("ðŸ’©", -10, 0) => ""
string::slice("ðŸ’©", -10, 1) => "ðŸ’©"
string::slice("ðŸ’©", -10, 2) => "ðŸ’©"
string::slice("ðŸ’©", -10, 10) => "ðŸ’©"
string::slice("ðŸ’©", -10, 100) => "ðŸ’©"
string::slice("ðŸ’©", -10, inf) => "ðŸ’©"
string::slice("ðŸ’©", -10, int(0..1)) => "" | "ðŸ’©"
string::slice("ðŸ’©", -10, int(2..6)) => "ðŸ’©"
string::slice("ðŸ’©", -10, int(0..inf)) => "" | "ðŸ’©"
string::slice("ðŸ’©", -100, 0) => ""
string::slice("ðŸ’©", -100, 1) => "ðŸ’©"
string::slice("ðŸ’©", -100, 2) => "ðŸ’©"
string::slice("ðŸ’©", -100, 10) => "ðŸ’©"
string::slice("ðŸ’©", -100, 100) => "ðŸ’©"
string::slice("ðŸ’©", -100, inf) => "ðŸ’©"
string::slice("ðŸ’©", -100, int(0..1)) => "" | "ðŸ’©"
string::slice("ðŸ’©", -100, int(2..6)) => "ðŸ’©"
string::slice("ðŸ’©", -100, int(0..inf)) => "" | "ðŸ’©"
string::slice("ðŸ’©", int(0..1), 0) => ""
string::slice("ðŸ’©", int(0..1), 1) => "" | "ðŸ’©"
string::slice("ðŸ’©", int(0..1), 2) => "" | "ðŸ’©"
string::slice("ðŸ’©", int(0..1), 10) => "" | "ðŸ’©"
string::slice("ðŸ’©", int(0..1), 100) => "" | "ðŸ’©"
string::slice("ðŸ’©", int(0..1), inf) => "" | "ðŸ’©"
string::slice("ðŸ’©", int(0..1), int(0..1)) => "" | "ðŸ’©"
string::slice("ðŸ’©", int(0..1), int(2..6)) => "" | "ðŸ’©"
string::slice("ðŸ’©", int(0..1), int(0..inf)) => "" | "ðŸ’©"
string::slice("ðŸ’©", int(2..6), 0) => ""
string::slice("ðŸ’©", int(2..6), 1) => ""
string::slice("ðŸ’©", int(2..6), 2) => ""
string::slice("ðŸ’©", int(2..6), 10) => ""
string::slice("ðŸ’©", int(2..6), 100) => ""
string::slice("ðŸ’©", int(2..6), inf) => ""
string::slice("ðŸ’©", int(2..6), int(0..1)) => ""
string::slice("ðŸ’©", int(2..6), int(2..6)) => ""
string::slice("ðŸ’©", int(2..6), int(0..inf)) => ""
string::slice("ðŸ’©", int(0..inf), 0) => ""
string::slice("ðŸ’©", int(0..inf), 1) => "" | "ðŸ’©"
string::slice("ðŸ’©", int(0..inf), 2) => "" | "ðŸ’©"
string::slice("ðŸ’©", int(0..inf), 10) => "" | "ðŸ’©"
string::slice("ðŸ’©", int(0..inf), 100) => "" | "ðŸ’©"
string::slice("ðŸ’©", int(0..inf), inf) => "" | "ðŸ’©"
string::slice("ðŸ’©", int(0..inf), int(0..1)) => "" | "ðŸ’©"
string::slice("ðŸ’©", int(0..inf), int(2..6)) => "" | "ðŸ’©"
string::slice("ðŸ’©", int(0..inf), int(0..inf)) => "" | "ðŸ’©"
string::slice("ðŸ’©", int(-1..inf), 0) => ""
string::slice("ðŸ’©", int(-1..inf), 1) => "ðŸ’©"
string::slice("ðŸ’©", int(-1..inf), 2) => "ðŸ’©"
string::slice("ðŸ’©", int(-1..inf), 10) => "ðŸ’©"
string::slice("ðŸ’©", int(-1..inf), 100) => "ðŸ’©"
string::slice("ðŸ’©", int(-1..inf), inf) => "ðŸ’©"
string::slice("ðŸ’©", int(-1..inf), int(0..1)) => "" | "ðŸ’©"
string::slice("ðŸ’©", int(-1..inf), int(2..6)) => "ðŸ’©"
string::slice("ðŸ’©", int(-1..inf), int(0..inf)) => "" | "ðŸ’©"
string::slice("ðŸ’©", int(-1..1), 0) => ""
string::slice("ðŸ’©", int(-1..1), 1) => "ðŸ’©"
string::slice("ðŸ’©", int(-1..1), 2) => "ðŸ’©"
string::slice("ðŸ’©", int(-1..1), 10) => "ðŸ’©"
string::slice("ðŸ’©", int(-1..1), 100) => "ðŸ’©"
string::slice("ðŸ’©", int(-1..1), inf) => "ðŸ’©"
string::slice("ðŸ’©", int(-1..1), int(0..1)) => "" | "ðŸ’©"
string::slice("ðŸ’©", int(-1..1), int(2..6)) => "ðŸ’©"
string::slice("ðŸ’©", int(-1..1), int(0..inf)) => "" | "ðŸ’©"
string::slice("bar" | "foo", 0, 0) => ""
string::slice("bar" | "foo", 0, 1) => "b" | "f"
string::slice("bar" | "foo", 0, 2) => "ba" | "fo"
string::slice("bar" | "foo", 0, 10) => "bar" | "foo"
string::slice("bar" | "foo", 0, 100) => "bar" | "foo"
string::slice("bar" | "foo", 0, inf) => "bar" | "foo"
string::slice("bar" | "foo", 0, int(0..1)) => "" | "b" | "f"
string::slice("bar" | "foo", 0, int(2..6)) => "ba" | "bar" | "fo" | "foo"
string::slice("bar" | "foo", 0, int(0..inf)) => "" | "b" | "ba" | "bar" | "f" | "fo" | "foo"
string::slice("bar" | "foo", 1, 0) => ""
string::slice("bar" | "foo", 1, 1) => "a" | "o"
string::slice("bar" | "foo", 1, 2) => "ar" | "oo"
string::slice("bar" | "foo", 1, 10) => "ar" | "oo"
string::slice("bar" | "foo", 1, 100) => "ar" | "oo"
string::slice("bar" | "foo", 1, inf) => "ar" | "oo"
string::slice("bar" | "foo", 1, int(0..1)) => "" | "a" | "o"
string::slice("bar" | "foo", 1, int(2..6)) => "ar" | "oo"
string::slice("bar" | "foo", 1, int(0..inf)) => "" | "a" | "ar" | "o" | "oo"
string::slice("bar" | "foo", 2, 0) => ""
string::slice("bar" | "foo", 2, 1) => "o" | "r"
string::slice("bar" | "foo", 2, 2) => "o" | "r"
string::slice("bar" | "foo", 2, 10) => "o" | "r"
string::slice("bar" | "foo", 2, 100) => "o" | "r"
string::slice("bar" | "foo", 2, inf) => "o" | "r"
string::slice("bar" | "foo", 2, int(0..1)) => "" | "o" | "r"
string::slice("bar" | "foo", 2, int(2..6)) => "o" | "r"
string::slice("bar" | "foo", 2, int(0..inf)) => "" | "o" | "r"
string::slice("bar" | "foo", 10, 0) => ""
string::slice("bar" | "foo", 10, 1) => ""
string::slice("bar" | "foo", 10, 2) => ""
string::slice("bar" | "foo", 10, 10) => ""
string::slice("bar" | "foo", 10, 100) => ""
string::slice("bar" | "foo", 10, inf) => ""
string::slice("bar" | "foo", 10, int(0..1)) => ""
string::slice("bar" | "foo", 10, int(2..6)) => ""
string::slice("bar" | "foo", 10, int(0..inf)) => ""
string::slice("bar" | "foo", 100, 0) => ""
string::slice("bar" | "foo", 100, 1) => ""
string::slice("bar" | "foo", 100, 2) => ""
string::slice("bar" | "foo", 100, 10) => ""
string::slice("bar" | "foo", 100, 100) => ""
string::slice("bar" | "foo", 100, inf) => ""
string::slice("bar" | "foo", 100, int(0..1)) => ""
string::slice("bar" | "foo", 100, int(2..6)) => ""
string::slice("bar" | "foo", 100, int(0..inf)) => ""
string::slice("bar" | "foo", -1, 0) => ""
string::slice("bar" | "foo", -1, 1) => "o" | "r"
string::slice("bar" | "foo", -1, 2) => "o" | "r"
string::slice("bar" | "foo", -1, 10) => "o" | "r"
string::slice("bar" | "foo", -1, 100) => "o" | "r"
string::slice("bar" | "foo", -1, inf) => "o" | "r"
string::slice("bar" | "foo", -1, int(0..1)) => "" | "o" | "r"
string::slice("bar" | "foo", -1, int(2..6)) => "o" | "r"
string::slice("bar" | "foo", -1, int(0..inf)) => "" | "o" | "r"
string::slice("bar" | "foo", -2, 0) => ""
string::slice("bar" | "foo", -2, 1) => "a" | "o"
string::slice("bar" | "foo", -2, 2) => "ar" | "oo"
string::slice("bar" | "foo", -2, 10) => "ar" | "oo"
string::slice("bar" | "foo", -2, 100) => "ar" | "oo"
string::slice("bar" | "foo", -2, inf) => "ar" | "oo"
string::slice("bar" | "foo", -2, int(0..1)) => "" | "a" | "o"
string::slice("bar" | "foo", -2, int(2..6)) => "ar" | "oo"
string::slice("bar" | "foo", -2, int(0..inf)) => "" | "a" | "ar" | "o" | "oo"
string::slice("bar" | "foo", -10, 0) => ""
string::slice("bar" | "foo", -10, 1) => "b" | "f"
string::slice("bar" | "foo", -10, 2) => "ba" | "fo"
string::slice("bar" | "foo", -10, 10) => "bar" | "foo"
string::slice("bar" | "foo", -10, 100) => "bar" | "foo"
string::slice("bar" | "foo", -10, inf) => "bar" | "foo"
string::slice("bar" | "foo", -10, int(0..1)) => "" | "b" | "f"
string::slice("bar" | "foo", -10, int(2..6)) => "ba" | "bar" | "fo" | "foo"
string::slice("bar" | "foo", -10, int(0..inf)) => "" | "b" | "ba" | "bar" | "f" | "fo" | "foo"
string::slice("bar" | "foo", -100, 0) => ""
string::slice("bar" | "foo", -100, 1) => "b" | "f"
string::slice("bar" | "foo", -100, 2) => "ba" | "fo"
string::slice("bar" | "foo", -100, 10) => "bar" | "foo"
string::slice("bar" | "foo", -100, 100) => "bar" | "foo"
string::slice("bar" | "foo", -100, inf) => "bar" | "foo"
string::slice("bar" | "foo", -100, int(0..1)) => "" | "b" | "f"
string::slice("bar" | "foo", -100, int(2..6)) => "ba" | "bar" | "fo" | "foo"
string::slice("bar" | "foo", -100, int(0..inf)) => "" | "b" | "ba" | "bar" | "f" | "fo" | "foo"
string::slice("bar" | "foo", int(0..1), 0) => ""
string::slice("bar" | "foo", int(0..1), 1) => "a" | "b" | "f" | "o"
string::slice("bar" | "foo", int(0..1), 2) => "ar" | "ba" | "fo" | "oo"
string::slice("bar" | "foo", int(0..1), 10) => "ar" | "bar" | "foo" | "oo"
string::slice("bar" | "foo", int(0..1), 100) => "ar" | "bar" | "foo" | "oo"
string::slice("bar" | "foo", int(0..1), inf) => "ar" | "bar" | "foo" | "oo"
string::slice("bar" | "foo", int(0..1), int(0..1)) => "" | "a" | "b" | "f" | "o"
string::slice("bar" | "foo", int(0..1), int(2..6)) => "ar" | "ba" | "bar" | "fo" | "foo" | "oo"
string::slice("bar" | "foo", int(0..1), int(0..inf)) => "" | "a" | "ar" | "b" | "ba" | "bar" | "f" | "fo" | "foo" | "o" | "oo"
string::slice("bar" | "foo", int(2..6), 0) => ""
string::slice("bar" | "foo", int(2..6), 1) => "" | "o" | "r"
string::slice("bar" | "foo", int(2..6), 2) => "" | "o" | "r"
string::slice("bar" | "foo", int(2..6), 10) => "" | "o" | "r"
string::slice("bar" | "foo", int(2..6), 100) => "" | "o" | "r"
string::slice("bar" | "foo", int(2..6), inf) => "" | "o" | "r"
string::slice("bar" | "foo", int(2..6), int(0..1)) => "" | "o" | "r"
string::slice("bar" | "foo", int(2..6), int(2..6)) => "" | "o" | "r"
string::slice("bar" | "foo", int(2..6), int(0..inf)) => "" | "o" | "r"
string::slice("bar" | "foo", int(0..inf), 0) => ""
string::slice("bar" | "foo", int(0..inf), 1) => "" | "a" | "b" | "f" | "o" | "r"
string::slice("bar" | "foo", int(0..inf), 2) => "" | "ar" | "ba" | "fo" | "o" | "oo" | "r"
string::slice("bar" | "foo", int(0..inf), 10) => "" | "ar" | "bar" | "foo" | "o" | "oo" | "r"
string::slice("bar" | "foo", int(0..inf), 100) => "" | "ar" | "bar" | "foo" | "o" | "oo" | "r"
string::slice("bar" | "foo", int(0..inf), inf) => "" | "ar" | "bar" | "foo" | "o" | "oo" | "r"
string::slice("bar" | "foo", int(0..inf), int(0..1)) => "" | "a" | "b" | "f" | "o" | "r"
string::slice("bar" | "foo", int(0..inf), int(2..6)) => "" | "ar" | "ba" | "bar" | "fo" | "foo" | "o" | "oo" | "r"
string::slice("bar" | "foo", int(0..inf), int(0..inf)) => "" | "a" | "ar" | "b" | "ba" | "bar" | "f" | "fo" | "foo" | "o" | "oo" | "r"
string::slice("bar" | "foo", int(-1..inf), 0) => ""
string::slice("bar" | "foo", int(-1..inf), 1) => "a" | "b" | "f" | "o" | "r"
string::slice("bar" | "foo", int(-1..inf), 2) => "ar" | "ba" | "fo" | "o" | "oo" | "r"
string::slice("bar" | "foo", int(-1..inf), 10) => "ar" | "bar" | "foo" | "o" | "oo" | "r"
string::slice("bar" | "foo", int(-1..inf), 100) => "ar" | "bar" | "foo" | "o" | "oo" | "r"
string::slice("bar" | "foo", int(-1..inf), inf) => "ar" | "bar" | "foo" | "o" | "oo" | "r"
string::slice("bar" | "foo", int(-1..inf), int(0..1)) => "" | "a" | "b" | "f" | "o" | "r"
string::slice("bar" | "foo", int(-1..inf), int(2..6)) => "ar" | "ba" | "bar" | "fo" | "foo" | "o" | "oo" | "r"
string::slice("bar" | "foo", int(-1..inf), int(0..inf)) => "" | "a" | "ar" | "b" | "ba" | "bar" | "f" | "fo" | "foo" | "o" | "oo" | "r"
string::slice("bar" | "foo", int(-1..1), 0) => ""
string::slice("bar" | "foo", int(-1..1), 1) => "a" | "b" | "f" | "o" | "r"
string::slice("bar" | "foo", int(-1..1), 2) => "ar" | "ba" | "fo" | "o" | "oo" | "r"
string::slice("bar" | "foo", int(-1..1), 10) => "ar" | "bar" | "foo" | "o" | "oo" | "r"
string::slice("bar" | "foo", int(-1..1), 100) => "ar" | "bar" | "foo" | "o" | "oo" | "r"
string::slice("bar" | "foo", int(-1..1), inf) => "ar" | "bar" | "foo" | "o" | "oo" | "r"
string::slice("bar" | "foo", int(-1..1), int(0..1)) => "" | "a" | "b" | "f" | "o" | "r"
string::slice("bar" | "foo", int(-1..1), int(2..6)) => "ar" | "ba" | "bar" | "fo" | "foo" | "o" | "oo" | "r"
string::slice("bar" | "foo", int(-1..1), int(0..inf)) => "" | "a" | "ar" | "b" | "ba" | "bar" | "f" | "fo" | "foo" | "o" | "oo" | "r"
string::slice("baz" | "foo", 0, 0) => ""
string::slice("baz" | "foo", 0, 1) => "b" | "f"
string::slice("baz" | "foo", 0, 2) => "ba" | "fo"
string::slice("baz" | "foo", 0, 10) => "baz" | "foo"
string::slice("baz" | "foo", 0, 100) => "baz" | "foo"
string::slice("baz" | "foo", 0, inf) => "baz" | "foo"
string::slice("baz" | "foo", 0, int(0..1)) => "" | "b" | "f"
string::slice("baz" | "foo", 0, int(2..6)) => "ba" | "baz" | "fo" | "foo"
string::slice("baz" | "foo", 0, int(0..inf)) => "" | "b" | "ba" | "baz" | "f" | "fo" | "foo"
string::slice("baz" | "foo", 1, 0) => ""
string::slice("baz" | "foo", 1, 1) => "a" | "o"
string::slice("baz" | "foo", 1, 2) => "az" | "oo"
string::slice("baz" | "foo", 1, 10) => "az" | "oo"
string::slice("baz" | "foo", 1, 100) => "az" | "oo"
string::slice("baz" | "foo", 1, inf) => "az" | "oo"
string::slice("baz" | "foo", 1, int(0..1)) => "" | "a" | "o"
string::slice("baz" | "foo", 1, int(2..6)) => "az" | "oo"
string::slice("baz" | "foo", 1, int(0..inf)) => "" | "a" | "az" | "o" | "oo"
string::slice("baz" | "foo", 2, 0) => ""
string::slice("baz" | "foo", 2, 1) => "o" | "z"
string::slice("baz" | "foo", 2, 2) => "o" | "z"
string::slice("baz" | "foo", 2, 10) => "o" | "z"
string::slice("baz" | "foo", 2, 100) => "o" | "z"
string::slice("baz" | "foo", 2, inf) => "o" | "z"
string::slice("baz" | "foo", 2, int(0..1)) => "" | "o" | "z"
string::slice("baz" | "foo", 2, int(2..6)) => "o" | "z"
string::slice("baz" | "foo", 2, int(0..inf)) => "" | "o" | "z"
string::slice("baz" | "foo", 10, 0) => ""
string::slice("baz" | "foo", 10, 1) => ""
string::slice("baz" | "foo", 10, 2) => ""
string::slice("baz" | "foo", 10, 10) => ""
string::slice("baz" | "foo", 10, 100) => ""
string::slice("baz" | "foo", 10, inf) => ""
string::slice("baz" | "foo", 10, int(0..1)) => ""
string::slice("baz" | "foo", 10, int(2..6)) => ""
string::slice("baz" | "foo", 10, int(0..inf)) => ""
string::slice("baz" | "foo", 100, 0) => ""
string::slice("baz" | "foo", 100, 1) => ""
string::slice("baz" | "foo", 100, 2) => ""
string::slice("baz" | "foo", 100, 10) => ""
string::slice("baz" | "foo", 100, 100) => ""
string::slice("baz" | "foo", 100, inf) => ""
string::slice("baz" | "foo", 100, int(0..1)) => ""
string::slice("baz" | "foo", 100, int(2..6)) => ""
string::slice("baz" | "foo", 100, int(0..inf)) => ""
string::slice("baz" | "foo", -1, 0) => ""
string::slice("baz" | "foo", -1, 1) => "o" | "z"
string::slice("baz" | "foo", -1, 2) => "o" | "z"
string::slice("baz" | "foo", -1, 10) => "o" | "z"
string::slice("baz" | "foo", -1, 100) => "o" | "z"
string::slice("baz" | "foo", -1, inf) => "o" | "z"
string::slice("baz" | "foo", -1, int(0..1)) => "" | "o" | "z"
string::slice("baz" | "foo", -1, int(2..6)) => "o" | "z"
string::slice("baz" | "foo", -1, int(0..inf)) => "" | "o" | "z"
string::slice("baz" | "foo", -2, 0) => ""
string::slice("baz" | "foo", -2, 1) => "a" | "o"
string::slice("baz" | "foo", -2, 2) => "az" | "oo"
string::slice("baz" | "foo", -2, 10) => "az" | "oo"
string::slice("baz" | "foo", -2, 100) => "az" | "oo"
string::slice("baz" | "foo", -2, inf) => "az" | "oo"
string::slice("baz" | "foo", -2, int(0..1)) => "" | "a" | "o"
string::slice("baz" | "foo", -2, int(2..6)) => "az" | "oo"
string::slice("baz" | "foo", -2, int(0..inf)) => "" | "a" | "az" | "o" | "oo"
string::slice("baz" | "foo", -10, 0) => ""
string::slice("baz" | "foo", -10, 1) => "b" | "f"
string::slice("baz" | "foo", -10, 2) => "ba" | "fo"
string::slice("baz" | "foo", -10, 10) => "baz" | "foo"
string::slice("baz" | "foo", -10, 100) => "baz" | "foo"
string::slice("baz" | "foo", -10, inf) => "baz" | "foo"
string::slice("baz" | "foo", -10, int(0..1)) => "" | "b" | "f"
string::slice("baz" | "foo", -10, int(2..6)) => "ba" | "baz" | "fo" | "foo"
string::slice("baz" | "foo", -10, int(0..inf)) => "" | "b" | "ba" | "baz" | "f" | "fo" | "foo"
string::slice("baz" | "foo", -100, 0) => ""
string::slice("baz" | "foo", -100, 1) => "b" | "f"
string::slice("baz" | "foo", -100, 2) => "ba" | "fo"
string::slice("baz" | "foo", -100, 10) => "baz" | "foo"
string::slice("baz" | "foo", -100, 100) => "baz" | "foo"
string::slice("baz" | "foo", -100, inf) => "baz" | "foo"
string::slice("baz" | "foo", -100, int(0..1)) => "" | "b" | "f"
string::slice("baz" | "foo", -100, int(2..6)) => "ba" | "baz" | "fo" | "foo"
string::slice("baz" | "foo", -100, int(0..inf)) => "" | "b" | "ba" | "baz" | "f" | "fo" | "foo"
string::slice("baz" | "foo", int(0..1), 0) => ""
string::slice("baz" | "foo", int(0..1), 1) => "a" | "b" | "f" | "o"
string::slice("baz" | "foo", int(0..1), 2) => "az" | "ba" | "fo" | "oo"
string::slice("baz" | "foo", int(0..1), 10) => "az" | "baz" | "foo" | "oo"
string::slice("baz" | "foo", int(0..1), 100) => "az" | "baz" | "foo" | "oo"
string::slice("baz" | "foo", int(0..1), inf) => "az" | "baz" | "foo" | "oo"
string::slice("baz" | "foo", int(0..1), int(0..1)) => "" | "a" | "b" | "f" | "o"
string::slice("baz" | "foo", int(0..1), int(2..6)) => "az" | "ba" | "baz" | "fo" | "foo" | "oo"
string::slice("baz" | "foo", int(0..1), int(0..inf)) => "" | "a" | "az" | "b" | "ba" | "baz" | "f" | "fo" | "foo" | "o" | "oo"
string::slice("baz" | "foo", int(2..6), 0) => ""
string::slice("baz" | "foo", int(2..6), 1) => "" | "o" | "z"
string::slice("baz" | "foo", int(2..6), 2) => "" | "o" | "z"
string::slice("baz" | "foo", int(2..6), 10) => "" | "o" | "z"
string::slice("baz" | "foo", int(2..6), 100) => "" | "o" | "z"
string::slice("baz" | "foo", int(2..6), inf) => "" | "o" | "z"
string::slice("baz" | "foo", int(2..6), int(0..1)) => "" | "o" | "z"
string::slice("baz" | "foo", int(2..6), int(2..6)) => "" | "o" | "z"
string::slice("baz" | "foo", int(2..6), int(0..inf)) => "" | "o" | "z"
string::slice("baz" | "foo", int(0..inf), 0) => ""
string::slice("baz" | "foo", int(0..inf), 1) => "" | "a" | "b" | "f" | "o" | "z"
string::slice("baz" | "foo", int(0..inf), 2) => "" | "az" | "ba" | "fo" | "o" | "oo" | "z"
string::slice("baz" | "foo", int(0..inf), 10) => "" | "az" | "baz" | "foo" | "o" | "oo" | "z"
string::slice("baz" | "foo", int(0..inf), 100) => "" | "az" | "baz" | "foo" | "o" | "oo" | "z"
string::slice("baz" | "foo", int(0..inf), inf) => "" | "az" | "baz" | "foo" | "o" | "oo" | "z"
string::slice("baz" | "foo", int(0..inf), int(0..1)) => "" | "a" | "b" | "f" | "o" | "z"
string::slice("baz" | "foo", int(0..inf), int(2..6)) => "" | "az" | "ba" | "baz" | "fo" | "foo" | "o" | "oo" | "z"
string::slice("baz" | "foo", int(0..inf), int(0..inf)) => "" | "a" | "az" | "b" | "ba" | "baz" | "f" | "fo" | "foo" | "o" | "oo" | "z"
string::slice("baz" | "foo", int(-1..inf), 0) => ""
string::slice("baz" | "foo", int(-1..inf), 1) => "a" | "b" | "f" | "o" | "z"
string::slice("baz" | "foo", int(-1..inf), 2) => "az" | "ba" | "fo" | "o" | "oo" | "z"
string::slice("baz" | "foo", int(-1..inf), 10) => "az" | "baz" | "foo" | "o" | "oo" | "z"
string::slice("baz" | "foo", int(-1..inf), 100) => "az" | "baz" | "foo" | "o" | "oo" | "z"
string::slice("baz" | "foo", int(-1..inf), inf) => "az" | "baz" | "foo" | "o" | "oo" | "z"
string::slice("baz" | "foo", int(-1..inf), int(0..1)) => "" | "a" | "b" | "f" | "o" | "z"
string::slice("baz" | "foo", int(-1..inf), int(2..6)) => "az" | "ba" | "baz" | "fo" | "foo" | "o" | "oo" | "z"
string::slice("baz" | "foo", int(-1..inf), int(0..inf)) => "" | "a" | "az" | "b" | "ba" | "baz" | "f" | "fo" | "foo" | "o" | "oo" | "z"
string::slice("baz" | "foo", int(-1..1), 0) => ""
string::slice("baz" | "foo", int(-1..1), 1) => "a" | "b" | "f" | "o" | "z"
string::slice("baz" | "foo", int(-1..1), 2) => "az" | "ba" | "fo" | "o" | "oo" | "z"
string::slice("baz" | "foo", int(-1..1), 10) => "az" | "baz" | "foo" | "o" | "oo" | "z"
string::slice("baz" | "foo", int(-1..1), 100) => "az" | "baz" | "foo" | "o" | "oo" | "z"
string::slice("baz" | "foo", int(-1..1), inf) => "az" | "baz" | "foo" | "o" | "oo" | "z"
string::slice("baz" | "foo", int(-1..1), int(0..1)) => "" | "a" | "b" | "f" | "o" | "z"
string::slice("baz" | "foo", int(-1..1), int(2..6)) => "az" | "ba" | "baz" | "fo" | "foo" | "o" | "oo" | "z"
string::slice("baz" | "foo", int(-1..1), int(0..inf)) => "" | "a" | "az" | "b" | "ba" | "baz" | "f" | "fo" | "foo" | "o" | "oo" | "z"
string::slice(invStrSet("foo"), 0, 0) => ""
string::slice(invStrSet("foo"), 0, 1) => string
string::slice(invStrSet("foo"), 0, 2) => string
string::slice(invStrSet("foo"), 0, 10) => string
string::slice(invStrSet("foo"), 0, 100) => string
string::slice(invStrSet("foo"), 0, inf) => invStrSet("foo")
string::slice(invStrSet("foo"), 0, int(0..1)) => string
string::slice(invStrSet("foo"), 0, int(2..6)) => string
string::slice(invStrSet("foo"), 0, int(0..inf)) => string
string::slice(invStrSet("foo"), 1, 0) => ""
string::slice(invStrSet("foo"), 1, 1) => string
string::slice(invStrSet("foo"), 1, 2) => string
string::slice(invStrSet("foo"), 1, 10) => string
string::slice(invStrSet("foo"), 1, 100) => string
string::slice(invStrSet("foo"), 1, inf) => string
string::slice(invStrSet("foo"), 1, int(0..1)) => string
string::slice(invStrSet("foo"), 1, int(2..6)) => string
string::slice(invStrSet("foo"), 1, int(0..inf)) => string
string::slice(invStrSet("foo"), 2, 0) => ""
string::slice(invStrSet("foo"), 2, 1) => string
string::slice(invStrSet("foo"), 2, 2) => string
string::slice(invStrSet("foo"), 2, 10) => string
string::slice(invStrSet("foo"), 2, 100) => string
string::slice(invStrSet("foo"), 2, inf) => string
string::slice(invStrSet("foo"), 2, int(0..1)) => string
string::slice(invStrSet("foo"), 2, int(2..6)) => string
string::slice(invStrSet("foo"), 2, int(0..inf)) => string
string::slice(invStrSet("foo"), 10, 0) => ""
string::slice(invStrSet("foo"), 10, 1) => string
string::slice(invStrSet("foo"), 10, 2) => string
string::slice(invStrSet("foo"), 10, 10) => string
string::slice(invStrSet("foo"), 10, 100) => string
string::slice(invStrSet("foo"), 10, inf) => string
string::slice(invStrSet("foo"), 10, int(0..1)) => string
string::slice(invStrSet("foo"), 10, int(2..6)) => string
string::slice(invStrSet("foo"), 10, int(0..inf)) => string
string::slice(invStrSet("foo"), 100, 0) => ""
string::slice(invStrSet("foo"), 100, 1) => string
string::slice(invStrSet("foo"), 100, 2) => string
string::slice(invStrSet("foo"), 100, 10) => string
string::slice(invStrSet("foo"), 100, 100) => string
string::slice(invStrSet("foo"), 100, inf) => string
string::slice(invStrSet("foo"), 100, int(0..1)) => string
string::slice(invStrSet("foo"), 100, int(2..6)) => string
string::slice(invStrSet("foo"), 100, int(0..inf)) => string
string::slice(invStrSet("foo"), -1, 0) => ""
string::slice(invStrSet("foo"), -1, 1) => string
string::slice(invStrSet("foo"), -1, 2) => string
string::slice(invStrSet("foo"), -1, 10) => string
string::slice(invStrSet("foo"), -1, 100) => string
string::slice(invStrSet("foo"), -1, inf) => string
string::slice(invStrSet("foo"), -1, int(0..1)) => string
string::slice(invStrSet("foo"), -1, int(2..6)) => string
string::slice(invStrSet("foo"), -1, int(0..inf)) => string
string::slice(invStrSet("foo"), -2, 0) => ""
string::slice(invStrSet("foo"), -2, 1) => string
string::slice(invStrSet("foo"), -2, 2) => string
string::slice(invStrSet("foo"), -2, 10) => string
string::slice(invStrSet("foo"), -2, 100) => string
string::slice(invStrSet("foo"), -2, inf) => string
string::slice(invStrSet("foo"), -2, int(0..1)) => string
string::slice(invStrSet("foo"), -2, int(2..6)) => string
string::slice(invStrSet("foo"), -2, int(0..inf)) => string
string::slice(invStrSet("foo"), -10, 0) => ""
string::slice(invStrSet("foo"), -10, 1) => string
string::slice(invStrSet("foo"), -10, 2) => string
string::slice(invStrSet("foo"), -10, 10) => string
string::slice(invStrSet("foo"), -10, 100) => string
string::slice(invStrSet("foo"), -10, inf) => string
string::slice(invStrSet("foo"), -10, int(0..1)) => string
string::slice(invStrSet("foo"), -10, int(2..6)) => string
string::slice(invStrSet("foo"), -10, int(0..inf)) => string
string::slice(invStrSet("foo"), -100, 0) => ""
string::slice(invStrSet("foo"), -100, 1) => string
string::slice(invStrSet("foo"), -100, 2) => string
string::slice(invStrSet("foo"), -100, 10) => string
string::slice(invStrSet("foo"), -100, 100) => string
string::slice(invStrSet("foo"), -100, inf) => string
string::slice(invStrSet("foo"), -100, int(0..1)) => string
string::slice(invStrSet("foo"), -100, int(2..6)) => string
string::slice(invStrSet("foo"), -100, int(0..inf)) => string
string::slice(invStrSet("foo"), int(0..1), 0) => ""
string::slice(invStrSet("foo"), int(0..1), 1) => string
string::slice(invStrSet("foo"), int(0..1), 2) => string
string::slice(invStrSet("foo"), int(0..1), 10) => string
string::slice(invStrSet("foo"), int(0..1), 100) => string
string::slice(invStrSet("foo"), int(0..1), inf) => string
string::slice(invStrSet("foo"), int(0..1), int(0..1)) => string
string::slice(invStrSet("foo"), int(0..1), int(2..6)) => string
string::slice(invStrSet("foo"), int(0..1), int(0..inf)) => string
string::slice(invStrSet("foo"), int(2..6), 0) => ""
string::slice(invStrSet("foo"), int(2..6), 1) => string
string::slice(invStrSet("foo"), int(2..6), 2) => string
string::slice(invStrSet("foo"), int(2..6), 10) => string
string::slice(invStrSet("foo"), int(2..6), 100) => string
string::slice(invStrSet("foo"), int(2..6), inf) => string
string::slice(invStrSet("foo"), int(2..6), int(0..1)) => string
string::slice(invStrSet("foo"), int(2..6), int(2..6)) => string
string::slice(invStrSet("foo"), int(2..6), int(0..inf)) => string
string::slice(invStrSet("foo"), int(0..inf), 0) => ""
string::slice(invStrSet("foo"), int(0..inf), 1) => string
string::slice(invStrSet("foo"), int(0..inf), 2) => string
string::slice(invStrSet("foo"), int(0..inf), 10) => string
string::slice(invStrSet("foo"), int(0..inf), 100) => string
string::slice(invStrSet("foo"), int(0..inf), inf) => string
string::slice(invStrSet("foo"), int(0..inf), int(0..1)) => string
string::slice(invStrSet("foo"), int(0..inf), int(2..6)) => string
string::slice(invStrSet("foo"), int(0..inf), int(0..inf)) => string
string::slice(invStrSet("foo"), int(-1..inf), 0) => ""
string::slice(invStrSet("foo"), int(-1..inf), 1) => string
string::slice(invStrSet("foo"), int(-1..inf), 2) => string
string::slice(invStrSet("foo"), int(-1..inf), 10) => string
string::slice(invStrSet("foo"), int(-1..inf), 100) => string
string::slice(invStrSet("foo"), int(-1..inf), inf) => string
string::slice(invStrSet("foo"), int(-1..inf), int(0..1)) => string
string::slice(invStrSet("foo"), int(-1..inf), int(2..6)) => string
string::slice(invStrSet("foo"), int(-1..inf), int(0..inf)) => string
string::slice(invStrSet("foo"), int(-1..1), 0) => ""
string::slice(invStrSet("foo"), int(-1..1), 1) => string
string::slice(invStrSet("foo"), int(-1..1), 2) => string
string::slice(invStrSet("foo"), int(-1..1), 10) => string
string::slice(invStrSet("foo"), int(-1..1), 100) => string
string::slice(invStrSet("foo"), int(-1..1), inf) => string
string::slice(invStrSet("foo"), int(-1..1), int(0..1)) => string
string::slice(invStrSet("foo"), int(-1..1), int(2..6)) => string
string::slice(invStrSet("foo"), int(-1..1), int(0..inf)) => string
string::slice(invStrSet("bar" | "foo"), 0, 0) => ""
string::slice(invStrSet("bar" | "foo"), 0, 1) => string
string::slice(invStrSet("bar" | "foo"), 0, 2) => string
string::slice(invStrSet("bar" | "foo"), 0, 10) => string
string::slice(invStrSet("bar" | "foo"), 0, 100) => string
string::slice(invStrSet("bar" | "foo"), 0, inf) => invStrSet("bar" | "foo")
string::slice(invStrSet("bar" | "foo"), 0, int(0..1)) => string
string::slice(invStrSet("bar" | "foo"), 0, int(2..6)) => string
string::slice(invStrSet("bar" | "foo"), 0, int(0..inf)) => string
string::slice(invStrSet("bar" | "foo"), 1, 0) => ""
string::slice(invStrSet("bar" | "foo"), 1, 1) => string
string::slice(invStrSet("bar" | "foo"), 1, 2) => string
string::slice(invStrSet("bar" | "foo"), 1, 10) => string
string::slice(invStrSet("bar" | "foo"), 1, 100) => string
string::slice(invStrSet("bar" | "foo"), 1, inf) => string
string::slice(invStrSet("bar" | "foo"), 1, int(0..1)) => string
string::slice(invStrSet("bar" | "foo"), 1, int(2..6)) => string
string::slice(invStrSet("bar" | "foo"), 1, int(0..inf)) => string
string::slice(invStrSet("bar" | "foo"), 2, 0) => ""
string::slice(invStrSet("bar" | "foo"), 2, 1) => string
string::slice(invStrSet("bar" | "foo"), 2, 2) => string
string::slice(invStrSet("bar" | "foo"), 2, 10) => string
string::slice(invStrSet("bar" | "foo"), 2, 100) => string
string::slice(invStrSet("bar" | "foo"), 2, inf) => string
string::slice(invStrSet("bar" | "foo"), 2, int(0..1)) => string
string::slice(invStrSet("bar" | "foo"), 2, int(2..6)) => string
string::slice(invStrSet("bar" | "foo"), 2, int(0..inf)) => string
string::slice(invStrSet("bar" | "foo"), 10, 0) => ""
string::slice(invStrSet("bar" | "foo"), 10, 1) => string
string::slice(invStrSet("bar" | "foo"), 10, 2) => string
string::slice(invStrSet("bar" | "foo"), 10, 10) => string
string::slice(invStrSet("bar" | "foo"), 10, 100) => string
string::slice(invStrSet("bar" | "foo"), 10, inf) => string
string::slice(invStrSet("bar" | "foo"), 10, int(0..1)) => string
string::slice(invStrSet("bar" | "foo"), 10, int(2..6)) => string
string::slice(invStrSet("bar" | "foo"), 10, int(0..inf)) => string
string::slice(invStrSet("bar" | "foo"), 100, 0) => ""
string::slice(invStrSet("bar" | "foo"), 100, 1) => string
string::slice(invStrSet("bar" | "foo"), 100, 2) => string
string::slice(invStrSet("bar" | "foo"), 100, 10) => string
string::slice(invStrSet("bar" | "foo"), 100, 100) => string
string::slice(invStrSet("bar" | "foo"), 100, inf) => string
string::slice(invStrSet("bar" | "foo"), 100, int(0..1)) => string
string::slice(invStrSet("bar" | "foo"), 100, int(2..6)) => string
string::slice(invStrSet("bar" | "foo"), 100, int(0..inf)) => string
string::slice(invStrSet("bar" | "foo"), -1, 0) => ""
string::slice(invStrSet("bar" | "foo"), -1, 1) => string
string::slice(invStrSet("bar" | "foo"), -1, 2) => string
string::slice(invStrSet("bar" | "foo"), -1, 10) => string
string::slice(invStrSet("bar" | "foo"), -1, 100) => string
string::slice(invStrSet("bar" | "foo"), -1, inf) => string
string::slice(invStrSet("bar" | "foo"), -1, int(0..1)) => string
string::slice(invStrSet("bar" | "foo"), -1, int(2..6)) => string
string::slice(invStrSet("bar" | "foo"), -1, int(0..inf)) => string
string::slice(invStrSet("bar" | "foo"), -2, 0) => ""
string::slice(invStrSet("bar" | "foo"), -2, 1) => string
string::slice(invStrSet("bar" | "foo"), -2, 2) => string
string::slice(invStrSet("bar" | "foo"), -2, 10) => string
string::slice(invStrSet("bar" | "foo"), -2, 100) => string
string::slice(invStrSet("bar" | "foo"), -2, inf) => string
string::slice(invStrSet("bar" | "foo"), -2, int(0..1)) => string
string::slice(invStrSet("bar" | "foo"), -2, int(2..6)) => string
string::slice(invStrSet("bar" | "foo"), -2, int(0..inf)) => string
string::slice(invStrSet("bar" | "foo"), -10, 0) => ""
string::slice(invStrSet("bar" | "foo"), -10, 1) => string
string::slice(invStrSet("bar" | "foo"), -10, 2) => string
string::slice(invStrSet("bar" | "foo"), -10, 10) => string
string::slice(invStrSet("bar" | "foo"), -10, 100) => string
string::slice(invStrSet("bar" | "foo"), -10, inf) => string
string::slice(invStrSet("bar" | "foo"), -10, int(0..1)) => string
string::slice(invStrSet("bar" | "foo"), -10, int(2..6)) => string
string::slice(invStrSet("bar" | "foo"), -10, int(0..inf)) => string
string::slice(invStrSet("bar" | "foo"), -100, 0) => ""
string::slice(invStrSet("bar" | "foo"), -100, 1) => string
string::slice(invStrSet("bar" | "foo"), -100, 2) => string
string::slice(invStrSet("bar" | "foo"), -100, 10) => string
string::slice(invStrSet("bar" | "foo"), -100, 100) => string
string::slice(invStrSet("bar" | "foo"), -100, inf) => string
string::slice(invStrSet("bar" | "foo"), -100, int(0..1)) => string
string::slice(invStrSet("bar" | "foo"), -100, int(2..6)) => string
string::slice(invStrSet("bar" | "foo"), -100, int(0..inf)) => string
string::slice(invStrSet("bar" | "foo"), int(0..1), 0) => ""
string::slice(invStrSet("bar" | "foo"), int(0..1), 1) => string
string::slice(invStrSet("bar" | "foo"), int(0..1), 2) => string
string::slice(invStrSet("bar" | "foo"), int(0..1), 10) => string
string::slice(invStrSet("bar" | "foo"), int(0..1), 100) => string
string::slice(invStrSet("bar" | "foo"), int(0..1), inf) => string
string::slice(invStrSet("bar" | "foo"), int(0..1), int(0..1)) => string
string::slice(invStrSet("bar" | "foo"), int(0..1), int(2..6)) => string
string::slice(invStrSet("bar" | "foo"), int(0..1), int(0..inf)) => string
string::slice(invStrSet("bar" | "foo"), int(2..6), 0) => ""
string::slice(invStrSet("bar" | "foo"), int(2..6), 1) => string
string::slice(invStrSet("bar" | "foo"), int(2..6), 2) => string
string::slice(invStrSet("bar" | "foo"), int(2..6), 10) => string
string::slice(invStrSet("bar" | "foo"), int(2..6), 100) => string
string::slice(invStrSet("bar" | "foo"), int(2..6), inf) => string
string::slice(invStrSet("bar" | "foo"), int(2..6), int(0..1)) => string
string::slice(invStrSet("bar" | "foo"), int(2..6), int(2..6)) => string
string::slice(invStrSet("bar" | "foo"), int(2..6), int(0..inf)) => string
string::slice(invStrSet("bar" | "foo"), int(0..inf), 0) => ""
string::slice(invStrSet("bar" | "foo"), int(0..inf), 1) => string
string::slice(invStrSet("bar" | "foo"), int(0..inf), 2) => string
string::slice(invStrSet("bar" | "foo"), int(0..inf), 10) => string
string::slice(invStrSet("bar" | "foo"), int(0..inf), 100) => string
string::slice(invStrSet("bar" | "foo"), int(0..inf), inf) => string
string::slice(invStrSet("bar" | "foo"), int(0..inf), int(0..1)) => string
string::slice(invStrSet("bar" | "foo"), int(0..inf), int(2..6)) => string
string::slice(invStrSet("bar" | "foo"), int(0..inf), int(0..inf)) => string
string::slice(invStrSet("bar" | "foo"), int(-1..inf), 0) => ""
string::slice(invStrSet("bar" | "foo"), int(-1..inf), 1) => string
string::slice(invStrSet("bar" | "foo"), int(-1..inf), 2) => string
string::slice(invStrSet("bar" | "foo"), int(-1..inf), 10) => string
string::slice(invStrSet("bar" | "foo"), int(-1..inf), 100) => string
string::slice(invStrSet("bar" | "foo"), int(-1..inf), inf) => string
string::slice(invStrSet("bar" | "foo"), int(-1..inf), int(0..1)) => string
string::slice(invStrSet("bar" | "foo"), int(-1..inf), int(2..6)) => string
string::slice(invStrSet("bar" | "foo"), int(-1..inf), int(0..inf)) => string
string::slice(invStrSet("bar" | "foo"), int(-1..1), 0) => ""
string::slice(invStrSet("bar" | "foo"), int(-1..1), 1) => string
string::slice(invStrSet("bar" | "foo"), int(-1..1), 2) => string
string::slice(invStrSet("bar" | "foo"), int(-1..1), 10) => string
string::slice(invStrSet("bar" | "foo"), int(-1..1), 100) => string
string::slice(invStrSet("bar" | "foo"), int(-1..1), inf) => string
string::slice(invStrSet("bar" | "foo"), int(-1..1), int(0..1)) => string
string::slice(invStrSet("bar" | "foo"), int(-1..1), int(2..6)) => string
string::slice(invStrSet("bar" | "foo"), int(-1..1), int(0..inf)) => string
string::slice(invStrSet("bar"), 0, 0) => ""
string::slice(invStrSet("bar"), 0, 1) => string
string::slice(invStrSet("bar"), 0, 2) => string
string::slice(invStrSet("bar"), 0, 10) => string
string::slice(invStrSet("bar"), 0, 100) => string
string::slice(invStrSet("bar"), 0, inf) => invStrSet("bar")
string::slice(invStrSet("bar"), 0, int(0..1)) => string
string::slice(invStrSet("bar"), 0, int(2..6)) => string
string::slice(invStrSet("bar"), 0, int(0..inf)) => string
string::slice(invStrSet("bar"), 1, 0) => ""
string::slice(invStrSet("bar"), 1, 1) => string
string::slice(invStrSet("bar"), 1, 2) => string
string::slice(invStrSet("bar"), 1, 10) => string
string::slice(invStrSet("bar"), 1, 100) => string
string::slice(invStrSet("bar"), 1, inf) => string
string::slice(invStrSet("bar"), 1, int(0..1)) => string
string::slice(invStrSet("bar"), 1, int(2..6)) => string
string::slice(invStrSet("bar"), 1, int(0..inf)) => string
string::slice(invStrSet("bar"), 2, 0) => ""
string::slice(invStrSet("bar"), 2, 1) => string
string::slice(invStrSet("bar"), 2, 2) => string
string::slice(invStrSet("bar"), 2, 10) => string
string::slice(invStrSet("bar"), 2, 100) => string
string::slice(invStrSet("bar"), 2, inf) => string
string::slice(invStrSet("bar"), 2, int(0..1)) => string
string::slice(invStrSet("bar"), 2, int(2..6)) => string
string::slice(invStrSet("bar"), 2, int(0..inf)) => string
string::slice(invStrSet("bar"), 10, 0) => ""
string::slice(invStrSet("bar"), 10, 1) => string
string::slice(invStrSet("bar"), 10, 2) => string
string::slice(invStrSet("bar"), 10, 10) => string
string::slice(invStrSet("bar"), 10, 100) => string
string::slice(invStrSet("bar"), 10, inf) => string
string::slice(invStrSet("bar"), 10, int(0..1)) => string
string::slice(invStrSet("bar"), 10, int(2..6)) => string
string::slice(invStrSet("bar"), 10, int(0..inf)) => string
string::slice(invStrSet("bar"), 100, 0) => ""
string::slice(invStrSet("bar"), 100, 1) => string
string::slice(invStrSet("bar"), 100, 2) => string
string::slice(invStrSet("bar"), 100, 10) => string
string::slice(invStrSet("bar"), 100, 100) => string
string::slice(invStrSet("bar"), 100, inf) => string
string::slice(invStrSet("bar"), 100, int(0..1)) => string
string::slice(invStrSet("bar"), 100, int(2..6)) => string
string::slice(invStrSet("bar"), 100, int(0..inf)) => string
string::slice(invStrSet("bar"), -1, 0) => ""
string::slice(invStrSet("bar"), -1, 1) => string
string::slice(invStrSet("bar"), -1, 2) => string
string::slice(invStrSet("bar"), -1, 10) => string
string::slice(invStrSet("bar"), -1, 100) => string
string::slice(invStrSet("bar"), -1, inf) => string
string::slice(invStrSet("bar"), -1, int(0..1)) => string
string::slice(invStrSet("bar"), -1, int(2..6)) => string
string::slice(invStrSet("bar"), -1, int(0..inf)) => string
string::slice(invStrSet("bar"), -2, 0) => ""
string::slice(invStrSet("bar"), -2, 1) => string
string::slice(invStrSet("bar"), -2, 2) => string
string::slice(invStrSet("bar"), -2, 10) => string
string::slice(invStrSet("bar"), -2, 100) => string
string::slice(invStrSet("bar"), -2, inf) => string
string::slice(invStrSet("bar"), -2, int(0..1)) => string
string::slice(invStrSet("bar"), -2, int(2..6)) => string
string::slice(invStrSet("bar"), -2, int(0..inf)) => string
string::slice(invStrSet("bar"), -10, 0) => ""
string::slice(invStrSet("bar"), -10, 1) => string
string::slice(invStrSet("bar"), -10, 2) => string
string::slice(invStrSet("bar"), -10, 10) => string
string::slice(invStrSet("bar"), -10, 100) => string
string::slice(invStrSet("bar"), -10, inf) => string
string::slice(invStrSet("bar"), -10, int(0..1)) => string
string::slice(invStrSet("bar"), -10, int(2..6)) => string
string::slice(invStrSet("bar"), -10, int(0..inf)) => string
string::slice(invStrSet("bar"), -100, 0) => ""
string::slice(invStrSet("bar"), -100, 1) => string
string::slice(invStrSet("bar"), -100, 2) => string
string::slice(invStrSet("bar"), -100, 10) => string
string::slice(invStrSet("bar"), -100, 100) => string
string::slice(invStrSet("bar"), -100, inf) => string
string::slice(invStrSet("bar"), -100, int(0..1)) => string
string::slice(invStrSet("bar"), -100, int(2..6)) => string
string::slice(invStrSet("bar"), -100, int(0..inf)) => string
string::slice(invStrSet("bar"), int(0..1), 0) => ""
string::slice(invStrSet("bar"), int(0..1), 1) => string
string::slice(invStrSet("bar"), int(0..1), 2) => string
string::slice(invStrSet("bar"), int(0..1), 10) => string
string::slice(invStrSet("bar"), int(0..1), 100) => string
string::slice(invStrSet("bar"), int(0..1), inf) => string
string::slice(invStrSet("bar"), int(0..1), int(0..1)) => string
string::slice(invStrSet("bar"), int(0..1), int(2..6)) => string
string::slice(invStrSet("bar"), int(0..1), int(0..inf)) => string
string::slice(invStrSet("bar"), int(2..6), 0) => ""
string::slice(invStrSet("bar"), int(2..6), 1) => string
string::slice(invStrSet("bar"), int(2..6), 2) => string
string::slice(invStrSet("bar"), int(2..6), 10) => string
string::slice(invStrSet("bar"), int(2..6), 100) => string
string::slice(invStrSet("bar"), int(2..6), inf) => string
string::slice(invStrSet("bar"), int(2..6), int(0..1)) => string
string::slice(invStrSet("bar"), int(2..6), int(2..6)) => string
string::slice(invStrSet("bar"), int(2..6), int(0..inf)) => string
string::slice(invStrSet("bar"), int(0..inf), 0) => ""
string::slice(invStrSet("bar"), int(0..inf), 1) => string
string::slice(invStrSet("bar"), int(0..inf), 2) => string
string::slice(invStrSet("bar"), int(0..inf), 10) => string
string::slice(invStrSet("bar"), int(0..inf), 100) => string
string::slice(invStrSet("bar"), int(0..inf), inf) => string
string::slice(invStrSet("bar"), int(0..inf), int(0..1)) => string
string::slice(invStrSet("bar"), int(0..inf), int(2..6)) => string
string::slice(invStrSet("bar"), int(0..inf), int(0..inf)) => string
string::slice(invStrSet("bar"), int(-1..inf), 0) => ""
string::slice(invStrSet("bar"), int(-1..inf), 1) => string
string::slice(invStrSet("bar"), int(-1..inf), 2) => string
string::slice(invStrSet("bar"), int(-1..inf), 10) => string
string::slice(invStrSet("bar"), int(-1..inf), 100) => string
string::slice(invStrSet("bar"), int(-1..inf), inf) => string
string::slice(invStrSet("bar"), int(-1..inf), int(0..1)) => string
string::slice(invStrSet("bar"), int(-1..inf), int(2..6)) => string
string::slice(invStrSet("bar"), int(-1..inf), int(0..inf)) => string
string::slice(invStrSet("bar"), int(-1..1), 0) => ""
string::slice(invStrSet("bar"), int(-1..1), 1) => string
string::slice(invStrSet("bar"), int(-1..1), 2) => string
string::slice(invStrSet("bar"), int(-1..1), 10) => string
string::slice(invStrSet("bar"), int(-1..1), 100) => string
string::slice(invStrSet("bar"), int(-1..1), inf) => string
string::slice(invStrSet("bar"), int(-1..1), int(0..1)) => string
string::slice(invStrSet("bar"), int(-1..1), int(2..6)) => string
string::slice(invStrSet("bar"), int(-1..1), int(0..inf)) => string
string::slice(invStrSet(""), 0, 0) => ""
string::slice(invStrSet(""), 0, 1) => string
string::slice(invStrSet(""), 0, 2) => string
string::slice(invStrSet(""), 0, 10) => string
string::slice(invStrSet(""), 0, 100) => string
string::slice(invStrSet(""), 0, inf) => invStrSet("")
string::slice(invStrSet(""), 0, int(0..1)) => string
string::slice(invStrSet(""), 0, int(2..6)) => string
string::slice(invStrSet(""), 0, int(0..inf)) => string
string::slice(invStrSet(""), 1, 0) => ""
string::slice(invStrSet(""), 1, 1) => string
string::slice(invStrSet(""), 1, 2) => string
string::slice(invStrSet(""), 1, 10) => string
string::slice(invStrSet(""), 1, 100) => string
string::slice(invStrSet(""), 1, inf) => string
string::slice(invStrSet(""), 1, int(0..1)) => string
string::slice(invStrSet(""), 1, int(2..6)) => string
string::slice(invStrSet(""), 1, int(0..inf)) => string
string::slice(invStrSet(""), 2, 0) => ""
string::slice(invStrSet(""), 2, 1) => string
string::slice(invStrSet(""), 2, 2) => string
string::slice(invStrSet(""), 2, 10) => string
string::slice(invStrSet(""), 2, 100) => string
string::slice(invStrSet(""), 2, inf) => string
string::slice(invStrSet(""), 2, int(0..1)) => string
string::slice(invStrSet(""), 2, int(2..6)) => string
string::slice(invStrSet(""), 2, int(0..inf)) => string
string::slice(invStrSet(""), 10, 0) => ""
string::slice(invStrSet(""), 10, 1) => string
string::slice(invStrSet(""), 10, 2) => string
string::slice(invStrSet(""), 10, 10) => string
string::slice(invStrSet(""), 10, 100) => string
string::slice(invStrSet(""), 10, inf) => string
string::slice(invStrSet(""), 10, int(0..1)) => string
string::slice(invStrSet(""), 10, int(2..6)) => string
string::slice(invStrSet(""), 10, int(0..inf)) => string
string::slice(invStrSet(""), 100, 0) => ""
string::slice(invStrSet(""), 100, 1) => string
string::slice(invStrSet(""), 100, 2) => string
string::slice(invStrSet(""), 100, 10) => string
string::slice(invStrSet(""), 100, 100) => string
string::slice(invStrSet(""), 100, inf) => string
string::slice(invStrSet(""), 100, int(0..1)) => string
string::slice(invStrSet(""), 100, int(2..6)) => string
string::slice(invStrSet(""), 100, int(0..inf)) => string
string::slice(invStrSet(""), -1, 0) => ""
string::slice(invStrSet(""), -1, 1) => string
string::slice(invStrSet(""), -1, 2) => string
string::slice(invStrSet(""), -1, 10) => string
string::slice(invStrSet(""), -1, 100) => string
string::slice(invStrSet(""), -1, inf) => string
string::slice(invStrSet(""), -1, int(0..1)) => string
string::slice(invStrSet(""), -1, int(2..6)) => string
string::slice(invStrSet(""), -1, int(0..inf)) => string
string::slice(invStrSet(""), -2, 0) => ""
string::slice(invStrSet(""), -2, 1) => string
string::slice(invStrSet(""), -2, 2) => string
string::slice(invStrSet(""), -2, 10) => string
string::slice(invStrSet(""), -2, 100) => string
string::slice(invStrSet(""), -2, inf) => string
string::slice(invStrSet(""), -2, int(0..1)) => string
string::slice(invStrSet(""), -2, int(2..6)) => string
string::slice(invStrSet(""), -2, int(0..inf)) => string
string::slice(invStrSet(""), -10, 0) => ""
string::slice(invStrSet(""), -10, 1) => string
string::slice(invStrSet(""), -10, 2) => string
string::slice(invStrSet(""), -10, 10) => string
string::slice(invStrSet(""), -10, 100) => string
string::slice(invStrSet(""), -10, inf) => string
string::slice(invStrSet(""), -10, int(0..1)) => string
string::slice(invStrSet(""), -10, int(2..6)) => string
string::slice(invStrSet(""), -10, int(0..inf)) => string
string::slice(invStrSet(""), -100, 0) => ""
string::slice(invStrSet(""), -100, 1) => string
string::slice(invStrSet(""), -100, 2) => string
string::slice(invStrSet(""), -100, 10) => string
string::slice(invStrSet(""), -100, 100) => string
string::slice(invStrSet(""), -100, inf) => string
string::slice(invStrSet(""), -100, int(0..1)) => string
string::slice(invStrSet(""), -100, int(2..6)) => string
string::slice(invStrSet(""), -100, int(0..inf)) => string
string::slice(invStrSet(""), int(0..1), 0) => ""
string::slice(invStrSet(""), int(0..1), 1) => string
string::slice(invStrSet(""), int(0..1), 2) => string
string::slice(invStrSet(""), int(0..1), 10) => string
string::slice(invStrSet(""), int(0..1), 100) => string
string::slice(invStrSet(""), int(0..1), inf) => string
string::slice(invStrSet(""), int(0..1), int(0..1)) => string
string::slice(invStrSet(""), int(0..1), int(2..6)) => string
string::slice(invStrSet(""), int(0..1), int(0..inf)) => string
string::slice(invStrSet(""), int(2..6), 0) => ""
string::slice(invStrSet(""), int(2..6), 1) => string
string::slice(invStrSet(""), int(2..6), 2) => string
string::slice(invStrSet(""), int(2..6), 10) => string
string::slice(invStrSet(""), int(2..6), 100) => string
string::slice(invStrSet(""), int(2..6), inf) => string
string::slice(invStrSet(""), int(2..6), int(0..1)) => string
string::slice(invStrSet(""), int(2..6), int(2..6)) => string
string::slice(invStrSet(""), int(2..6), int(0..inf)) => string
string::slice(invStrSet(""), int(0..inf), 0) => ""
string::slice(invStrSet(""), int(0..inf), 1) => string
string::slice(invStrSet(""), int(0..inf), 2) => string
string::slice(invStrSet(""), int(0..inf), 10) => string
string::slice(invStrSet(""), int(0..inf), 100) => string
string::slice(invStrSet(""), int(0..inf), inf) => string
string::slice(invStrSet(""), int(0..inf), int(0..1)) => string
string::slice(invStrSet(""), int(0..inf), int(2..6)) => string
string::slice(invStrSet(""), int(0..inf), int(0..inf)) => string
string::slice(invStrSet(""), int(-1..inf), 0) => ""
string::slice(invStrSet(""), int(-1..inf), 1) => string
string::slice(invStrSet(""), int(-1..inf), 2) => string
string::slice(invStrSet(""), int(-1..inf), 10) => string
string::slice(invStrSet(""), int(-1..inf), 100) => string
string::slice(invStrSet(""), int(-1..inf), inf) => string
string::slice(invStrSet(""), int(-1..inf), int(0..1)) => string
string::slice(invStrSet(""), int(-1..inf), int(2..6)) => string
string::slice(invStrSet(""), int(-1..inf), int(0..inf)) => string
string::slice(invStrSet(""), int(-1..1), 0) => ""
string::slice(invStrSet(""), int(-1..1), 1) => string
string::slice(invStrSet(""), int(-1..1), 2) => string
string::slice(invStrSet(""), int(-1..1), 10) => string
string::slice(invStrSet(""), int(-1..1), 100) => string
string::slice(invStrSet(""), int(-1..1), inf) => string
string::slice(invStrSet(""), int(-1..1), int(0..1)) => string
string::slice(invStrSet(""), int(-1..1), int(2..6)) => string
string::slice(invStrSet(""), int(-1..1), int(0..inf)) => string"
`;

exports[`Builtin functions string::startsWith evaluate 1`] = `
"string::startsWith(string, string) => false | true
string::startsWith(string, "") => true
string::startsWith(string, "foo") => false | true
string::startsWith(string, "bar") => false | true
string::startsWith(string, "ðŸ’©") => false | true
string::startsWith(string, "bar" | "foo") => false | true
string::startsWith(string, "baz" | "foo") => false | true
string::startsWith(string, invStrSet("foo")) => false | true
string::startsWith(string, invStrSet("bar" | "foo")) => false | true
string::startsWith(string, invStrSet("bar")) => false | true
string::startsWith(string, invStrSet("")) => false | true
string::startsWith("", string) => false | true
string::startsWith("", "") => true
string::startsWith("", "foo") => false
string::startsWith("", "bar") => false
string::startsWith("", "ðŸ’©") => false
string::startsWith("", "bar" | "foo") => false
string::startsWith("", "baz" | "foo") => false
string::startsWith("", invStrSet("foo")) => false | true
string::startsWith("", invStrSet("bar" | "foo")) => false | true
string::startsWith("", invStrSet("bar")) => false | true
string::startsWith("", invStrSet("")) => false
string::startsWith("foo", string) => false | true
string::startsWith("foo", "") => true
string::startsWith("foo", "foo") => true
string::startsWith("foo", "bar") => false
string::startsWith("foo", "ðŸ’©") => false
string::startsWith("foo", "bar" | "foo") => false | true
string::startsWith("foo", "baz" | "foo") => false | true
string::startsWith("foo", invStrSet("foo")) => false | true
string::startsWith("foo", invStrSet("bar" | "foo")) => false | true
string::startsWith("foo", invStrSet("bar")) => false | true
string::startsWith("foo", invStrSet("")) => false | true
string::startsWith("bar", string) => false | true
string::startsWith("bar", "") => true
string::startsWith("bar", "foo") => false
string::startsWith("bar", "bar") => true
string::startsWith("bar", "ðŸ’©") => false
string::startsWith("bar", "bar" | "foo") => false | true
string::startsWith("bar", "baz" | "foo") => false
string::startsWith("bar", invStrSet("foo")) => false | true
string::startsWith("bar", invStrSet("bar" | "foo")) => false | true
string::startsWith("bar", invStrSet("bar")) => false | true
string::startsWith("bar", invStrSet("")) => false | true
string::startsWith("ðŸ’©", string) => false | true
string::startsWith("ðŸ’©", "") => true
string::startsWith("ðŸ’©", "foo") => false
string::startsWith("ðŸ’©", "bar") => false
string::startsWith("ðŸ’©", "ðŸ’©") => true
string::startsWith("ðŸ’©", "bar" | "foo") => false
string::startsWith("ðŸ’©", "baz" | "foo") => false
string::startsWith("ðŸ’©", invStrSet("foo")) => false | true
string::startsWith("ðŸ’©", invStrSet("bar" | "foo")) => false | true
string::startsWith("ðŸ’©", invStrSet("bar")) => false | true
string::startsWith("ðŸ’©", invStrSet("")) => false | true
string::startsWith("bar" | "foo", string) => false | true
string::startsWith("bar" | "foo", "") => true
string::startsWith("bar" | "foo", "foo") => false | true
string::startsWith("bar" | "foo", "bar") => false | true
string::startsWith("bar" | "foo", "ðŸ’©") => false
string::startsWith("bar" | "foo", "bar" | "foo") => false | true
string::startsWith("bar" | "foo", "baz" | "foo") => false | true
string::startsWith("bar" | "foo", invStrSet("foo")) => false | true
string::startsWith("bar" | "foo", invStrSet("bar" | "foo")) => false | true
string::startsWith("bar" | "foo", invStrSet("bar")) => false | true
string::startsWith("bar" | "foo", invStrSet("")) => false | true
string::startsWith("baz" | "foo", string) => false | true
string::startsWith("baz" | "foo", "") => true
string::startsWith("baz" | "foo", "foo") => false | true
string::startsWith("baz" | "foo", "bar") => false
string::startsWith("baz" | "foo", "ðŸ’©") => false
string::startsWith("baz" | "foo", "bar" | "foo") => false | true
string::startsWith("baz" | "foo", "baz" | "foo") => false | true
string::startsWith("baz" | "foo", invStrSet("foo")) => false | true
string::startsWith("baz" | "foo", invStrSet("bar" | "foo")) => false | true
string::startsWith("baz" | "foo", invStrSet("bar")) => false | true
string::startsWith("baz" | "foo", invStrSet("")) => false | true
string::startsWith(invStrSet("foo"), string) => false | true
string::startsWith(invStrSet("foo"), "") => true
string::startsWith(invStrSet("foo"), "foo") => false | true
string::startsWith(invStrSet("foo"), "bar") => false | true
string::startsWith(invStrSet("foo"), "ðŸ’©") => false | true
string::startsWith(invStrSet("foo"), "bar" | "foo") => false | true
string::startsWith(invStrSet("foo"), "baz" | "foo") => false | true
string::startsWith(invStrSet("foo"), invStrSet("foo")) => false | true
string::startsWith(invStrSet("foo"), invStrSet("bar" | "foo")) => false | true
string::startsWith(invStrSet("foo"), invStrSet("bar")) => false | true
string::startsWith(invStrSet("foo"), invStrSet("")) => false | true
string::startsWith(invStrSet("bar" | "foo"), string) => false | true
string::startsWith(invStrSet("bar" | "foo"), "") => true
string::startsWith(invStrSet("bar" | "foo"), "foo") => false | true
string::startsWith(invStrSet("bar" | "foo"), "bar") => false | true
string::startsWith(invStrSet("bar" | "foo"), "ðŸ’©") => false | true
string::startsWith(invStrSet("bar" | "foo"), "bar" | "foo") => false | true
string::startsWith(invStrSet("bar" | "foo"), "baz" | "foo") => false | true
string::startsWith(invStrSet("bar" | "foo"), invStrSet("foo")) => false | true
string::startsWith(invStrSet("bar" | "foo"), invStrSet("bar" | "foo")) => false | true
string::startsWith(invStrSet("bar" | "foo"), invStrSet("bar")) => false | true
string::startsWith(invStrSet("bar" | "foo"), invStrSet("")) => false | true
string::startsWith(invStrSet("bar"), string) => false | true
string::startsWith(invStrSet("bar"), "") => true
string::startsWith(invStrSet("bar"), "foo") => false | true
string::startsWith(invStrSet("bar"), "bar") => false | true
string::startsWith(invStrSet("bar"), "ðŸ’©") => false | true
string::startsWith(invStrSet("bar"), "bar" | "foo") => false | true
string::startsWith(invStrSet("bar"), "baz" | "foo") => false | true
string::startsWith(invStrSet("bar"), invStrSet("foo")) => false | true
string::startsWith(invStrSet("bar"), invStrSet("bar" | "foo")) => false | true
string::startsWith(invStrSet("bar"), invStrSet("bar")) => false | true
string::startsWith(invStrSet("bar"), invStrSet("")) => false | true
string::startsWith(invStrSet(""), string) => false | true
string::startsWith(invStrSet(""), "") => true
string::startsWith(invStrSet(""), "foo") => false | true
string::startsWith(invStrSet(""), "bar") => false | true
string::startsWith(invStrSet(""), "ðŸ’©") => false | true
string::startsWith(invStrSet(""), "bar" | "foo") => false | true
string::startsWith(invStrSet(""), "baz" | "foo") => false | true
string::startsWith(invStrSet(""), invStrSet("foo")) => false | true
string::startsWith(invStrSet(""), invStrSet("bar" | "foo")) => false | true
string::startsWith(invStrSet(""), invStrSet("bar")) => false | true
string::startsWith(invStrSet(""), invStrSet("")) => false | true"
`;

exports[`Expression evaluation 1`] = `
"never => never
any => any
number => number
-3.14 => -3.14
-2 => -2
-1 => -1
-0.5 => -0.5
0 => 0
0.5 => 0.5
1 => 1
2 => 2
2.78 => 2.78
3 => 3
3.14 => 3.14
10 => 10
100 => 100
-inf => -inf
inf => inf
nan => nan
0..1 => 0..1
0!..1 => 0!..1
0..!1 => 0..!1
0..2 => 0..2
0!..!2 => 0!..!2
0.5..1.5 => 0.5..1.5
0.5..2.5 => 0.5..2.5
0.5!..2.5 => 0.5!..2.5
0.5..!2.5 => 0.5..!2.5
-2.56..3.35 => -2.56..3.35
0.5..0.75 => 0.5..0.75
1..2 => 1..2
0..inf => 0..inf
0!..inf => 0!..inf
0..!inf => 0..!inf
0!..!inf => 0!..!inf
1..inf => 1..inf
1!..inf => 1!..inf
1..!inf => 1..!inf
2..inf => 2..inf
2!..inf => 2!..inf
2.5..inf => 2.5..inf
-inf..0 => -inf..0
-inf..inf => -inf..inf
-inf!..inf => -inf!..inf
-inf..!inf => -inf..!inf
-inf!..!inf => -inf!..!inf
int(0..1) => int(0..1)
int(0..2) => int(0..2)
int(1..2) => int(1..2)
int(5..20) => int(5..20)
int(-20..-5) => int(-20..-5)
int(-10..10) => int(-10..10)
int(0..inf) => int(0..inf)
int(1..inf) => int(1..inf)
int(-inf..0) => int(-inf..0)
int(-inf..1) => int(-inf..1)
int(-inf..inf) => int(-inf..inf)
nonInt(0..1) => nonInt(0..1)
nonInt(0..2) => nonInt(0..2)
nonInt(-1..2) => nonInt(-1..2)
nonInt(0..inf) => nonInt(0..inf)
nonInt(-1..inf) => nonInt(-1..inf)
nonInt(-inf..0) => nonInt(-inf..0)
nonInt(-inf..1) => nonInt(-inf..1)
nonInt(-inf..inf) => nonInt(-inf..inf)
1 | int(3..4) => 1 | int(3..4)
string => string
"" => ""
"foo" => "foo"
"bar" => "bar"
"ðŸ’©" => "ðŸ’©"
"bar" | "foo" => "bar" | "foo"
"baz" | "foo" => "baz" | "foo"
invStrSet("foo") => invStrSet("foo")
invStrSet("bar" | "foo") => invStrSet("bar" | "foo")
invStrSet("bar") => invStrSet("bar")
invStrSet("") => invStrSet("")
never | any => any
never | number => number
never | -3.14 => -3.14
never | -2 => -2
never | -1 => -1
never | -0.5 => -0.5
never | 0 => 0
never | 0.5 => 0.5
never | 1 => 1
never | 2 => 2
never | 2.78 => 2.78
never | 3 => 3
never | 3.14 => 3.14
never | 10 => 10
never | 100 => 100
never | -inf => -inf
never | inf => inf
never | nan => nan
never | 0..1 => 0..1
never | 0!..1 => 0!..1
never | 0..!1 => 0..!1
never | 0..2 => 0..2
never | 0!..!2 => 0!..!2
never | 0.5..1.5 => 0.5..1.5
never | 0.5..2.5 => 0.5..2.5
never | 0.5!..2.5 => 0.5!..2.5
never | 0.5..!2.5 => 0.5..!2.5
never | -2.56..3.35 => -2.56..3.35
never | 0.5..0.75 => 0.5..0.75
never | 1..2 => 1..2
never | 0..inf => 0..inf
never | 0!..inf => 0!..inf
never | 0..!inf => 0..!inf
never | 0!..!inf => 0!..!inf
never | 1..inf => 1..inf
never | 1!..inf => 1!..inf
never | 1..!inf => 1..!inf
never | 2..inf => 2..inf
never | 2!..inf => 2!..inf
never | 2.5..inf => 2.5..inf
never | -inf..0 => -inf..0
never | -inf..inf => -inf..inf
never | -inf!..inf => -inf!..inf
never | -inf..!inf => -inf..!inf
never | -inf!..!inf => -inf!..!inf
never | int(0..1) => int(0..1)
never | int(0..2) => int(0..2)
never | int(1..2) => int(1..2)
never | int(5..20) => int(5..20)
never | int(-20..-5) => int(-20..-5)
never | int(-10..10) => int(-10..10)
never | int(0..inf) => int(0..inf)
never | int(1..inf) => int(1..inf)
never | int(-inf..0) => int(-inf..0)
never | int(-inf..1) => int(-inf..1)
never | int(-inf..inf) => int(-inf..inf)
never | nonInt(0..1) => nonInt(0..1)
never | nonInt(0..2) => nonInt(0..2)
never | nonInt(-1..2) => nonInt(-1..2)
never | nonInt(0..inf) => nonInt(0..inf)
never | nonInt(-1..inf) => nonInt(-1..inf)
never | nonInt(-inf..0) => nonInt(-inf..0)
never | nonInt(-inf..1) => nonInt(-inf..1)
never | nonInt(-inf..inf) => nonInt(-inf..inf)
never | (1 | int(3..4)) => 1 | int(3..4)
never | string => string
never | "" => ""
never | "foo" => "foo"
never | "bar" => "bar"
never | "ðŸ’©" => "ðŸ’©"
never | ("bar" | "foo") => "bar" | "foo"
never | ("baz" | "foo") => "baz" | "foo"
never | invStrSet("foo") => invStrSet("foo")
never | invStrSet("bar" | "foo") => invStrSet("bar" | "foo")
never | invStrSet("bar") => invStrSet("bar")
never | invStrSet("") => invStrSet("")
any | number => any
any | -3.14 => any
any | -2 => any
any | -1 => any
any | -0.5 => any
any | 0 => any
any | 0.5 => any
any | 1 => any
any | 2 => any
any | 2.78 => any
any | 3 => any
any | 3.14 => any
any | 10 => any
any | 100 => any
any | -inf => any
any | inf => any
any | nan => any
any | 0..1 => any
any | 0!..1 => any
any | 0..!1 => any
any | 0..2 => any
any | 0!..!2 => any
any | 0.5..1.5 => any
any | 0.5..2.5 => any
any | 0.5!..2.5 => any
any | 0.5..!2.5 => any
any | -2.56..3.35 => any
any | 0.5..0.75 => any
any | 1..2 => any
any | 0..inf => any
any | 0!..inf => any
any | 0..!inf => any
any | 0!..!inf => any
any | 1..inf => any
any | 1!..inf => any
any | 1..!inf => any
any | 2..inf => any
any | 2!..inf => any
any | 2.5..inf => any
any | -inf..0 => any
any | -inf..inf => any
any | -inf!..inf => any
any | -inf..!inf => any
any | -inf!..!inf => any
any | int(0..1) => any
any | int(0..2) => any
any | int(1..2) => any
any | int(5..20) => any
any | int(-20..-5) => any
any | int(-10..10) => any
any | int(0..inf) => any
any | int(1..inf) => any
any | int(-inf..0) => any
any | int(-inf..1) => any
any | int(-inf..inf) => any
any | nonInt(0..1) => any
any | nonInt(0..2) => any
any | nonInt(-1..2) => any
any | nonInt(0..inf) => any
any | nonInt(-1..inf) => any
any | nonInt(-inf..0) => any
any | nonInt(-inf..1) => any
any | nonInt(-inf..inf) => any
any | (1 | int(3..4)) => any
any | string => any
any | "" => any
any | "foo" => any
any | "bar" => any
any | "ðŸ’©" => any
any | ("bar" | "foo") => any
any | ("baz" | "foo") => any
any | invStrSet("foo") => any
any | invStrSet("bar" | "foo") => any
any | invStrSet("bar") => any
any | invStrSet("") => any
number | -3.14 => number
number | -2 => number
number | -1 => number
number | -0.5 => number
number | 0 => number
number | 0.5 => number
number | 1 => number
number | 2 => number
number | 2.78 => number
number | 3 => number
number | 3.14 => number
number | 10 => number
number | 100 => number
number | -inf => number
number | inf => number
number | nan => number
number | 0..1 => number
number | 0!..1 => number
number | 0..!1 => number
number | 0..2 => number
number | 0!..!2 => number
number | 0.5..1.5 => number
number | 0.5..2.5 => number
number | 0.5!..2.5 => number
number | 0.5..!2.5 => number
number | -2.56..3.35 => number
number | 0.5..0.75 => number
number | 1..2 => number
number | 0..inf => number
number | 0!..inf => number
number | 0..!inf => number
number | 0!..!inf => number
number | 1..inf => number
number | 1!..inf => number
number | 1..!inf => number
number | 2..inf => number
number | 2!..inf => number
number | 2.5..inf => number
number | -inf..0 => number
number | -inf..inf => number
number | -inf!..inf => number
number | -inf..!inf => number
number | -inf!..!inf => number
number | int(0..1) => number
number | int(0..2) => number
number | int(1..2) => number
number | int(5..20) => number
number | int(-20..-5) => number
number | int(-10..10) => number
number | int(0..inf) => number
number | int(1..inf) => number
number | int(-inf..0) => number
number | int(-inf..1) => number
number | int(-inf..inf) => number
number | nonInt(0..1) => number
number | nonInt(0..2) => number
number | nonInt(-1..2) => number
number | nonInt(0..inf) => number
number | nonInt(-1..inf) => number
number | nonInt(-inf..0) => number
number | nonInt(-inf..1) => number
number | nonInt(-inf..inf) => number
number | (1 | int(3..4)) => number
number | string => number | string
number | "" => number | ""
number | "foo" => number | "foo"
number | "bar" => number | "bar"
number | "ðŸ’©" => number | "ðŸ’©"
number | ("bar" | "foo") => number | "bar" | "foo"
number | ("baz" | "foo") => number | "baz" | "foo"
number | invStrSet("foo") => number | invStrSet("foo")
number | invStrSet("bar" | "foo") => number | invStrSet("bar" | "foo")
number | invStrSet("bar") => number | invStrSet("bar")
number | invStrSet("") => number | invStrSet("")
-3.14 | -2 => -3.14 | -2
-3.14 | -1 => -3.14 | -1
-3.14 | -0.5 => -3.14 | -0.5
-3.14 | 0 => -3.14 | 0
-3.14 | 0.5 => -3.14 | 0.5
-3.14 | 1 => -3.14 | 1
-3.14 | 2 => -3.14 | 2
-3.14 | 2.78 => -3.14 | 2.78
-3.14 | 3 => -3.14 | 3
-3.14 | 3.14 => -3.14 | 3.14
-3.14 | 10 => -3.14 | 10
-3.14 | 100 => -3.14 | 100
-3.14 | -inf => -inf | -3.14
-3.14 | inf => -3.14 | inf
-3.14 | nan => -3.14 | nan
-3.14 | 0..1 => -3.14 | 0..1
-3.14 | 0!..1 => -3.14 | 0!..1
-3.14 | 0..!1 => -3.14 | 0..!1
-3.14 | 0..2 => -3.14 | 0..2
-3.14 | 0!..!2 => -3.14 | 0!..!2
-3.14 | 0.5..1.5 => -3.14 | 0.5..1.5
-3.14 | 0.5..2.5 => -3.14 | 0.5..2.5
-3.14 | 0.5!..2.5 => -3.14 | 0.5!..2.5
-3.14 | 0.5..!2.5 => -3.14 | 0.5..!2.5
-3.14 | -2.56..3.35 => -3.14 | -2.56..3.35
-3.14 | 0.5..0.75 => -3.14 | 0.5..0.75
-3.14 | 1..2 => -3.14 | 1..2
-3.14 | 0..inf => -3.14 | 0..inf
-3.14 | 0!..inf => -3.14 | 0!..inf
-3.14 | 0..!inf => -3.14 | 0..!inf
-3.14 | 0!..!inf => -3.14 | 0!..!inf
-3.14 | 1..inf => -3.14 | 1..inf
-3.14 | 1!..inf => -3.14 | 1!..inf
-3.14 | 1..!inf => -3.14 | 1..!inf
-3.14 | 2..inf => -3.14 | 2..inf
-3.14 | 2!..inf => -3.14 | 2!..inf
-3.14 | 2.5..inf => -3.14 | 2.5..inf
-3.14 | -inf..0 => -inf..0
-3.14 | -inf..inf => -inf..inf
-3.14 | -inf!..inf => -inf!..inf
-3.14 | -inf..!inf => -inf..!inf
-3.14 | -inf!..!inf => -inf!..!inf
-3.14 | int(0..1) => -3.14 | int(0..1)
-3.14 | int(0..2) => -3.14 | int(0..2)
-3.14 | int(1..2) => -3.14 | int(1..2)
-3.14 | int(5..20) => -3.14 | int(5..20)
-3.14 | int(-20..-5) => int(-20..-5) | -3.14
-3.14 | int(-10..10) => int(-10..10) | -3.14
-3.14 | int(0..inf) => -3.14 | int(0..inf)
-3.14 | int(1..inf) => -3.14 | int(1..inf)
-3.14 | int(-inf..0) => int(-inf..0) | -3.14
-3.14 | int(-inf..1) => int(-inf..1) | -3.14
-3.14 | int(-inf..inf) => int(-inf..inf) | -3.14
-3.14 | nonInt(0..1) => -3.14 | nonInt(0..1)
-3.14 | nonInt(0..2) => -3.14 | nonInt(0..2)
-3.14 | nonInt(-1..2) => -3.14 | nonInt(-1..2)
-3.14 | nonInt(0..inf) => -3.14 | nonInt(0..inf)
-3.14 | nonInt(-1..inf) => -3.14 | nonInt(-1..inf)
-3.14 | nonInt(-inf..0) => nonInt(-inf..0)
-3.14 | nonInt(-inf..1) => nonInt(-inf..1)
-3.14 | nonInt(-inf..inf) => nonInt(-inf..inf)
-3.14 | (1 | int(3..4)) => -3.14 | 1 | int(3..4)
-3.14 | string => -3.14 | string
-3.14 | "" => -3.14 | ""
-3.14 | "foo" => -3.14 | "foo"
-3.14 | "bar" => -3.14 | "bar"
-3.14 | "ðŸ’©" => -3.14 | "ðŸ’©"
-3.14 | ("bar" | "foo") => -3.14 | "bar" | "foo"
-3.14 | ("baz" | "foo") => -3.14 | "baz" | "foo"
-3.14 | invStrSet("foo") => -3.14 | invStrSet("foo")
-3.14 | invStrSet("bar" | "foo") => -3.14 | invStrSet("bar" | "foo")
-3.14 | invStrSet("bar") => -3.14 | invStrSet("bar")
-3.14 | invStrSet("") => -3.14 | invStrSet("")
-2 | -1 => int(-2..-1)
-2 | -0.5 => -2 | -0.5
-2 | 0 => -2 | 0
-2 | 0.5 => -2 | 0.5
-2 | 1 => -2 | 1
-2 | 2 => -2 | 2
-2 | 2.78 => -2 | 2.78
-2 | 3 => -2 | 3
-2 | 3.14 => -2 | 3.14
-2 | 10 => -2 | 10
-2 | 100 => -2 | 100
-2 | -inf => -inf | -2
-2 | inf => -2 | inf
-2 | nan => -2 | nan
-2 | 0..1 => -2 | 0..1
-2 | 0!..1 => -2 | 0!..1
-2 | 0..!1 => -2 | 0..!1
-2 | 0..2 => -2 | 0..2
-2 | 0!..!2 => -2 | 0!..!2
-2 | 0.5..1.5 => -2 | 0.5..1.5
-2 | 0.5..2.5 => -2 | 0.5..2.5
-2 | 0.5!..2.5 => -2 | 0.5!..2.5
-2 | 0.5..!2.5 => -2 | 0.5..!2.5
-2 | -2.56..3.35 => -2.56..3.35
-2 | 0.5..0.75 => -2 | 0.5..0.75
-2 | 1..2 => -2 | 1..2
-2 | 0..inf => -2 | 0..inf
-2 | 0!..inf => -2 | 0!..inf
-2 | 0..!inf => -2 | 0..!inf
-2 | 0!..!inf => -2 | 0!..!inf
-2 | 1..inf => -2 | 1..inf
-2 | 1!..inf => -2 | 1!..inf
-2 | 1..!inf => -2 | 1..!inf
-2 | 2..inf => -2 | 2..inf
-2 | 2!..inf => -2 | 2!..inf
-2 | 2.5..inf => -2 | 2.5..inf
-2 | -inf..0 => -inf..0
-2 | -inf..inf => -inf..inf
-2 | -inf!..inf => -inf!..inf
-2 | -inf..!inf => -inf..!inf
-2 | -inf!..!inf => -inf!..!inf
-2 | int(0..1) => -2 | int(0..1)
-2 | int(0..2) => -2 | int(0..2)
-2 | int(1..2) => -2 | int(1..2)
-2 | int(5..20) => -2 | int(5..20)
-2 | int(-20..-5) => int(-20..-5) | -2
-2 | int(-10..10) => int(-10..10)
-2 | int(0..inf) => -2 | int(0..inf)
-2 | int(1..inf) => -2 | int(1..inf)
-2 | int(-inf..0) => int(-inf..0)
-2 | int(-inf..1) => int(-inf..1)
-2 | int(-inf..inf) => int(-inf..inf)
-2 | nonInt(0..1) => -2 | nonInt(0..1)
-2 | nonInt(0..2) => -2 | nonInt(0..2)
-2 | nonInt(-1..2) => -2 | nonInt(-1..2)
-2 | nonInt(0..inf) => -2 | nonInt(0..inf)
-2 | nonInt(-1..inf) => -2 | nonInt(-1..inf)
-2 | nonInt(-inf..0) => nonInt(-inf..-3) | -3!..!-1 | nonInt(-1..0)
-2 | nonInt(-inf..1) => nonInt(-inf..-3) | -3!..!-1 | nonInt(-1..1)
-2 | nonInt(-inf..inf) => nonInt(-inf..-3) | -3!..!-1 | nonInt(-1..inf)
-2 | (1 | int(3..4)) => -2 | 1 | int(3..4)
-2 | string => -2 | string
-2 | "" => -2 | ""
-2 | "foo" => -2 | "foo"
-2 | "bar" => -2 | "bar"
-2 | "ðŸ’©" => -2 | "ðŸ’©"
-2 | ("bar" | "foo") => -2 | "bar" | "foo"
-2 | ("baz" | "foo") => -2 | "baz" | "foo"
-2 | invStrSet("foo") => -2 | invStrSet("foo")
-2 | invStrSet("bar" | "foo") => -2 | invStrSet("bar" | "foo")
-2 | invStrSet("bar") => -2 | invStrSet("bar")
-2 | invStrSet("") => -2 | invStrSet("")
-1 | -0.5 => -1 | -0.5
-1 | 0 => int(-1..0)
-1 | 0.5 => -1 | 0.5
-1 | 1 => -1 | 1
-1 | 2 => -1 | 2
-1 | 2.78 => -1 | 2.78
-1 | 3 => -1 | 3
-1 | 3.14 => -1 | 3.14
-1 | 10 => -1 | 10
-1 | 100 => -1 | 100
-1 | -inf => -inf | -1
-1 | inf => -1 | inf
-1 | nan => -1 | nan
-1 | 0..1 => -1 | 0..1
-1 | 0!..1 => -1 | 0!..1
-1 | 0..!1 => -1 | 0..!1
-1 | 0..2 => -1 | 0..2
-1 | 0!..!2 => -1 | 0!..!2
-1 | 0.5..1.5 => -1 | 0.5..1.5
-1 | 0.5..2.5 => -1 | 0.5..2.5
-1 | 0.5!..2.5 => -1 | 0.5!..2.5
-1 | 0.5..!2.5 => -1 | 0.5..!2.5
-1 | -2.56..3.35 => -2.56..3.35
-1 | 0.5..0.75 => -1 | 0.5..0.75
-1 | 1..2 => -1 | 1..2
-1 | 0..inf => -1 | 0..inf
-1 | 0!..inf => -1 | 0!..inf
-1 | 0..!inf => -1 | 0..!inf
-1 | 0!..!inf => -1 | 0!..!inf
-1 | 1..inf => -1 | 1..inf
-1 | 1!..inf => -1 | 1!..inf
-1 | 1..!inf => -1 | 1..!inf
-1 | 2..inf => -1 | 2..inf
-1 | 2!..inf => -1 | 2!..inf
-1 | 2.5..inf => -1 | 2.5..inf
-1 | -inf..0 => -inf..0
-1 | -inf..inf => -inf..inf
-1 | -inf!..inf => -inf!..inf
-1 | -inf..!inf => -inf..!inf
-1 | -inf!..!inf => -inf!..!inf
-1 | int(0..1) => int(-1..1)
-1 | int(0..2) => int(-1..2)
-1 | int(1..2) => -1 | int(1..2)
-1 | int(5..20) => -1 | int(5..20)
-1 | int(-20..-5) => int(-20..-5) | -1
-1 | int(-10..10) => int(-10..10)
-1 | int(0..inf) => int(-1..inf)
-1 | int(1..inf) => -1 | int(1..inf)
-1 | int(-inf..0) => int(-inf..0)
-1 | int(-inf..1) => int(-inf..1)
-1 | int(-inf..inf) => int(-inf..inf)
-1 | nonInt(0..1) => -1 | nonInt(0..1)
-1 | nonInt(0..2) => -1 | nonInt(0..2)
-1 | nonInt(-1..2) => -1..!0 | nonInt(0..2)
-1 | nonInt(0..inf) => -1 | nonInt(0..inf)
-1 | nonInt(-1..inf) => -1..!0 | nonInt(0..inf)
-1 | nonInt(-inf..0) => nonInt(-inf..-2) | -2!..!0
-1 | nonInt(-inf..1) => nonInt(-inf..-2) | -2!..!0 | nonInt(0..1)
-1 | nonInt(-inf..inf) => nonInt(-inf..-2) | -2!..!0 | nonInt(0..inf)
-1 | (1 | int(3..4)) => -1 | 1 | int(3..4)
-1 | string => -1 | string
-1 | "" => -1 | ""
-1 | "foo" => -1 | "foo"
-1 | "bar" => -1 | "bar"
-1 | "ðŸ’©" => -1 | "ðŸ’©"
-1 | ("bar" | "foo") => -1 | "bar" | "foo"
-1 | ("baz" | "foo") => -1 | "baz" | "foo"
-1 | invStrSet("foo") => -1 | invStrSet("foo")
-1 | invStrSet("bar" | "foo") => -1 | invStrSet("bar" | "foo")
-1 | invStrSet("bar") => -1 | invStrSet("bar")
-1 | invStrSet("") => -1 | invStrSet("")
-0.5 | 0 => -0.5 | 0
-0.5 | 0.5 => -0.5 | 0.5
-0.5 | 1 => -0.5 | 1
-0.5 | 2 => -0.5 | 2
-0.5 | 2.78 => -0.5 | 2.78
-0.5 | 3 => -0.5 | 3
-0.5 | 3.14 => -0.5 | 3.14
-0.5 | 10 => -0.5 | 10
-0.5 | 100 => -0.5 | 100
-0.5 | -inf => -inf | -0.5
-0.5 | inf => -0.5 | inf
-0.5 | nan => -0.5 | nan
-0.5 | 0..1 => -0.5 | 0..1
-0.5 | 0!..1 => -0.5 | 0!..1
-0.5 | 0..!1 => -0.5 | 0..!1
-0.5 | 0..2 => -0.5 | 0..2
-0.5 | 0!..!2 => -0.5 | 0!..!2
-0.5 | 0.5..1.5 => -0.5 | 0.5..1.5
-0.5 | 0.5..2.5 => -0.5 | 0.5..2.5
-0.5 | 0.5!..2.5 => -0.5 | 0.5!..2.5
-0.5 | 0.5..!2.5 => -0.5 | 0.5..!2.5
-0.5 | -2.56..3.35 => -2.56..3.35
-0.5 | 0.5..0.75 => -0.5 | 0.5..0.75
-0.5 | 1..2 => -0.5 | 1..2
-0.5 | 0..inf => -0.5 | 0..inf
-0.5 | 0!..inf => -0.5 | 0!..inf
-0.5 | 0..!inf => -0.5 | 0..!inf
-0.5 | 0!..!inf => -0.5 | 0!..!inf
-0.5 | 1..inf => -0.5 | 1..inf
-0.5 | 1!..inf => -0.5 | 1!..inf
-0.5 | 1..!inf => -0.5 | 1..!inf
-0.5 | 2..inf => -0.5 | 2..inf
-0.5 | 2!..inf => -0.5 | 2!..inf
-0.5 | 2.5..inf => -0.5 | 2.5..inf
-0.5 | -inf..0 => -inf..0
-0.5 | -inf..inf => -inf..inf
-0.5 | -inf!..inf => -inf!..inf
-0.5 | -inf..!inf => -inf..!inf
-0.5 | -inf!..!inf => -inf!..!inf
-0.5 | int(0..1) => -0.5 | int(0..1)
-0.5 | int(0..2) => -0.5 | int(0..2)
-0.5 | int(1..2) => -0.5 | int(1..2)
-0.5 | int(5..20) => -0.5 | int(5..20)
-0.5 | int(-20..-5) => int(-20..-5) | -0.5
-0.5 | int(-10..10) => int(-10..10) | -0.5
-0.5 | int(0..inf) => -0.5 | int(0..inf)
-0.5 | int(1..inf) => -0.5 | int(1..inf)
-0.5 | int(-inf..0) => int(-inf..0) | -0.5
-0.5 | int(-inf..1) => int(-inf..1) | -0.5
-0.5 | int(-inf..inf) => int(-inf..inf) | -0.5
-0.5 | nonInt(0..1) => -0.5 | nonInt(0..1)
-0.5 | nonInt(0..2) => -0.5 | nonInt(0..2)
-0.5 | nonInt(-1..2) => nonInt(-1..2)
-0.5 | nonInt(0..inf) => -0.5 | nonInt(0..inf)
-0.5 | nonInt(-1..inf) => nonInt(-1..inf)
-0.5 | nonInt(-inf..0) => nonInt(-inf..0)
-0.5 | nonInt(-inf..1) => nonInt(-inf..1)
-0.5 | nonInt(-inf..inf) => nonInt(-inf..inf)
-0.5 | (1 | int(3..4)) => -0.5 | 1 | int(3..4)
-0.5 | string => -0.5 | string
-0.5 | "" => -0.5 | ""
-0.5 | "foo" => -0.5 | "foo"
-0.5 | "bar" => -0.5 | "bar"
-0.5 | "ðŸ’©" => -0.5 | "ðŸ’©"
-0.5 | ("bar" | "foo") => -0.5 | "bar" | "foo"
-0.5 | ("baz" | "foo") => -0.5 | "baz" | "foo"
-0.5 | invStrSet("foo") => -0.5 | invStrSet("foo")
-0.5 | invStrSet("bar" | "foo") => -0.5 | invStrSet("bar" | "foo")
-0.5 | invStrSet("bar") => -0.5 | invStrSet("bar")
-0.5 | invStrSet("") => -0.5 | invStrSet("")
0 | 0.5 => 0 | 0.5
0 | 1 => int(0..1)
0 | 2 => 0 | 2
0 | 2.78 => 0 | 2.78
0 | 3 => 0 | 3
0 | 3.14 => 0 | 3.14
0 | 10 => 0 | 10
0 | 100 => 0 | 100
0 | -inf => -inf | 0
0 | inf => 0 | inf
0 | nan => 0 | nan
0 | 0..1 => 0..1
0 | 0!..1 => 0..1
0 | 0..!1 => 0..!1
0 | 0..2 => 0..2
0 | 0!..!2 => 0..!2
0 | 0.5..1.5 => 0 | 0.5..1.5
0 | 0.5..2.5 => 0 | 0.5..2.5
0 | 0.5!..2.5 => 0 | 0.5!..2.5
0 | 0.5..!2.5 => 0 | 0.5..!2.5
0 | -2.56..3.35 => -2.56..3.35
0 | 0.5..0.75 => 0 | 0.5..0.75
0 | 1..2 => 0 | 1..2
0 | 0..inf => 0..inf
0 | 0!..inf => 0..inf
0 | 0..!inf => 0..!inf
0 | 0!..!inf => 0..!inf
0 | 1..inf => 0 | 1..inf
0 | 1!..inf => 0 | 1!..inf
0 | 1..!inf => 0 | 1..!inf
0 | 2..inf => 0 | 2..inf
0 | 2!..inf => 0 | 2!..inf
0 | 2.5..inf => 0 | 2.5..inf
0 | -inf..0 => -inf..0
0 | -inf..inf => -inf..inf
0 | -inf!..inf => -inf!..inf
0 | -inf..!inf => -inf..!inf
0 | -inf!..!inf => -inf!..!inf
0 | int(0..1) => int(0..1)
0 | int(0..2) => int(0..2)
0 | int(1..2) => int(0..2)
0 | int(5..20) => 0 | int(5..20)
0 | int(-20..-5) => int(-20..-5) | 0
0 | int(-10..10) => int(-10..10)
0 | int(0..inf) => int(0..inf)
0 | int(1..inf) => int(0..inf)
0 | int(-inf..0) => int(-inf..0)
0 | int(-inf..1) => int(-inf..1)
0 | int(-inf..inf) => int(-inf..inf)
0 | nonInt(0..1) => 0..!1
0 | nonInt(0..2) => 0..!1 | nonInt(1..2)
0 | nonInt(-1..2) => -1!..!1 | nonInt(1..2)
0 | nonInt(0..inf) => 0..!1 | nonInt(1..inf)
0 | nonInt(-1..inf) => -1!..!1 | nonInt(1..inf)
0 | nonInt(-inf..0) => nonInt(-inf..-1) | -1!..0
0 | nonInt(-inf..1) => nonInt(-inf..-1) | -1!..!1
0 | nonInt(-inf..inf) => nonInt(-inf..-1) | -1!..!1 | nonInt(1..inf)
0 | (1 | int(3..4)) => int(0..1) | int(3..4)
0 | string => 0 | string
0 | "" => 0 | ""
0 | "foo" => 0 | "foo"
0 | "bar" => 0 | "bar"
0 | "ðŸ’©" => 0 | "ðŸ’©"
0 | ("bar" | "foo") => 0 | "bar" | "foo"
0 | ("baz" | "foo") => 0 | "baz" | "foo"
0 | invStrSet("foo") => 0 | invStrSet("foo")
0 | invStrSet("bar" | "foo") => 0 | invStrSet("bar" | "foo")
0 | invStrSet("bar") => 0 | invStrSet("bar")
0 | invStrSet("") => 0 | invStrSet("")
0.5 | 1 => 0.5 | 1
0.5 | 2 => 0.5 | 2
0.5 | 2.78 => 0.5 | 2.78
0.5 | 3 => 0.5 | 3
0.5 | 3.14 => 0.5 | 3.14
0.5 | 10 => 0.5 | 10
0.5 | 100 => 0.5 | 100
0.5 | -inf => -inf | 0.5
0.5 | inf => 0.5 | inf
0.5 | nan => 0.5 | nan
0.5 | 0..1 => 0..1
0.5 | 0!..1 => 0!..1
0.5 | 0..!1 => 0..!1
0.5 | 0..2 => 0..2
0.5 | 0!..!2 => 0!..!2
0.5 | 0.5..1.5 => 0.5..1.5
0.5 | 0.5..2.5 => 0.5..2.5
0.5 | 0.5!..2.5 => 0.5..2.5
0.5 | 0.5..!2.5 => 0.5..!2.5
0.5 | -2.56..3.35 => -2.56..3.35
0.5 | 0.5..0.75 => 0.5..0.75
0.5 | 1..2 => 0.5 | 1..2
0.5 | 0..inf => 0..inf
0.5 | 0!..inf => 0!..inf
0.5 | 0..!inf => 0..!inf
0.5 | 0!..!inf => 0!..!inf
0.5 | 1..inf => 0.5 | 1..inf
0.5 | 1!..inf => 0.5 | 1!..inf
0.5 | 1..!inf => 0.5 | 1..!inf
0.5 | 2..inf => 0.5 | 2..inf
0.5 | 2!..inf => 0.5 | 2!..inf
0.5 | 2.5..inf => 0.5 | 2.5..inf
0.5 | -inf..0 => -inf..0 | 0.5
0.5 | -inf..inf => -inf..inf
0.5 | -inf!..inf => -inf!..inf
0.5 | -inf..!inf => -inf..!inf
0.5 | -inf!..!inf => -inf!..!inf
0.5 | int(0..1) => int(0..1) | 0.5
0.5 | int(0..2) => int(0..2) | 0.5
0.5 | int(1..2) => 0.5 | int(1..2)
0.5 | int(5..20) => 0.5 | int(5..20)
0.5 | int(-20..-5) => int(-20..-5) | 0.5
0.5 | int(-10..10) => int(-10..10) | 0.5
0.5 | int(0..inf) => int(0..inf) | 0.5
0.5 | int(1..inf) => 0.5 | int(1..inf)
0.5 | int(-inf..0) => int(-inf..0) | 0.5
0.5 | int(-inf..1) => int(-inf..1) | 0.5
0.5 | int(-inf..inf) => int(-inf..inf) | 0.5
0.5 | nonInt(0..1) => nonInt(0..1)
0.5 | nonInt(0..2) => nonInt(0..2)
0.5 | nonInt(-1..2) => nonInt(-1..2)
0.5 | nonInt(0..inf) => nonInt(0..inf)
0.5 | nonInt(-1..inf) => nonInt(-1..inf)
0.5 | nonInt(-inf..0) => nonInt(-inf..0) | 0.5
0.5 | nonInt(-inf..1) => nonInt(-inf..1)
0.5 | nonInt(-inf..inf) => nonInt(-inf..inf)
0.5 | (1 | int(3..4)) => 0.5 | 1 | int(3..4)
0.5 | string => 0.5 | string
0.5 | "" => 0.5 | ""
0.5 | "foo" => 0.5 | "foo"
0.5 | "bar" => 0.5 | "bar"
0.5 | "ðŸ’©" => 0.5 | "ðŸ’©"
0.5 | ("bar" | "foo") => 0.5 | "bar" | "foo"
0.5 | ("baz" | "foo") => 0.5 | "baz" | "foo"
0.5 | invStrSet("foo") => 0.5 | invStrSet("foo")
0.5 | invStrSet("bar" | "foo") => 0.5 | invStrSet("bar" | "foo")
0.5 | invStrSet("bar") => 0.5 | invStrSet("bar")
0.5 | invStrSet("") => 0.5 | invStrSet("")
1 | 2 => int(1..2)
1 | 2.78 => 1 | 2.78
1 | 3 => 1 | 3
1 | 3.14 => 1 | 3.14
1 | 10 => 1 | 10
1 | 100 => 1 | 100
1 | -inf => -inf | 1
1 | inf => 1 | inf
1 | nan => 1 | nan
1 | 0..1 => 0..1
1 | 0!..1 => 0!..1
1 | 0..!1 => 0..1
1 | 0..2 => 0..2
1 | 0!..!2 => 0!..!2
1 | 0.5..1.5 => 0.5..1.5
1 | 0.5..2.5 => 0.5..2.5
1 | 0.5!..2.5 => 0.5!..2.5
1 | 0.5..!2.5 => 0.5..!2.5
1 | -2.56..3.35 => -2.56..3.35
1 | 0.5..0.75 => 0.5..0.75 | 1
1 | 1..2 => 1..2
1 | 0..inf => 0..inf
1 | 0!..inf => 0!..inf
1 | 0..!inf => 0..!inf
1 | 0!..!inf => 0!..!inf
1 | 1..inf => 1..inf
1 | 1!..inf => 1..inf
1 | 1..!inf => 1..!inf
1 | 2..inf => 1 | 2..inf
1 | 2!..inf => 1 | 2!..inf
1 | 2.5..inf => 1 | 2.5..inf
1 | -inf..0 => -inf..0 | 1
1 | -inf..inf => -inf..inf
1 | -inf!..inf => -inf!..inf
1 | -inf..!inf => -inf..!inf
1 | -inf!..!inf => -inf!..!inf
1 | int(0..1) => int(0..1)
1 | int(0..2) => int(0..2)
1 | int(1..2) => int(1..2)
1 | int(5..20) => 1 | int(5..20)
1 | int(-20..-5) => int(-20..-5) | 1
1 | int(-10..10) => int(-10..10)
1 | int(0..inf) => int(0..inf)
1 | int(1..inf) => int(1..inf)
1 | int(-inf..0) => int(-inf..1)
1 | int(-inf..1) => int(-inf..1)
1 | int(-inf..inf) => int(-inf..inf)
1 | nonInt(0..1) => 0!..1
1 | nonInt(0..2) => 0!..!2
1 | nonInt(-1..2) => nonInt(-1..0) | 0!..!2
1 | nonInt(0..inf) => 0!..!2 | nonInt(2..inf)
1 | nonInt(-1..inf) => nonInt(-1..0) | 0!..!2 | nonInt(2..inf)
1 | nonInt(-inf..0) => nonInt(-inf..0) | 1
1 | nonInt(-inf..1) => nonInt(-inf..0) | 0!..1
1 | nonInt(-inf..inf) => nonInt(-inf..0) | 0!..!2 | nonInt(2..inf)
1 | (1 | int(3..4)) => 1 | int(3..4)
1 | string => 1 | string
1 | "" => 1 | ""
1 | "foo" => 1 | "foo"
1 | "bar" => 1 | "bar"
1 | "ðŸ’©" => 1 | "ðŸ’©"
1 | ("bar" | "foo") => 1 | "bar" | "foo"
1 | ("baz" | "foo") => 1 | "baz" | "foo"
1 | invStrSet("foo") => 1 | invStrSet("foo")
1 | invStrSet("bar" | "foo") => 1 | invStrSet("bar" | "foo")
1 | invStrSet("bar") => 1 | invStrSet("bar")
1 | invStrSet("") => 1 | invStrSet("")
2 | 2.78 => 2 | 2.78
2 | 3 => int(2..3)
2 | 3.14 => 2 | 3.14
2 | 10 => 2 | 10
2 | 100 => 2 | 100
2 | -inf => -inf | 2
2 | inf => 2 | inf
2 | nan => 2 | nan
2 | 0..1 => 0..1 | 2
2 | 0!..1 => 0!..1 | 2
2 | 0..!1 => 0..!1 | 2
2 | 0..2 => 0..2
2 | 0!..!2 => 0!..2
2 | 0.5..1.5 => 0.5..1.5 | 2
2 | 0.5..2.5 => 0.5..2.5
2 | 0.5!..2.5 => 0.5!..2.5
2 | 0.5..!2.5 => 0.5..!2.5
2 | -2.56..3.35 => -2.56..3.35
2 | 0.5..0.75 => 0.5..0.75 | 2
2 | 1..2 => 1..2
2 | 0..inf => 0..inf
2 | 0!..inf => 0!..inf
2 | 0..!inf => 0..!inf
2 | 0!..!inf => 0!..!inf
2 | 1..inf => 1..inf
2 | 1!..inf => 1!..inf
2 | 1..!inf => 1..!inf
2 | 2..inf => 2..inf
2 | 2!..inf => 2..inf
2 | 2.5..inf => 2 | 2.5..inf
2 | -inf..0 => -inf..0 | 2
2 | -inf..inf => -inf..inf
2 | -inf!..inf => -inf!..inf
2 | -inf..!inf => -inf..!inf
2 | -inf!..!inf => -inf!..!inf
2 | int(0..1) => int(0..2)
2 | int(0..2) => int(0..2)
2 | int(1..2) => int(1..2)
2 | int(5..20) => 2 | int(5..20)
2 | int(-20..-5) => int(-20..-5) | 2
2 | int(-10..10) => int(-10..10)
2 | int(0..inf) => int(0..inf)
2 | int(1..inf) => int(1..inf)
2 | int(-inf..0) => int(-inf..0) | 2
2 | int(-inf..1) => int(-inf..2)
2 | int(-inf..inf) => int(-inf..inf)
2 | nonInt(0..1) => nonInt(0..1) | 2
2 | nonInt(0..2) => nonInt(0..1) | 1!..2
2 | nonInt(-1..2) => nonInt(-1..1) | 1!..2
2 | nonInt(0..inf) => nonInt(0..1) | 1!..!3 | nonInt(3..inf)
2 | nonInt(-1..inf) => nonInt(-1..1) | 1!..!3 | nonInt(3..inf)
2 | nonInt(-inf..0) => nonInt(-inf..0) | 2
2 | nonInt(-inf..1) => nonInt(-inf..1) | 2
2 | nonInt(-inf..inf) => nonInt(-inf..1) | 1!..!3 | nonInt(3..inf)
2 | (1 | int(3..4)) => int(1..4)
2 | string => 2 | string
2 | "" => 2 | ""
2 | "foo" => 2 | "foo"
2 | "bar" => 2 | "bar"
2 | "ðŸ’©" => 2 | "ðŸ’©"
2 | ("bar" | "foo") => 2 | "bar" | "foo"
2 | ("baz" | "foo") => 2 | "baz" | "foo"
2 | invStrSet("foo") => 2 | invStrSet("foo")
2 | invStrSet("bar" | "foo") => 2 | invStrSet("bar" | "foo")
2 | invStrSet("bar") => 2 | invStrSet("bar")
2 | invStrSet("") => 2 | invStrSet("")
2.78 | 3 => 2.78 | 3
2.78 | 3.14 => 2.78 | 3.14
2.78 | 10 => 2.78 | 10
2.78 | 100 => 2.78 | 100
2.78 | -inf => -inf | 2.78
2.78 | inf => 2.78 | inf
2.78 | nan => 2.78 | nan
2.78 | 0..1 => 0..1 | 2.78
2.78 | 0!..1 => 0!..1 | 2.78
2.78 | 0..!1 => 0..!1 | 2.78
2.78 | 0..2 => 0..2 | 2.78
2.78 | 0!..!2 => 0!..!2 | 2.78
2.78 | 0.5..1.5 => 0.5..1.5 | 2.78
2.78 | 0.5..2.5 => 0.5..2.5 | 2.78
2.78 | 0.5!..2.5 => 0.5!..2.5 | 2.78
2.78 | 0.5..!2.5 => 0.5..!2.5 | 2.78
2.78 | -2.56..3.35 => -2.56..3.35
2.78 | 0.5..0.75 => 0.5..0.75 | 2.78
2.78 | 1..2 => 1..2 | 2.78
2.78 | 0..inf => 0..inf
2.78 | 0!..inf => 0!..inf
2.78 | 0..!inf => 0..!inf
2.78 | 0!..!inf => 0!..!inf
2.78 | 1..inf => 1..inf
2.78 | 1!..inf => 1!..inf
2.78 | 1..!inf => 1..!inf
2.78 | 2..inf => 2..inf
2.78 | 2!..inf => 2!..inf
2.78 | 2.5..inf => 2.5..inf
2.78 | -inf..0 => -inf..0 | 2.78
2.78 | -inf..inf => -inf..inf
2.78 | -inf!..inf => -inf!..inf
2.78 | -inf..!inf => -inf..!inf
2.78 | -inf!..!inf => -inf!..!inf
2.78 | int(0..1) => int(0..1) | 2.78
2.78 | int(0..2) => int(0..2) | 2.78
2.78 | int(1..2) => int(1..2) | 2.78
2.78 | int(5..20) => 2.78 | int(5..20)
2.78 | int(-20..-5) => int(-20..-5) | 2.78
2.78 | int(-10..10) => int(-10..10) | 2.78
2.78 | int(0..inf) => int(0..inf) | 2.78
2.78 | int(1..inf) => int(1..inf) | 2.78
2.78 | int(-inf..0) => int(-inf..0) | 2.78
2.78 | int(-inf..1) => int(-inf..1) | 2.78
2.78 | int(-inf..inf) => int(-inf..inf) | 2.78
2.78 | nonInt(0..1) => nonInt(0..1) | 2.78
2.78 | nonInt(0..2) => nonInt(0..2) | 2.78
2.78 | nonInt(-1..2) => nonInt(-1..2) | 2.78
2.78 | nonInt(0..inf) => nonInt(0..inf)
2.78 | nonInt(-1..inf) => nonInt(-1..inf)
2.78 | nonInt(-inf..0) => nonInt(-inf..0) | 2.78
2.78 | nonInt(-inf..1) => nonInt(-inf..1) | 2.78
2.78 | nonInt(-inf..inf) => nonInt(-inf..inf)
2.78 | (1 | int(3..4)) => 1 | 2.78 | int(3..4)
2.78 | string => 2.78 | string
2.78 | "" => 2.78 | ""
2.78 | "foo" => 2.78 | "foo"
2.78 | "bar" => 2.78 | "bar"
2.78 | "ðŸ’©" => 2.78 | "ðŸ’©"
2.78 | ("bar" | "foo") => 2.78 | "bar" | "foo"
2.78 | ("baz" | "foo") => 2.78 | "baz" | "foo"
2.78 | invStrSet("foo") => 2.78 | invStrSet("foo")
2.78 | invStrSet("bar" | "foo") => 2.78 | invStrSet("bar" | "foo")
2.78 | invStrSet("bar") => 2.78 | invStrSet("bar")
2.78 | invStrSet("") => 2.78 | invStrSet("")
3 | 3.14 => 3 | 3.14
3 | 10 => 3 | 10
3 | 100 => 3 | 100
3 | -inf => -inf | 3
3 | inf => 3 | inf
3 | nan => 3 | nan
3 | 0..1 => 0..1 | 3
3 | 0!..1 => 0!..1 | 3
3 | 0..!1 => 0..!1 | 3
3 | 0..2 => 0..2 | 3
3 | 0!..!2 => 0!..!2 | 3
3 | 0.5..1.5 => 0.5..1.5 | 3
3 | 0.5..2.5 => 0.5..2.5 | 3
3 | 0.5!..2.5 => 0.5!..2.5 | 3
3 | 0.5..!2.5 => 0.5..!2.5 | 3
3 | -2.56..3.35 => -2.56..3.35
3 | 0.5..0.75 => 0.5..0.75 | 3
3 | 1..2 => 1..2 | 3
3 | 0..inf => 0..inf
3 | 0!..inf => 0!..inf
3 | 0..!inf => 0..!inf
3 | 0!..!inf => 0!..!inf
3 | 1..inf => 1..inf
3 | 1!..inf => 1!..inf
3 | 1..!inf => 1..!inf
3 | 2..inf => 2..inf
3 | 2!..inf => 2!..inf
3 | 2.5..inf => 2.5..inf
3 | -inf..0 => -inf..0 | 3
3 | -inf..inf => -inf..inf
3 | -inf!..inf => -inf!..inf
3 | -inf..!inf => -inf..!inf
3 | -inf!..!inf => -inf!..!inf
3 | int(0..1) => int(0..1) | 3
3 | int(0..2) => int(0..3)
3 | int(1..2) => int(1..3)
3 | int(5..20) => 3 | int(5..20)
3 | int(-20..-5) => int(-20..-5) | 3
3 | int(-10..10) => int(-10..10)
3 | int(0..inf) => int(0..inf)
3 | int(1..inf) => int(1..inf)
3 | int(-inf..0) => int(-inf..0) | 3
3 | int(-inf..1) => int(-inf..1) | 3
3 | int(-inf..inf) => int(-inf..inf)
3 | nonInt(0..1) => nonInt(0..1) | 3
3 | nonInt(0..2) => nonInt(0..2) | 3
3 | nonInt(-1..2) => nonInt(-1..2) | 3
3 | nonInt(0..inf) => nonInt(0..2) | 2!..!4 | nonInt(4..inf)
3 | nonInt(-1..inf) => nonInt(-1..2) | 2!..!4 | nonInt(4..inf)
3 | nonInt(-inf..0) => nonInt(-inf..0) | 3
3 | nonInt(-inf..1) => nonInt(-inf..1) | 3
3 | nonInt(-inf..inf) => nonInt(-inf..2) | 2!..!4 | nonInt(4..inf)
3 | (1 | int(3..4)) => 1 | int(3..4)
3 | string => 3 | string
3 | "" => 3 | ""
3 | "foo" => 3 | "foo"
3 | "bar" => 3 | "bar"
3 | "ðŸ’©" => 3 | "ðŸ’©"
3 | ("bar" | "foo") => 3 | "bar" | "foo"
3 | ("baz" | "foo") => 3 | "baz" | "foo"
3 | invStrSet("foo") => 3 | invStrSet("foo")
3 | invStrSet("bar" | "foo") => 3 | invStrSet("bar" | "foo")
3 | invStrSet("bar") => 3 | invStrSet("bar")
3 | invStrSet("") => 3 | invStrSet("")
3.14 | 10 => 3.14 | 10
3.14 | 100 => 3.14 | 100
3.14 | -inf => -inf | 3.14
3.14 | inf => 3.14 | inf
3.14 | nan => 3.14 | nan
3.14 | 0..1 => 0..1 | 3.14
3.14 | 0!..1 => 0!..1 | 3.14
3.14 | 0..!1 => 0..!1 | 3.14
3.14 | 0..2 => 0..2 | 3.14
3.14 | 0!..!2 => 0!..!2 | 3.14
3.14 | 0.5..1.5 => 0.5..1.5 | 3.14
3.14 | 0.5..2.5 => 0.5..2.5 | 3.14
3.14 | 0.5!..2.5 => 0.5!..2.5 | 3.14
3.14 | 0.5..!2.5 => 0.5..!2.5 | 3.14
3.14 | -2.56..3.35 => -2.56..3.35
3.14 | 0.5..0.75 => 0.5..0.75 | 3.14
3.14 | 1..2 => 1..2 | 3.14
3.14 | 0..inf => 0..inf
3.14 | 0!..inf => 0!..inf
3.14 | 0..!inf => 0..!inf
3.14 | 0!..!inf => 0!..!inf
3.14 | 1..inf => 1..inf
3.14 | 1!..inf => 1!..inf
3.14 | 1..!inf => 1..!inf
3.14 | 2..inf => 2..inf
3.14 | 2!..inf => 2!..inf
3.14 | 2.5..inf => 2.5..inf
3.14 | -inf..0 => -inf..0 | 3.14
3.14 | -inf..inf => -inf..inf
3.14 | -inf!..inf => -inf!..inf
3.14 | -inf..!inf => -inf..!inf
3.14 | -inf!..!inf => -inf!..!inf
3.14 | int(0..1) => int(0..1) | 3.14
3.14 | int(0..2) => int(0..2) | 3.14
3.14 | int(1..2) => int(1..2) | 3.14
3.14 | int(5..20) => 3.14 | int(5..20)
3.14 | int(-20..-5) => int(-20..-5) | 3.14
3.14 | int(-10..10) => int(-10..10) | 3.14
3.14 | int(0..inf) => int(0..inf) | 3.14
3.14 | int(1..inf) => int(1..inf) | 3.14
3.14 | int(-inf..0) => int(-inf..0) | 3.14
3.14 | int(-inf..1) => int(-inf..1) | 3.14
3.14 | int(-inf..inf) => int(-inf..inf) | 3.14
3.14 | nonInt(0..1) => nonInt(0..1) | 3.14
3.14 | nonInt(0..2) => nonInt(0..2) | 3.14
3.14 | nonInt(-1..2) => nonInt(-1..2) | 3.14
3.14 | nonInt(0..inf) => nonInt(0..inf)
3.14 | nonInt(-1..inf) => nonInt(-1..inf)
3.14 | nonInt(-inf..0) => nonInt(-inf..0) | 3.14
3.14 | nonInt(-inf..1) => nonInt(-inf..1) | 3.14
3.14 | nonInt(-inf..inf) => nonInt(-inf..inf)
3.14 | (1 | int(3..4)) => 1 | int(3..4) | 3.14
3.14 | string => 3.14 | string
3.14 | "" => 3.14 | ""
3.14 | "foo" => 3.14 | "foo"
3.14 | "bar" => 3.14 | "bar"
3.14 | "ðŸ’©" => 3.14 | "ðŸ’©"
3.14 | ("bar" | "foo") => 3.14 | "bar" | "foo"
3.14 | ("baz" | "foo") => 3.14 | "baz" | "foo"
3.14 | invStrSet("foo") => 3.14 | invStrSet("foo")
3.14 | invStrSet("bar" | "foo") => 3.14 | invStrSet("bar" | "foo")
3.14 | invStrSet("bar") => 3.14 | invStrSet("bar")
3.14 | invStrSet("") => 3.14 | invStrSet("")
10 | 100 => 10 | 100
10 | -inf => -inf | 10
10 | inf => 10 | inf
10 | nan => 10 | nan
10 | 0..1 => 0..1 | 10
10 | 0!..1 => 0!..1 | 10
10 | 0..!1 => 0..!1 | 10
10 | 0..2 => 0..2 | 10
10 | 0!..!2 => 0!..!2 | 10
10 | 0.5..1.5 => 0.5..1.5 | 10
10 | 0.5..2.5 => 0.5..2.5 | 10
10 | 0.5!..2.5 => 0.5!..2.5 | 10
10 | 0.5..!2.5 => 0.5..!2.5 | 10
10 | -2.56..3.35 => -2.56..3.35 | 10
10 | 0.5..0.75 => 0.5..0.75 | 10
10 | 1..2 => 1..2 | 10
10 | 0..inf => 0..inf
10 | 0!..inf => 0!..inf
10 | 0..!inf => 0..!inf
10 | 0!..!inf => 0!..!inf
10 | 1..inf => 1..inf
10 | 1!..inf => 1!..inf
10 | 1..!inf => 1..!inf
10 | 2..inf => 2..inf
10 | 2!..inf => 2!..inf
10 | 2.5..inf => 2.5..inf
10 | -inf..0 => -inf..0 | 10
10 | -inf..inf => -inf..inf
10 | -inf!..inf => -inf!..inf
10 | -inf..!inf => -inf..!inf
10 | -inf!..!inf => -inf!..!inf
10 | int(0..1) => int(0..1) | 10
10 | int(0..2) => int(0..2) | 10
10 | int(1..2) => int(1..2) | 10
10 | int(5..20) => int(5..20)
10 | int(-20..-5) => int(-20..-5) | 10
10 | int(-10..10) => int(-10..10)
10 | int(0..inf) => int(0..inf)
10 | int(1..inf) => int(1..inf)
10 | int(-inf..0) => int(-inf..0) | 10
10 | int(-inf..1) => int(-inf..1) | 10
10 | int(-inf..inf) => int(-inf..inf)
10 | nonInt(0..1) => nonInt(0..1) | 10
10 | nonInt(0..2) => nonInt(0..2) | 10
10 | nonInt(-1..2) => nonInt(-1..2) | 10
10 | nonInt(0..inf) => nonInt(0..9) | 9!..!11 | nonInt(11..inf)
10 | nonInt(-1..inf) => nonInt(-1..9) | 9!..!11 | nonInt(11..inf)
10 | nonInt(-inf..0) => nonInt(-inf..0) | 10
10 | nonInt(-inf..1) => nonInt(-inf..1) | 10
10 | nonInt(-inf..inf) => nonInt(-inf..9) | 9!..!11 | nonInt(11..inf)
10 | (1 | int(3..4)) => 1 | int(3..4) | 10
10 | string => 10 | string
10 | "" => 10 | ""
10 | "foo" => 10 | "foo"
10 | "bar" => 10 | "bar"
10 | "ðŸ’©" => 10 | "ðŸ’©"
10 | ("bar" | "foo") => 10 | "bar" | "foo"
10 | ("baz" | "foo") => 10 | "baz" | "foo"
10 | invStrSet("foo") => 10 | invStrSet("foo")
10 | invStrSet("bar" | "foo") => 10 | invStrSet("bar" | "foo")
10 | invStrSet("bar") => 10 | invStrSet("bar")
10 | invStrSet("") => 10 | invStrSet("")
100 | -inf => -inf | 100
100 | inf => 100 | inf
100 | nan => 100 | nan
100 | 0..1 => 0..1 | 100
100 | 0!..1 => 0!..1 | 100
100 | 0..!1 => 0..!1 | 100
100 | 0..2 => 0..2 | 100
100 | 0!..!2 => 0!..!2 | 100
100 | 0.5..1.5 => 0.5..1.5 | 100
100 | 0.5..2.5 => 0.5..2.5 | 100
100 | 0.5!..2.5 => 0.5!..2.5 | 100
100 | 0.5..!2.5 => 0.5..!2.5 | 100
100 | -2.56..3.35 => -2.56..3.35 | 100
100 | 0.5..0.75 => 0.5..0.75 | 100
100 | 1..2 => 1..2 | 100
100 | 0..inf => 0..inf
100 | 0!..inf => 0!..inf
100 | 0..!inf => 0..!inf
100 | 0!..!inf => 0!..!inf
100 | 1..inf => 1..inf
100 | 1!..inf => 1!..inf
100 | 1..!inf => 1..!inf
100 | 2..inf => 2..inf
100 | 2!..inf => 2!..inf
100 | 2.5..inf => 2.5..inf
100 | -inf..0 => -inf..0 | 100
100 | -inf..inf => -inf..inf
100 | -inf!..inf => -inf!..inf
100 | -inf..!inf => -inf..!inf
100 | -inf!..!inf => -inf!..!inf
100 | int(0..1) => int(0..1) | 100
100 | int(0..2) => int(0..2) | 100
100 | int(1..2) => int(1..2) | 100
100 | int(5..20) => int(5..20) | 100
100 | int(-20..-5) => int(-20..-5) | 100
100 | int(-10..10) => int(-10..10) | 100
100 | int(0..inf) => int(0..inf)
100 | int(1..inf) => int(1..inf)
100 | int(-inf..0) => int(-inf..0) | 100
100 | int(-inf..1) => int(-inf..1) | 100
100 | int(-inf..inf) => int(-inf..inf)
100 | nonInt(0..1) => nonInt(0..1) | 100
100 | nonInt(0..2) => nonInt(0..2) | 100
100 | nonInt(-1..2) => nonInt(-1..2) | 100
100 | nonInt(0..inf) => nonInt(0..99) | 99!..!101 | nonInt(101..inf)
100 | nonInt(-1..inf) => nonInt(-1..99) | 99!..!101 | nonInt(101..inf)
100 | nonInt(-inf..0) => nonInt(-inf..0) | 100
100 | nonInt(-inf..1) => nonInt(-inf..1) | 100
100 | nonInt(-inf..inf) => nonInt(-inf..99) | 99!..!101 | nonInt(101..inf)
100 | (1 | int(3..4)) => 1 | int(3..4) | 100
100 | string => 100 | string
100 | "" => 100 | ""
100 | "foo" => 100 | "foo"
100 | "bar" => 100 | "bar"
100 | "ðŸ’©" => 100 | "ðŸ’©"
100 | ("bar" | "foo") => 100 | "bar" | "foo"
100 | ("baz" | "foo") => 100 | "baz" | "foo"
100 | invStrSet("foo") => 100 | invStrSet("foo")
100 | invStrSet("bar" | "foo") => 100 | invStrSet("bar" | "foo")
100 | invStrSet("bar") => 100 | invStrSet("bar")
100 | invStrSet("") => 100 | invStrSet("")
-inf | inf => -inf | inf
-inf | nan => -inf | nan
-inf | 0..1 => -inf | 0..1
-inf | 0!..1 => -inf | 0!..1
-inf | 0..!1 => -inf | 0..!1
-inf | 0..2 => -inf | 0..2
-inf | 0!..!2 => -inf | 0!..!2
-inf | 0.5..1.5 => -inf | 0.5..1.5
-inf | 0.5..2.5 => -inf | 0.5..2.5
-inf | 0.5!..2.5 => -inf | 0.5!..2.5
-inf | 0.5..!2.5 => -inf | 0.5..!2.5
-inf | -2.56..3.35 => -inf | -2.56..3.35
-inf | 0.5..0.75 => -inf | 0.5..0.75
-inf | 1..2 => -inf | 1..2
-inf | 0..inf => -inf | 0..inf
-inf | 0!..inf => -inf | 0!..inf
-inf | 0..!inf => -inf | 0..!inf
-inf | 0!..!inf => -inf | 0!..!inf
-inf | 1..inf => -inf | 1..inf
-inf | 1!..inf => -inf | 1!..inf
-inf | 1..!inf => -inf | 1..!inf
-inf | 2..inf => -inf | 2..inf
-inf | 2!..inf => -inf | 2!..inf
-inf | 2.5..inf => -inf | 2.5..inf
-inf | -inf..0 => -inf..0
-inf | -inf..inf => -inf..inf
-inf | -inf!..inf => -inf..inf
-inf | -inf..!inf => -inf..!inf
-inf | -inf!..!inf => -inf..!inf
-inf | int(0..1) => -inf | int(0..1)
-inf | int(0..2) => -inf | int(0..2)
-inf | int(1..2) => -inf | int(1..2)
-inf | int(5..20) => -inf | int(5..20)
-inf | int(-20..-5) => -inf | int(-20..-5)
-inf | int(-10..10) => -inf | int(-10..10)
-inf | int(0..inf) => -inf | int(0..inf)
-inf | int(1..inf) => -inf | int(1..inf)
-inf | int(-inf..0) => -inf | int(-inf..0)
-inf | int(-inf..1) => -inf | int(-inf..1)
-inf | int(-inf..inf) => -inf | int(-inf..inf)
-inf | nonInt(0..1) => -inf | nonInt(0..1)
-inf | nonInt(0..2) => -inf | nonInt(0..2)
-inf | nonInt(-1..2) => -inf | nonInt(-1..2)
-inf | nonInt(0..inf) => -inf | nonInt(0..inf)
-inf | nonInt(-1..inf) => -inf | nonInt(-1..inf)
-inf | nonInt(-inf..0) => -inf | nonInt(-inf..0)
-inf | nonInt(-inf..1) => -inf | nonInt(-inf..1)
-inf | nonInt(-inf..inf) => -inf | nonInt(-inf..inf)
-inf | (1 | int(3..4)) => -inf | 1 | int(3..4)
-inf | string => -inf | string
-inf | "" => -inf | ""
-inf | "foo" => -inf | "foo"
-inf | "bar" => -inf | "bar"
-inf | "ðŸ’©" => -inf | "ðŸ’©"
-inf | ("bar" | "foo") => -inf | "bar" | "foo"
-inf | ("baz" | "foo") => -inf | "baz" | "foo"
-inf | invStrSet("foo") => -inf | invStrSet("foo")
-inf | invStrSet("bar" | "foo") => -inf | invStrSet("bar" | "foo")
-inf | invStrSet("bar") => -inf | invStrSet("bar")
-inf | invStrSet("") => -inf | invStrSet("")
inf | nan => inf | nan
inf | 0..1 => 0..1 | inf
inf | 0!..1 => 0!..1 | inf
inf | 0..!1 => 0..!1 | inf
inf | 0..2 => 0..2 | inf
inf | 0!..!2 => 0!..!2 | inf
inf | 0.5..1.5 => 0.5..1.5 | inf
inf | 0.5..2.5 => 0.5..2.5 | inf
inf | 0.5!..2.5 => 0.5!..2.5 | inf
inf | 0.5..!2.5 => 0.5..!2.5 | inf
inf | -2.56..3.35 => -2.56..3.35 | inf
inf | 0.5..0.75 => 0.5..0.75 | inf
inf | 1..2 => 1..2 | inf
inf | 0..inf => 0..inf
inf | 0!..inf => 0!..inf
inf | 0..!inf => 0..inf
inf | 0!..!inf => 0!..inf
inf | 1..inf => 1..inf
inf | 1!..inf => 1!..inf
inf | 1..!inf => 1..inf
inf | 2..inf => 2..inf
inf | 2!..inf => 2!..inf
inf | 2.5..inf => 2.5..inf
inf | -inf..0 => -inf..0 | inf
inf | -inf..inf => -inf..inf
inf | -inf!..inf => -inf!..inf
inf | -inf..!inf => -inf..inf
inf | -inf!..!inf => -inf!..inf
inf | int(0..1) => int(0..1) | inf
inf | int(0..2) => int(0..2) | inf
inf | int(1..2) => int(1..2) | inf
inf | int(5..20) => int(5..20) | inf
inf | int(-20..-5) => int(-20..-5) | inf
inf | int(-10..10) => int(-10..10) | inf
inf | int(0..inf) => int(0..inf) | inf
inf | int(1..inf) => int(1..inf) | inf
inf | int(-inf..0) => int(-inf..0) | inf
inf | int(-inf..1) => int(-inf..1) | inf
inf | int(-inf..inf) => int(-inf..inf) | inf
inf | nonInt(0..1) => nonInt(0..1) | inf
inf | nonInt(0..2) => nonInt(0..2) | inf
inf | nonInt(-1..2) => nonInt(-1..2) | inf
inf | nonInt(0..inf) => nonInt(0..inf) | inf
inf | nonInt(-1..inf) => nonInt(-1..inf) | inf
inf | nonInt(-inf..0) => nonInt(-inf..0) | inf
inf | nonInt(-inf..1) => nonInt(-inf..1) | inf
inf | nonInt(-inf..inf) => nonInt(-inf..inf) | inf
inf | (1 | int(3..4)) => 1 | int(3..4) | inf
inf | string => inf | string
inf | "" => inf | ""
inf | "foo" => inf | "foo"
inf | "bar" => inf | "bar"
inf | "ðŸ’©" => inf | "ðŸ’©"
inf | ("bar" | "foo") => inf | "bar" | "foo"
inf | ("baz" | "foo") => inf | "baz" | "foo"
inf | invStrSet("foo") => inf | invStrSet("foo")
inf | invStrSet("bar" | "foo") => inf | invStrSet("bar" | "foo")
inf | invStrSet("bar") => inf | invStrSet("bar")
inf | invStrSet("") => inf | invStrSet("")
nan | 0..1 => 0..1 | nan
nan | 0!..1 => 0!..1 | nan
nan | 0..!1 => 0..!1 | nan
nan | 0..2 => 0..2 | nan
nan | 0!..!2 => 0!..!2 | nan
nan | 0.5..1.5 => 0.5..1.5 | nan
nan | 0.5..2.5 => 0.5..2.5 | nan
nan | 0.5!..2.5 => 0.5!..2.5 | nan
nan | 0.5..!2.5 => 0.5..!2.5 | nan
nan | -2.56..3.35 => -2.56..3.35 | nan
nan | 0.5..0.75 => 0.5..0.75 | nan
nan | 1..2 => 1..2 | nan
nan | 0..inf => 0..inf | nan
nan | 0!..inf => 0!..inf | nan
nan | 0..!inf => 0..!inf | nan
nan | 0!..!inf => 0!..!inf | nan
nan | 1..inf => 1..inf | nan
nan | 1!..inf => 1!..inf | nan
nan | 1..!inf => 1..!inf | nan
nan | 2..inf => 2..inf | nan
nan | 2!..inf => 2!..inf | nan
nan | 2.5..inf => 2.5..inf | nan
nan | -inf..0 => -inf..0 | nan
nan | -inf..inf => number
nan | -inf!..inf => -inf!..inf | nan
nan | -inf..!inf => -inf..!inf | nan
nan | -inf!..!inf => -inf!..!inf | nan
nan | int(0..1) => int(0..1) | nan
nan | int(0..2) => int(0..2) | nan
nan | int(1..2) => int(1..2) | nan
nan | int(5..20) => int(5..20) | nan
nan | int(-20..-5) => int(-20..-5) | nan
nan | int(-10..10) => int(-10..10) | nan
nan | int(0..inf) => int(0..inf) | nan
nan | int(1..inf) => int(1..inf) | nan
nan | int(-inf..0) => int(-inf..0) | nan
nan | int(-inf..1) => int(-inf..1) | nan
nan | int(-inf..inf) => int(-inf..inf) | nan
nan | nonInt(0..1) => nonInt(0..1) | nan
nan | nonInt(0..2) => nonInt(0..2) | nan
nan | nonInt(-1..2) => nonInt(-1..2) | nan
nan | nonInt(0..inf) => nonInt(0..inf) | nan
nan | nonInt(-1..inf) => nonInt(-1..inf) | nan
nan | nonInt(-inf..0) => nonInt(-inf..0) | nan
nan | nonInt(-inf..1) => nonInt(-inf..1) | nan
nan | nonInt(-inf..inf) => nonInt(-inf..inf) | nan
nan | (1 | int(3..4)) => 1 | int(3..4) | nan
nan | string => nan | string
nan | "" => nan | ""
nan | "foo" => nan | "foo"
nan | "bar" => nan | "bar"
nan | "ðŸ’©" => nan | "ðŸ’©"
nan | ("bar" | "foo") => nan | "bar" | "foo"
nan | ("baz" | "foo") => nan | "baz" | "foo"
nan | invStrSet("foo") => nan | invStrSet("foo")
nan | invStrSet("bar" | "foo") => nan | invStrSet("bar" | "foo")
nan | invStrSet("bar") => nan | invStrSet("bar")
nan | invStrSet("") => nan | invStrSet("")
0..1 | 0!..1 => 0..1
0..1 | 0..!1 => 0..1
0..1 | 0..2 => 0..2
0..1 | 0!..!2 => 0..!2
0..1 | 0.5..1.5 => 0..1.5
0..1 | 0.5..2.5 => 0..2.5
0..1 | 0.5!..2.5 => 0..2.5
0..1 | 0.5..!2.5 => 0..!2.5
0..1 | -2.56..3.35 => -2.56..3.35
0..1 | 0.5..0.75 => 0..1
0..1 | 1..2 => 0..2
0..1 | 0..inf => 0..inf
0..1 | 0!..inf => 0..inf
0..1 | 0..!inf => 0..!inf
0..1 | 0!..!inf => 0..!inf
0..1 | 1..inf => 0..inf
0..1 | 1!..inf => 0..inf
0..1 | 1..!inf => 0..!inf
0..1 | 2..inf => 0..1 | 2..inf
0..1 | 2!..inf => 0..1 | 2!..inf
0..1 | 2.5..inf => 0..1 | 2.5..inf
0..1 | -inf..0 => -inf..1
0..1 | -inf..inf => -inf..inf
0..1 | -inf!..inf => -inf!..inf
0..1 | -inf..!inf => -inf..!inf
0..1 | -inf!..!inf => -inf!..!inf
0..1 | int(0..1) => 0..1
0..1 | int(0..2) => 0..1 | 2
0..1 | int(1..2) => 0..1 | 2
0..1 | int(5..20) => 0..1 | int(5..20)
0..1 | int(-20..-5) => int(-20..-5) | 0..1
0..1 | int(-10..10) => int(-10..-1) | 0..1 | int(2..10)
0..1 | int(0..inf) => 0..1 | int(2..inf)
0..1 | int(1..inf) => 0..1 | int(2..inf)
0..1 | int(-inf..0) => int(-inf..-1) | 0..1
0..1 | int(-inf..1) => int(-inf..-1) | 0..1
0..1 | int(-inf..inf) => int(-inf..-1) | 0..1 | int(2..inf)
0..1 | nonInt(0..1) => 0..1
0..1 | nonInt(0..2) => 0..!2
0..1 | nonInt(-1..2) => -1!..!2
0..1 | nonInt(0..inf) => 0..!2 | nonInt(2..inf)
0..1 | nonInt(-1..inf) => -1!..!2 | nonInt(2..inf)
0..1 | nonInt(-inf..0) => nonInt(-inf..-1) | -1!..1
0..1 | nonInt(-inf..1) => nonInt(-inf..-1) | -1!..1
0..1 | nonInt(-inf..inf) => nonInt(-inf..-1) | -1!..!2 | nonInt(2..inf)
0..1 | (1 | int(3..4)) => 0..1 | int(3..4)
0..1 | string => 0..1 | string
0..1 | "" => 0..1 | ""
0..1 | "foo" => 0..1 | "foo"
0..1 | "bar" => 0..1 | "bar"
0..1 | "ðŸ’©" => 0..1 | "ðŸ’©"
0..1 | ("bar" | "foo") => 0..1 | "bar" | "foo"
0..1 | ("baz" | "foo") => 0..1 | "baz" | "foo"
0..1 | invStrSet("foo") => 0..1 | invStrSet("foo")
0..1 | invStrSet("bar" | "foo") => 0..1 | invStrSet("bar" | "foo")
0..1 | invStrSet("bar") => 0..1 | invStrSet("bar")
0..1 | invStrSet("") => 0..1 | invStrSet("")
0!..1 | 0..!1 => 0..1
0!..1 | 0..2 => 0..2
0!..1 | 0!..!2 => 0!..!2
0!..1 | 0.5..1.5 => 0!..1.5
0!..1 | 0.5..2.5 => 0!..2.5
0!..1 | 0.5!..2.5 => 0!..2.5
0!..1 | 0.5..!2.5 => 0!..!2.5
0!..1 | -2.56..3.35 => -2.56..3.35
0!..1 | 0.5..0.75 => 0!..1
0!..1 | 1..2 => 0!..2
0!..1 | 0..inf => 0..inf
0!..1 | 0!..inf => 0!..inf
0!..1 | 0..!inf => 0..!inf
0!..1 | 0!..!inf => 0!..!inf
0!..1 | 1..inf => 0!..inf
0!..1 | 1!..inf => 0!..inf
0!..1 | 1..!inf => 0!..!inf
0!..1 | 2..inf => 0!..1 | 2..inf
0!..1 | 2!..inf => 0!..1 | 2!..inf
0!..1 | 2.5..inf => 0!..1 | 2.5..inf
0!..1 | -inf..0 => -inf..1
0!..1 | -inf..inf => -inf..inf
0!..1 | -inf!..inf => -inf!..inf
0!..1 | -inf..!inf => -inf..!inf
0!..1 | -inf!..!inf => -inf!..!inf
0!..1 | int(0..1) => 0..1
0!..1 | int(0..2) => 0..1 | 2
0!..1 | int(1..2) => 0!..1 | 2
0!..1 | int(5..20) => 0!..1 | int(5..20)
0!..1 | int(-20..-5) => int(-20..-5) | 0!..1
0!..1 | int(-10..10) => int(-10..-1) | 0..1 | int(2..10)
0!..1 | int(0..inf) => 0..1 | int(2..inf)
0!..1 | int(1..inf) => 0!..1 | int(2..inf)
0!..1 | int(-inf..0) => int(-inf..-1) | 0..1
0!..1 | int(-inf..1) => int(-inf..-1) | 0..1
0!..1 | int(-inf..inf) => int(-inf..-1) | 0..1 | int(2..inf)
0!..1 | nonInt(0..1) => 0!..1
0!..1 | nonInt(0..2) => 0!..!2
0!..1 | nonInt(-1..2) => nonInt(-1..0) | 0!..!2
0!..1 | nonInt(0..inf) => 0!..!2 | nonInt(2..inf)
0!..1 | nonInt(-1..inf) => nonInt(-1..0) | 0!..!2 | nonInt(2..inf)
0!..1 | nonInt(-inf..0) => nonInt(-inf..0) | 0!..1
0!..1 | nonInt(-inf..1) => nonInt(-inf..0) | 0!..1
0!..1 | nonInt(-inf..inf) => nonInt(-inf..0) | 0!..!2 | nonInt(2..inf)
0!..1 | (1 | int(3..4)) => 0!..1 | int(3..4)
0!..1 | string => 0!..1 | string
0!..1 | "" => 0!..1 | ""
0!..1 | "foo" => 0!..1 | "foo"
0!..1 | "bar" => 0!..1 | "bar"
0!..1 | "ðŸ’©" => 0!..1 | "ðŸ’©"
0!..1 | ("bar" | "foo") => 0!..1 | "bar" | "foo"
0!..1 | ("baz" | "foo") => 0!..1 | "baz" | "foo"
0!..1 | invStrSet("foo") => 0!..1 | invStrSet("foo")
0!..1 | invStrSet("bar" | "foo") => 0!..1 | invStrSet("bar" | "foo")
0!..1 | invStrSet("bar") => 0!..1 | invStrSet("bar")
0!..1 | invStrSet("") => 0!..1 | invStrSet("")
0..!1 | 0..2 => 0..2
0..!1 | 0!..!2 => 0..!2
0..!1 | 0.5..1.5 => 0..1.5
0..!1 | 0.5..2.5 => 0..2.5
0..!1 | 0.5!..2.5 => 0..2.5
0..!1 | 0.5..!2.5 => 0..!2.5
0..!1 | -2.56..3.35 => -2.56..3.35
0..!1 | 0.5..0.75 => 0..!1
0..!1 | 1..2 => 0..2
0..!1 | 0..inf => 0..inf
0..!1 | 0!..inf => 0..inf
0..!1 | 0..!inf => 0..!inf
0..!1 | 0!..!inf => 0..!inf
0..!1 | 1..inf => 0..inf
0..!1 | 1!..inf => 0..!1 | 1!..inf
0..!1 | 1..!inf => 0..!inf
0..!1 | 2..inf => 0..!1 | 2..inf
0..!1 | 2!..inf => 0..!1 | 2!..inf
0..!1 | 2.5..inf => 0..!1 | 2.5..inf
0..!1 | -inf..0 => -inf..!1
0..!1 | -inf..inf => -inf..inf
0..!1 | -inf!..inf => -inf!..inf
0..!1 | -inf..!inf => -inf..!inf
0..!1 | -inf!..!inf => -inf!..!inf
0..!1 | int(0..1) => 0..1
0..!1 | int(0..2) => 0..1 | 2
0..!1 | int(1..2) => 0..1 | 2
0..!1 | int(5..20) => 0..!1 | int(5..20)
0..!1 | int(-20..-5) => int(-20..-5) | 0..!1
0..!1 | int(-10..10) => int(-10..-1) | 0..1 | int(2..10)
0..!1 | int(0..inf) => 0..1 | int(2..inf)
0..!1 | int(1..inf) => 0..1 | int(2..inf)
0..!1 | int(-inf..0) => int(-inf..-1) | 0..!1
0..!1 | int(-inf..1) => int(-inf..-1) | 0..1
0..!1 | int(-inf..inf) => int(-inf..-1) | 0..1 | int(2..inf)
0..!1 | nonInt(0..1) => 0..!1
0..!1 | nonInt(0..2) => 0..!1 | nonInt(1..2)
0..!1 | nonInt(-1..2) => -1!..!1 | nonInt(1..2)
0..!1 | nonInt(0..inf) => 0..!1 | nonInt(1..inf)
0..!1 | nonInt(-1..inf) => -1!..!1 | nonInt(1..inf)
0..!1 | nonInt(-inf..0) => nonInt(-inf..-1) | -1!..!1
0..!1 | nonInt(-inf..1) => nonInt(-inf..-1) | -1!..!1
0..!1 | nonInt(-inf..inf) => nonInt(-inf..-1) | -1!..!1 | nonInt(1..inf)
0..!1 | (1 | int(3..4)) => 0..1 | int(3..4)
0..!1 | string => 0..!1 | string
0..!1 | "" => 0..!1 | ""
0..!1 | "foo" => 0..!1 | "foo"
0..!1 | "bar" => 0..!1 | "bar"
0..!1 | "ðŸ’©" => 0..!1 | "ðŸ’©"
0..!1 | ("bar" | "foo") => 0..!1 | "bar" | "foo"
0..!1 | ("baz" | "foo") => 0..!1 | "baz" | "foo"
0..!1 | invStrSet("foo") => 0..!1 | invStrSet("foo")
0..!1 | invStrSet("bar" | "foo") => 0..!1 | invStrSet("bar" | "foo")
0..!1 | invStrSet("bar") => 0..!1 | invStrSet("bar")
0..!1 | invStrSet("") => 0..!1 | invStrSet("")
0..2 | 0!..!2 => 0..2
0..2 | 0.5..1.5 => 0..2
0..2 | 0.5..2.5 => 0..2.5
0..2 | 0.5!..2.5 => 0..2.5
0..2 | 0.5..!2.5 => 0..!2.5
0..2 | -2.56..3.35 => -2.56..3.35
0..2 | 0.5..0.75 => 0..2
0..2 | 1..2 => 0..2
0..2 | 0..inf => 0..inf
0..2 | 0!..inf => 0..inf
0..2 | 0..!inf => 0..!inf
0..2 | 0!..!inf => 0..!inf
0..2 | 1..inf => 0..inf
0..2 | 1!..inf => 0..inf
0..2 | 1..!inf => 0..!inf
0..2 | 2..inf => 0..inf
0..2 | 2!..inf => 0..inf
0..2 | 2.5..inf => 0..2 | 2.5..inf
0..2 | -inf..0 => -inf..2
0..2 | -inf..inf => -inf..inf
0..2 | -inf!..inf => -inf!..inf
0..2 | -inf..!inf => -inf..!inf
0..2 | -inf!..!inf => -inf!..!inf
0..2 | int(0..1) => 0..2
0..2 | int(0..2) => 0..2
0..2 | int(1..2) => 0..2
0..2 | int(5..20) => 0..2 | int(5..20)
0..2 | int(-20..-5) => int(-20..-5) | 0..2
0..2 | int(-10..10) => int(-10..-1) | 0..2 | int(3..10)
0..2 | int(0..inf) => 0..2 | int(3..inf)
0..2 | int(1..inf) => 0..2 | int(3..inf)
0..2 | int(-inf..0) => int(-inf..-1) | 0..2
0..2 | int(-inf..1) => int(-inf..-1) | 0..2
0..2 | int(-inf..inf) => int(-inf..-1) | 0..2 | int(3..inf)
0..2 | nonInt(0..1) => 0..2
0..2 | nonInt(0..2) => 0..2
0..2 | nonInt(-1..2) => -1!..2
0..2 | nonInt(0..inf) => 0..!3 | nonInt(3..inf)
0..2 | nonInt(-1..inf) => -1!..!3 | nonInt(3..inf)
0..2 | nonInt(-inf..0) => nonInt(-inf..-1) | -1!..2
0..2 | nonInt(-inf..1) => nonInt(-inf..-1) | -1!..2
0..2 | nonInt(-inf..inf) => nonInt(-inf..-1) | -1!..!3 | nonInt(3..inf)
0..2 | (1 | int(3..4)) => 0..2 | int(3..4)
0..2 | string => 0..2 | string
0..2 | "" => 0..2 | ""
0..2 | "foo" => 0..2 | "foo"
0..2 | "bar" => 0..2 | "bar"
0..2 | "ðŸ’©" => 0..2 | "ðŸ’©"
0..2 | ("bar" | "foo") => 0..2 | "bar" | "foo"
0..2 | ("baz" | "foo") => 0..2 | "baz" | "foo"
0..2 | invStrSet("foo") => 0..2 | invStrSet("foo")
0..2 | invStrSet("bar" | "foo") => 0..2 | invStrSet("bar" | "foo")
0..2 | invStrSet("bar") => 0..2 | invStrSet("bar")
0..2 | invStrSet("") => 0..2 | invStrSet("")
0!..!2 | 0.5..1.5 => 0!..!2
0!..!2 | 0.5..2.5 => 0!..2.5
0!..!2 | 0.5!..2.5 => 0!..2.5
0!..!2 | 0.5..!2.5 => 0!..!2.5
0!..!2 | -2.56..3.35 => -2.56..3.35
0!..!2 | 0.5..0.75 => 0!..!2
0!..!2 | 1..2 => 0!..2
0!..!2 | 0..inf => 0..inf
0!..!2 | 0!..inf => 0!..inf
0!..!2 | 0..!inf => 0..!inf
0!..!2 | 0!..!inf => 0!..!inf
0!..!2 | 1..inf => 0!..inf
0!..!2 | 1!..inf => 0!..inf
0!..!2 | 1..!inf => 0!..!inf
0!..!2 | 2..inf => 0!..inf
0!..!2 | 2!..inf => 0!..!2 | 2!..inf
0!..!2 | 2.5..inf => 0!..!2 | 2.5..inf
0!..!2 | -inf..0 => -inf..!2
0!..!2 | -inf..inf => -inf..inf
0!..!2 | -inf!..inf => -inf!..inf
0!..!2 | -inf..!inf => -inf..!inf
0!..!2 | -inf!..!inf => -inf!..!inf
0!..!2 | int(0..1) => 0..!2
0!..!2 | int(0..2) => 0..2
0!..!2 | int(1..2) => 0!..2
0!..!2 | int(5..20) => 0!..!2 | int(5..20)
0!..!2 | int(-20..-5) => int(-20..-5) | 0!..!2
0!..!2 | int(-10..10) => int(-10..-1) | 0..2 | int(3..10)
0!..!2 | int(0..inf) => 0..2 | int(3..inf)
0!..!2 | int(1..inf) => 0!..2 | int(3..inf)
0!..!2 | int(-inf..0) => int(-inf..-1) | 0..!2
0!..!2 | int(-inf..1) => int(-inf..-1) | 0..!2
0!..!2 | int(-inf..inf) => int(-inf..-1) | 0..2 | int(3..inf)
0!..!2 | nonInt(0..1) => 0!..!2
0!..!2 | nonInt(0..2) => 0!..!2
0!..!2 | nonInt(-1..2) => nonInt(-1..0) | 0!..!2
0!..!2 | nonInt(0..inf) => 0!..!2 | nonInt(2..inf)
0!..!2 | nonInt(-1..inf) => nonInt(-1..0) | 0!..!2 | nonInt(2..inf)
0!..!2 | nonInt(-inf..0) => nonInt(-inf..0) | 0!..!2
0!..!2 | nonInt(-inf..1) => nonInt(-inf..0) | 0!..!2
0!..!2 | nonInt(-inf..inf) => nonInt(-inf..0) | 0!..!2 | nonInt(2..inf)
0!..!2 | (1 | int(3..4)) => 0!..!2 | int(3..4)
0!..!2 | string => 0!..!2 | string
0!..!2 | "" => 0!..!2 | ""
0!..!2 | "foo" => 0!..!2 | "foo"
0!..!2 | "bar" => 0!..!2 | "bar"
0!..!2 | "ðŸ’©" => 0!..!2 | "ðŸ’©"
0!..!2 | ("bar" | "foo") => 0!..!2 | "bar" | "foo"
0!..!2 | ("baz" | "foo") => 0!..!2 | "baz" | "foo"
0!..!2 | invStrSet("foo") => 0!..!2 | invStrSet("foo")
0!..!2 | invStrSet("bar" | "foo") => 0!..!2 | invStrSet("bar" | "foo")
0!..!2 | invStrSet("bar") => 0!..!2 | invStrSet("bar")
0!..!2 | invStrSet("") => 0!..!2 | invStrSet("")
0.5..1.5 | 0.5..2.5 => 0.5..2.5
0.5..1.5 | 0.5!..2.5 => 0.5..2.5
0.5..1.5 | 0.5..!2.5 => 0.5..!2.5
0.5..1.5 | -2.56..3.35 => -2.56..3.35
0.5..1.5 | 0.5..0.75 => 0.5..1.5
0.5..1.5 | 1..2 => 0.5..2
0.5..1.5 | 0..inf => 0..inf
0.5..1.5 | 0!..inf => 0!..inf
0.5..1.5 | 0..!inf => 0..!inf
0.5..1.5 | 0!..!inf => 0!..!inf
0.5..1.5 | 1..inf => 0.5..inf
0.5..1.5 | 1!..inf => 0.5..inf
0.5..1.5 | 1..!inf => 0.5..!inf
0.5..1.5 | 2..inf => 0.5..1.5 | 2..inf
0.5..1.5 | 2!..inf => 0.5..1.5 | 2!..inf
0.5..1.5 | 2.5..inf => 0.5..1.5 | 2.5..inf
0.5..1.5 | -inf..0 => -inf..0 | 0.5..1.5
0.5..1.5 | -inf..inf => -inf..inf
0.5..1.5 | -inf!..inf => -inf!..inf
0.5..1.5 | -inf..!inf => -inf..!inf
0.5..1.5 | -inf!..!inf => -inf!..!inf
0.5..1.5 | int(0..1) => 0 | 0.5..1.5
0.5..1.5 | int(0..2) => 0 | 0.5..1.5 | 2
0.5..1.5 | int(1..2) => 0.5..1.5 | 2
0.5..1.5 | int(5..20) => 0.5..1.5 | int(5..20)
0.5..1.5 | int(-20..-5) => int(-20..-5) | 0.5..1.5
0.5..1.5 | int(-10..10) => int(-10..0) | 0.5..1.5 | int(2..10)
0.5..1.5 | int(0..inf) => 0 | 0.5..1.5 | int(2..inf)
0.5..1.5 | int(1..inf) => 0.5..1.5 | int(2..inf)
0.5..1.5 | int(-inf..0) => int(-inf..0) | 0.5..1.5
0.5..1.5 | int(-inf..1) => int(-inf..0) | 0.5..1.5
0.5..1.5 | int(-inf..inf) => int(-inf..0) | 0.5..1.5 | int(2..inf)
0.5..1.5 | nonInt(0..1) => 0!..1.5
0.5..1.5 | nonInt(0..2) => 0!..!2
0.5..1.5 | nonInt(-1..2) => nonInt(-1..0) | 0!..!2
0.5..1.5 | nonInt(0..inf) => 0!..!2 | nonInt(2..inf)
0.5..1.5 | nonInt(-1..inf) => nonInt(-1..0) | 0!..!2 | nonInt(2..inf)
0.5..1.5 | nonInt(-inf..0) => nonInt(-inf..0) | 0.5..1.5
0.5..1.5 | nonInt(-inf..1) => nonInt(-inf..0) | 0!..1.5
0.5..1.5 | nonInt(-inf..inf) => nonInt(-inf..0) | 0!..!2 | nonInt(2..inf)
0.5..1.5 | (1 | int(3..4)) => 0.5..1.5 | int(3..4)
0.5..1.5 | string => 0.5..1.5 | string
0.5..1.5 | "" => 0.5..1.5 | ""
0.5..1.5 | "foo" => 0.5..1.5 | "foo"
0.5..1.5 | "bar" => 0.5..1.5 | "bar"
0.5..1.5 | "ðŸ’©" => 0.5..1.5 | "ðŸ’©"
0.5..1.5 | ("bar" | "foo") => 0.5..1.5 | "bar" | "foo"
0.5..1.5 | ("baz" | "foo") => 0.5..1.5 | "baz" | "foo"
0.5..1.5 | invStrSet("foo") => 0.5..1.5 | invStrSet("foo")
0.5..1.5 | invStrSet("bar" | "foo") => 0.5..1.5 | invStrSet("bar" | "foo")
0.5..1.5 | invStrSet("bar") => 0.5..1.5 | invStrSet("bar")
0.5..1.5 | invStrSet("") => 0.5..1.5 | invStrSet("")
0.5..2.5 | 0.5!..2.5 => 0.5..2.5
0.5..2.5 | 0.5..!2.5 => 0.5..2.5
0.5..2.5 | -2.56..3.35 => -2.56..3.35
0.5..2.5 | 0.5..0.75 => 0.5..2.5
0.5..2.5 | 1..2 => 0.5..2.5
0.5..2.5 | 0..inf => 0..inf
0.5..2.5 | 0!..inf => 0!..inf
0.5..2.5 | 0..!inf => 0..!inf
0.5..2.5 | 0!..!inf => 0!..!inf
0.5..2.5 | 1..inf => 0.5..inf
0.5..2.5 | 1!..inf => 0.5..inf
0.5..2.5 | 1..!inf => 0.5..!inf
0.5..2.5 | 2..inf => 0.5..inf
0.5..2.5 | 2!..inf => 0.5..inf
0.5..2.5 | 2.5..inf => 0.5..inf
0.5..2.5 | -inf..0 => -inf..0 | 0.5..2.5
0.5..2.5 | -inf..inf => -inf..inf
0.5..2.5 | -inf!..inf => -inf!..inf
0.5..2.5 | -inf..!inf => -inf..!inf
0.5..2.5 | -inf!..!inf => -inf!..!inf
0.5..2.5 | int(0..1) => 0 | 0.5..2.5
0.5..2.5 | int(0..2) => 0 | 0.5..2.5
0.5..2.5 | int(1..2) => 0.5..2.5
0.5..2.5 | int(5..20) => 0.5..2.5 | int(5..20)
0.5..2.5 | int(-20..-5) => int(-20..-5) | 0.5..2.5
0.5..2.5 | int(-10..10) => int(-10..0) | 0.5..2.5 | int(3..10)
0.5..2.5 | int(0..inf) => 0 | 0.5..2.5 | int(3..inf)
0.5..2.5 | int(1..inf) => 0.5..2.5 | int(3..inf)
0.5..2.5 | int(-inf..0) => int(-inf..0) | 0.5..2.5
0.5..2.5 | int(-inf..1) => int(-inf..0) | 0.5..2.5
0.5..2.5 | int(-inf..inf) => int(-inf..0) | 0.5..2.5 | int(3..inf)
0.5..2.5 | nonInt(0..1) => 0!..2.5
0.5..2.5 | nonInt(0..2) => 0!..2.5
0.5..2.5 | nonInt(-1..2) => nonInt(-1..0) | 0!..2.5
0.5..2.5 | nonInt(0..inf) => 0!..!3 | nonInt(3..inf)
0.5..2.5 | nonInt(-1..inf) => nonInt(-1..0) | 0!..!3 | nonInt(3..inf)
0.5..2.5 | nonInt(-inf..0) => nonInt(-inf..0) | 0.5..2.5
0.5..2.5 | nonInt(-inf..1) => nonInt(-inf..0) | 0!..2.5
0.5..2.5 | nonInt(-inf..inf) => nonInt(-inf..0) | 0!..!3 | nonInt(3..inf)
0.5..2.5 | (1 | int(3..4)) => 0.5..2.5 | int(3..4)
0.5..2.5 | string => 0.5..2.5 | string
0.5..2.5 | "" => 0.5..2.5 | ""
0.5..2.5 | "foo" => 0.5..2.5 | "foo"
0.5..2.5 | "bar" => 0.5..2.5 | "bar"
0.5..2.5 | "ðŸ’©" => 0.5..2.5 | "ðŸ’©"
0.5..2.5 | ("bar" | "foo") => 0.5..2.5 | "bar" | "foo"
0.5..2.5 | ("baz" | "foo") => 0.5..2.5 | "baz" | "foo"
0.5..2.5 | invStrSet("foo") => 0.5..2.5 | invStrSet("foo")
0.5..2.5 | invStrSet("bar" | "foo") => 0.5..2.5 | invStrSet("bar" | "foo")
0.5..2.5 | invStrSet("bar") => 0.5..2.5 | invStrSet("bar")
0.5..2.5 | invStrSet("") => 0.5..2.5 | invStrSet("")
0.5!..2.5 | 0.5..!2.5 => 0.5..2.5
0.5!..2.5 | -2.56..3.35 => -2.56..3.35
0.5!..2.5 | 0.5..0.75 => 0.5..2.5
0.5!..2.5 | 1..2 => 0.5!..2.5
0.5!..2.5 | 0..inf => 0..inf
0.5!..2.5 | 0!..inf => 0!..inf
0.5!..2.5 | 0..!inf => 0..!inf
0.5!..2.5 | 0!..!inf => 0!..!inf
0.5!..2.5 | 1..inf => 0.5!..inf
0.5!..2.5 | 1!..inf => 0.5!..inf
0.5!..2.5 | 1..!inf => 0.5!..!inf
0.5!..2.5 | 2..inf => 0.5!..inf
0.5!..2.5 | 2!..inf => 0.5!..inf
0.5!..2.5 | 2.5..inf => 0.5!..inf
0.5!..2.5 | -inf..0 => -inf..0 | 0.5!..2.5
0.5!..2.5 | -inf..inf => -inf..inf
0.5!..2.5 | -inf!..inf => -inf!..inf
0.5!..2.5 | -inf..!inf => -inf..!inf
0.5!..2.5 | -inf!..!inf => -inf!..!inf
0.5!..2.5 | int(0..1) => 0 | 0.5!..2.5
0.5!..2.5 | int(0..2) => 0 | 0.5!..2.5
0.5!..2.5 | int(1..2) => 0.5!..2.5
0.5!..2.5 | int(5..20) => 0.5!..2.5 | int(5..20)
0.5!..2.5 | int(-20..-5) => int(-20..-5) | 0.5!..2.5
0.5!..2.5 | int(-10..10) => int(-10..0) | 0.5!..2.5 | int(3..10)
0.5!..2.5 | int(0..inf) => 0 | 0.5!..2.5 | int(3..inf)
0.5!..2.5 | int(1..inf) => 0.5!..2.5 | int(3..inf)
0.5!..2.5 | int(-inf..0) => int(-inf..0) | 0.5!..2.5
0.5!..2.5 | int(-inf..1) => int(-inf..0) | 0.5!..2.5
0.5!..2.5 | int(-inf..inf) => int(-inf..0) | 0.5!..2.5 | int(3..inf)
0.5!..2.5 | nonInt(0..1) => 0!..2.5
0.5!..2.5 | nonInt(0..2) => 0!..2.5
0.5!..2.5 | nonInt(-1..2) => nonInt(-1..0) | 0!..2.5
0.5!..2.5 | nonInt(0..inf) => 0!..!3 | nonInt(3..inf)
0.5!..2.5 | nonInt(-1..inf) => nonInt(-1..0) | 0!..!3 | nonInt(3..inf)
0.5!..2.5 | nonInt(-inf..0) => nonInt(-inf..0) | 0.5!..2.5
0.5!..2.5 | nonInt(-inf..1) => nonInt(-inf..0) | 0!..2.5
0.5!..2.5 | nonInt(-inf..inf) => nonInt(-inf..0) | 0!..!3 | nonInt(3..inf)
0.5!..2.5 | (1 | int(3..4)) => 0.5!..2.5 | int(3..4)
0.5!..2.5 | string => 0.5!..2.5 | string
0.5!..2.5 | "" => 0.5!..2.5 | ""
0.5!..2.5 | "foo" => 0.5!..2.5 | "foo"
0.5!..2.5 | "bar" => 0.5!..2.5 | "bar"
0.5!..2.5 | "ðŸ’©" => 0.5!..2.5 | "ðŸ’©"
0.5!..2.5 | ("bar" | "foo") => 0.5!..2.5 | "bar" | "foo"
0.5!..2.5 | ("baz" | "foo") => 0.5!..2.5 | "baz" | "foo"
0.5!..2.5 | invStrSet("foo") => 0.5!..2.5 | invStrSet("foo")
0.5!..2.5 | invStrSet("bar" | "foo") => 0.5!..2.5 | invStrSet("bar" | "foo")
0.5!..2.5 | invStrSet("bar") => 0.5!..2.5 | invStrSet("bar")
0.5!..2.5 | invStrSet("") => 0.5!..2.5 | invStrSet("")
0.5..!2.5 | -2.56..3.35 => -2.56..3.35
0.5..!2.5 | 0.5..0.75 => 0.5..!2.5
0.5..!2.5 | 1..2 => 0.5..!2.5
0.5..!2.5 | 0..inf => 0..inf
0.5..!2.5 | 0!..inf => 0!..inf
0.5..!2.5 | 0..!inf => 0..!inf
0.5..!2.5 | 0!..!inf => 0!..!inf
0.5..!2.5 | 1..inf => 0.5..inf
0.5..!2.5 | 1!..inf => 0.5..inf
0.5..!2.5 | 1..!inf => 0.5..!inf
0.5..!2.5 | 2..inf => 0.5..inf
0.5..!2.5 | 2!..inf => 0.5..inf
0.5..!2.5 | 2.5..inf => 0.5..inf
0.5..!2.5 | -inf..0 => -inf..0 | 0.5..!2.5
0.5..!2.5 | -inf..inf => -inf..inf
0.5..!2.5 | -inf!..inf => -inf!..inf
0.5..!2.5 | -inf..!inf => -inf..!inf
0.5..!2.5 | -inf!..!inf => -inf!..!inf
0.5..!2.5 | int(0..1) => 0 | 0.5..!2.5
0.5..!2.5 | int(0..2) => 0 | 0.5..!2.5
0.5..!2.5 | int(1..2) => 0.5..!2.5
0.5..!2.5 | int(5..20) => 0.5..!2.5 | int(5..20)
0.5..!2.5 | int(-20..-5) => int(-20..-5) | 0.5..!2.5
0.5..!2.5 | int(-10..10) => int(-10..0) | 0.5..!2.5 | int(3..10)
0.5..!2.5 | int(0..inf) => 0 | 0.5..!2.5 | int(3..inf)
0.5..!2.5 | int(1..inf) => 0.5..!2.5 | int(3..inf)
0.5..!2.5 | int(-inf..0) => int(-inf..0) | 0.5..!2.5
0.5..!2.5 | int(-inf..1) => int(-inf..0) | 0.5..!2.5
0.5..!2.5 | int(-inf..inf) => int(-inf..0) | 0.5..!2.5 | int(3..inf)
0.5..!2.5 | nonInt(0..1) => 0!..!2.5
0.5..!2.5 | nonInt(0..2) => 0!..!2.5
0.5..!2.5 | nonInt(-1..2) => nonInt(-1..0) | 0!..!2.5
0.5..!2.5 | nonInt(0..inf) => 0!..!3 | nonInt(3..inf)
0.5..!2.5 | nonInt(-1..inf) => nonInt(-1..0) | 0!..!3 | nonInt(3..inf)
0.5..!2.5 | nonInt(-inf..0) => nonInt(-inf..0) | 0.5..!2.5
0.5..!2.5 | nonInt(-inf..1) => nonInt(-inf..0) | 0!..!2.5
0.5..!2.5 | nonInt(-inf..inf) => nonInt(-inf..0) | 0!..!3 | nonInt(3..inf)
0.5..!2.5 | (1 | int(3..4)) => 0.5..!2.5 | int(3..4)
0.5..!2.5 | string => 0.5..!2.5 | string
0.5..!2.5 | "" => 0.5..!2.5 | ""
0.5..!2.5 | "foo" => 0.5..!2.5 | "foo"
0.5..!2.5 | "bar" => 0.5..!2.5 | "bar"
0.5..!2.5 | "ðŸ’©" => 0.5..!2.5 | "ðŸ’©"
0.5..!2.5 | ("bar" | "foo") => 0.5..!2.5 | "bar" | "foo"
0.5..!2.5 | ("baz" | "foo") => 0.5..!2.5 | "baz" | "foo"
0.5..!2.5 | invStrSet("foo") => 0.5..!2.5 | invStrSet("foo")
0.5..!2.5 | invStrSet("bar" | "foo") => 0.5..!2.5 | invStrSet("bar" | "foo")
0.5..!2.5 | invStrSet("bar") => 0.5..!2.5 | invStrSet("bar")
0.5..!2.5 | invStrSet("") => 0.5..!2.5 | invStrSet("")
-2.56..3.35 | 0.5..0.75 => -2.56..3.35
-2.56..3.35 | 1..2 => -2.56..3.35
-2.56..3.35 | 0..inf => -2.56..inf
-2.56..3.35 | 0!..inf => -2.56..inf
-2.56..3.35 | 0..!inf => -2.56..!inf
-2.56..3.35 | 0!..!inf => -2.56..!inf
-2.56..3.35 | 1..inf => -2.56..inf
-2.56..3.35 | 1!..inf => -2.56..inf
-2.56..3.35 | 1..!inf => -2.56..!inf
-2.56..3.35 | 2..inf => -2.56..inf
-2.56..3.35 | 2!..inf => -2.56..inf
-2.56..3.35 | 2.5..inf => -2.56..inf
-2.56..3.35 | -inf..0 => -inf..3.35
-2.56..3.35 | -inf..inf => -inf..inf
-2.56..3.35 | -inf!..inf => -inf!..inf
-2.56..3.35 | -inf..!inf => -inf..!inf
-2.56..3.35 | -inf!..!inf => -inf!..!inf
-2.56..3.35 | int(0..1) => -2.56..3.35
-2.56..3.35 | int(0..2) => -2.56..3.35
-2.56..3.35 | int(1..2) => -2.56..3.35
-2.56..3.35 | int(5..20) => -2.56..3.35 | int(5..20)
-2.56..3.35 | int(-20..-5) => int(-20..-5) | -2.56..3.35
-2.56..3.35 | int(-10..10) => int(-10..-3) | -2.56..3.35 | int(4..10)
-2.56..3.35 | int(0..inf) => -2.56..3.35 | int(4..inf)
-2.56..3.35 | int(1..inf) => -2.56..3.35 | int(4..inf)
-2.56..3.35 | int(-inf..0) => int(-inf..-3) | -2.56..3.35
-2.56..3.35 | int(-inf..1) => int(-inf..-3) | -2.56..3.35
-2.56..3.35 | int(-inf..inf) => int(-inf..-3) | -2.56..3.35 | int(4..inf)
-2.56..3.35 | nonInt(0..1) => -2.56..3.35
-2.56..3.35 | nonInt(0..2) => -2.56..3.35
-2.56..3.35 | nonInt(-1..2) => -2.56..3.35
-2.56..3.35 | nonInt(0..inf) => -2.56..!4 | nonInt(4..inf)
-2.56..3.35 | nonInt(-1..inf) => -2.56..!4 | nonInt(4..inf)
-2.56..3.35 | nonInt(-inf..0) => nonInt(-inf..-3) | -3!..3.35
-2.56..3.35 | nonInt(-inf..1) => nonInt(-inf..-3) | -3!..3.35
-2.56..3.35 | nonInt(-inf..inf) => nonInt(-inf..-3) | -3!..!4 | nonInt(4..inf)
-2.56..3.35 | (1 | int(3..4)) => -2.56..3.35 | 4
-2.56..3.35 | string => -2.56..3.35 | string
-2.56..3.35 | "" => -2.56..3.35 | ""
-2.56..3.35 | "foo" => -2.56..3.35 | "foo"
-2.56..3.35 | "bar" => -2.56..3.35 | "bar"
-2.56..3.35 | "ðŸ’©" => -2.56..3.35 | "ðŸ’©"
-2.56..3.35 | ("bar" | "foo") => -2.56..3.35 | "bar" | "foo"
-2.56..3.35 | ("baz" | "foo") => -2.56..3.35 | "baz" | "foo"
-2.56..3.35 | invStrSet("foo") => -2.56..3.35 | invStrSet("foo")
-2.56..3.35 | invStrSet("bar" | "foo") => -2.56..3.35 | invStrSet("bar" | "foo")
-2.56..3.35 | invStrSet("bar") => -2.56..3.35 | invStrSet("bar")
-2.56..3.35 | invStrSet("") => -2.56..3.35 | invStrSet("")
0.5..0.75 | 1..2 => 0.5..0.75 | 1..2
0.5..0.75 | 0..inf => 0..inf
0.5..0.75 | 0!..inf => 0!..inf
0.5..0.75 | 0..!inf => 0..!inf
0.5..0.75 | 0!..!inf => 0!..!inf
0.5..0.75 | 1..inf => 0.5..0.75 | 1..inf
0.5..0.75 | 1!..inf => 0.5..0.75 | 1!..inf
0.5..0.75 | 1..!inf => 0.5..0.75 | 1..!inf
0.5..0.75 | 2..inf => 0.5..0.75 | 2..inf
0.5..0.75 | 2!..inf => 0.5..0.75 | 2!..inf
0.5..0.75 | 2.5..inf => 0.5..0.75 | 2.5..inf
0.5..0.75 | -inf..0 => -inf..0 | 0.5..0.75
0.5..0.75 | -inf..inf => -inf..inf
0.5..0.75 | -inf!..inf => -inf!..inf
0.5..0.75 | -inf..!inf => -inf..!inf
0.5..0.75 | -inf!..!inf => -inf!..!inf
0.5..0.75 | int(0..1) => int(0..1) | 0.5..0.75
0.5..0.75 | int(0..2) => int(0..2) | 0.5..0.75
0.5..0.75 | int(1..2) => 0.5..0.75 | int(1..2)
0.5..0.75 | int(5..20) => 0.5..0.75 | int(5..20)
0.5..0.75 | int(-20..-5) => int(-20..-5) | 0.5..0.75
0.5..0.75 | int(-10..10) => int(-10..10) | 0.5..0.75
0.5..0.75 | int(0..inf) => int(0..inf) | 0.5..0.75
0.5..0.75 | int(1..inf) => 0.5..0.75 | int(1..inf)
0.5..0.75 | int(-inf..0) => int(-inf..0) | 0.5..0.75
0.5..0.75 | int(-inf..1) => int(-inf..1) | 0.5..0.75
0.5..0.75 | int(-inf..inf) => int(-inf..inf) | 0.5..0.75
0.5..0.75 | nonInt(0..1) => nonInt(0..1)
0.5..0.75 | nonInt(0..2) => nonInt(0..2)
0.5..0.75 | nonInt(-1..2) => nonInt(-1..2)
0.5..0.75 | nonInt(0..inf) => nonInt(0..inf)
0.5..0.75 | nonInt(-1..inf) => nonInt(-1..inf)
0.5..0.75 | nonInt(-inf..0) => nonInt(-inf..0) | 0.5..0.75
0.5..0.75 | nonInt(-inf..1) => nonInt(-inf..1)
0.5..0.75 | nonInt(-inf..inf) => nonInt(-inf..inf)
0.5..0.75 | (1 | int(3..4)) => 0.5..0.75 | 1 | int(3..4)
0.5..0.75 | string => 0.5..0.75 | string
0.5..0.75 | "" => 0.5..0.75 | ""
0.5..0.75 | "foo" => 0.5..0.75 | "foo"
0.5..0.75 | "bar" => 0.5..0.75 | "bar"
0.5..0.75 | "ðŸ’©" => 0.5..0.75 | "ðŸ’©"
0.5..0.75 | ("bar" | "foo") => 0.5..0.75 | "bar" | "foo"
0.5..0.75 | ("baz" | "foo") => 0.5..0.75 | "baz" | "foo"
0.5..0.75 | invStrSet("foo") => 0.5..0.75 | invStrSet("foo")
0.5..0.75 | invStrSet("bar" | "foo") => 0.5..0.75 | invStrSet("bar" | "foo")
0.5..0.75 | invStrSet("bar") => 0.5..0.75 | invStrSet("bar")
0.5..0.75 | invStrSet("") => 0.5..0.75 | invStrSet("")
1..2 | 0..inf => 0..inf
1..2 | 0!..inf => 0!..inf
1..2 | 0..!inf => 0..!inf
1..2 | 0!..!inf => 0!..!inf
1..2 | 1..inf => 1..inf
1..2 | 1!..inf => 1..inf
1..2 | 1..!inf => 1..!inf
1..2 | 2..inf => 1..inf
1..2 | 2!..inf => 1..inf
1..2 | 2.5..inf => 1..2 | 2.5..inf
1..2 | -inf..0 => -inf..0 | 1..2
1..2 | -inf..inf => -inf..inf
1..2 | -inf!..inf => -inf!..inf
1..2 | -inf..!inf => -inf..!inf
1..2 | -inf!..!inf => -inf!..!inf
1..2 | int(0..1) => 0 | 1..2
1..2 | int(0..2) => 0 | 1..2
1..2 | int(1..2) => 1..2
1..2 | int(5..20) => 1..2 | int(5..20)
1..2 | int(-20..-5) => int(-20..-5) | 1..2
1..2 | int(-10..10) => int(-10..0) | 1..2 | int(3..10)
1..2 | int(0..inf) => 0 | 1..2 | int(3..inf)
1..2 | int(1..inf) => 1..2 | int(3..inf)
1..2 | int(-inf..0) => int(-inf..0) | 1..2
1..2 | int(-inf..1) => int(-inf..0) | 1..2
1..2 | int(-inf..inf) => int(-inf..0) | 1..2 | int(3..inf)
1..2 | nonInt(0..1) => 0!..2
1..2 | nonInt(0..2) => 0!..2
1..2 | nonInt(-1..2) => nonInt(-1..0) | 0!..2
1..2 | nonInt(0..inf) => 0!..!3 | nonInt(3..inf)
1..2 | nonInt(-1..inf) => nonInt(-1..0) | 0!..!3 | nonInt(3..inf)
1..2 | nonInt(-inf..0) => nonInt(-inf..0) | 1..2
1..2 | nonInt(-inf..1) => nonInt(-inf..0) | 0!..2
1..2 | nonInt(-inf..inf) => nonInt(-inf..0) | 0!..!3 | nonInt(3..inf)
1..2 | (1 | int(3..4)) => 1..2 | int(3..4)
1..2 | string => 1..2 | string
1..2 | "" => 1..2 | ""
1..2 | "foo" => 1..2 | "foo"
1..2 | "bar" => 1..2 | "bar"
1..2 | "ðŸ’©" => 1..2 | "ðŸ’©"
1..2 | ("bar" | "foo") => 1..2 | "bar" | "foo"
1..2 | ("baz" | "foo") => 1..2 | "baz" | "foo"
1..2 | invStrSet("foo") => 1..2 | invStrSet("foo")
1..2 | invStrSet("bar" | "foo") => 1..2 | invStrSet("bar" | "foo")
1..2 | invStrSet("bar") => 1..2 | invStrSet("bar")
1..2 | invStrSet("") => 1..2 | invStrSet("")
0..inf | 0!..inf => 0..inf
0..inf | 0..!inf => 0..inf
0..inf | 0!..!inf => 0..inf
0..inf | 1..inf => 0..inf
0..inf | 1!..inf => 0..inf
0..inf | 1..!inf => 0..inf
0..inf | 2..inf => 0..inf
0..inf | 2!..inf => 0..inf
0..inf | 2.5..inf => 0..inf
0..inf | -inf..0 => -inf..inf
0..inf | -inf..inf => -inf..inf
0..inf | -inf!..inf => -inf!..inf
0..inf | -inf..!inf => -inf..inf
0..inf | -inf!..!inf => -inf!..inf
0..inf | int(0..1) => 0..inf
0..inf | int(0..2) => 0..inf
0..inf | int(1..2) => 0..inf
0..inf | int(5..20) => 0..inf
0..inf | int(-20..-5) => int(-20..-5) | 0..inf
0..inf | int(-10..10) => int(-10..-1) | 0..inf
0..inf | int(0..inf) => 0..inf
0..inf | int(1..inf) => 0..inf
0..inf | int(-inf..0) => int(-inf..-1) | 0..inf
0..inf | int(-inf..1) => int(-inf..-1) | 0..inf
0..inf | int(-inf..inf) => int(-inf..-1) | 0..inf
0..inf | nonInt(0..1) => 0..inf
0..inf | nonInt(0..2) => 0..inf
0..inf | nonInt(-1..2) => -1!..inf
0..inf | nonInt(0..inf) => 0..inf
0..inf | nonInt(-1..inf) => -1!..inf
0..inf | nonInt(-inf..0) => nonInt(-inf..-1) | -1!..inf
0..inf | nonInt(-inf..1) => nonInt(-inf..-1) | -1!..inf
0..inf | nonInt(-inf..inf) => nonInt(-inf..-1) | -1!..inf
0..inf | (1 | int(3..4)) => 0..inf
0..inf | string => 0..inf | string
0..inf | "" => 0..inf | ""
0..inf | "foo" => 0..inf | "foo"
0..inf | "bar" => 0..inf | "bar"
0..inf | "ðŸ’©" => 0..inf | "ðŸ’©"
0..inf | ("bar" | "foo") => 0..inf | "bar" | "foo"
0..inf | ("baz" | "foo") => 0..inf | "baz" | "foo"
0..inf | invStrSet("foo") => 0..inf | invStrSet("foo")
0..inf | invStrSet("bar" | "foo") => 0..inf | invStrSet("bar" | "foo")
0..inf | invStrSet("bar") => 0..inf | invStrSet("bar")
0..inf | invStrSet("") => 0..inf | invStrSet("")
0!..inf | 0..!inf => 0..inf
0!..inf | 0!..!inf => 0!..inf
0!..inf | 1..inf => 0!..inf
0!..inf | 1!..inf => 0!..inf
0!..inf | 1..!inf => 0!..inf
0!..inf | 2..inf => 0!..inf
0!..inf | 2!..inf => 0!..inf
0!..inf | 2.5..inf => 0!..inf
0!..inf | -inf..0 => -inf..inf
0!..inf | -inf..inf => -inf..inf
0!..inf | -inf!..inf => -inf!..inf
0!..inf | -inf..!inf => -inf..inf
0!..inf | -inf!..!inf => -inf!..inf
0!..inf | int(0..1) => 0..inf
0!..inf | int(0..2) => 0..inf
0!..inf | int(1..2) => 0!..inf
0!..inf | int(5..20) => 0!..inf
0!..inf | int(-20..-5) => int(-20..-5) | 0!..inf
0!..inf | int(-10..10) => int(-10..-1) | 0..inf
0!..inf | int(0..inf) => 0..inf
0!..inf | int(1..inf) => 0!..inf
0!..inf | int(-inf..0) => int(-inf..-1) | 0..inf
0!..inf | int(-inf..1) => int(-inf..-1) | 0..inf
0!..inf | int(-inf..inf) => int(-inf..-1) | 0..inf
0!..inf | nonInt(0..1) => 0!..inf
0!..inf | nonInt(0..2) => 0!..inf
0!..inf | nonInt(-1..2) => nonInt(-1..0) | 0!..inf
0!..inf | nonInt(0..inf) => 0!..inf
0!..inf | nonInt(-1..inf) => nonInt(-1..0) | 0!..inf
0!..inf | nonInt(-inf..0) => nonInt(-inf..0) | 0!..inf
0!..inf | nonInt(-inf..1) => nonInt(-inf..0) | 0!..inf
0!..inf | nonInt(-inf..inf) => nonInt(-inf..0) | 0!..inf
0!..inf | (1 | int(3..4)) => 0!..inf
0!..inf | string => 0!..inf | string
0!..inf | "" => 0!..inf | ""
0!..inf | "foo" => 0!..inf | "foo"
0!..inf | "bar" => 0!..inf | "bar"
0!..inf | "ðŸ’©" => 0!..inf | "ðŸ’©"
0!..inf | ("bar" | "foo") => 0!..inf | "bar" | "foo"
0!..inf | ("baz" | "foo") => 0!..inf | "baz" | "foo"
0!..inf | invStrSet("foo") => 0!..inf | invStrSet("foo")
0!..inf | invStrSet("bar" | "foo") => 0!..inf | invStrSet("bar" | "foo")
0!..inf | invStrSet("bar") => 0!..inf | invStrSet("bar")
0!..inf | invStrSet("") => 0!..inf | invStrSet("")
0..!inf | 0!..!inf => 0..!inf
0..!inf | 1..inf => 0..inf
0..!inf | 1!..inf => 0..inf
0..!inf | 1..!inf => 0..!inf
0..!inf | 2..inf => 0..inf
0..!inf | 2!..inf => 0..inf
0..!inf | 2.5..inf => 0..inf
0..!inf | -inf..0 => -inf..!inf
0..!inf | -inf..inf => -inf..inf
0..!inf | -inf!..inf => -inf!..inf
0..!inf | -inf..!inf => -inf..!inf
0..!inf | -inf!..!inf => -inf!..!inf
0..!inf | int(0..1) => 0..!inf
0..!inf | int(0..2) => 0..!inf
0..!inf | int(1..2) => 0..!inf
0..!inf | int(5..20) => 0..!inf
0..!inf | int(-20..-5) => int(-20..-5) | 0..!inf
0..!inf | int(-10..10) => int(-10..-1) | 0..!inf
0..!inf | int(0..inf) => 0..!inf
0..!inf | int(1..inf) => 0..!inf
0..!inf | int(-inf..0) => int(-inf..-1) | 0..!inf
0..!inf | int(-inf..1) => int(-inf..-1) | 0..!inf
0..!inf | int(-inf..inf) => int(-inf..-1) | 0..!inf
0..!inf | nonInt(0..1) => 0..!inf
0..!inf | nonInt(0..2) => 0..!inf
0..!inf | nonInt(-1..2) => -1!..!inf
0..!inf | nonInt(0..inf) => 0..!inf
0..!inf | nonInt(-1..inf) => -1!..!inf
0..!inf | nonInt(-inf..0) => nonInt(-inf..-1) | -1!..!inf
0..!inf | nonInt(-inf..1) => nonInt(-inf..-1) | -1!..!inf
0..!inf | nonInt(-inf..inf) => nonInt(-inf..-1) | -1!..!inf
0..!inf | (1 | int(3..4)) => 0..!inf
0..!inf | string => 0..!inf | string
0..!inf | "" => 0..!inf | ""
0..!inf | "foo" => 0..!inf | "foo"
0..!inf | "bar" => 0..!inf | "bar"
0..!inf | "ðŸ’©" => 0..!inf | "ðŸ’©"
0..!inf | ("bar" | "foo") => 0..!inf | "bar" | "foo"
0..!inf | ("baz" | "foo") => 0..!inf | "baz" | "foo"
0..!inf | invStrSet("foo") => 0..!inf | invStrSet("foo")
0..!inf | invStrSet("bar" | "foo") => 0..!inf | invStrSet("bar" | "foo")
0..!inf | invStrSet("bar") => 0..!inf | invStrSet("bar")
0..!inf | invStrSet("") => 0..!inf | invStrSet("")
0!..!inf | 1..inf => 0!..inf
0!..!inf | 1!..inf => 0!..inf
0!..!inf | 1..!inf => 0!..!inf
0!..!inf | 2..inf => 0!..inf
0!..!inf | 2!..inf => 0!..inf
0!..!inf | 2.5..inf => 0!..inf
0!..!inf | -inf..0 => -inf..!inf
0!..!inf | -inf..inf => -inf..inf
0!..!inf | -inf!..inf => -inf!..inf
0!..!inf | -inf..!inf => -inf..!inf
0!..!inf | -inf!..!inf => -inf!..!inf
0!..!inf | int(0..1) => 0..!inf
0!..!inf | int(0..2) => 0..!inf
0!..!inf | int(1..2) => 0!..!inf
0!..!inf | int(5..20) => 0!..!inf
0!..!inf | int(-20..-5) => int(-20..-5) | 0!..!inf
0!..!inf | int(-10..10) => int(-10..-1) | 0..!inf
0!..!inf | int(0..inf) => 0..!inf
0!..!inf | int(1..inf) => 0!..!inf
0!..!inf | int(-inf..0) => int(-inf..-1) | 0..!inf
0!..!inf | int(-inf..1) => int(-inf..-1) | 0..!inf
0!..!inf | int(-inf..inf) => int(-inf..-1) | 0..!inf
0!..!inf | nonInt(0..1) => 0!..!inf
0!..!inf | nonInt(0..2) => 0!..!inf
0!..!inf | nonInt(-1..2) => nonInt(-1..0) | 0!..!inf
0!..!inf | nonInt(0..inf) => 0!..!inf
0!..!inf | nonInt(-1..inf) => nonInt(-1..0) | 0!..!inf
0!..!inf | nonInt(-inf..0) => nonInt(-inf..0) | 0!..!inf
0!..!inf | nonInt(-inf..1) => nonInt(-inf..0) | 0!..!inf
0!..!inf | nonInt(-inf..inf) => nonInt(-inf..0) | 0!..!inf
0!..!inf | (1 | int(3..4)) => 0!..!inf
0!..!inf | string => 0!..!inf | string
0!..!inf | "" => 0!..!inf | ""
0!..!inf | "foo" => 0!..!inf | "foo"
0!..!inf | "bar" => 0!..!inf | "bar"
0!..!inf | "ðŸ’©" => 0!..!inf | "ðŸ’©"
0!..!inf | ("bar" | "foo") => 0!..!inf | "bar" | "foo"
0!..!inf | ("baz" | "foo") => 0!..!inf | "baz" | "foo"
0!..!inf | invStrSet("foo") => 0!..!inf | invStrSet("foo")
0!..!inf | invStrSet("bar" | "foo") => 0!..!inf | invStrSet("bar" | "foo")
0!..!inf | invStrSet("bar") => 0!..!inf | invStrSet("bar")
0!..!inf | invStrSet("") => 0!..!inf | invStrSet("")
1..inf | 1!..inf => 1..inf
1..inf | 1..!inf => 1..inf
1..inf | 2..inf => 1..inf
1..inf | 2!..inf => 1..inf
1..inf | 2.5..inf => 1..inf
1..inf | -inf..0 => -inf..0 | 1..inf
1..inf | -inf..inf => -inf..inf
1..inf | -inf!..inf => -inf!..inf
1..inf | -inf..!inf => -inf..inf
1..inf | -inf!..!inf => -inf!..inf
1..inf | int(0..1) => 0 | 1..inf
1..inf | int(0..2) => 0 | 1..inf
1..inf | int(1..2) => 1..inf
1..inf | int(5..20) => 1..inf
1..inf | int(-20..-5) => int(-20..-5) | 1..inf
1..inf | int(-10..10) => int(-10..0) | 1..inf
1..inf | int(0..inf) => 0 | 1..inf
1..inf | int(1..inf) => 1..inf
1..inf | int(-inf..0) => int(-inf..0) | 1..inf
1..inf | int(-inf..1) => int(-inf..0) | 1..inf
1..inf | int(-inf..inf) => int(-inf..0) | 1..inf
1..inf | nonInt(0..1) => 0!..inf
1..inf | nonInt(0..2) => 0!..inf
1..inf | nonInt(-1..2) => nonInt(-1..0) | 0!..inf
1..inf | nonInt(0..inf) => 0!..inf
1..inf | nonInt(-1..inf) => nonInt(-1..0) | 0!..inf
1..inf | nonInt(-inf..0) => nonInt(-inf..0) | 1..inf
1..inf | nonInt(-inf..1) => nonInt(-inf..0) | 0!..inf
1..inf | nonInt(-inf..inf) => nonInt(-inf..0) | 0!..inf
1..inf | (1 | int(3..4)) => 1..inf
1..inf | string => 1..inf | string
1..inf | "" => 1..inf | ""
1..inf | "foo" => 1..inf | "foo"
1..inf | "bar" => 1..inf | "bar"
1..inf | "ðŸ’©" => 1..inf | "ðŸ’©"
1..inf | ("bar" | "foo") => 1..inf | "bar" | "foo"
1..inf | ("baz" | "foo") => 1..inf | "baz" | "foo"
1..inf | invStrSet("foo") => 1..inf | invStrSet("foo")
1..inf | invStrSet("bar" | "foo") => 1..inf | invStrSet("bar" | "foo")
1..inf | invStrSet("bar") => 1..inf | invStrSet("bar")
1..inf | invStrSet("") => 1..inf | invStrSet("")
1!..inf | 1..!inf => 1..inf
1!..inf | 2..inf => 1!..inf
1!..inf | 2!..inf => 1!..inf
1!..inf | 2.5..inf => 1!..inf
1!..inf | -inf..0 => -inf..0 | 1!..inf
1!..inf | -inf..inf => -inf..inf
1!..inf | -inf!..inf => -inf!..inf
1!..inf | -inf..!inf => -inf..inf
1!..inf | -inf!..!inf => -inf!..inf
1!..inf | int(0..1) => 0 | 1..inf
1!..inf | int(0..2) => 0 | 1..inf
1!..inf | int(1..2) => 1..inf
1!..inf | int(5..20) => 1!..inf
1!..inf | int(-20..-5) => int(-20..-5) | 1!..inf
1!..inf | int(-10..10) => int(-10..0) | 1..inf
1!..inf | int(0..inf) => 0 | 1..inf
1!..inf | int(1..inf) => 1..inf
1!..inf | int(-inf..0) => int(-inf..0) | 1!..inf
1!..inf | int(-inf..1) => int(-inf..0) | 1..inf
1!..inf | int(-inf..inf) => int(-inf..0) | 1..inf
1!..inf | nonInt(0..1) => nonInt(0..1) | 1!..inf
1!..inf | nonInt(0..2) => nonInt(0..1) | 1!..inf
1!..inf | nonInt(-1..2) => nonInt(-1..1) | 1!..inf
1!..inf | nonInt(0..inf) => nonInt(0..1) | 1!..inf
1!..inf | nonInt(-1..inf) => nonInt(-1..1) | 1!..inf
1!..inf | nonInt(-inf..0) => nonInt(-inf..0) | 1!..inf
1!..inf | nonInt(-inf..1) => nonInt(-inf..1) | 1!..inf
1!..inf | nonInt(-inf..inf) => nonInt(-inf..1) | 1!..inf
1!..inf | (1 | int(3..4)) => 1..inf
1!..inf | string => 1!..inf | string
1!..inf | "" => 1!..inf | ""
1!..inf | "foo" => 1!..inf | "foo"
1!..inf | "bar" => 1!..inf | "bar"
1!..inf | "ðŸ’©" => 1!..inf | "ðŸ’©"
1!..inf | ("bar" | "foo") => 1!..inf | "bar" | "foo"
1!..inf | ("baz" | "foo") => 1!..inf | "baz" | "foo"
1!..inf | invStrSet("foo") => 1!..inf | invStrSet("foo")
1!..inf | invStrSet("bar" | "foo") => 1!..inf | invStrSet("bar" | "foo")
1!..inf | invStrSet("bar") => 1!..inf | invStrSet("bar")
1!..inf | invStrSet("") => 1!..inf | invStrSet("")
1..!inf | 2..inf => 1..inf
1..!inf | 2!..inf => 1..inf
1..!inf | 2.5..inf => 1..inf
1..!inf | -inf..0 => -inf..0 | 1..!inf
1..!inf | -inf..inf => -inf..inf
1..!inf | -inf!..inf => -inf!..inf
1..!inf | -inf..!inf => -inf..!inf
1..!inf | -inf!..!inf => -inf!..!inf
1..!inf | int(0..1) => 0 | 1..!inf
1..!inf | int(0..2) => 0 | 1..!inf
1..!inf | int(1..2) => 1..!inf
1..!inf | int(5..20) => 1..!inf
1..!inf | int(-20..-5) => int(-20..-5) | 1..!inf
1..!inf | int(-10..10) => int(-10..0) | 1..!inf
1..!inf | int(0..inf) => 0 | 1..!inf
1..!inf | int(1..inf) => 1..!inf
1..!inf | int(-inf..0) => int(-inf..0) | 1..!inf
1..!inf | int(-inf..1) => int(-inf..0) | 1..!inf
1..!inf | int(-inf..inf) => int(-inf..0) | 1..!inf
1..!inf | nonInt(0..1) => 0!..!inf
1..!inf | nonInt(0..2) => 0!..!inf
1..!inf | nonInt(-1..2) => nonInt(-1..0) | 0!..!inf
1..!inf | nonInt(0..inf) => 0!..!inf
1..!inf | nonInt(-1..inf) => nonInt(-1..0) | 0!..!inf
1..!inf | nonInt(-inf..0) => nonInt(-inf..0) | 1..!inf
1..!inf | nonInt(-inf..1) => nonInt(-inf..0) | 0!..!inf
1..!inf | nonInt(-inf..inf) => nonInt(-inf..0) | 0!..!inf
1..!inf | (1 | int(3..4)) => 1..!inf
1..!inf | string => 1..!inf | string
1..!inf | "" => 1..!inf | ""
1..!inf | "foo" => 1..!inf | "foo"
1..!inf | "bar" => 1..!inf | "bar"
1..!inf | "ðŸ’©" => 1..!inf | "ðŸ’©"
1..!inf | ("bar" | "foo") => 1..!inf | "bar" | "foo"
1..!inf | ("baz" | "foo") => 1..!inf | "baz" | "foo"
1..!inf | invStrSet("foo") => 1..!inf | invStrSet("foo")
1..!inf | invStrSet("bar" | "foo") => 1..!inf | invStrSet("bar" | "foo")
1..!inf | invStrSet("bar") => 1..!inf | invStrSet("bar")
1..!inf | invStrSet("") => 1..!inf | invStrSet("")
2..inf | 2!..inf => 2..inf
2..inf | 2.5..inf => 2..inf
2..inf | -inf..0 => -inf..0 | 2..inf
2..inf | -inf..inf => -inf..inf
2..inf | -inf!..inf => -inf!..inf
2..inf | -inf..!inf => -inf..inf
2..inf | -inf!..!inf => -inf!..inf
2..inf | int(0..1) => int(0..1) | 2..inf
2..inf | int(0..2) => int(0..1) | 2..inf
2..inf | int(1..2) => 1 | 2..inf
2..inf | int(5..20) => 2..inf
2..inf | int(-20..-5) => int(-20..-5) | 2..inf
2..inf | int(-10..10) => int(-10..1) | 2..inf
2..inf | int(0..inf) => int(0..1) | 2..inf
2..inf | int(1..inf) => 1 | 2..inf
2..inf | int(-inf..0) => int(-inf..0) | 2..inf
2..inf | int(-inf..1) => int(-inf..1) | 2..inf
2..inf | int(-inf..inf) => int(-inf..1) | 2..inf
2..inf | nonInt(0..1) => nonInt(0..1) | 2..inf
2..inf | nonInt(0..2) => nonInt(0..1) | 1!..inf
2..inf | nonInt(-1..2) => nonInt(-1..1) | 1!..inf
2..inf | nonInt(0..inf) => nonInt(0..1) | 1!..inf
2..inf | nonInt(-1..inf) => nonInt(-1..1) | 1!..inf
2..inf | nonInt(-inf..0) => nonInt(-inf..0) | 2..inf
2..inf | nonInt(-inf..1) => nonInt(-inf..1) | 2..inf
2..inf | nonInt(-inf..inf) => nonInt(-inf..1) | 1!..inf
2..inf | (1 | int(3..4)) => 1 | 2..inf
2..inf | string => 2..inf | string
2..inf | "" => 2..inf | ""
2..inf | "foo" => 2..inf | "foo"
2..inf | "bar" => 2..inf | "bar"
2..inf | "ðŸ’©" => 2..inf | "ðŸ’©"
2..inf | ("bar" | "foo") => 2..inf | "bar" | "foo"
2..inf | ("baz" | "foo") => 2..inf | "baz" | "foo"
2..inf | invStrSet("foo") => 2..inf | invStrSet("foo")
2..inf | invStrSet("bar" | "foo") => 2..inf | invStrSet("bar" | "foo")
2..inf | invStrSet("bar") => 2..inf | invStrSet("bar")
2..inf | invStrSet("") => 2..inf | invStrSet("")
2!..inf | 2.5..inf => 2!..inf
2!..inf | -inf..0 => -inf..0 | 2!..inf
2!..inf | -inf..inf => -inf..inf
2!..inf | -inf!..inf => -inf!..inf
2!..inf | -inf..!inf => -inf..inf
2!..inf | -inf!..!inf => -inf!..inf
2!..inf | int(0..1) => int(0..1) | 2!..inf
2!..inf | int(0..2) => int(0..1) | 2..inf
2!..inf | int(1..2) => 1 | 2..inf
2!..inf | int(5..20) => 2!..inf
2!..inf | int(-20..-5) => int(-20..-5) | 2!..inf
2!..inf | int(-10..10) => int(-10..1) | 2..inf
2!..inf | int(0..inf) => int(0..1) | 2..inf
2!..inf | int(1..inf) => 1 | 2..inf
2!..inf | int(-inf..0) => int(-inf..0) | 2!..inf
2!..inf | int(-inf..1) => int(-inf..1) | 2!..inf
2!..inf | int(-inf..inf) => int(-inf..1) | 2..inf
2!..inf | nonInt(0..1) => nonInt(0..1) | 2!..inf
2!..inf | nonInt(0..2) => nonInt(0..2) | 2!..inf
2!..inf | nonInt(-1..2) => nonInt(-1..2) | 2!..inf
2!..inf | nonInt(0..inf) => nonInt(0..2) | 2!..inf
2!..inf | nonInt(-1..inf) => nonInt(-1..2) | 2!..inf
2!..inf | nonInt(-inf..0) => nonInt(-inf..0) | 2!..inf
2!..inf | nonInt(-inf..1) => nonInt(-inf..1) | 2!..inf
2!..inf | nonInt(-inf..inf) => nonInt(-inf..2) | 2!..inf
2!..inf | (1 | int(3..4)) => 1 | 2!..inf
2!..inf | string => 2!..inf | string
2!..inf | "" => 2!..inf | ""
2!..inf | "foo" => 2!..inf | "foo"
2!..inf | "bar" => 2!..inf | "bar"
2!..inf | "ðŸ’©" => 2!..inf | "ðŸ’©"
2!..inf | ("bar" | "foo") => 2!..inf | "bar" | "foo"
2!..inf | ("baz" | "foo") => 2!..inf | "baz" | "foo"
2!..inf | invStrSet("foo") => 2!..inf | invStrSet("foo")
2!..inf | invStrSet("bar" | "foo") => 2!..inf | invStrSet("bar" | "foo")
2!..inf | invStrSet("bar") => 2!..inf | invStrSet("bar")
2!..inf | invStrSet("") => 2!..inf | invStrSet("")
2.5..inf | -inf..0 => -inf..0 | 2.5..inf
2.5..inf | -inf..inf => -inf..inf
2.5..inf | -inf!..inf => -inf!..inf
2.5..inf | -inf..!inf => -inf..inf
2.5..inf | -inf!..!inf => -inf!..inf
2.5..inf | int(0..1) => int(0..1) | 2.5..inf
2.5..inf | int(0..2) => int(0..2) | 2.5..inf
2.5..inf | int(1..2) => int(1..2) | 2.5..inf
2.5..inf | int(5..20) => 2.5..inf
2.5..inf | int(-20..-5) => int(-20..-5) | 2.5..inf
2.5..inf | int(-10..10) => int(-10..2) | 2.5..inf
2.5..inf | int(0..inf) => int(0..2) | 2.5..inf
2.5..inf | int(1..inf) => int(1..2) | 2.5..inf
2.5..inf | int(-inf..0) => int(-inf..0) | 2.5..inf
2.5..inf | int(-inf..1) => int(-inf..1) | 2.5..inf
2.5..inf | int(-inf..inf) => int(-inf..2) | 2.5..inf
2.5..inf | nonInt(0..1) => nonInt(0..1) | 2.5..inf
2.5..inf | nonInt(0..2) => nonInt(0..2) | 2.5..inf
2.5..inf | nonInt(-1..2) => nonInt(-1..2) | 2.5..inf
2.5..inf | nonInt(0..inf) => nonInt(0..2) | 2!..inf
2.5..inf | nonInt(-1..inf) => nonInt(-1..2) | 2!..inf
2.5..inf | nonInt(-inf..0) => nonInt(-inf..0) | 2.5..inf
2.5..inf | nonInt(-inf..1) => nonInt(-inf..1) | 2.5..inf
2.5..inf | nonInt(-inf..inf) => nonInt(-inf..2) | 2!..inf
2.5..inf | (1 | int(3..4)) => 1 | 2.5..inf
2.5..inf | string => 2.5..inf | string
2.5..inf | "" => 2.5..inf | ""
2.5..inf | "foo" => 2.5..inf | "foo"
2.5..inf | "bar" => 2.5..inf | "bar"
2.5..inf | "ðŸ’©" => 2.5..inf | "ðŸ’©"
2.5..inf | ("bar" | "foo") => 2.5..inf | "bar" | "foo"
2.5..inf | ("baz" | "foo") => 2.5..inf | "baz" | "foo"
2.5..inf | invStrSet("foo") => 2.5..inf | invStrSet("foo")
2.5..inf | invStrSet("bar" | "foo") => 2.5..inf | invStrSet("bar" | "foo")
2.5..inf | invStrSet("bar") => 2.5..inf | invStrSet("bar")
2.5..inf | invStrSet("") => 2.5..inf | invStrSet("")
-inf..0 | -inf..inf => -inf..inf
-inf..0 | -inf!..inf => -inf..inf
-inf..0 | -inf..!inf => -inf..!inf
-inf..0 | -inf!..!inf => -inf..!inf
-inf..0 | int(0..1) => -inf..0 | 1
-inf..0 | int(0..2) => -inf..0 | int(1..2)
-inf..0 | int(1..2) => -inf..0 | int(1..2)
-inf..0 | int(5..20) => -inf..0 | int(5..20)
-inf..0 | int(-20..-5) => -inf..0
-inf..0 | int(-10..10) => -inf..0 | int(1..10)
-inf..0 | int(0..inf) => -inf..0 | int(1..inf)
-inf..0 | int(1..inf) => -inf..0 | int(1..inf)
-inf..0 | int(-inf..0) => -inf..0
-inf..0 | int(-inf..1) => -inf..0 | 1
-inf..0 | int(-inf..inf) => -inf..0 | int(1..inf)
-inf..0 | nonInt(0..1) => -inf..!1
-inf..0 | nonInt(0..2) => -inf..!1 | nonInt(1..2)
-inf..0 | nonInt(-1..2) => -inf..!1 | nonInt(1..2)
-inf..0 | nonInt(0..inf) => -inf..!1 | nonInt(1..inf)
-inf..0 | nonInt(-1..inf) => -inf..!1 | nonInt(1..inf)
-inf..0 | nonInt(-inf..0) => -inf..0
-inf..0 | nonInt(-inf..1) => -inf..!1
-inf..0 | nonInt(-inf..inf) => -inf..!1 | nonInt(1..inf)
-inf..0 | (1 | int(3..4)) => -inf..0 | 1 | int(3..4)
-inf..0 | string => -inf..0 | string
-inf..0 | "" => -inf..0 | ""
-inf..0 | "foo" => -inf..0 | "foo"
-inf..0 | "bar" => -inf..0 | "bar"
-inf..0 | "ðŸ’©" => -inf..0 | "ðŸ’©"
-inf..0 | ("bar" | "foo") => -inf..0 | "bar" | "foo"
-inf..0 | ("baz" | "foo") => -inf..0 | "baz" | "foo"
-inf..0 | invStrSet("foo") => -inf..0 | invStrSet("foo")
-inf..0 | invStrSet("bar" | "foo") => -inf..0 | invStrSet("bar" | "foo")
-inf..0 | invStrSet("bar") => -inf..0 | invStrSet("bar")
-inf..0 | invStrSet("") => -inf..0 | invStrSet("")
-inf..inf | -inf!..inf => -inf..inf
-inf..inf | -inf..!inf => -inf..inf
-inf..inf | -inf!..!inf => -inf..inf
-inf..inf | int(0..1) => -inf..inf
-inf..inf | int(0..2) => -inf..inf
-inf..inf | int(1..2) => -inf..inf
-inf..inf | int(5..20) => -inf..inf
-inf..inf | int(-20..-5) => -inf..inf
-inf..inf | int(-10..10) => -inf..inf
-inf..inf | int(0..inf) => -inf..inf
-inf..inf | int(1..inf) => -inf..inf
-inf..inf | int(-inf..0) => -inf..inf
-inf..inf | int(-inf..1) => -inf..inf
-inf..inf | int(-inf..inf) => -inf..inf
-inf..inf | nonInt(0..1) => -inf..inf
-inf..inf | nonInt(0..2) => -inf..inf
-inf..inf | nonInt(-1..2) => -inf..inf
-inf..inf | nonInt(0..inf) => -inf..inf
-inf..inf | nonInt(-1..inf) => -inf..inf
-inf..inf | nonInt(-inf..0) => -inf..inf
-inf..inf | nonInt(-inf..1) => -inf..inf
-inf..inf | nonInt(-inf..inf) => -inf..inf
-inf..inf | (1 | int(3..4)) => -inf..inf
-inf..inf | string => -inf..inf | string
-inf..inf | "" => -inf..inf | ""
-inf..inf | "foo" => -inf..inf | "foo"
-inf..inf | "bar" => -inf..inf | "bar"
-inf..inf | "ðŸ’©" => -inf..inf | "ðŸ’©"
-inf..inf | ("bar" | "foo") => -inf..inf | "bar" | "foo"
-inf..inf | ("baz" | "foo") => -inf..inf | "baz" | "foo"
-inf..inf | invStrSet("foo") => -inf..inf | invStrSet("foo")
-inf..inf | invStrSet("bar" | "foo") => -inf..inf | invStrSet("bar" | "foo")
-inf..inf | invStrSet("bar") => -inf..inf | invStrSet("bar")
-inf..inf | invStrSet("") => -inf..inf | invStrSet("")
-inf!..inf | -inf..!inf => -inf..inf
-inf!..inf | -inf!..!inf => -inf!..inf
-inf!..inf | int(0..1) => -inf!..inf
-inf!..inf | int(0..2) => -inf!..inf
-inf!..inf | int(1..2) => -inf!..inf
-inf!..inf | int(5..20) => -inf!..inf
-inf!..inf | int(-20..-5) => -inf!..inf
-inf!..inf | int(-10..10) => -inf!..inf
-inf!..inf | int(0..inf) => -inf!..inf
-inf!..inf | int(1..inf) => -inf!..inf
-inf!..inf | int(-inf..0) => -inf!..inf
-inf!..inf | int(-inf..1) => -inf!..inf
-inf!..inf | int(-inf..inf) => -inf!..inf
-inf!..inf | nonInt(0..1) => -inf!..inf
-inf!..inf | nonInt(0..2) => -inf!..inf
-inf!..inf | nonInt(-1..2) => -inf!..inf
-inf!..inf | nonInt(0..inf) => -inf!..inf
-inf!..inf | nonInt(-1..inf) => -inf!..inf
-inf!..inf | nonInt(-inf..0) => -inf!..inf
-inf!..inf | nonInt(-inf..1) => -inf!..inf
-inf!..inf | nonInt(-inf..inf) => -inf!..inf
-inf!..inf | (1 | int(3..4)) => -inf!..inf
-inf!..inf | string => -inf!..inf | string
-inf!..inf | "" => -inf!..inf | ""
-inf!..inf | "foo" => -inf!..inf | "foo"
-inf!..inf | "bar" => -inf!..inf | "bar"
-inf!..inf | "ðŸ’©" => -inf!..inf | "ðŸ’©"
-inf!..inf | ("bar" | "foo") => -inf!..inf | "bar" | "foo"
-inf!..inf | ("baz" | "foo") => -inf!..inf | "baz" | "foo"
-inf!..inf | invStrSet("foo") => -inf!..inf | invStrSet("foo")
-inf!..inf | invStrSet("bar" | "foo") => -inf!..inf | invStrSet("bar" | "foo")
-inf!..inf | invStrSet("bar") => -inf!..inf | invStrSet("bar")
-inf!..inf | invStrSet("") => -inf!..inf | invStrSet("")
-inf..!inf | -inf!..!inf => -inf..!inf
-inf..!inf | int(0..1) => -inf..!inf
-inf..!inf | int(0..2) => -inf..!inf
-inf..!inf | int(1..2) => -inf..!inf
-inf..!inf | int(5..20) => -inf..!inf
-inf..!inf | int(-20..-5) => -inf..!inf
-inf..!inf | int(-10..10) => -inf..!inf
-inf..!inf | int(0..inf) => -inf..!inf
-inf..!inf | int(1..inf) => -inf..!inf
-inf..!inf | int(-inf..0) => -inf..!inf
-inf..!inf | int(-inf..1) => -inf..!inf
-inf..!inf | int(-inf..inf) => -inf..!inf
-inf..!inf | nonInt(0..1) => -inf..!inf
-inf..!inf | nonInt(0..2) => -inf..!inf
-inf..!inf | nonInt(-1..2) => -inf..!inf
-inf..!inf | nonInt(0..inf) => -inf..!inf
-inf..!inf | nonInt(-1..inf) => -inf..!inf
-inf..!inf | nonInt(-inf..0) => -inf..!inf
-inf..!inf | nonInt(-inf..1) => -inf..!inf
-inf..!inf | nonInt(-inf..inf) => -inf..!inf
-inf..!inf | (1 | int(3..4)) => -inf..!inf
-inf..!inf | string => -inf..!inf | string
-inf..!inf | "" => -inf..!inf | ""
-inf..!inf | "foo" => -inf..!inf | "foo"
-inf..!inf | "bar" => -inf..!inf | "bar"
-inf..!inf | "ðŸ’©" => -inf..!inf | "ðŸ’©"
-inf..!inf | ("bar" | "foo") => -inf..!inf | "bar" | "foo"
-inf..!inf | ("baz" | "foo") => -inf..!inf | "baz" | "foo"
-inf..!inf | invStrSet("foo") => -inf..!inf | invStrSet("foo")
-inf..!inf | invStrSet("bar" | "foo") => -inf..!inf | invStrSet("bar" | "foo")
-inf..!inf | invStrSet("bar") => -inf..!inf | invStrSet("bar")
-inf..!inf | invStrSet("") => -inf..!inf | invStrSet("")
-inf!..!inf | int(0..1) => -inf!..!inf
-inf!..!inf | int(0..2) => -inf!..!inf
-inf!..!inf | int(1..2) => -inf!..!inf
-inf!..!inf | int(5..20) => -inf!..!inf
-inf!..!inf | int(-20..-5) => -inf!..!inf
-inf!..!inf | int(-10..10) => -inf!..!inf
-inf!..!inf | int(0..inf) => -inf!..!inf
-inf!..!inf | int(1..inf) => -inf!..!inf
-inf!..!inf | int(-inf..0) => -inf!..!inf
-inf!..!inf | int(-inf..1) => -inf!..!inf
-inf!..!inf | int(-inf..inf) => -inf!..!inf
-inf!..!inf | nonInt(0..1) => -inf!..!inf
-inf!..!inf | nonInt(0..2) => -inf!..!inf
-inf!..!inf | nonInt(-1..2) => -inf!..!inf
-inf!..!inf | nonInt(0..inf) => -inf!..!inf
-inf!..!inf | nonInt(-1..inf) => -inf!..!inf
-inf!..!inf | nonInt(-inf..0) => -inf!..!inf
-inf!..!inf | nonInt(-inf..1) => -inf!..!inf
-inf!..!inf | nonInt(-inf..inf) => -inf!..!inf
-inf!..!inf | (1 | int(3..4)) => -inf!..!inf
-inf!..!inf | string => -inf!..!inf | string
-inf!..!inf | "" => -inf!..!inf | ""
-inf!..!inf | "foo" => -inf!..!inf | "foo"
-inf!..!inf | "bar" => -inf!..!inf | "bar"
-inf!..!inf | "ðŸ’©" => -inf!..!inf | "ðŸ’©"
-inf!..!inf | ("bar" | "foo") => -inf!..!inf | "bar" | "foo"
-inf!..!inf | ("baz" | "foo") => -inf!..!inf | "baz" | "foo"
-inf!..!inf | invStrSet("foo") => -inf!..!inf | invStrSet("foo")
-inf!..!inf | invStrSet("bar" | "foo") => -inf!..!inf | invStrSet("bar" | "foo")
-inf!..!inf | invStrSet("bar") => -inf!..!inf | invStrSet("bar")
-inf!..!inf | invStrSet("") => -inf!..!inf | invStrSet("")
int(0..1) | int(0..2) => int(0..2)
int(0..1) | int(1..2) => int(0..2)
int(0..1) | int(5..20) => int(0..1) | int(5..20)
int(0..1) | int(-20..-5) => int(-20..-5) | int(0..1)
int(0..1) | int(-10..10) => int(-10..10)
int(0..1) | int(0..inf) => int(0..inf)
int(0..1) | int(1..inf) => int(0..inf)
int(0..1) | int(-inf..0) => int(-inf..1)
int(0..1) | int(-inf..1) => int(-inf..1)
int(0..1) | int(-inf..inf) => int(-inf..inf)
int(0..1) | nonInt(0..1) => 0..1
int(0..1) | nonInt(0..2) => 0..!2
int(0..1) | nonInt(-1..2) => -1!..!2
int(0..1) | nonInt(0..inf) => 0..!2 | nonInt(2..inf)
int(0..1) | nonInt(-1..inf) => -1!..!2 | nonInt(2..inf)
int(0..1) | nonInt(-inf..0) => nonInt(-inf..-1) | -1!..0 | 1
int(0..1) | nonInt(-inf..1) => nonInt(-inf..-1) | -1!..1
int(0..1) | nonInt(-inf..inf) => nonInt(-inf..-1) | -1!..!2 | nonInt(2..inf)
int(0..1) | (1 | int(3..4)) => int(0..1) | int(3..4)
int(0..1) | string => int(0..1) | string
int(0..1) | "" => int(0..1) | ""
int(0..1) | "foo" => int(0..1) | "foo"
int(0..1) | "bar" => int(0..1) | "bar"
int(0..1) | "ðŸ’©" => int(0..1) | "ðŸ’©"
int(0..1) | ("bar" | "foo") => int(0..1) | "bar" | "foo"
int(0..1) | ("baz" | "foo") => int(0..1) | "baz" | "foo"
int(0..1) | invStrSet("foo") => int(0..1) | invStrSet("foo")
int(0..1) | invStrSet("bar" | "foo") => int(0..1) | invStrSet("bar" | "foo")
int(0..1) | invStrSet("bar") => int(0..1) | invStrSet("bar")
int(0..1) | invStrSet("") => int(0..1) | invStrSet("")
int(0..2) | int(1..2) => int(0..2)
int(0..2) | int(5..20) => int(0..2) | int(5..20)
int(0..2) | int(-20..-5) => int(-20..-5) | int(0..2)
int(0..2) | int(-10..10) => int(-10..10)
int(0..2) | int(0..inf) => int(0..inf)
int(0..2) | int(1..inf) => int(0..inf)
int(0..2) | int(-inf..0) => int(-inf..2)
int(0..2) | int(-inf..1) => int(-inf..2)
int(0..2) | int(-inf..inf) => int(-inf..inf)
int(0..2) | nonInt(0..1) => 0..1 | 2
int(0..2) | nonInt(0..2) => 0..2
int(0..2) | nonInt(-1..2) => -1!..2
int(0..2) | nonInt(0..inf) => 0..!3 | nonInt(3..inf)
int(0..2) | nonInt(-1..inf) => -1!..!3 | nonInt(3..inf)
int(0..2) | nonInt(-inf..0) => nonInt(-inf..-1) | -1!..0 | int(1..2)
int(0..2) | nonInt(-inf..1) => nonInt(-inf..-1) | -1!..1 | 2
int(0..2) | nonInt(-inf..inf) => nonInt(-inf..-1) | -1!..!3 | nonInt(3..inf)
int(0..2) | (1 | int(3..4)) => int(0..4)
int(0..2) | string => int(0..2) | string
int(0..2) | "" => int(0..2) | ""
int(0..2) | "foo" => int(0..2) | "foo"
int(0..2) | "bar" => int(0..2) | "bar"
int(0..2) | "ðŸ’©" => int(0..2) | "ðŸ’©"
int(0..2) | ("bar" | "foo") => int(0..2) | "bar" | "foo"
int(0..2) | ("baz" | "foo") => int(0..2) | "baz" | "foo"
int(0..2) | invStrSet("foo") => int(0..2) | invStrSet("foo")
int(0..2) | invStrSet("bar" | "foo") => int(0..2) | invStrSet("bar" | "foo")
int(0..2) | invStrSet("bar") => int(0..2) | invStrSet("bar")
int(0..2) | invStrSet("") => int(0..2) | invStrSet("")
int(1..2) | int(5..20) => int(1..2) | int(5..20)
int(1..2) | int(-20..-5) => int(-20..-5) | int(1..2)
int(1..2) | int(-10..10) => int(-10..10)
int(1..2) | int(0..inf) => int(0..inf)
int(1..2) | int(1..inf) => int(1..inf)
int(1..2) | int(-inf..0) => int(-inf..2)
int(1..2) | int(-inf..1) => int(-inf..2)
int(1..2) | int(-inf..inf) => int(-inf..inf)
int(1..2) | nonInt(0..1) => 0!..1 | 2
int(1..2) | nonInt(0..2) => 0!..2
int(1..2) | nonInt(-1..2) => nonInt(-1..0) | 0!..2
int(1..2) | nonInt(0..inf) => 0!..!3 | nonInt(3..inf)
int(1..2) | nonInt(-1..inf) => nonInt(-1..0) | 0!..!3 | nonInt(3..inf)
int(1..2) | nonInt(-inf..0) => nonInt(-inf..0) | int(1..2)
int(1..2) | nonInt(-inf..1) => nonInt(-inf..0) | 0!..1 | 2
int(1..2) | nonInt(-inf..inf) => nonInt(-inf..0) | 0!..!3 | nonInt(3..inf)
int(1..2) | (1 | int(3..4)) => int(1..4)
int(1..2) | string => int(1..2) | string
int(1..2) | "" => int(1..2) | ""
int(1..2) | "foo" => int(1..2) | "foo"
int(1..2) | "bar" => int(1..2) | "bar"
int(1..2) | "ðŸ’©" => int(1..2) | "ðŸ’©"
int(1..2) | ("bar" | "foo") => int(1..2) | "bar" | "foo"
int(1..2) | ("baz" | "foo") => int(1..2) | "baz" | "foo"
int(1..2) | invStrSet("foo") => int(1..2) | invStrSet("foo")
int(1..2) | invStrSet("bar" | "foo") => int(1..2) | invStrSet("bar" | "foo")
int(1..2) | invStrSet("bar") => int(1..2) | invStrSet("bar")
int(1..2) | invStrSet("") => int(1..2) | invStrSet("")
int(5..20) | int(-20..-5) => int(-20..-5) | int(5..20)
int(5..20) | int(-10..10) => int(-10..20)
int(5..20) | int(0..inf) => int(0..inf)
int(5..20) | int(1..inf) => int(1..inf)
int(5..20) | int(-inf..0) => int(-inf..0) | int(5..20)
int(5..20) | int(-inf..1) => int(-inf..1) | int(5..20)
int(5..20) | int(-inf..inf) => int(-inf..inf)
int(5..20) | nonInt(0..1) => nonInt(0..1) | int(5..20)
int(5..20) | nonInt(0..2) => nonInt(0..2) | int(5..20)
int(5..20) | nonInt(-1..2) => nonInt(-1..2) | int(5..20)
int(5..20) | nonInt(0..inf) => nonInt(0..4) | 4!..!21 | nonInt(21..inf)
int(5..20) | nonInt(-1..inf) => nonInt(-1..4) | 4!..!21 | nonInt(21..inf)
int(5..20) | nonInt(-inf..0) => nonInt(-inf..0) | int(5..20)
int(5..20) | nonInt(-inf..1) => nonInt(-inf..1) | int(5..20)
int(5..20) | nonInt(-inf..inf) => nonInt(-inf..4) | 4!..!21 | nonInt(21..inf)
int(5..20) | (1 | int(3..4)) => 1 | int(3..20)
int(5..20) | string => int(5..20) | string
int(5..20) | "" => int(5..20) | ""
int(5..20) | "foo" => int(5..20) | "foo"
int(5..20) | "bar" => int(5..20) | "bar"
int(5..20) | "ðŸ’©" => int(5..20) | "ðŸ’©"
int(5..20) | ("bar" | "foo") => int(5..20) | "bar" | "foo"
int(5..20) | ("baz" | "foo") => int(5..20) | "baz" | "foo"
int(5..20) | invStrSet("foo") => int(5..20) | invStrSet("foo")
int(5..20) | invStrSet("bar" | "foo") => int(5..20) | invStrSet("bar" | "foo")
int(5..20) | invStrSet("bar") => int(5..20) | invStrSet("bar")
int(5..20) | invStrSet("") => int(5..20) | invStrSet("")
int(-20..-5) | int(-10..10) => int(-20..10)
int(-20..-5) | int(0..inf) => int(-20..-5) | int(0..inf)
int(-20..-5) | int(1..inf) => int(-20..-5) | int(1..inf)
int(-20..-5) | int(-inf..0) => int(-inf..0)
int(-20..-5) | int(-inf..1) => int(-inf..1)
int(-20..-5) | int(-inf..inf) => int(-inf..inf)
int(-20..-5) | nonInt(0..1) => int(-20..-5) | nonInt(0..1)
int(-20..-5) | nonInt(0..2) => int(-20..-5) | nonInt(0..2)
int(-20..-5) | nonInt(-1..2) => int(-20..-5) | nonInt(-1..2)
int(-20..-5) | nonInt(0..inf) => int(-20..-5) | nonInt(0..inf)
int(-20..-5) | nonInt(-1..inf) => int(-20..-5) | nonInt(-1..inf)
int(-20..-5) | nonInt(-inf..0) => nonInt(-inf..-21) | -21!..!-4 | nonInt(-4..0)
int(-20..-5) | nonInt(-inf..1) => nonInt(-inf..-21) | -21!..!-4 | nonInt(-4..1)
int(-20..-5) | nonInt(-inf..inf) => nonInt(-inf..-21) | -21!..!-4 | nonInt(-4..inf)
int(-20..-5) | (1 | int(3..4)) => int(-20..-5) | 1 | int(3..4)
int(-20..-5) | string => int(-20..-5) | string
int(-20..-5) | "" => int(-20..-5) | ""
int(-20..-5) | "foo" => int(-20..-5) | "foo"
int(-20..-5) | "bar" => int(-20..-5) | "bar"
int(-20..-5) | "ðŸ’©" => int(-20..-5) | "ðŸ’©"
int(-20..-5) | ("bar" | "foo") => int(-20..-5) | "bar" | "foo"
int(-20..-5) | ("baz" | "foo") => int(-20..-5) | "baz" | "foo"
int(-20..-5) | invStrSet("foo") => int(-20..-5) | invStrSet("foo")
int(-20..-5) | invStrSet("bar" | "foo") => int(-20..-5) | invStrSet("bar" | "foo")
int(-20..-5) | invStrSet("bar") => int(-20..-5) | invStrSet("bar")
int(-20..-5) | invStrSet("") => int(-20..-5) | invStrSet("")
int(-10..10) | int(0..inf) => int(-10..inf)
int(-10..10) | int(1..inf) => int(-10..inf)
int(-10..10) | int(-inf..0) => int(-inf..10)
int(-10..10) | int(-inf..1) => int(-inf..10)
int(-10..10) | int(-inf..inf) => int(-inf..inf)
int(-10..10) | nonInt(0..1) => int(-10..-1) | 0..1 | int(2..10)
int(-10..10) | nonInt(0..2) => int(-10..-1) | 0..2 | int(3..10)
int(-10..10) | nonInt(-1..2) => int(-10..-2) | -1..2 | int(3..10)
int(-10..10) | nonInt(0..inf) => int(-10..-1) | 0..!11 | nonInt(11..inf)
int(-10..10) | nonInt(-1..inf) => int(-10..-2) | -1..!11 | nonInt(11..inf)
int(-10..10) | nonInt(-inf..0) => nonInt(-inf..-11) | -11!..0 | int(1..10)
int(-10..10) | nonInt(-inf..1) => nonInt(-inf..-11) | -11!..1 | int(2..10)
int(-10..10) | nonInt(-inf..inf) => nonInt(-inf..-11) | -11!..!11 | nonInt(11..inf)
int(-10..10) | (1 | int(3..4)) => int(-10..10)
int(-10..10) | string => int(-10..10) | string
int(-10..10) | "" => int(-10..10) | ""
int(-10..10) | "foo" => int(-10..10) | "foo"
int(-10..10) | "bar" => int(-10..10) | "bar"
int(-10..10) | "ðŸ’©" => int(-10..10) | "ðŸ’©"
int(-10..10) | ("bar" | "foo") => int(-10..10) | "bar" | "foo"
int(-10..10) | ("baz" | "foo") => int(-10..10) | "baz" | "foo"
int(-10..10) | invStrSet("foo") => int(-10..10) | invStrSet("foo")
int(-10..10) | invStrSet("bar" | "foo") => int(-10..10) | invStrSet("bar" | "foo")
int(-10..10) | invStrSet("bar") => int(-10..10) | invStrSet("bar")
int(-10..10) | invStrSet("") => int(-10..10) | invStrSet("")
int(0..inf) | int(1..inf) => int(0..inf)
int(0..inf) | int(-inf..0) => int(-inf..inf)
int(0..inf) | int(-inf..1) => int(-inf..inf)
int(0..inf) | int(-inf..inf) => int(-inf..inf)
int(0..inf) | nonInt(0..1) => 0..1 | int(2..inf)
int(0..inf) | nonInt(0..2) => 0..2 | int(3..inf)
int(0..inf) | nonInt(-1..2) => -1!..2 | int(3..inf)
int(0..inf) | nonInt(0..inf) => 0..!inf
int(0..inf) | nonInt(-1..inf) => -1!..!inf
int(0..inf) | nonInt(-inf..0) => nonInt(-inf..-1) | -1!..0 | int(1..inf)
int(0..inf) | nonInt(-inf..1) => nonInt(-inf..-1) | -1!..1 | int(2..inf)
int(0..inf) | nonInt(-inf..inf) => nonInt(-inf..-1) | -1!..!inf
int(0..inf) | (1 | int(3..4)) => int(0..inf)
int(0..inf) | string => int(0..inf) | string
int(0..inf) | "" => int(0..inf) | ""
int(0..inf) | "foo" => int(0..inf) | "foo"
int(0..inf) | "bar" => int(0..inf) | "bar"
int(0..inf) | "ðŸ’©" => int(0..inf) | "ðŸ’©"
int(0..inf) | ("bar" | "foo") => int(0..inf) | "bar" | "foo"
int(0..inf) | ("baz" | "foo") => int(0..inf) | "baz" | "foo"
int(0..inf) | invStrSet("foo") => int(0..inf) | invStrSet("foo")
int(0..inf) | invStrSet("bar" | "foo") => int(0..inf) | invStrSet("bar" | "foo")
int(0..inf) | invStrSet("bar") => int(0..inf) | invStrSet("bar")
int(0..inf) | invStrSet("") => int(0..inf) | invStrSet("")
int(1..inf) | int(-inf..0) => int(-inf..inf)
int(1..inf) | int(-inf..1) => int(-inf..inf)
int(1..inf) | int(-inf..inf) => int(-inf..inf)
int(1..inf) | nonInt(0..1) => 0!..1 | int(2..inf)
int(1..inf) | nonInt(0..2) => 0!..2 | int(3..inf)
int(1..inf) | nonInt(-1..2) => nonInt(-1..0) | 0!..2 | int(3..inf)
int(1..inf) | nonInt(0..inf) => 0!..!inf
int(1..inf) | nonInt(-1..inf) => nonInt(-1..0) | 0!..!inf
int(1..inf) | nonInt(-inf..0) => nonInt(-inf..0) | int(1..inf)
int(1..inf) | nonInt(-inf..1) => nonInt(-inf..0) | 0!..1 | int(2..inf)
int(1..inf) | nonInt(-inf..inf) => nonInt(-inf..0) | 0!..!inf
int(1..inf) | (1 | int(3..4)) => int(1..inf)
int(1..inf) | string => int(1..inf) | string
int(1..inf) | "" => int(1..inf) | ""
int(1..inf) | "foo" => int(1..inf) | "foo"
int(1..inf) | "bar" => int(1..inf) | "bar"
int(1..inf) | "ðŸ’©" => int(1..inf) | "ðŸ’©"
int(1..inf) | ("bar" | "foo") => int(1..inf) | "bar" | "foo"
int(1..inf) | ("baz" | "foo") => int(1..inf) | "baz" | "foo"
int(1..inf) | invStrSet("foo") => int(1..inf) | invStrSet("foo")
int(1..inf) | invStrSet("bar" | "foo") => int(1..inf) | invStrSet("bar" | "foo")
int(1..inf) | invStrSet("bar") => int(1..inf) | invStrSet("bar")
int(1..inf) | invStrSet("") => int(1..inf) | invStrSet("")
int(-inf..0) | int(-inf..1) => int(-inf..1)
int(-inf..0) | int(-inf..inf) => int(-inf..inf)
int(-inf..0) | nonInt(0..1) => int(-inf..-1) | 0..!1
int(-inf..0) | nonInt(0..2) => int(-inf..-1) | 0..!1 | nonInt(1..2)
int(-inf..0) | nonInt(-1..2) => int(-inf..-2) | -1..!1 | nonInt(1..2)
int(-inf..0) | nonInt(0..inf) => int(-inf..-1) | 0..!1 | nonInt(1..inf)
int(-inf..0) | nonInt(-1..inf) => int(-inf..-2) | -1..!1 | nonInt(1..inf)
int(-inf..0) | nonInt(-inf..0) => -inf!..0
int(-inf..0) | nonInt(-inf..1) => -inf!..!1
int(-inf..0) | nonInt(-inf..inf) => -inf!..!1 | nonInt(1..inf)
int(-inf..0) | (1 | int(3..4)) => int(-inf..1) | int(3..4)
int(-inf..0) | string => int(-inf..0) | string
int(-inf..0) | "" => int(-inf..0) | ""
int(-inf..0) | "foo" => int(-inf..0) | "foo"
int(-inf..0) | "bar" => int(-inf..0) | "bar"
int(-inf..0) | "ðŸ’©" => int(-inf..0) | "ðŸ’©"
int(-inf..0) | ("bar" | "foo") => int(-inf..0) | "bar" | "foo"
int(-inf..0) | ("baz" | "foo") => int(-inf..0) | "baz" | "foo"
int(-inf..0) | invStrSet("foo") => int(-inf..0) | invStrSet("foo")
int(-inf..0) | invStrSet("bar" | "foo") => int(-inf..0) | invStrSet("bar" | "foo")
int(-inf..0) | invStrSet("bar") => int(-inf..0) | invStrSet("bar")
int(-inf..0) | invStrSet("") => int(-inf..0) | invStrSet("")
int(-inf..1) | int(-inf..inf) => int(-inf..inf)
int(-inf..1) | nonInt(0..1) => int(-inf..-1) | 0..1
int(-inf..1) | nonInt(0..2) => int(-inf..-1) | 0..!2
int(-inf..1) | nonInt(-1..2) => int(-inf..-2) | -1..!2
int(-inf..1) | nonInt(0..inf) => int(-inf..-1) | 0..!2 | nonInt(2..inf)
int(-inf..1) | nonInt(-1..inf) => int(-inf..-2) | -1..!2 | nonInt(2..inf)
int(-inf..1) | nonInt(-inf..0) => -inf!..0 | 1
int(-inf..1) | nonInt(-inf..1) => -inf!..1
int(-inf..1) | nonInt(-inf..inf) => -inf!..!2 | nonInt(2..inf)
int(-inf..1) | (1 | int(3..4)) => int(-inf..1) | int(3..4)
int(-inf..1) | string => int(-inf..1) | string
int(-inf..1) | "" => int(-inf..1) | ""
int(-inf..1) | "foo" => int(-inf..1) | "foo"
int(-inf..1) | "bar" => int(-inf..1) | "bar"
int(-inf..1) | "ðŸ’©" => int(-inf..1) | "ðŸ’©"
int(-inf..1) | ("bar" | "foo") => int(-inf..1) | "bar" | "foo"
int(-inf..1) | ("baz" | "foo") => int(-inf..1) | "baz" | "foo"
int(-inf..1) | invStrSet("foo") => int(-inf..1) | invStrSet("foo")
int(-inf..1) | invStrSet("bar" | "foo") => int(-inf..1) | invStrSet("bar" | "foo")
int(-inf..1) | invStrSet("bar") => int(-inf..1) | invStrSet("bar")
int(-inf..1) | invStrSet("") => int(-inf..1) | invStrSet("")
int(-inf..inf) | nonInt(0..1) => int(-inf..-1) | 0..1 | int(2..inf)
int(-inf..inf) | nonInt(0..2) => int(-inf..-1) | 0..2 | int(3..inf)
int(-inf..inf) | nonInt(-1..2) => int(-inf..-2) | -1..2 | int(3..inf)
int(-inf..inf) | nonInt(0..inf) => int(-inf..-1) | 0..!inf
int(-inf..inf) | nonInt(-1..inf) => int(-inf..-2) | -1..!inf
int(-inf..inf) | nonInt(-inf..0) => -inf!..0 | int(1..inf)
int(-inf..inf) | nonInt(-inf..1) => -inf!..1 | int(2..inf)
int(-inf..inf) | nonInt(-inf..inf) => -inf!..!inf
int(-inf..inf) | (1 | int(3..4)) => int(-inf..inf)
int(-inf..inf) | string => int(-inf..inf) | string
int(-inf..inf) | "" => int(-inf..inf) | ""
int(-inf..inf) | "foo" => int(-inf..inf) | "foo"
int(-inf..inf) | "bar" => int(-inf..inf) | "bar"
int(-inf..inf) | "ðŸ’©" => int(-inf..inf) | "ðŸ’©"
int(-inf..inf) | ("bar" | "foo") => int(-inf..inf) | "bar" | "foo"
int(-inf..inf) | ("baz" | "foo") => int(-inf..inf) | "baz" | "foo"
int(-inf..inf) | invStrSet("foo") => int(-inf..inf) | invStrSet("foo")
int(-inf..inf) | invStrSet("bar" | "foo") => int(-inf..inf) | invStrSet("bar" | "foo")
int(-inf..inf) | invStrSet("bar") => int(-inf..inf) | invStrSet("bar")
int(-inf..inf) | invStrSet("") => int(-inf..inf) | invStrSet("")
nonInt(0..1) | nonInt(0..2) => nonInt(0..2)
nonInt(0..1) | nonInt(-1..2) => nonInt(-1..2)
nonInt(0..1) | nonInt(0..inf) => nonInt(0..inf)
nonInt(0..1) | nonInt(-1..inf) => nonInt(-1..inf)
nonInt(0..1) | nonInt(-inf..0) => nonInt(-inf..1)
nonInt(0..1) | nonInt(-inf..1) => nonInt(-inf..1)
nonInt(0..1) | nonInt(-inf..inf) => nonInt(-inf..inf)
nonInt(0..1) | (1 | int(3..4)) => 0!..1 | int(3..4)
nonInt(0..1) | string => nonInt(0..1) | string
nonInt(0..1) | "" => nonInt(0..1) | ""
nonInt(0..1) | "foo" => nonInt(0..1) | "foo"
nonInt(0..1) | "bar" => nonInt(0..1) | "bar"
nonInt(0..1) | "ðŸ’©" => nonInt(0..1) | "ðŸ’©"
nonInt(0..1) | ("bar" | "foo") => nonInt(0..1) | "bar" | "foo"
nonInt(0..1) | ("baz" | "foo") => nonInt(0..1) | "baz" | "foo"
nonInt(0..1) | invStrSet("foo") => nonInt(0..1) | invStrSet("foo")
nonInt(0..1) | invStrSet("bar" | "foo") => nonInt(0..1) | invStrSet("bar" | "foo")
nonInt(0..1) | invStrSet("bar") => nonInt(0..1) | invStrSet("bar")
nonInt(0..1) | invStrSet("") => nonInt(0..1) | invStrSet("")
nonInt(0..2) | nonInt(-1..2) => nonInt(-1..2)
nonInt(0..2) | nonInt(0..inf) => nonInt(0..inf)
nonInt(0..2) | nonInt(-1..inf) => nonInt(-1..inf)
nonInt(0..2) | nonInt(-inf..0) => nonInt(-inf..2)
nonInt(0..2) | nonInt(-inf..1) => nonInt(-inf..2)
nonInt(0..2) | nonInt(-inf..inf) => nonInt(-inf..inf)
nonInt(0..2) | (1 | int(3..4)) => 0!..!2 | int(3..4)
nonInt(0..2) | string => nonInt(0..2) | string
nonInt(0..2) | "" => nonInt(0..2) | ""
nonInt(0..2) | "foo" => nonInt(0..2) | "foo"
nonInt(0..2) | "bar" => nonInt(0..2) | "bar"
nonInt(0..2) | "ðŸ’©" => nonInt(0..2) | "ðŸ’©"
nonInt(0..2) | ("bar" | "foo") => nonInt(0..2) | "bar" | "foo"
nonInt(0..2) | ("baz" | "foo") => nonInt(0..2) | "baz" | "foo"
nonInt(0..2) | invStrSet("foo") => nonInt(0..2) | invStrSet("foo")
nonInt(0..2) | invStrSet("bar" | "foo") => nonInt(0..2) | invStrSet("bar" | "foo")
nonInt(0..2) | invStrSet("bar") => nonInt(0..2) | invStrSet("bar")
nonInt(0..2) | invStrSet("") => nonInt(0..2) | invStrSet("")
nonInt(-1..2) | nonInt(0..inf) => nonInt(-1..inf)
nonInt(-1..2) | nonInt(-1..inf) => nonInt(-1..inf)
nonInt(-1..2) | nonInt(-inf..0) => nonInt(-inf..2)
nonInt(-1..2) | nonInt(-inf..1) => nonInt(-inf..2)
nonInt(-1..2) | nonInt(-inf..inf) => nonInt(-inf..inf)
nonInt(-1..2) | (1 | int(3..4)) => nonInt(-1..0) | 0!..!2 | int(3..4)
nonInt(-1..2) | string => nonInt(-1..2) | string
nonInt(-1..2) | "" => nonInt(-1..2) | ""
nonInt(-1..2) | "foo" => nonInt(-1..2) | "foo"
nonInt(-1..2) | "bar" => nonInt(-1..2) | "bar"
nonInt(-1..2) | "ðŸ’©" => nonInt(-1..2) | "ðŸ’©"
nonInt(-1..2) | ("bar" | "foo") => nonInt(-1..2) | "bar" | "foo"
nonInt(-1..2) | ("baz" | "foo") => nonInt(-1..2) | "baz" | "foo"
nonInt(-1..2) | invStrSet("foo") => nonInt(-1..2) | invStrSet("foo")
nonInt(-1..2) | invStrSet("bar" | "foo") => nonInt(-1..2) | invStrSet("bar" | "foo")
nonInt(-1..2) | invStrSet("bar") => nonInt(-1..2) | invStrSet("bar")
nonInt(-1..2) | invStrSet("") => nonInt(-1..2) | invStrSet("")
nonInt(0..inf) | nonInt(-1..inf) => nonInt(-1..inf)
nonInt(0..inf) | nonInt(-inf..0) => nonInt(-inf..inf)
nonInt(0..inf) | nonInt(-inf..1) => nonInt(-inf..inf)
nonInt(0..inf) | nonInt(-inf..inf) => nonInt(-inf..inf)
nonInt(0..inf) | (1 | int(3..4)) => 0!..!2 | 2!..!5 | nonInt(5..inf)
nonInt(0..inf) | string => nonInt(0..inf) | string
nonInt(0..inf) | "" => nonInt(0..inf) | ""
nonInt(0..inf) | "foo" => nonInt(0..inf) | "foo"
nonInt(0..inf) | "bar" => nonInt(0..inf) | "bar"
nonInt(0..inf) | "ðŸ’©" => nonInt(0..inf) | "ðŸ’©"
nonInt(0..inf) | ("bar" | "foo") => nonInt(0..inf) | "bar" | "foo"
nonInt(0..inf) | ("baz" | "foo") => nonInt(0..inf) | "baz" | "foo"
nonInt(0..inf) | invStrSet("foo") => nonInt(0..inf) | invStrSet("foo")
nonInt(0..inf) | invStrSet("bar" | "foo") => nonInt(0..inf) | invStrSet("bar" | "foo")
nonInt(0..inf) | invStrSet("bar") => nonInt(0..inf) | invStrSet("bar")
nonInt(0..inf) | invStrSet("") => nonInt(0..inf) | invStrSet("")
nonInt(-1..inf) | nonInt(-inf..0) => nonInt(-inf..inf)
nonInt(-1..inf) | nonInt(-inf..1) => nonInt(-inf..inf)
nonInt(-1..inf) | nonInt(-inf..inf) => nonInt(-inf..inf)
nonInt(-1..inf) | (1 | int(3..4)) => nonInt(-1..0) | 0!..!2 | 2!..!5 | nonInt(5..inf)
nonInt(-1..inf) | string => nonInt(-1..inf) | string
nonInt(-1..inf) | "" => nonInt(-1..inf) | ""
nonInt(-1..inf) | "foo" => nonInt(-1..inf) | "foo"
nonInt(-1..inf) | "bar" => nonInt(-1..inf) | "bar"
nonInt(-1..inf) | "ðŸ’©" => nonInt(-1..inf) | "ðŸ’©"
nonInt(-1..inf) | ("bar" | "foo") => nonInt(-1..inf) | "bar" | "foo"
nonInt(-1..inf) | ("baz" | "foo") => nonInt(-1..inf) | "baz" | "foo"
nonInt(-1..inf) | invStrSet("foo") => nonInt(-1..inf) | invStrSet("foo")
nonInt(-1..inf) | invStrSet("bar" | "foo") => nonInt(-1..inf) | invStrSet("bar" | "foo")
nonInt(-1..inf) | invStrSet("bar") => nonInt(-1..inf) | invStrSet("bar")
nonInt(-1..inf) | invStrSet("") => nonInt(-1..inf) | invStrSet("")
nonInt(-inf..0) | nonInt(-inf..1) => nonInt(-inf..1)
nonInt(-inf..0) | nonInt(-inf..inf) => nonInt(-inf..inf)
nonInt(-inf..0) | (1 | int(3..4)) => nonInt(-inf..0) | 1 | int(3..4)
nonInt(-inf..0) | string => nonInt(-inf..0) | string
nonInt(-inf..0) | "" => nonInt(-inf..0) | ""
nonInt(-inf..0) | "foo" => nonInt(-inf..0) | "foo"
nonInt(-inf..0) | "bar" => nonInt(-inf..0) | "bar"
nonInt(-inf..0) | "ðŸ’©" => nonInt(-inf..0) | "ðŸ’©"
nonInt(-inf..0) | ("bar" | "foo") => nonInt(-inf..0) | "bar" | "foo"
nonInt(-inf..0) | ("baz" | "foo") => nonInt(-inf..0) | "baz" | "foo"
nonInt(-inf..0) | invStrSet("foo") => nonInt(-inf..0) | invStrSet("foo")
nonInt(-inf..0) | invStrSet("bar" | "foo") => nonInt(-inf..0) | invStrSet("bar" | "foo")
nonInt(-inf..0) | invStrSet("bar") => nonInt(-inf..0) | invStrSet("bar")
nonInt(-inf..0) | invStrSet("") => nonInt(-inf..0) | invStrSet("")
nonInt(-inf..1) | nonInt(-inf..inf) => nonInt(-inf..inf)
nonInt(-inf..1) | (1 | int(3..4)) => nonInt(-inf..0) | 0!..1 | int(3..4)
nonInt(-inf..1) | string => nonInt(-inf..1) | string
nonInt(-inf..1) | "" => nonInt(-inf..1) | ""
nonInt(-inf..1) | "foo" => nonInt(-inf..1) | "foo"
nonInt(-inf..1) | "bar" => nonInt(-inf..1) | "bar"
nonInt(-inf..1) | "ðŸ’©" => nonInt(-inf..1) | "ðŸ’©"
nonInt(-inf..1) | ("bar" | "foo") => nonInt(-inf..1) | "bar" | "foo"
nonInt(-inf..1) | ("baz" | "foo") => nonInt(-inf..1) | "baz" | "foo"
nonInt(-inf..1) | invStrSet("foo") => nonInt(-inf..1) | invStrSet("foo")
nonInt(-inf..1) | invStrSet("bar" | "foo") => nonInt(-inf..1) | invStrSet("bar" | "foo")
nonInt(-inf..1) | invStrSet("bar") => nonInt(-inf..1) | invStrSet("bar")
nonInt(-inf..1) | invStrSet("") => nonInt(-inf..1) | invStrSet("")
nonInt(-inf..inf) | (1 | int(3..4)) => nonInt(-inf..0) | 0!..!2 | 2!..!5 | nonInt(5..inf)
nonInt(-inf..inf) | string => nonInt(-inf..inf) | string
nonInt(-inf..inf) | "" => nonInt(-inf..inf) | ""
nonInt(-inf..inf) | "foo" => nonInt(-inf..inf) | "foo"
nonInt(-inf..inf) | "bar" => nonInt(-inf..inf) | "bar"
nonInt(-inf..inf) | "ðŸ’©" => nonInt(-inf..inf) | "ðŸ’©"
nonInt(-inf..inf) | ("bar" | "foo") => nonInt(-inf..inf) | "bar" | "foo"
nonInt(-inf..inf) | ("baz" | "foo") => nonInt(-inf..inf) | "baz" | "foo"
nonInt(-inf..inf) | invStrSet("foo") => nonInt(-inf..inf) | invStrSet("foo")
nonInt(-inf..inf) | invStrSet("bar" | "foo") => nonInt(-inf..inf) | invStrSet("bar" | "foo")
nonInt(-inf..inf) | invStrSet("bar") => nonInt(-inf..inf) | invStrSet("bar")
nonInt(-inf..inf) | invStrSet("") => nonInt(-inf..inf) | invStrSet("")
(1 | int(3..4)) | string => 1 | int(3..4) | string
(1 | int(3..4)) | "" => 1 | int(3..4) | ""
(1 | int(3..4)) | "foo" => 1 | int(3..4) | "foo"
(1 | int(3..4)) | "bar" => 1 | int(3..4) | "bar"
(1 | int(3..4)) | "ðŸ’©" => 1 | int(3..4) | "ðŸ’©"
(1 | int(3..4)) | ("bar" | "foo") => 1 | int(3..4) | "bar" | "foo"
(1 | int(3..4)) | ("baz" | "foo") => 1 | int(3..4) | "baz" | "foo"
(1 | int(3..4)) | invStrSet("foo") => 1 | int(3..4) | invStrSet("foo")
(1 | int(3..4)) | invStrSet("bar" | "foo") => 1 | int(3..4) | invStrSet("bar" | "foo")
(1 | int(3..4)) | invStrSet("bar") => 1 | int(3..4) | invStrSet("bar")
(1 | int(3..4)) | invStrSet("") => 1 | int(3..4) | invStrSet("")
string | "" => string
string | "foo" => string
string | "bar" => string
string | "ðŸ’©" => string
string | ("bar" | "foo") => string
string | ("baz" | "foo") => string
string | invStrSet("foo") => string
string | invStrSet("bar" | "foo") => string
string | invStrSet("bar") => string
string | invStrSet("") => string
"" | "foo" => "" | "foo"
"" | "bar" => "" | "bar"
"" | "ðŸ’©" => "" | "ðŸ’©"
"" | ("bar" | "foo") => "" | "bar" | "foo"
"" | ("baz" | "foo") => "" | "baz" | "foo"
"" | invStrSet("foo") => invStrSet("foo")
"" | invStrSet("bar" | "foo") => invStrSet("bar" | "foo")
"" | invStrSet("bar") => invStrSet("bar")
"" | invStrSet("") => string
"foo" | "bar" => "bar" | "foo"
"foo" | "ðŸ’©" => "foo" | "ðŸ’©"
"foo" | ("bar" | "foo") => "bar" | "foo"
"foo" | ("baz" | "foo") => "baz" | "foo"
"foo" | invStrSet("foo") => string
"foo" | invStrSet("bar" | "foo") => invStrSet("bar")
"foo" | invStrSet("bar") => invStrSet("bar")
"foo" | invStrSet("") => invStrSet("")
"bar" | "ðŸ’©" => "bar" | "ðŸ’©"
"bar" | ("bar" | "foo") => "bar" | "foo"
"bar" | ("baz" | "foo") => "bar" | "baz" | "foo"
"bar" | invStrSet("foo") => invStrSet("foo")
"bar" | invStrSet("bar" | "foo") => invStrSet("foo")
"bar" | invStrSet("bar") => string
"bar" | invStrSet("") => invStrSet("")
"ðŸ’©" | ("bar" | "foo") => "bar" | "foo" | "ðŸ’©"
"ðŸ’©" | ("baz" | "foo") => "baz" | "foo" | "ðŸ’©"
"ðŸ’©" | invStrSet("foo") => invStrSet("foo")
"ðŸ’©" | invStrSet("bar" | "foo") => invStrSet("bar" | "foo")
"ðŸ’©" | invStrSet("bar") => invStrSet("bar")
"ðŸ’©" | invStrSet("") => invStrSet("")
("bar" | "foo") | ("baz" | "foo") => "bar" | "baz" | "foo"
("bar" | "foo") | invStrSet("foo") => string
("bar" | "foo") | invStrSet("bar" | "foo") => string
("bar" | "foo") | invStrSet("bar") => string
("bar" | "foo") | invStrSet("") => invStrSet("")
("baz" | "foo") | invStrSet("foo") => string
("baz" | "foo") | invStrSet("bar" | "foo") => invStrSet("bar")
("baz" | "foo") | invStrSet("bar") => invStrSet("bar")
("baz" | "foo") | invStrSet("") => invStrSet("")
invStrSet("foo") | invStrSet("bar" | "foo") => invStrSet("foo")
invStrSet("foo") | invStrSet("bar") => string
invStrSet("foo") | invStrSet("") => string
invStrSet("bar" | "foo") | invStrSet("bar") => invStrSet("bar")
invStrSet("bar" | "foo") | invStrSet("") => string
invStrSet("bar") | invStrSet("") => string
never & any => never
never & number => never
never & -3.14 => never
never & -2 => never
never & -1 => never
never & -0.5 => never
never & 0 => never
never & 0.5 => never
never & 1 => never
never & 2 => never
never & 2.78 => never
never & 3 => never
never & 3.14 => never
never & 10 => never
never & 100 => never
never & -inf => never
never & inf => never
never & nan => never
never & 0..1 => never
never & 0!..1 => never
never & 0..!1 => never
never & 0..2 => never
never & 0!..!2 => never
never & 0.5..1.5 => never
never & 0.5..2.5 => never
never & 0.5!..2.5 => never
never & 0.5..!2.5 => never
never & -2.56..3.35 => never
never & 0.5..0.75 => never
never & 1..2 => never
never & 0..inf => never
never & 0!..inf => never
never & 0..!inf => never
never & 0!..!inf => never
never & 1..inf => never
never & 1!..inf => never
never & 1..!inf => never
never & 2..inf => never
never & 2!..inf => never
never & 2.5..inf => never
never & -inf..0 => never
never & -inf..inf => never
never & -inf!..inf => never
never & -inf..!inf => never
never & -inf!..!inf => never
never & int(0..1) => never
never & int(0..2) => never
never & int(1..2) => never
never & int(5..20) => never
never & int(-20..-5) => never
never & int(-10..10) => never
never & int(0..inf) => never
never & int(1..inf) => never
never & int(-inf..0) => never
never & int(-inf..1) => never
never & int(-inf..inf) => never
never & nonInt(0..1) => never
never & nonInt(0..2) => never
never & nonInt(-1..2) => never
never & nonInt(0..inf) => never
never & nonInt(-1..inf) => never
never & nonInt(-inf..0) => never
never & nonInt(-inf..1) => never
never & nonInt(-inf..inf) => never
never & (1 | int(3..4)) => never
never & string => never
never & "" => never
never & "foo" => never
never & "bar" => never
never & "ðŸ’©" => never
never & ("bar" | "foo") => never
never & ("baz" | "foo") => never
never & invStrSet("foo") => never
never & invStrSet("bar" | "foo") => never
never & invStrSet("bar") => never
never & invStrSet("") => never
any & number => number
any & -3.14 => -3.14
any & -2 => -2
any & -1 => -1
any & -0.5 => -0.5
any & 0 => 0
any & 0.5 => 0.5
any & 1 => 1
any & 2 => 2
any & 2.78 => 2.78
any & 3 => 3
any & 3.14 => 3.14
any & 10 => 10
any & 100 => 100
any & -inf => -inf
any & inf => inf
any & nan => nan
any & 0..1 => 0..1
any & 0!..1 => 0!..1
any & 0..!1 => 0..!1
any & 0..2 => 0..2
any & 0!..!2 => 0!..!2
any & 0.5..1.5 => 0.5..1.5
any & 0.5..2.5 => 0.5..2.5
any & 0.5!..2.5 => 0.5!..2.5
any & 0.5..!2.5 => 0.5..!2.5
any & -2.56..3.35 => -2.56..3.35
any & 0.5..0.75 => 0.5..0.75
any & 1..2 => 1..2
any & 0..inf => 0..inf
any & 0!..inf => 0!..inf
any & 0..!inf => 0..!inf
any & 0!..!inf => 0!..!inf
any & 1..inf => 1..inf
any & 1!..inf => 1!..inf
any & 1..!inf => 1..!inf
any & 2..inf => 2..inf
any & 2!..inf => 2!..inf
any & 2.5..inf => 2.5..inf
any & -inf..0 => -inf..0
any & -inf..inf => -inf..inf
any & -inf!..inf => -inf!..inf
any & -inf..!inf => -inf..!inf
any & -inf!..!inf => -inf!..!inf
any & int(0..1) => int(0..1)
any & int(0..2) => int(0..2)
any & int(1..2) => int(1..2)
any & int(5..20) => int(5..20)
any & int(-20..-5) => int(-20..-5)
any & int(-10..10) => int(-10..10)
any & int(0..inf) => int(0..inf)
any & int(1..inf) => int(1..inf)
any & int(-inf..0) => int(-inf..0)
any & int(-inf..1) => int(-inf..1)
any & int(-inf..inf) => int(-inf..inf)
any & nonInt(0..1) => nonInt(0..1)
any & nonInt(0..2) => nonInt(0..2)
any & nonInt(-1..2) => nonInt(-1..2)
any & nonInt(0..inf) => nonInt(0..inf)
any & nonInt(-1..inf) => nonInt(-1..inf)
any & nonInt(-inf..0) => nonInt(-inf..0)
any & nonInt(-inf..1) => nonInt(-inf..1)
any & nonInt(-inf..inf) => nonInt(-inf..inf)
any & (1 | int(3..4)) => 1 | int(3..4)
any & string => string
any & "" => ""
any & "foo" => "foo"
any & "bar" => "bar"
any & "ðŸ’©" => "ðŸ’©"
any & ("bar" | "foo") => "bar" | "foo"
any & ("baz" | "foo") => "baz" | "foo"
any & invStrSet("foo") => invStrSet("foo")
any & invStrSet("bar" | "foo") => invStrSet("bar" | "foo")
any & invStrSet("bar") => invStrSet("bar")
any & invStrSet("") => invStrSet("")
number & -3.14 => -3.14
number & -2 => -2
number & -1 => -1
number & -0.5 => -0.5
number & 0 => 0
number & 0.5 => 0.5
number & 1 => 1
number & 2 => 2
number & 2.78 => 2.78
number & 3 => 3
number & 3.14 => 3.14
number & 10 => 10
number & 100 => 100
number & -inf => -inf
number & inf => inf
number & nan => nan
number & 0..1 => 0..1
number & 0!..1 => 0!..1
number & 0..!1 => 0..!1
number & 0..2 => 0..2
number & 0!..!2 => 0!..!2
number & 0.5..1.5 => 0.5..1.5
number & 0.5..2.5 => 0.5..2.5
number & 0.5!..2.5 => 0.5!..2.5
number & 0.5..!2.5 => 0.5..!2.5
number & -2.56..3.35 => -2.56..3.35
number & 0.5..0.75 => 0.5..0.75
number & 1..2 => 1..2
number & 0..inf => 0..inf
number & 0!..inf => 0!..inf
number & 0..!inf => 0..!inf
number & 0!..!inf => 0!..!inf
number & 1..inf => 1..inf
number & 1!..inf => 1!..inf
number & 1..!inf => 1..!inf
number & 2..inf => 2..inf
number & 2!..inf => 2!..inf
number & 2.5..inf => 2.5..inf
number & -inf..0 => -inf..0
number & -inf..inf => -inf..inf
number & -inf!..inf => -inf!..inf
number & -inf..!inf => -inf..!inf
number & -inf!..!inf => -inf!..!inf
number & int(0..1) => int(0..1)
number & int(0..2) => int(0..2)
number & int(1..2) => int(1..2)
number & int(5..20) => int(5..20)
number & int(-20..-5) => int(-20..-5)
number & int(-10..10) => int(-10..10)
number & int(0..inf) => int(0..inf)
number & int(1..inf) => int(1..inf)
number & int(-inf..0) => int(-inf..0)
number & int(-inf..1) => int(-inf..1)
number & int(-inf..inf) => int(-inf..inf)
number & nonInt(0..1) => nonInt(0..1)
number & nonInt(0..2) => nonInt(0..2)
number & nonInt(-1..2) => nonInt(-1..2)
number & nonInt(0..inf) => nonInt(0..inf)
number & nonInt(-1..inf) => nonInt(-1..inf)
number & nonInt(-inf..0) => nonInt(-inf..0)
number & nonInt(-inf..1) => nonInt(-inf..1)
number & nonInt(-inf..inf) => nonInt(-inf..inf)
number & (1 | int(3..4)) => 1 | int(3..4)
number & string => never
number & "" => never
number & "foo" => never
number & "bar" => never
number & "ðŸ’©" => never
number & ("bar" | "foo") => never
number & ("baz" | "foo") => never
number & invStrSet("foo") => never
number & invStrSet("bar" | "foo") => never
number & invStrSet("bar") => never
number & invStrSet("") => never
-3.14 & -2 => never
-3.14 & -1 => never
-3.14 & -0.5 => never
-3.14 & 0 => never
-3.14 & 0.5 => never
-3.14 & 1 => never
-3.14 & 2 => never
-3.14 & 2.78 => never
-3.14 & 3 => never
-3.14 & 3.14 => never
-3.14 & 10 => never
-3.14 & 100 => never
-3.14 & -inf => never
-3.14 & inf => never
-3.14 & nan => never
-3.14 & 0..1 => never
-3.14 & 0!..1 => never
-3.14 & 0..!1 => never
-3.14 & 0..2 => never
-3.14 & 0!..!2 => never
-3.14 & 0.5..1.5 => never
-3.14 & 0.5..2.5 => never
-3.14 & 0.5!..2.5 => never
-3.14 & 0.5..!2.5 => never
-3.14 & -2.56..3.35 => never
-3.14 & 0.5..0.75 => never
-3.14 & 1..2 => never
-3.14 & 0..inf => never
-3.14 & 0!..inf => never
-3.14 & 0..!inf => never
-3.14 & 0!..!inf => never
-3.14 & 1..inf => never
-3.14 & 1!..inf => never
-3.14 & 1..!inf => never
-3.14 & 2..inf => never
-3.14 & 2!..inf => never
-3.14 & 2.5..inf => never
-3.14 & -inf..0 => -3.14
-3.14 & -inf..inf => -3.14
-3.14 & -inf!..inf => -3.14
-3.14 & -inf..!inf => -3.14
-3.14 & -inf!..!inf => -3.14
-3.14 & int(0..1) => never
-3.14 & int(0..2) => never
-3.14 & int(1..2) => never
-3.14 & int(5..20) => never
-3.14 & int(-20..-5) => never
-3.14 & int(-10..10) => never
-3.14 & int(0..inf) => never
-3.14 & int(1..inf) => never
-3.14 & int(-inf..0) => never
-3.14 & int(-inf..1) => never
-3.14 & int(-inf..inf) => never
-3.14 & nonInt(0..1) => never
-3.14 & nonInt(0..2) => never
-3.14 & nonInt(-1..2) => never
-3.14 & nonInt(0..inf) => never
-3.14 & nonInt(-1..inf) => never
-3.14 & nonInt(-inf..0) => -3.14
-3.14 & nonInt(-inf..1) => -3.14
-3.14 & nonInt(-inf..inf) => -3.14
-3.14 & (1 | int(3..4)) => never
-3.14 & string => never
-3.14 & "" => never
-3.14 & "foo" => never
-3.14 & "bar" => never
-3.14 & "ðŸ’©" => never
-3.14 & ("bar" | "foo") => never
-3.14 & ("baz" | "foo") => never
-3.14 & invStrSet("foo") => never
-3.14 & invStrSet("bar" | "foo") => never
-3.14 & invStrSet("bar") => never
-3.14 & invStrSet("") => never
-2 & -1 => never
-2 & -0.5 => never
-2 & 0 => never
-2 & 0.5 => never
-2 & 1 => never
-2 & 2 => never
-2 & 2.78 => never
-2 & 3 => never
-2 & 3.14 => never
-2 & 10 => never
-2 & 100 => never
-2 & -inf => never
-2 & inf => never
-2 & nan => never
-2 & 0..1 => never
-2 & 0!..1 => never
-2 & 0..!1 => never
-2 & 0..2 => never
-2 & 0!..!2 => never
-2 & 0.5..1.5 => never
-2 & 0.5..2.5 => never
-2 & 0.5!..2.5 => never
-2 & 0.5..!2.5 => never
-2 & -2.56..3.35 => -2
-2 & 0.5..0.75 => never
-2 & 1..2 => never
-2 & 0..inf => never
-2 & 0!..inf => never
-2 & 0..!inf => never
-2 & 0!..!inf => never
-2 & 1..inf => never
-2 & 1!..inf => never
-2 & 1..!inf => never
-2 & 2..inf => never
-2 & 2!..inf => never
-2 & 2.5..inf => never
-2 & -inf..0 => -2
-2 & -inf..inf => -2
-2 & -inf!..inf => -2
-2 & -inf..!inf => -2
-2 & -inf!..!inf => -2
-2 & int(0..1) => never
-2 & int(0..2) => never
-2 & int(1..2) => never
-2 & int(5..20) => never
-2 & int(-20..-5) => never
-2 & int(-10..10) => -2
-2 & int(0..inf) => never
-2 & int(1..inf) => never
-2 & int(-inf..0) => -2
-2 & int(-inf..1) => -2
-2 & int(-inf..inf) => -2
-2 & nonInt(0..1) => never
-2 & nonInt(0..2) => never
-2 & nonInt(-1..2) => never
-2 & nonInt(0..inf) => never
-2 & nonInt(-1..inf) => never
-2 & nonInt(-inf..0) => never
-2 & nonInt(-inf..1) => never
-2 & nonInt(-inf..inf) => never
-2 & (1 | int(3..4)) => never
-2 & string => never
-2 & "" => never
-2 & "foo" => never
-2 & "bar" => never
-2 & "ðŸ’©" => never
-2 & ("bar" | "foo") => never
-2 & ("baz" | "foo") => never
-2 & invStrSet("foo") => never
-2 & invStrSet("bar" | "foo") => never
-2 & invStrSet("bar") => never
-2 & invStrSet("") => never
-1 & -0.5 => never
-1 & 0 => never
-1 & 0.5 => never
-1 & 1 => never
-1 & 2 => never
-1 & 2.78 => never
-1 & 3 => never
-1 & 3.14 => never
-1 & 10 => never
-1 & 100 => never
-1 & -inf => never
-1 & inf => never
-1 & nan => never
-1 & 0..1 => never
-1 & 0!..1 => never
-1 & 0..!1 => never
-1 & 0..2 => never
-1 & 0!..!2 => never
-1 & 0.5..1.5 => never
-1 & 0.5..2.5 => never
-1 & 0.5!..2.5 => never
-1 & 0.5..!2.5 => never
-1 & -2.56..3.35 => -1
-1 & 0.5..0.75 => never
-1 & 1..2 => never
-1 & 0..inf => never
-1 & 0!..inf => never
-1 & 0..!inf => never
-1 & 0!..!inf => never
-1 & 1..inf => never
-1 & 1!..inf => never
-1 & 1..!inf => never
-1 & 2..inf => never
-1 & 2!..inf => never
-1 & 2.5..inf => never
-1 & -inf..0 => -1
-1 & -inf..inf => -1
-1 & -inf!..inf => -1
-1 & -inf..!inf => -1
-1 & -inf!..!inf => -1
-1 & int(0..1) => never
-1 & int(0..2) => never
-1 & int(1..2) => never
-1 & int(5..20) => never
-1 & int(-20..-5) => never
-1 & int(-10..10) => -1
-1 & int(0..inf) => never
-1 & int(1..inf) => never
-1 & int(-inf..0) => -1
-1 & int(-inf..1) => -1
-1 & int(-inf..inf) => -1
-1 & nonInt(0..1) => never
-1 & nonInt(0..2) => never
-1 & nonInt(-1..2) => never
-1 & nonInt(0..inf) => never
-1 & nonInt(-1..inf) => never
-1 & nonInt(-inf..0) => never
-1 & nonInt(-inf..1) => never
-1 & nonInt(-inf..inf) => never
-1 & (1 | int(3..4)) => never
-1 & string => never
-1 & "" => never
-1 & "foo" => never
-1 & "bar" => never
-1 & "ðŸ’©" => never
-1 & ("bar" | "foo") => never
-1 & ("baz" | "foo") => never
-1 & invStrSet("foo") => never
-1 & invStrSet("bar" | "foo") => never
-1 & invStrSet("bar") => never
-1 & invStrSet("") => never
-0.5 & 0 => never
-0.5 & 0.5 => never
-0.5 & 1 => never
-0.5 & 2 => never
-0.5 & 2.78 => never
-0.5 & 3 => never
-0.5 & 3.14 => never
-0.5 & 10 => never
-0.5 & 100 => never
-0.5 & -inf => never
-0.5 & inf => never
-0.5 & nan => never
-0.5 & 0..1 => never
-0.5 & 0!..1 => never
-0.5 & 0..!1 => never
-0.5 & 0..2 => never
-0.5 & 0!..!2 => never
-0.5 & 0.5..1.5 => never
-0.5 & 0.5..2.5 => never
-0.5 & 0.5!..2.5 => never
-0.5 & 0.5..!2.5 => never
-0.5 & -2.56..3.35 => -0.5
-0.5 & 0.5..0.75 => never
-0.5 & 1..2 => never
-0.5 & 0..inf => never
-0.5 & 0!..inf => never
-0.5 & 0..!inf => never
-0.5 & 0!..!inf => never
-0.5 & 1..inf => never
-0.5 & 1!..inf => never
-0.5 & 1..!inf => never
-0.5 & 2..inf => never
-0.5 & 2!..inf => never
-0.5 & 2.5..inf => never
-0.5 & -inf..0 => -0.5
-0.5 & -inf..inf => -0.5
-0.5 & -inf!..inf => -0.5
-0.5 & -inf..!inf => -0.5
-0.5 & -inf!..!inf => -0.5
-0.5 & int(0..1) => never
-0.5 & int(0..2) => never
-0.5 & int(1..2) => never
-0.5 & int(5..20) => never
-0.5 & int(-20..-5) => never
-0.5 & int(-10..10) => never
-0.5 & int(0..inf) => never
-0.5 & int(1..inf) => never
-0.5 & int(-inf..0) => never
-0.5 & int(-inf..1) => never
-0.5 & int(-inf..inf) => never
-0.5 & nonInt(0..1) => never
-0.5 & nonInt(0..2) => never
-0.5 & nonInt(-1..2) => -0.5
-0.5 & nonInt(0..inf) => never
-0.5 & nonInt(-1..inf) => -0.5
-0.5 & nonInt(-inf..0) => -0.5
-0.5 & nonInt(-inf..1) => -0.5
-0.5 & nonInt(-inf..inf) => -0.5
-0.5 & (1 | int(3..4)) => never
-0.5 & string => never
-0.5 & "" => never
-0.5 & "foo" => never
-0.5 & "bar" => never
-0.5 & "ðŸ’©" => never
-0.5 & ("bar" | "foo") => never
-0.5 & ("baz" | "foo") => never
-0.5 & invStrSet("foo") => never
-0.5 & invStrSet("bar" | "foo") => never
-0.5 & invStrSet("bar") => never
-0.5 & invStrSet("") => never
0 & 0.5 => never
0 & 1 => never
0 & 2 => never
0 & 2.78 => never
0 & 3 => never
0 & 3.14 => never
0 & 10 => never
0 & 100 => never
0 & -inf => never
0 & inf => never
0 & nan => never
0 & 0..1 => 0
0 & 0!..1 => never
0 & 0..!1 => 0
0 & 0..2 => 0
0 & 0!..!2 => never
0 & 0.5..1.5 => never
0 & 0.5..2.5 => never
0 & 0.5!..2.5 => never
0 & 0.5..!2.5 => never
0 & -2.56..3.35 => 0
0 & 0.5..0.75 => never
0 & 1..2 => never
0 & 0..inf => 0
0 & 0!..inf => never
0 & 0..!inf => 0
0 & 0!..!inf => never
0 & 1..inf => never
0 & 1!..inf => never
0 & 1..!inf => never
0 & 2..inf => never
0 & 2!..inf => never
0 & 2.5..inf => never
0 & -inf..0 => 0
0 & -inf..inf => 0
0 & -inf!..inf => 0
0 & -inf..!inf => 0
0 & -inf!..!inf => 0
0 & int(0..1) => 0
0 & int(0..2) => 0
0 & int(1..2) => never
0 & int(5..20) => never
0 & int(-20..-5) => never
0 & int(-10..10) => 0
0 & int(0..inf) => 0
0 & int(1..inf) => never
0 & int(-inf..0) => 0
0 & int(-inf..1) => 0
0 & int(-inf..inf) => 0
0 & nonInt(0..1) => never
0 & nonInt(0..2) => never
0 & nonInt(-1..2) => never
0 & nonInt(0..inf) => never
0 & nonInt(-1..inf) => never
0 & nonInt(-inf..0) => never
0 & nonInt(-inf..1) => never
0 & nonInt(-inf..inf) => never
0 & (1 | int(3..4)) => never
0 & string => never
0 & "" => never
0 & "foo" => never
0 & "bar" => never
0 & "ðŸ’©" => never
0 & ("bar" | "foo") => never
0 & ("baz" | "foo") => never
0 & invStrSet("foo") => never
0 & invStrSet("bar" | "foo") => never
0 & invStrSet("bar") => never
0 & invStrSet("") => never
0.5 & 1 => never
0.5 & 2 => never
0.5 & 2.78 => never
0.5 & 3 => never
0.5 & 3.14 => never
0.5 & 10 => never
0.5 & 100 => never
0.5 & -inf => never
0.5 & inf => never
0.5 & nan => never
0.5 & 0..1 => 0.5
0.5 & 0!..1 => 0.5
0.5 & 0..!1 => 0.5
0.5 & 0..2 => 0.5
0.5 & 0!..!2 => 0.5
0.5 & 0.5..1.5 => 0.5
0.5 & 0.5..2.5 => 0.5
0.5 & 0.5!..2.5 => never
0.5 & 0.5..!2.5 => 0.5
0.5 & -2.56..3.35 => 0.5
0.5 & 0.5..0.75 => 0.5
0.5 & 1..2 => never
0.5 & 0..inf => 0.5
0.5 & 0!..inf => 0.5
0.5 & 0..!inf => 0.5
0.5 & 0!..!inf => 0.5
0.5 & 1..inf => never
0.5 & 1!..inf => never
0.5 & 1..!inf => never
0.5 & 2..inf => never
0.5 & 2!..inf => never
0.5 & 2.5..inf => never
0.5 & -inf..0 => never
0.5 & -inf..inf => 0.5
0.5 & -inf!..inf => 0.5
0.5 & -inf..!inf => 0.5
0.5 & -inf!..!inf => 0.5
0.5 & int(0..1) => never
0.5 & int(0..2) => never
0.5 & int(1..2) => never
0.5 & int(5..20) => never
0.5 & int(-20..-5) => never
0.5 & int(-10..10) => never
0.5 & int(0..inf) => never
0.5 & int(1..inf) => never
0.5 & int(-inf..0) => never
0.5 & int(-inf..1) => never
0.5 & int(-inf..inf) => never
0.5 & nonInt(0..1) => 0.5
0.5 & nonInt(0..2) => 0.5
0.5 & nonInt(-1..2) => 0.5
0.5 & nonInt(0..inf) => 0.5
0.5 & nonInt(-1..inf) => 0.5
0.5 & nonInt(-inf..0) => never
0.5 & nonInt(-inf..1) => 0.5
0.5 & nonInt(-inf..inf) => 0.5
0.5 & (1 | int(3..4)) => never
0.5 & string => never
0.5 & "" => never
0.5 & "foo" => never
0.5 & "bar" => never
0.5 & "ðŸ’©" => never
0.5 & ("bar" | "foo") => never
0.5 & ("baz" | "foo") => never
0.5 & invStrSet("foo") => never
0.5 & invStrSet("bar" | "foo") => never
0.5 & invStrSet("bar") => never
0.5 & invStrSet("") => never
1 & 2 => never
1 & 2.78 => never
1 & 3 => never
1 & 3.14 => never
1 & 10 => never
1 & 100 => never
1 & -inf => never
1 & inf => never
1 & nan => never
1 & 0..1 => 1
1 & 0!..1 => 1
1 & 0..!1 => never
1 & 0..2 => 1
1 & 0!..!2 => 1
1 & 0.5..1.5 => 1
1 & 0.5..2.5 => 1
1 & 0.5!..2.5 => 1
1 & 0.5..!2.5 => 1
1 & -2.56..3.35 => 1
1 & 0.5..0.75 => never
1 & 1..2 => 1
1 & 0..inf => 1
1 & 0!..inf => 1
1 & 0..!inf => 1
1 & 0!..!inf => 1
1 & 1..inf => 1
1 & 1!..inf => never
1 & 1..!inf => 1
1 & 2..inf => never
1 & 2!..inf => never
1 & 2.5..inf => never
1 & -inf..0 => never
1 & -inf..inf => 1
1 & -inf!..inf => 1
1 & -inf..!inf => 1
1 & -inf!..!inf => 1
1 & int(0..1) => 1
1 & int(0..2) => 1
1 & int(1..2) => 1
1 & int(5..20) => never
1 & int(-20..-5) => never
1 & int(-10..10) => 1
1 & int(0..inf) => 1
1 & int(1..inf) => 1
1 & int(-inf..0) => never
1 & int(-inf..1) => 1
1 & int(-inf..inf) => 1
1 & nonInt(0..1) => never
1 & nonInt(0..2) => never
1 & nonInt(-1..2) => never
1 & nonInt(0..inf) => never
1 & nonInt(-1..inf) => never
1 & nonInt(-inf..0) => never
1 & nonInt(-inf..1) => never
1 & nonInt(-inf..inf) => never
1 & (1 | int(3..4)) => 1
1 & string => never
1 & "" => never
1 & "foo" => never
1 & "bar" => never
1 & "ðŸ’©" => never
1 & ("bar" | "foo") => never
1 & ("baz" | "foo") => never
1 & invStrSet("foo") => never
1 & invStrSet("bar" | "foo") => never
1 & invStrSet("bar") => never
1 & invStrSet("") => never
2 & 2.78 => never
2 & 3 => never
2 & 3.14 => never
2 & 10 => never
2 & 100 => never
2 & -inf => never
2 & inf => never
2 & nan => never
2 & 0..1 => never
2 & 0!..1 => never
2 & 0..!1 => never
2 & 0..2 => 2
2 & 0!..!2 => never
2 & 0.5..1.5 => never
2 & 0.5..2.5 => 2
2 & 0.5!..2.5 => 2
2 & 0.5..!2.5 => 2
2 & -2.56..3.35 => 2
2 & 0.5..0.75 => never
2 & 1..2 => 2
2 & 0..inf => 2
2 & 0!..inf => 2
2 & 0..!inf => 2
2 & 0!..!inf => 2
2 & 1..inf => 2
2 & 1!..inf => 2
2 & 1..!inf => 2
2 & 2..inf => 2
2 & 2!..inf => never
2 & 2.5..inf => never
2 & -inf..0 => never
2 & -inf..inf => 2
2 & -inf!..inf => 2
2 & -inf..!inf => 2
2 & -inf!..!inf => 2
2 & int(0..1) => never
2 & int(0..2) => 2
2 & int(1..2) => 2
2 & int(5..20) => never
2 & int(-20..-5) => never
2 & int(-10..10) => 2
2 & int(0..inf) => 2
2 & int(1..inf) => 2
2 & int(-inf..0) => never
2 & int(-inf..1) => never
2 & int(-inf..inf) => 2
2 & nonInt(0..1) => never
2 & nonInt(0..2) => never
2 & nonInt(-1..2) => never
2 & nonInt(0..inf) => never
2 & nonInt(-1..inf) => never
2 & nonInt(-inf..0) => never
2 & nonInt(-inf..1) => never
2 & nonInt(-inf..inf) => never
2 & (1 | int(3..4)) => never
2 & string => never
2 & "" => never
2 & "foo" => never
2 & "bar" => never
2 & "ðŸ’©" => never
2 & ("bar" | "foo") => never
2 & ("baz" | "foo") => never
2 & invStrSet("foo") => never
2 & invStrSet("bar" | "foo") => never
2 & invStrSet("bar") => never
2 & invStrSet("") => never
2.78 & 3 => never
2.78 & 3.14 => never
2.78 & 10 => never
2.78 & 100 => never
2.78 & -inf => never
2.78 & inf => never
2.78 & nan => never
2.78 & 0..1 => never
2.78 & 0!..1 => never
2.78 & 0..!1 => never
2.78 & 0..2 => never
2.78 & 0!..!2 => never
2.78 & 0.5..1.5 => never
2.78 & 0.5..2.5 => never
2.78 & 0.5!..2.5 => never
2.78 & 0.5..!2.5 => never
2.78 & -2.56..3.35 => 2.78
2.78 & 0.5..0.75 => never
2.78 & 1..2 => never
2.78 & 0..inf => 2.78
2.78 & 0!..inf => 2.78
2.78 & 0..!inf => 2.78
2.78 & 0!..!inf => 2.78
2.78 & 1..inf => 2.78
2.78 & 1!..inf => 2.78
2.78 & 1..!inf => 2.78
2.78 & 2..inf => 2.78
2.78 & 2!..inf => 2.78
2.78 & 2.5..inf => 2.78
2.78 & -inf..0 => never
2.78 & -inf..inf => 2.78
2.78 & -inf!..inf => 2.78
2.78 & -inf..!inf => 2.78
2.78 & -inf!..!inf => 2.78
2.78 & int(0..1) => never
2.78 & int(0..2) => never
2.78 & int(1..2) => never
2.78 & int(5..20) => never
2.78 & int(-20..-5) => never
2.78 & int(-10..10) => never
2.78 & int(0..inf) => never
2.78 & int(1..inf) => never
2.78 & int(-inf..0) => never
2.78 & int(-inf..1) => never
2.78 & int(-inf..inf) => never
2.78 & nonInt(0..1) => never
2.78 & nonInt(0..2) => never
2.78 & nonInt(-1..2) => never
2.78 & nonInt(0..inf) => 2.78
2.78 & nonInt(-1..inf) => 2.78
2.78 & nonInt(-inf..0) => never
2.78 & nonInt(-inf..1) => never
2.78 & nonInt(-inf..inf) => 2.78
2.78 & (1 | int(3..4)) => never
2.78 & string => never
2.78 & "" => never
2.78 & "foo" => never
2.78 & "bar" => never
2.78 & "ðŸ’©" => never
2.78 & ("bar" | "foo") => never
2.78 & ("baz" | "foo") => never
2.78 & invStrSet("foo") => never
2.78 & invStrSet("bar" | "foo") => never
2.78 & invStrSet("bar") => never
2.78 & invStrSet("") => never
3 & 3.14 => never
3 & 10 => never
3 & 100 => never
3 & -inf => never
3 & inf => never
3 & nan => never
3 & 0..1 => never
3 & 0!..1 => never
3 & 0..!1 => never
3 & 0..2 => never
3 & 0!..!2 => never
3 & 0.5..1.5 => never
3 & 0.5..2.5 => never
3 & 0.5!..2.5 => never
3 & 0.5..!2.5 => never
3 & -2.56..3.35 => 3
3 & 0.5..0.75 => never
3 & 1..2 => never
3 & 0..inf => 3
3 & 0!..inf => 3
3 & 0..!inf => 3
3 & 0!..!inf => 3
3 & 1..inf => 3
3 & 1!..inf => 3
3 & 1..!inf => 3
3 & 2..inf => 3
3 & 2!..inf => 3
3 & 2.5..inf => 3
3 & -inf..0 => never
3 & -inf..inf => 3
3 & -inf!..inf => 3
3 & -inf..!inf => 3
3 & -inf!..!inf => 3
3 & int(0..1) => never
3 & int(0..2) => never
3 & int(1..2) => never
3 & int(5..20) => never
3 & int(-20..-5) => never
3 & int(-10..10) => 3
3 & int(0..inf) => 3
3 & int(1..inf) => 3
3 & int(-inf..0) => never
3 & int(-inf..1) => never
3 & int(-inf..inf) => 3
3 & nonInt(0..1) => never
3 & nonInt(0..2) => never
3 & nonInt(-1..2) => never
3 & nonInt(0..inf) => never
3 & nonInt(-1..inf) => never
3 & nonInt(-inf..0) => never
3 & nonInt(-inf..1) => never
3 & nonInt(-inf..inf) => never
3 & (1 | int(3..4)) => 3
3 & string => never
3 & "" => never
3 & "foo" => never
3 & "bar" => never
3 & "ðŸ’©" => never
3 & ("bar" | "foo") => never
3 & ("baz" | "foo") => never
3 & invStrSet("foo") => never
3 & invStrSet("bar" | "foo") => never
3 & invStrSet("bar") => never
3 & invStrSet("") => never
3.14 & 10 => never
3.14 & 100 => never
3.14 & -inf => never
3.14 & inf => never
3.14 & nan => never
3.14 & 0..1 => never
3.14 & 0!..1 => never
3.14 & 0..!1 => never
3.14 & 0..2 => never
3.14 & 0!..!2 => never
3.14 & 0.5..1.5 => never
3.14 & 0.5..2.5 => never
3.14 & 0.5!..2.5 => never
3.14 & 0.5..!2.5 => never
3.14 & -2.56..3.35 => 3.14
3.14 & 0.5..0.75 => never
3.14 & 1..2 => never
3.14 & 0..inf => 3.14
3.14 & 0!..inf => 3.14
3.14 & 0..!inf => 3.14
3.14 & 0!..!inf => 3.14
3.14 & 1..inf => 3.14
3.14 & 1!..inf => 3.14
3.14 & 1..!inf => 3.14
3.14 & 2..inf => 3.14
3.14 & 2!..inf => 3.14
3.14 & 2.5..inf => 3.14
3.14 & -inf..0 => never
3.14 & -inf..inf => 3.14
3.14 & -inf!..inf => 3.14
3.14 & -inf..!inf => 3.14
3.14 & -inf!..!inf => 3.14
3.14 & int(0..1) => never
3.14 & int(0..2) => never
3.14 & int(1..2) => never
3.14 & int(5..20) => never
3.14 & int(-20..-5) => never
3.14 & int(-10..10) => never
3.14 & int(0..inf) => never
3.14 & int(1..inf) => never
3.14 & int(-inf..0) => never
3.14 & int(-inf..1) => never
3.14 & int(-inf..inf) => never
3.14 & nonInt(0..1) => never
3.14 & nonInt(0..2) => never
3.14 & nonInt(-1..2) => never
3.14 & nonInt(0..inf) => 3.14
3.14 & nonInt(-1..inf) => 3.14
3.14 & nonInt(-inf..0) => never
3.14 & nonInt(-inf..1) => never
3.14 & nonInt(-inf..inf) => 3.14
3.14 & (1 | int(3..4)) => never
3.14 & string => never
3.14 & "" => never
3.14 & "foo" => never
3.14 & "bar" => never
3.14 & "ðŸ’©" => never
3.14 & ("bar" | "foo") => never
3.14 & ("baz" | "foo") => never
3.14 & invStrSet("foo") => never
3.14 & invStrSet("bar" | "foo") => never
3.14 & invStrSet("bar") => never
3.14 & invStrSet("") => never
10 & 100 => never
10 & -inf => never
10 & inf => never
10 & nan => never
10 & 0..1 => never
10 & 0!..1 => never
10 & 0..!1 => never
10 & 0..2 => never
10 & 0!..!2 => never
10 & 0.5..1.5 => never
10 & 0.5..2.5 => never
10 & 0.5!..2.5 => never
10 & 0.5..!2.5 => never
10 & -2.56..3.35 => never
10 & 0.5..0.75 => never
10 & 1..2 => never
10 & 0..inf => 10
10 & 0!..inf => 10
10 & 0..!inf => 10
10 & 0!..!inf => 10
10 & 1..inf => 10
10 & 1!..inf => 10
10 & 1..!inf => 10
10 & 2..inf => 10
10 & 2!..inf => 10
10 & 2.5..inf => 10
10 & -inf..0 => never
10 & -inf..inf => 10
10 & -inf!..inf => 10
10 & -inf..!inf => 10
10 & -inf!..!inf => 10
10 & int(0..1) => never
10 & int(0..2) => never
10 & int(1..2) => never
10 & int(5..20) => 10
10 & int(-20..-5) => never
10 & int(-10..10) => 10
10 & int(0..inf) => 10
10 & int(1..inf) => 10
10 & int(-inf..0) => never
10 & int(-inf..1) => never
10 & int(-inf..inf) => 10
10 & nonInt(0..1) => never
10 & nonInt(0..2) => never
10 & nonInt(-1..2) => never
10 & nonInt(0..inf) => never
10 & nonInt(-1..inf) => never
10 & nonInt(-inf..0) => never
10 & nonInt(-inf..1) => never
10 & nonInt(-inf..inf) => never
10 & (1 | int(3..4)) => never
10 & string => never
10 & "" => never
10 & "foo" => never
10 & "bar" => never
10 & "ðŸ’©" => never
10 & ("bar" | "foo") => never
10 & ("baz" | "foo") => never
10 & invStrSet("foo") => never
10 & invStrSet("bar" | "foo") => never
10 & invStrSet("bar") => never
10 & invStrSet("") => never
100 & -inf => never
100 & inf => never
100 & nan => never
100 & 0..1 => never
100 & 0!..1 => never
100 & 0..!1 => never
100 & 0..2 => never
100 & 0!..!2 => never
100 & 0.5..1.5 => never
100 & 0.5..2.5 => never
100 & 0.5!..2.5 => never
100 & 0.5..!2.5 => never
100 & -2.56..3.35 => never
100 & 0.5..0.75 => never
100 & 1..2 => never
100 & 0..inf => 100
100 & 0!..inf => 100
100 & 0..!inf => 100
100 & 0!..!inf => 100
100 & 1..inf => 100
100 & 1!..inf => 100
100 & 1..!inf => 100
100 & 2..inf => 100
100 & 2!..inf => 100
100 & 2.5..inf => 100
100 & -inf..0 => never
100 & -inf..inf => 100
100 & -inf!..inf => 100
100 & -inf..!inf => 100
100 & -inf!..!inf => 100
100 & int(0..1) => never
100 & int(0..2) => never
100 & int(1..2) => never
100 & int(5..20) => never
100 & int(-20..-5) => never
100 & int(-10..10) => never
100 & int(0..inf) => 100
100 & int(1..inf) => 100
100 & int(-inf..0) => never
100 & int(-inf..1) => never
100 & int(-inf..inf) => 100
100 & nonInt(0..1) => never
100 & nonInt(0..2) => never
100 & nonInt(-1..2) => never
100 & nonInt(0..inf) => never
100 & nonInt(-1..inf) => never
100 & nonInt(-inf..0) => never
100 & nonInt(-inf..1) => never
100 & nonInt(-inf..inf) => never
100 & (1 | int(3..4)) => never
100 & string => never
100 & "" => never
100 & "foo" => never
100 & "bar" => never
100 & "ðŸ’©" => never
100 & ("bar" | "foo") => never
100 & ("baz" | "foo") => never
100 & invStrSet("foo") => never
100 & invStrSet("bar" | "foo") => never
100 & invStrSet("bar") => never
100 & invStrSet("") => never
-inf & inf => never
-inf & nan => never
-inf & 0..1 => never
-inf & 0!..1 => never
-inf & 0..!1 => never
-inf & 0..2 => never
-inf & 0!..!2 => never
-inf & 0.5..1.5 => never
-inf & 0.5..2.5 => never
-inf & 0.5!..2.5 => never
-inf & 0.5..!2.5 => never
-inf & -2.56..3.35 => never
-inf & 0.5..0.75 => never
-inf & 1..2 => never
-inf & 0..inf => never
-inf & 0!..inf => never
-inf & 0..!inf => never
-inf & 0!..!inf => never
-inf & 1..inf => never
-inf & 1!..inf => never
-inf & 1..!inf => never
-inf & 2..inf => never
-inf & 2!..inf => never
-inf & 2.5..inf => never
-inf & -inf..0 => -inf
-inf & -inf..inf => -inf
-inf & -inf!..inf => never
-inf & -inf..!inf => -inf
-inf & -inf!..!inf => never
-inf & int(0..1) => never
-inf & int(0..2) => never
-inf & int(1..2) => never
-inf & int(5..20) => never
-inf & int(-20..-5) => never
-inf & int(-10..10) => never
-inf & int(0..inf) => never
-inf & int(1..inf) => never
-inf & int(-inf..0) => never
-inf & int(-inf..1) => never
-inf & int(-inf..inf) => never
-inf & nonInt(0..1) => never
-inf & nonInt(0..2) => never
-inf & nonInt(-1..2) => never
-inf & nonInt(0..inf) => never
-inf & nonInt(-1..inf) => never
-inf & nonInt(-inf..0) => never
-inf & nonInt(-inf..1) => never
-inf & nonInt(-inf..inf) => never
-inf & (1 | int(3..4)) => never
-inf & string => never
-inf & "" => never
-inf & "foo" => never
-inf & "bar" => never
-inf & "ðŸ’©" => never
-inf & ("bar" | "foo") => never
-inf & ("baz" | "foo") => never
-inf & invStrSet("foo") => never
-inf & invStrSet("bar" | "foo") => never
-inf & invStrSet("bar") => never
-inf & invStrSet("") => never
inf & nan => never
inf & 0..1 => never
inf & 0!..1 => never
inf & 0..!1 => never
inf & 0..2 => never
inf & 0!..!2 => never
inf & 0.5..1.5 => never
inf & 0.5..2.5 => never
inf & 0.5!..2.5 => never
inf & 0.5..!2.5 => never
inf & -2.56..3.35 => never
inf & 0.5..0.75 => never
inf & 1..2 => never
inf & 0..inf => inf
inf & 0!..inf => inf
inf & 0..!inf => never
inf & 0!..!inf => never
inf & 1..inf => inf
inf & 1!..inf => inf
inf & 1..!inf => never
inf & 2..inf => inf
inf & 2!..inf => inf
inf & 2.5..inf => inf
inf & -inf..0 => never
inf & -inf..inf => inf
inf & -inf!..inf => inf
inf & -inf..!inf => never
inf & -inf!..!inf => never
inf & int(0..1) => never
inf & int(0..2) => never
inf & int(1..2) => never
inf & int(5..20) => never
inf & int(-20..-5) => never
inf & int(-10..10) => never
inf & int(0..inf) => never
inf & int(1..inf) => never
inf & int(-inf..0) => never
inf & int(-inf..1) => never
inf & int(-inf..inf) => never
inf & nonInt(0..1) => never
inf & nonInt(0..2) => never
inf & nonInt(-1..2) => never
inf & nonInt(0..inf) => never
inf & nonInt(-1..inf) => never
inf & nonInt(-inf..0) => never
inf & nonInt(-inf..1) => never
inf & nonInt(-inf..inf) => never
inf & (1 | int(3..4)) => never
inf & string => never
inf & "" => never
inf & "foo" => never
inf & "bar" => never
inf & "ðŸ’©" => never
inf & ("bar" | "foo") => never
inf & ("baz" | "foo") => never
inf & invStrSet("foo") => never
inf & invStrSet("bar" | "foo") => never
inf & invStrSet("bar") => never
inf & invStrSet("") => never
nan & 0..1 => never
nan & 0!..1 => never
nan & 0..!1 => never
nan & 0..2 => never
nan & 0!..!2 => never
nan & 0.5..1.5 => never
nan & 0.5..2.5 => never
nan & 0.5!..2.5 => never
nan & 0.5..!2.5 => never
nan & -2.56..3.35 => never
nan & 0.5..0.75 => never
nan & 1..2 => never
nan & 0..inf => never
nan & 0!..inf => never
nan & 0..!inf => never
nan & 0!..!inf => never
nan & 1..inf => never
nan & 1!..inf => never
nan & 1..!inf => never
nan & 2..inf => never
nan & 2!..inf => never
nan & 2.5..inf => never
nan & -inf..0 => never
nan & -inf..inf => never
nan & -inf!..inf => never
nan & -inf..!inf => never
nan & -inf!..!inf => never
nan & int(0..1) => never
nan & int(0..2) => never
nan & int(1..2) => never
nan & int(5..20) => never
nan & int(-20..-5) => never
nan & int(-10..10) => never
nan & int(0..inf) => never
nan & int(1..inf) => never
nan & int(-inf..0) => never
nan & int(-inf..1) => never
nan & int(-inf..inf) => never
nan & nonInt(0..1) => never
nan & nonInt(0..2) => never
nan & nonInt(-1..2) => never
nan & nonInt(0..inf) => never
nan & nonInt(-1..inf) => never
nan & nonInt(-inf..0) => never
nan & nonInt(-inf..1) => never
nan & nonInt(-inf..inf) => never
nan & (1 | int(3..4)) => never
nan & string => never
nan & "" => never
nan & "foo" => never
nan & "bar" => never
nan & "ðŸ’©" => never
nan & ("bar" | "foo") => never
nan & ("baz" | "foo") => never
nan & invStrSet("foo") => never
nan & invStrSet("bar" | "foo") => never
nan & invStrSet("bar") => never
nan & invStrSet("") => never
0..1 & 0!..1 => 0!..1
0..1 & 0..!1 => 0..!1
0..1 & 0..2 => 0..1
0..1 & 0!..!2 => 0!..1
0..1 & 0.5..1.5 => 0.5..1
0..1 & 0.5..2.5 => 0.5..1
0..1 & 0.5!..2.5 => 0.5!..1
0..1 & 0.5..!2.5 => 0.5..1
0..1 & -2.56..3.35 => 0..1
0..1 & 0.5..0.75 => 0.5..0.75
0..1 & 1..2 => 1
0..1 & 0..inf => 0..1
0..1 & 0!..inf => 0!..1
0..1 & 0..!inf => 0..1
0..1 & 0!..!inf => 0!..1
0..1 & 1..inf => 1
0..1 & 1!..inf => never
0..1 & 1..!inf => 1
0..1 & 2..inf => never
0..1 & 2!..inf => never
0..1 & 2.5..inf => never
0..1 & -inf..0 => 0
0..1 & -inf..inf => 0..1
0..1 & -inf!..inf => 0..1
0..1 & -inf..!inf => 0..1
0..1 & -inf!..!inf => 0..1
0..1 & int(0..1) => int(0..1)
0..1 & int(0..2) => int(0..1)
0..1 & int(1..2) => 1
0..1 & int(5..20) => never
0..1 & int(-20..-5) => never
0..1 & int(-10..10) => int(0..1)
0..1 & int(0..inf) => int(0..1)
0..1 & int(1..inf) => 1
0..1 & int(-inf..0) => 0
0..1 & int(-inf..1) => int(0..1)
0..1 & int(-inf..inf) => int(0..1)
0..1 & nonInt(0..1) => nonInt(0..1)
0..1 & nonInt(0..2) => nonInt(0..1)
0..1 & nonInt(-1..2) => nonInt(0..1)
0..1 & nonInt(0..inf) => nonInt(0..1)
0..1 & nonInt(-1..inf) => nonInt(0..1)
0..1 & nonInt(-inf..0) => never
0..1 & nonInt(-inf..1) => nonInt(0..1)
0..1 & nonInt(-inf..inf) => nonInt(0..1)
0..1 & (1 | int(3..4)) => 1
0..1 & string => never
0..1 & "" => never
0..1 & "foo" => never
0..1 & "bar" => never
0..1 & "ðŸ’©" => never
0..1 & ("bar" | "foo") => never
0..1 & ("baz" | "foo") => never
0..1 & invStrSet("foo") => never
0..1 & invStrSet("bar" | "foo") => never
0..1 & invStrSet("bar") => never
0..1 & invStrSet("") => never
0!..1 & 0..!1 => nonInt(0..1)
0!..1 & 0..2 => 0!..1
0!..1 & 0!..!2 => 0!..1
0!..1 & 0.5..1.5 => 0.5..1
0!..1 & 0.5..2.5 => 0.5..1
0!..1 & 0.5!..2.5 => 0.5!..1
0!..1 & 0.5..!2.5 => 0.5..1
0!..1 & -2.56..3.35 => 0!..1
0!..1 & 0.5..0.75 => 0.5..0.75
0!..1 & 1..2 => 1
0!..1 & 0..inf => 0!..1
0!..1 & 0!..inf => 0!..1
0!..1 & 0..!inf => 0!..1
0!..1 & 0!..!inf => 0!..1
0!..1 & 1..inf => 1
0!..1 & 1!..inf => never
0!..1 & 1..!inf => 1
0!..1 & 2..inf => never
0!..1 & 2!..inf => never
0!..1 & 2.5..inf => never
0!..1 & -inf..0 => never
0!..1 & -inf..inf => 0!..1
0!..1 & -inf!..inf => 0!..1
0!..1 & -inf..!inf => 0!..1
0!..1 & -inf!..!inf => 0!..1
0!..1 & int(0..1) => 1
0!..1 & int(0..2) => 1
0!..1 & int(1..2) => 1
0!..1 & int(5..20) => never
0!..1 & int(-20..-5) => never
0!..1 & int(-10..10) => 1
0!..1 & int(0..inf) => 1
0!..1 & int(1..inf) => 1
0!..1 & int(-inf..0) => never
0!..1 & int(-inf..1) => 1
0!..1 & int(-inf..inf) => 1
0!..1 & nonInt(0..1) => nonInt(0..1)
0!..1 & nonInt(0..2) => nonInt(0..1)
0!..1 & nonInt(-1..2) => nonInt(0..1)
0!..1 & nonInt(0..inf) => nonInt(0..1)
0!..1 & nonInt(-1..inf) => nonInt(0..1)
0!..1 & nonInt(-inf..0) => never
0!..1 & nonInt(-inf..1) => nonInt(0..1)
0!..1 & nonInt(-inf..inf) => nonInt(0..1)
0!..1 & (1 | int(3..4)) => 1
0!..1 & string => never
0!..1 & "" => never
0!..1 & "foo" => never
0!..1 & "bar" => never
0!..1 & "ðŸ’©" => never
0!..1 & ("bar" | "foo") => never
0!..1 & ("baz" | "foo") => never
0!..1 & invStrSet("foo") => never
0!..1 & invStrSet("bar" | "foo") => never
0!..1 & invStrSet("bar") => never
0!..1 & invStrSet("") => never
0..!1 & 0..2 => 0..!1
0..!1 & 0!..!2 => nonInt(0..1)
0..!1 & 0.5..1.5 => 0.5..!1
0..!1 & 0.5..2.5 => 0.5..!1
0..!1 & 0.5!..2.5 => 0.5!..!1
0..!1 & 0.5..!2.5 => 0.5..!1
0..!1 & -2.56..3.35 => 0..!1
0..!1 & 0.5..0.75 => 0.5..0.75
0..!1 & 1..2 => never
0..!1 & 0..inf => 0..!1
0..!1 & 0!..inf => nonInt(0..1)
0..!1 & 0..!inf => 0..!1
0..!1 & 0!..!inf => nonInt(0..1)
0..!1 & 1..inf => never
0..!1 & 1!..inf => never
0..!1 & 1..!inf => never
0..!1 & 2..inf => never
0..!1 & 2!..inf => never
0..!1 & 2.5..inf => never
0..!1 & -inf..0 => 0
0..!1 & -inf..inf => 0..!1
0..!1 & -inf!..inf => 0..!1
0..!1 & -inf..!inf => 0..!1
0..!1 & -inf!..!inf => 0..!1
0..!1 & int(0..1) => 0
0..!1 & int(0..2) => 0
0..!1 & int(1..2) => never
0..!1 & int(5..20) => never
0..!1 & int(-20..-5) => never
0..!1 & int(-10..10) => 0
0..!1 & int(0..inf) => 0
0..!1 & int(1..inf) => never
0..!1 & int(-inf..0) => 0
0..!1 & int(-inf..1) => 0
0..!1 & int(-inf..inf) => 0
0..!1 & nonInt(0..1) => nonInt(0..1)
0..!1 & nonInt(0..2) => nonInt(0..1)
0..!1 & nonInt(-1..2) => nonInt(0..1)
0..!1 & nonInt(0..inf) => nonInt(0..1)
0..!1 & nonInt(-1..inf) => nonInt(0..1)
0..!1 & nonInt(-inf..0) => never
0..!1 & nonInt(-inf..1) => nonInt(0..1)
0..!1 & nonInt(-inf..inf) => nonInt(0..1)
0..!1 & (1 | int(3..4)) => never
0..!1 & string => never
0..!1 & "" => never
0..!1 & "foo" => never
0..!1 & "bar" => never
0..!1 & "ðŸ’©" => never
0..!1 & ("bar" | "foo") => never
0..!1 & ("baz" | "foo") => never
0..!1 & invStrSet("foo") => never
0..!1 & invStrSet("bar" | "foo") => never
0..!1 & invStrSet("bar") => never
0..!1 & invStrSet("") => never
0..2 & 0!..!2 => 0!..!2
0..2 & 0.5..1.5 => 0.5..1.5
0..2 & 0.5..2.5 => 0.5..2
0..2 & 0.5!..2.5 => 0.5!..2
0..2 & 0.5..!2.5 => 0.5..2
0..2 & -2.56..3.35 => 0..2
0..2 & 0.5..0.75 => 0.5..0.75
0..2 & 1..2 => 1..2
0..2 & 0..inf => 0..2
0..2 & 0!..inf => 0!..2
0..2 & 0..!inf => 0..2
0..2 & 0!..!inf => 0!..2
0..2 & 1..inf => 1..2
0..2 & 1!..inf => 1!..2
0..2 & 1..!inf => 1..2
0..2 & 2..inf => 2
0..2 & 2!..inf => never
0..2 & 2.5..inf => never
0..2 & -inf..0 => 0
0..2 & -inf..inf => 0..2
0..2 & -inf!..inf => 0..2
0..2 & -inf..!inf => 0..2
0..2 & -inf!..!inf => 0..2
0..2 & int(0..1) => int(0..1)
0..2 & int(0..2) => int(0..2)
0..2 & int(1..2) => int(1..2)
0..2 & int(5..20) => never
0..2 & int(-20..-5) => never
0..2 & int(-10..10) => int(0..2)
0..2 & int(0..inf) => int(0..2)
0..2 & int(1..inf) => int(1..2)
0..2 & int(-inf..0) => 0
0..2 & int(-inf..1) => int(0..1)
0..2 & int(-inf..inf) => int(0..2)
0..2 & nonInt(0..1) => nonInt(0..1)
0..2 & nonInt(0..2) => nonInt(0..2)
0..2 & nonInt(-1..2) => nonInt(0..2)
0..2 & nonInt(0..inf) => nonInt(0..2)
0..2 & nonInt(-1..inf) => nonInt(0..2)
0..2 & nonInt(-inf..0) => never
0..2 & nonInt(-inf..1) => nonInt(0..1)
0..2 & nonInt(-inf..inf) => nonInt(0..2)
0..2 & (1 | int(3..4)) => 1
0..2 & string => never
0..2 & "" => never
0..2 & "foo" => never
0..2 & "bar" => never
0..2 & "ðŸ’©" => never
0..2 & ("bar" | "foo") => never
0..2 & ("baz" | "foo") => never
0..2 & invStrSet("foo") => never
0..2 & invStrSet("bar" | "foo") => never
0..2 & invStrSet("bar") => never
0..2 & invStrSet("") => never
0!..!2 & 0.5..1.5 => 0.5..1.5
0!..!2 & 0.5..2.5 => 0.5..!2
0!..!2 & 0.5!..2.5 => 0.5!..!2
0!..!2 & 0.5..!2.5 => 0.5..!2
0!..!2 & -2.56..3.35 => 0!..!2
0!..!2 & 0.5..0.75 => 0.5..0.75
0!..!2 & 1..2 => 1..!2
0!..!2 & 0..inf => 0!..!2
0!..!2 & 0!..inf => 0!..!2
0!..!2 & 0..!inf => 0!..!2
0!..!2 & 0!..!inf => 0!..!2
0!..!2 & 1..inf => 1..!2
0!..!2 & 1!..inf => nonInt(1..2)
0!..!2 & 1..!inf => 1..!2
0!..!2 & 2..inf => never
0!..!2 & 2!..inf => never
0!..!2 & 2.5..inf => never
0!..!2 & -inf..0 => never
0!..!2 & -inf..inf => 0!..!2
0!..!2 & -inf!..inf => 0!..!2
0!..!2 & -inf..!inf => 0!..!2
0!..!2 & -inf!..!inf => 0!..!2
0!..!2 & int(0..1) => 1
0!..!2 & int(0..2) => 1
0!..!2 & int(1..2) => 1
0!..!2 & int(5..20) => never
0!..!2 & int(-20..-5) => never
0!..!2 & int(-10..10) => 1
0!..!2 & int(0..inf) => 1
0!..!2 & int(1..inf) => 1
0!..!2 & int(-inf..0) => never
0!..!2 & int(-inf..1) => 1
0!..!2 & int(-inf..inf) => 1
0!..!2 & nonInt(0..1) => nonInt(0..1)
0!..!2 & nonInt(0..2) => nonInt(0..2)
0!..!2 & nonInt(-1..2) => nonInt(0..2)
0!..!2 & nonInt(0..inf) => nonInt(0..2)
0!..!2 & nonInt(-1..inf) => nonInt(0..2)
0!..!2 & nonInt(-inf..0) => never
0!..!2 & nonInt(-inf..1) => nonInt(0..1)
0!..!2 & nonInt(-inf..inf) => nonInt(0..2)
0!..!2 & (1 | int(3..4)) => 1
0!..!2 & string => never
0!..!2 & "" => never
0!..!2 & "foo" => never
0!..!2 & "bar" => never
0!..!2 & "ðŸ’©" => never
0!..!2 & ("bar" | "foo") => never
0!..!2 & ("baz" | "foo") => never
0!..!2 & invStrSet("foo") => never
0!..!2 & invStrSet("bar" | "foo") => never
0!..!2 & invStrSet("bar") => never
0!..!2 & invStrSet("") => never
0.5..1.5 & 0.5..2.5 => 0.5..1.5
0.5..1.5 & 0.5!..2.5 => 0.5!..1.5
0.5..1.5 & 0.5..!2.5 => 0.5..1.5
0.5..1.5 & -2.56..3.35 => 0.5..1.5
0.5..1.5 & 0.5..0.75 => 0.5..0.75
0.5..1.5 & 1..2 => 1..1.5
0.5..1.5 & 0..inf => 0.5..1.5
0.5..1.5 & 0!..inf => 0.5..1.5
0.5..1.5 & 0..!inf => 0.5..1.5
0.5..1.5 & 0!..!inf => 0.5..1.5
0.5..1.5 & 1..inf => 1..1.5
0.5..1.5 & 1!..inf => 1!..1.5
0.5..1.5 & 1..!inf => 1..1.5
0.5..1.5 & 2..inf => never
0.5..1.5 & 2!..inf => never
0.5..1.5 & 2.5..inf => never
0.5..1.5 & -inf..0 => never
0.5..1.5 & -inf..inf => 0.5..1.5
0.5..1.5 & -inf!..inf => 0.5..1.5
0.5..1.5 & -inf..!inf => 0.5..1.5
0.5..1.5 & -inf!..!inf => 0.5..1.5
0.5..1.5 & int(0..1) => 1
0.5..1.5 & int(0..2) => 1
0.5..1.5 & int(1..2) => 1
0.5..1.5 & int(5..20) => never
0.5..1.5 & int(-20..-5) => never
0.5..1.5 & int(-10..10) => 1
0.5..1.5 & int(0..inf) => 1
0.5..1.5 & int(1..inf) => 1
0.5..1.5 & int(-inf..0) => never
0.5..1.5 & int(-inf..1) => 1
0.5..1.5 & int(-inf..inf) => 1
0.5..1.5 & nonInt(0..1) => 0.5..!1
0.5..1.5 & nonInt(0..2) => 0.5..!1 | 1!..1.5
0.5..1.5 & nonInt(-1..2) => 0.5..!1 | 1!..1.5
0.5..1.5 & nonInt(0..inf) => 0.5..!1 | 1!..1.5
0.5..1.5 & nonInt(-1..inf) => 0.5..!1 | 1!..1.5
0.5..1.5 & nonInt(-inf..0) => never
0.5..1.5 & nonInt(-inf..1) => 0.5..!1
0.5..1.5 & nonInt(-inf..inf) => 0.5..!1 | 1!..1.5
0.5..1.5 & (1 | int(3..4)) => 1
0.5..1.5 & string => never
0.5..1.5 & "" => never
0.5..1.5 & "foo" => never
0.5..1.5 & "bar" => never
0.5..1.5 & "ðŸ’©" => never
0.5..1.5 & ("bar" | "foo") => never
0.5..1.5 & ("baz" | "foo") => never
0.5..1.5 & invStrSet("foo") => never
0.5..1.5 & invStrSet("bar" | "foo") => never
0.5..1.5 & invStrSet("bar") => never
0.5..1.5 & invStrSet("") => never
0.5..2.5 & 0.5!..2.5 => 0.5!..2.5
0.5..2.5 & 0.5..!2.5 => 0.5..!2.5
0.5..2.5 & -2.56..3.35 => 0.5..2.5
0.5..2.5 & 0.5..0.75 => 0.5..0.75
0.5..2.5 & 1..2 => 1..2
0.5..2.5 & 0..inf => 0.5..2.5
0.5..2.5 & 0!..inf => 0.5..2.5
0.5..2.5 & 0..!inf => 0.5..2.5
0.5..2.5 & 0!..!inf => 0.5..2.5
0.5..2.5 & 1..inf => 1..2.5
0.5..2.5 & 1!..inf => 1!..2.5
0.5..2.5 & 1..!inf => 1..2.5
0.5..2.5 & 2..inf => 2..2.5
0.5..2.5 & 2!..inf => 2!..2.5
0.5..2.5 & 2.5..inf => 2.5
0.5..2.5 & -inf..0 => never
0.5..2.5 & -inf..inf => 0.5..2.5
0.5..2.5 & -inf!..inf => 0.5..2.5
0.5..2.5 & -inf..!inf => 0.5..2.5
0.5..2.5 & -inf!..!inf => 0.5..2.5
0.5..2.5 & int(0..1) => 1
0.5..2.5 & int(0..2) => int(1..2)
0.5..2.5 & int(1..2) => int(1..2)
0.5..2.5 & int(5..20) => never
0.5..2.5 & int(-20..-5) => never
0.5..2.5 & int(-10..10) => int(1..2)
0.5..2.5 & int(0..inf) => int(1..2)
0.5..2.5 & int(1..inf) => int(1..2)
0.5..2.5 & int(-inf..0) => never
0.5..2.5 & int(-inf..1) => 1
0.5..2.5 & int(-inf..inf) => int(1..2)
0.5..2.5 & nonInt(0..1) => 0.5..!1
0.5..2.5 & nonInt(0..2) => 0.5..!1 | nonInt(1..2)
0.5..2.5 & nonInt(-1..2) => 0.5..!1 | nonInt(1..2)
0.5..2.5 & nonInt(0..inf) => 0.5..!1 | nonInt(1..2) | 2!..2.5
0.5..2.5 & nonInt(-1..inf) => 0.5..!1 | nonInt(1..2) | 2!..2.5
0.5..2.5 & nonInt(-inf..0) => never
0.5..2.5 & nonInt(-inf..1) => 0.5..!1
0.5..2.5 & nonInt(-inf..inf) => 0.5..!1 | nonInt(1..2) | 2!..2.5
0.5..2.5 & (1 | int(3..4)) => 1
0.5..2.5 & string => never
0.5..2.5 & "" => never
0.5..2.5 & "foo" => never
0.5..2.5 & "bar" => never
0.5..2.5 & "ðŸ’©" => never
0.5..2.5 & ("bar" | "foo") => never
0.5..2.5 & ("baz" | "foo") => never
0.5..2.5 & invStrSet("foo") => never
0.5..2.5 & invStrSet("bar" | "foo") => never
0.5..2.5 & invStrSet("bar") => never
0.5..2.5 & invStrSet("") => never
0.5!..2.5 & 0.5..!2.5 => 0.5!..!2.5
0.5!..2.5 & -2.56..3.35 => 0.5!..2.5
0.5!..2.5 & 0.5..0.75 => 0.5!..0.75
0.5!..2.5 & 1..2 => 1..2
0.5!..2.5 & 0..inf => 0.5!..2.5
0.5!..2.5 & 0!..inf => 0.5!..2.5
0.5!..2.5 & 0..!inf => 0.5!..2.5
0.5!..2.5 & 0!..!inf => 0.5!..2.5
0.5!..2.5 & 1..inf => 1..2.5
0.5!..2.5 & 1!..inf => 1!..2.5
0.5!..2.5 & 1..!inf => 1..2.5
0.5!..2.5 & 2..inf => 2..2.5
0.5!..2.5 & 2!..inf => 2!..2.5
0.5!..2.5 & 2.5..inf => 2.5
0.5!..2.5 & -inf..0 => never
0.5!..2.5 & -inf..inf => 0.5!..2.5
0.5!..2.5 & -inf!..inf => 0.5!..2.5
0.5!..2.5 & -inf..!inf => 0.5!..2.5
0.5!..2.5 & -inf!..!inf => 0.5!..2.5
0.5!..2.5 & int(0..1) => 1
0.5!..2.5 & int(0..2) => int(1..2)
0.5!..2.5 & int(1..2) => int(1..2)
0.5!..2.5 & int(5..20) => never
0.5!..2.5 & int(-20..-5) => never
0.5!..2.5 & int(-10..10) => int(1..2)
0.5!..2.5 & int(0..inf) => int(1..2)
0.5!..2.5 & int(1..inf) => int(1..2)
0.5!..2.5 & int(-inf..0) => never
0.5!..2.5 & int(-inf..1) => 1
0.5!..2.5 & int(-inf..inf) => int(1..2)
0.5!..2.5 & nonInt(0..1) => 0.5!..!1
0.5!..2.5 & nonInt(0..2) => 0.5!..!1 | nonInt(1..2)
0.5!..2.5 & nonInt(-1..2) => 0.5!..!1 | nonInt(1..2)
0.5!..2.5 & nonInt(0..inf) => 0.5!..!1 | nonInt(1..2) | 2!..2.5
0.5!..2.5 & nonInt(-1..inf) => 0.5!..!1 | nonInt(1..2) | 2!..2.5
0.5!..2.5 & nonInt(-inf..0) => never
0.5!..2.5 & nonInt(-inf..1) => 0.5!..!1
0.5!..2.5 & nonInt(-inf..inf) => 0.5!..!1 | nonInt(1..2) | 2!..2.5
0.5!..2.5 & (1 | int(3..4)) => 1
0.5!..2.5 & string => never
0.5!..2.5 & "" => never
0.5!..2.5 & "foo" => never
0.5!..2.5 & "bar" => never
0.5!..2.5 & "ðŸ’©" => never
0.5!..2.5 & ("bar" | "foo") => never
0.5!..2.5 & ("baz" | "foo") => never
0.5!..2.5 & invStrSet("foo") => never
0.5!..2.5 & invStrSet("bar" | "foo") => never
0.5!..2.5 & invStrSet("bar") => never
0.5!..2.5 & invStrSet("") => never
0.5..!2.5 & -2.56..3.35 => 0.5..!2.5
0.5..!2.5 & 0.5..0.75 => 0.5..0.75
0.5..!2.5 & 1..2 => 1..2
0.5..!2.5 & 0..inf => 0.5..!2.5
0.5..!2.5 & 0!..inf => 0.5..!2.5
0.5..!2.5 & 0..!inf => 0.5..!2.5
0.5..!2.5 & 0!..!inf => 0.5..!2.5
0.5..!2.5 & 1..inf => 1..!2.5
0.5..!2.5 & 1!..inf => 1!..!2.5
0.5..!2.5 & 1..!inf => 1..!2.5
0.5..!2.5 & 2..inf => 2..!2.5
0.5..!2.5 & 2!..inf => 2!..!2.5
0.5..!2.5 & 2.5..inf => never
0.5..!2.5 & -inf..0 => never
0.5..!2.5 & -inf..inf => 0.5..!2.5
0.5..!2.5 & -inf!..inf => 0.5..!2.5
0.5..!2.5 & -inf..!inf => 0.5..!2.5
0.5..!2.5 & -inf!..!inf => 0.5..!2.5
0.5..!2.5 & int(0..1) => 1
0.5..!2.5 & int(0..2) => int(1..2)
0.5..!2.5 & int(1..2) => int(1..2)
0.5..!2.5 & int(5..20) => never
0.5..!2.5 & int(-20..-5) => never
0.5..!2.5 & int(-10..10) => int(1..2)
0.5..!2.5 & int(0..inf) => int(1..2)
0.5..!2.5 & int(1..inf) => int(1..2)
0.5..!2.5 & int(-inf..0) => never
0.5..!2.5 & int(-inf..1) => 1
0.5..!2.5 & int(-inf..inf) => int(1..2)
0.5..!2.5 & nonInt(0..1) => 0.5..!1
0.5..!2.5 & nonInt(0..2) => 0.5..!1 | nonInt(1..2)
0.5..!2.5 & nonInt(-1..2) => 0.5..!1 | nonInt(1..2)
0.5..!2.5 & nonInt(0..inf) => 0.5..!1 | nonInt(1..2) | 2!..!2.5
0.5..!2.5 & nonInt(-1..inf) => 0.5..!1 | nonInt(1..2) | 2!..!2.5
0.5..!2.5 & nonInt(-inf..0) => never
0.5..!2.5 & nonInt(-inf..1) => 0.5..!1
0.5..!2.5 & nonInt(-inf..inf) => 0.5..!1 | nonInt(1..2) | 2!..!2.5
0.5..!2.5 & (1 | int(3..4)) => 1
0.5..!2.5 & string => never
0.5..!2.5 & "" => never
0.5..!2.5 & "foo" => never
0.5..!2.5 & "bar" => never
0.5..!2.5 & "ðŸ’©" => never
0.5..!2.5 & ("bar" | "foo") => never
0.5..!2.5 & ("baz" | "foo") => never
0.5..!2.5 & invStrSet("foo") => never
0.5..!2.5 & invStrSet("bar" | "foo") => never
0.5..!2.5 & invStrSet("bar") => never
0.5..!2.5 & invStrSet("") => never
-2.56..3.35 & 0.5..0.75 => 0.5..0.75
-2.56..3.35 & 1..2 => 1..2
-2.56..3.35 & 0..inf => 0..3.35
-2.56..3.35 & 0!..inf => 0!..3.35
-2.56..3.35 & 0..!inf => 0..3.35
-2.56..3.35 & 0!..!inf => 0!..3.35
-2.56..3.35 & 1..inf => 1..3.35
-2.56..3.35 & 1!..inf => 1!..3.35
-2.56..3.35 & 1..!inf => 1..3.35
-2.56..3.35 & 2..inf => 2..3.35
-2.56..3.35 & 2!..inf => 2!..3.35
-2.56..3.35 & 2.5..inf => 2.5..3.35
-2.56..3.35 & -inf..0 => -2.56..0
-2.56..3.35 & -inf..inf => -2.56..3.35
-2.56..3.35 & -inf!..inf => -2.56..3.35
-2.56..3.35 & -inf..!inf => -2.56..3.35
-2.56..3.35 & -inf!..!inf => -2.56..3.35
-2.56..3.35 & int(0..1) => int(0..1)
-2.56..3.35 & int(0..2) => int(0..2)
-2.56..3.35 & int(1..2) => int(1..2)
-2.56..3.35 & int(5..20) => never
-2.56..3.35 & int(-20..-5) => never
-2.56..3.35 & int(-10..10) => int(-2..3)
-2.56..3.35 & int(0..inf) => int(0..3)
-2.56..3.35 & int(1..inf) => int(1..3)
-2.56..3.35 & int(-inf..0) => int(-2..0)
-2.56..3.35 & int(-inf..1) => int(-2..1)
-2.56..3.35 & int(-inf..inf) => int(-2..3)
-2.56..3.35 & nonInt(0..1) => nonInt(0..1)
-2.56..3.35 & nonInt(0..2) => nonInt(0..2)
-2.56..3.35 & nonInt(-1..2) => nonInt(-1..2)
-2.56..3.35 & nonInt(0..inf) => nonInt(0..3) | 3!..3.35
-2.56..3.35 & nonInt(-1..inf) => nonInt(-1..3) | 3!..3.35
-2.56..3.35 & nonInt(-inf..0) => -2.56..!-2 | nonInt(-2..0)
-2.56..3.35 & nonInt(-inf..1) => -2.56..!-2 | nonInt(-2..1)
-2.56..3.35 & nonInt(-inf..inf) => -2.56..!-2 | nonInt(-2..3) | 3!..3.35
-2.56..3.35 & (1 | int(3..4)) => 1 | 3
-2.56..3.35 & string => never
-2.56..3.35 & "" => never
-2.56..3.35 & "foo" => never
-2.56..3.35 & "bar" => never
-2.56..3.35 & "ðŸ’©" => never
-2.56..3.35 & ("bar" | "foo") => never
-2.56..3.35 & ("baz" | "foo") => never
-2.56..3.35 & invStrSet("foo") => never
-2.56..3.35 & invStrSet("bar" | "foo") => never
-2.56..3.35 & invStrSet("bar") => never
-2.56..3.35 & invStrSet("") => never
0.5..0.75 & 1..2 => never
0.5..0.75 & 0..inf => 0.5..0.75
0.5..0.75 & 0!..inf => 0.5..0.75
0.5..0.75 & 0..!inf => 0.5..0.75
0.5..0.75 & 0!..!inf => 0.5..0.75
0.5..0.75 & 1..inf => never
0.5..0.75 & 1!..inf => never
0.5..0.75 & 1..!inf => never
0.5..0.75 & 2..inf => never
0.5..0.75 & 2!..inf => never
0.5..0.75 & 2.5..inf => never
0.5..0.75 & -inf..0 => never
0.5..0.75 & -inf..inf => 0.5..0.75
0.5..0.75 & -inf!..inf => 0.5..0.75
0.5..0.75 & -inf..!inf => 0.5..0.75
0.5..0.75 & -inf!..!inf => 0.5..0.75
0.5..0.75 & int(0..1) => never
0.5..0.75 & int(0..2) => never
0.5..0.75 & int(1..2) => never
0.5..0.75 & int(5..20) => never
0.5..0.75 & int(-20..-5) => never
0.5..0.75 & int(-10..10) => never
0.5..0.75 & int(0..inf) => never
0.5..0.75 & int(1..inf) => never
0.5..0.75 & int(-inf..0) => never
0.5..0.75 & int(-inf..1) => never
0.5..0.75 & int(-inf..inf) => never
0.5..0.75 & nonInt(0..1) => 0.5..0.75
0.5..0.75 & nonInt(0..2) => 0.5..0.75
0.5..0.75 & nonInt(-1..2) => 0.5..0.75
0.5..0.75 & nonInt(0..inf) => 0.5..0.75
0.5..0.75 & nonInt(-1..inf) => 0.5..0.75
0.5..0.75 & nonInt(-inf..0) => never
0.5..0.75 & nonInt(-inf..1) => 0.5..0.75
0.5..0.75 & nonInt(-inf..inf) => 0.5..0.75
0.5..0.75 & (1 | int(3..4)) => never
0.5..0.75 & string => never
0.5..0.75 & "" => never
0.5..0.75 & "foo" => never
0.5..0.75 & "bar" => never
0.5..0.75 & "ðŸ’©" => never
0.5..0.75 & ("bar" | "foo") => never
0.5..0.75 & ("baz" | "foo") => never
0.5..0.75 & invStrSet("foo") => never
0.5..0.75 & invStrSet("bar" | "foo") => never
0.5..0.75 & invStrSet("bar") => never
0.5..0.75 & invStrSet("") => never
1..2 & 0..inf => 1..2
1..2 & 0!..inf => 1..2
1..2 & 0..!inf => 1..2
1..2 & 0!..!inf => 1..2
1..2 & 1..inf => 1..2
1..2 & 1!..inf => 1!..2
1..2 & 1..!inf => 1..2
1..2 & 2..inf => 2
1..2 & 2!..inf => never
1..2 & 2.5..inf => never
1..2 & -inf..0 => never
1..2 & -inf..inf => 1..2
1..2 & -inf!..inf => 1..2
1..2 & -inf..!inf => 1..2
1..2 & -inf!..!inf => 1..2
1..2 & int(0..1) => 1
1..2 & int(0..2) => int(1..2)
1..2 & int(1..2) => int(1..2)
1..2 & int(5..20) => never
1..2 & int(-20..-5) => never
1..2 & int(-10..10) => int(1..2)
1..2 & int(0..inf) => int(1..2)
1..2 & int(1..inf) => int(1..2)
1..2 & int(-inf..0) => never
1..2 & int(-inf..1) => 1
1..2 & int(-inf..inf) => int(1..2)
1..2 & nonInt(0..1) => never
1..2 & nonInt(0..2) => nonInt(1..2)
1..2 & nonInt(-1..2) => nonInt(1..2)
1..2 & nonInt(0..inf) => nonInt(1..2)
1..2 & nonInt(-1..inf) => nonInt(1..2)
1..2 & nonInt(-inf..0) => never
1..2 & nonInt(-inf..1) => never
1..2 & nonInt(-inf..inf) => nonInt(1..2)
1..2 & (1 | int(3..4)) => 1
1..2 & string => never
1..2 & "" => never
1..2 & "foo" => never
1..2 & "bar" => never
1..2 & "ðŸ’©" => never
1..2 & ("bar" | "foo") => never
1..2 & ("baz" | "foo") => never
1..2 & invStrSet("foo") => never
1..2 & invStrSet("bar" | "foo") => never
1..2 & invStrSet("bar") => never
1..2 & invStrSet("") => never
0..inf & 0!..inf => 0!..inf
0..inf & 0..!inf => 0..!inf
0..inf & 0!..!inf => 0!..!inf
0..inf & 1..inf => 1..inf
0..inf & 1!..inf => 1!..inf
0..inf & 1..!inf => 1..!inf
0..inf & 2..inf => 2..inf
0..inf & 2!..inf => 2!..inf
0..inf & 2.5..inf => 2.5..inf
0..inf & -inf..0 => 0
0..inf & -inf..inf => 0..inf
0..inf & -inf!..inf => 0..inf
0..inf & -inf..!inf => 0..!inf
0..inf & -inf!..!inf => 0..!inf
0..inf & int(0..1) => int(0..1)
0..inf & int(0..2) => int(0..2)
0..inf & int(1..2) => int(1..2)
0..inf & int(5..20) => int(5..20)
0..inf & int(-20..-5) => never
0..inf & int(-10..10) => int(0..10)
0..inf & int(0..inf) => int(0..inf)
0..inf & int(1..inf) => int(1..inf)
0..inf & int(-inf..0) => 0
0..inf & int(-inf..1) => int(0..1)
0..inf & int(-inf..inf) => int(0..inf)
0..inf & nonInt(0..1) => nonInt(0..1)
0..inf & nonInt(0..2) => nonInt(0..2)
0..inf & nonInt(-1..2) => nonInt(0..2)
0..inf & nonInt(0..inf) => nonInt(0..inf)
0..inf & nonInt(-1..inf) => nonInt(0..inf)
0..inf & nonInt(-inf..0) => never
0..inf & nonInt(-inf..1) => nonInt(0..1)
0..inf & nonInt(-inf..inf) => nonInt(0..inf)
0..inf & (1 | int(3..4)) => 1 | int(3..4)
0..inf & string => never
0..inf & "" => never
0..inf & "foo" => never
0..inf & "bar" => never
0..inf & "ðŸ’©" => never
0..inf & ("bar" | "foo") => never
0..inf & ("baz" | "foo") => never
0..inf & invStrSet("foo") => never
0..inf & invStrSet("bar" | "foo") => never
0..inf & invStrSet("bar") => never
0..inf & invStrSet("") => never
0!..inf & 0..!inf => 0!..!inf
0!..inf & 0!..!inf => 0!..!inf
0!..inf & 1..inf => 1..inf
0!..inf & 1!..inf => 1!..inf
0!..inf & 1..!inf => 1..!inf
0!..inf & 2..inf => 2..inf
0!..inf & 2!..inf => 2!..inf
0!..inf & 2.5..inf => 2.5..inf
0!..inf & -inf..0 => never
0!..inf & -inf..inf => 0!..inf
0!..inf & -inf!..inf => 0!..inf
0!..inf & -inf..!inf => 0!..!inf
0!..inf & -inf!..!inf => 0!..!inf
0!..inf & int(0..1) => 1
0!..inf & int(0..2) => int(1..2)
0!..inf & int(1..2) => int(1..2)
0!..inf & int(5..20) => int(5..20)
0!..inf & int(-20..-5) => never
0!..inf & int(-10..10) => int(1..10)
0!..inf & int(0..inf) => int(1..inf)
0!..inf & int(1..inf) => int(1..inf)
0!..inf & int(-inf..0) => never
0!..inf & int(-inf..1) => 1
0!..inf & int(-inf..inf) => int(1..inf)
0!..inf & nonInt(0..1) => nonInt(0..1)
0!..inf & nonInt(0..2) => nonInt(0..2)
0!..inf & nonInt(-1..2) => nonInt(0..2)
0!..inf & nonInt(0..inf) => nonInt(0..inf)
0!..inf & nonInt(-1..inf) => nonInt(0..inf)
0!..inf & nonInt(-inf..0) => never
0!..inf & nonInt(-inf..1) => nonInt(0..1)
0!..inf & nonInt(-inf..inf) => nonInt(0..inf)
0!..inf & (1 | int(3..4)) => 1 | int(3..4)
0!..inf & string => never
0!..inf & "" => never
0!..inf & "foo" => never
0!..inf & "bar" => never
0!..inf & "ðŸ’©" => never
0!..inf & ("bar" | "foo") => never
0!..inf & ("baz" | "foo") => never
0!..inf & invStrSet("foo") => never
0!..inf & invStrSet("bar" | "foo") => never
0!..inf & invStrSet("bar") => never
0!..inf & invStrSet("") => never
0..!inf & 0!..!inf => 0!..!inf
0..!inf & 1..inf => 1..!inf
0..!inf & 1!..inf => 1!..!inf
0..!inf & 1..!inf => 1..!inf
0..!inf & 2..inf => 2..!inf
0..!inf & 2!..inf => 2!..!inf
0..!inf & 2.5..inf => 2.5..!inf
0..!inf & -inf..0 => 0
0..!inf & -inf..inf => 0..!inf
0..!inf & -inf!..inf => 0..!inf
0..!inf & -inf..!inf => 0..!inf
0..!inf & -inf!..!inf => 0..!inf
0..!inf & int(0..1) => int(0..1)
0..!inf & int(0..2) => int(0..2)
0..!inf & int(1..2) => int(1..2)
0..!inf & int(5..20) => int(5..20)
0..!inf & int(-20..-5) => never
0..!inf & int(-10..10) => int(0..10)
0..!inf & int(0..inf) => int(0..inf)
0..!inf & int(1..inf) => int(1..inf)
0..!inf & int(-inf..0) => 0
0..!inf & int(-inf..1) => int(0..1)
0..!inf & int(-inf..inf) => int(0..inf)
0..!inf & nonInt(0..1) => nonInt(0..1)
0..!inf & nonInt(0..2) => nonInt(0..2)
0..!inf & nonInt(-1..2) => nonInt(0..2)
0..!inf & nonInt(0..inf) => nonInt(0..inf)
0..!inf & nonInt(-1..inf) => nonInt(0..inf)
0..!inf & nonInt(-inf..0) => never
0..!inf & nonInt(-inf..1) => nonInt(0..1)
0..!inf & nonInt(-inf..inf) => nonInt(0..inf)
0..!inf & (1 | int(3..4)) => 1 | int(3..4)
0..!inf & string => never
0..!inf & "" => never
0..!inf & "foo" => never
0..!inf & "bar" => never
0..!inf & "ðŸ’©" => never
0..!inf & ("bar" | "foo") => never
0..!inf & ("baz" | "foo") => never
0..!inf & invStrSet("foo") => never
0..!inf & invStrSet("bar" | "foo") => never
0..!inf & invStrSet("bar") => never
0..!inf & invStrSet("") => never
0!..!inf & 1..inf => 1..!inf
0!..!inf & 1!..inf => 1!..!inf
0!..!inf & 1..!inf => 1..!inf
0!..!inf & 2..inf => 2..!inf
0!..!inf & 2!..inf => 2!..!inf
0!..!inf & 2.5..inf => 2.5..!inf
0!..!inf & -inf..0 => never
0!..!inf & -inf..inf => 0!..!inf
0!..!inf & -inf!..inf => 0!..!inf
0!..!inf & -inf..!inf => 0!..!inf
0!..!inf & -inf!..!inf => 0!..!inf
0!..!inf & int(0..1) => 1
0!..!inf & int(0..2) => int(1..2)
0!..!inf & int(1..2) => int(1..2)
0!..!inf & int(5..20) => int(5..20)
0!..!inf & int(-20..-5) => never
0!..!inf & int(-10..10) => int(1..10)
0!..!inf & int(0..inf) => int(1..inf)
0!..!inf & int(1..inf) => int(1..inf)
0!..!inf & int(-inf..0) => never
0!..!inf & int(-inf..1) => 1
0!..!inf & int(-inf..inf) => int(1..inf)
0!..!inf & nonInt(0..1) => nonInt(0..1)
0!..!inf & nonInt(0..2) => nonInt(0..2)
0!..!inf & nonInt(-1..2) => nonInt(0..2)
0!..!inf & nonInt(0..inf) => nonInt(0..inf)
0!..!inf & nonInt(-1..inf) => nonInt(0..inf)
0!..!inf & nonInt(-inf..0) => never
0!..!inf & nonInt(-inf..1) => nonInt(0..1)
0!..!inf & nonInt(-inf..inf) => nonInt(0..inf)
0!..!inf & (1 | int(3..4)) => 1 | int(3..4)
0!..!inf & string => never
0!..!inf & "" => never
0!..!inf & "foo" => never
0!..!inf & "bar" => never
0!..!inf & "ðŸ’©" => never
0!..!inf & ("bar" | "foo") => never
0!..!inf & ("baz" | "foo") => never
0!..!inf & invStrSet("foo") => never
0!..!inf & invStrSet("bar" | "foo") => never
0!..!inf & invStrSet("bar") => never
0!..!inf & invStrSet("") => never
1..inf & 1!..inf => 1!..inf
1..inf & 1..!inf => 1..!inf
1..inf & 2..inf => 2..inf
1..inf & 2!..inf => 2!..inf
1..inf & 2.5..inf => 2.5..inf
1..inf & -inf..0 => never
1..inf & -inf..inf => 1..inf
1..inf & -inf!..inf => 1..inf
1..inf & -inf..!inf => 1..!inf
1..inf & -inf!..!inf => 1..!inf
1..inf & int(0..1) => 1
1..inf & int(0..2) => int(1..2)
1..inf & int(1..2) => int(1..2)
1..inf & int(5..20) => int(5..20)
1..inf & int(-20..-5) => never
1..inf & int(-10..10) => int(1..10)
1..inf & int(0..inf) => int(1..inf)
1..inf & int(1..inf) => int(1..inf)
1..inf & int(-inf..0) => never
1..inf & int(-inf..1) => 1
1..inf & int(-inf..inf) => int(1..inf)
1..inf & nonInt(0..1) => never
1..inf & nonInt(0..2) => nonInt(1..2)
1..inf & nonInt(-1..2) => nonInt(1..2)
1..inf & nonInt(0..inf) => nonInt(1..inf)
1..inf & nonInt(-1..inf) => nonInt(1..inf)
1..inf & nonInt(-inf..0) => never
1..inf & nonInt(-inf..1) => never
1..inf & nonInt(-inf..inf) => nonInt(1..inf)
1..inf & (1 | int(3..4)) => 1 | int(3..4)
1..inf & string => never
1..inf & "" => never
1..inf & "foo" => never
1..inf & "bar" => never
1..inf & "ðŸ’©" => never
1..inf & ("bar" | "foo") => never
1..inf & ("baz" | "foo") => never
1..inf & invStrSet("foo") => never
1..inf & invStrSet("bar" | "foo") => never
1..inf & invStrSet("bar") => never
1..inf & invStrSet("") => never
1!..inf & 1..!inf => 1!..!inf
1!..inf & 2..inf => 2..inf
1!..inf & 2!..inf => 2!..inf
1!..inf & 2.5..inf => 2.5..inf
1!..inf & -inf..0 => never
1!..inf & -inf..inf => 1!..inf
1!..inf & -inf!..inf => 1!..inf
1!..inf & -inf..!inf => 1!..!inf
1!..inf & -inf!..!inf => 1!..!inf
1!..inf & int(0..1) => never
1!..inf & int(0..2) => 2
1!..inf & int(1..2) => 2
1!..inf & int(5..20) => int(5..20)
1!..inf & int(-20..-5) => never
1!..inf & int(-10..10) => int(2..10)
1!..inf & int(0..inf) => int(2..inf)
1!..inf & int(1..inf) => int(2..inf)
1!..inf & int(-inf..0) => never
1!..inf & int(-inf..1) => never
1!..inf & int(-inf..inf) => int(2..inf)
1!..inf & nonInt(0..1) => never
1!..inf & nonInt(0..2) => nonInt(1..2)
1!..inf & nonInt(-1..2) => nonInt(1..2)
1!..inf & nonInt(0..inf) => nonInt(1..inf)
1!..inf & nonInt(-1..inf) => nonInt(1..inf)
1!..inf & nonInt(-inf..0) => never
1!..inf & nonInt(-inf..1) => never
1!..inf & nonInt(-inf..inf) => nonInt(1..inf)
1!..inf & (1 | int(3..4)) => int(3..4)
1!..inf & string => never
1!..inf & "" => never
1!..inf & "foo" => never
1!..inf & "bar" => never
1!..inf & "ðŸ’©" => never
1!..inf & ("bar" | "foo") => never
1!..inf & ("baz" | "foo") => never
1!..inf & invStrSet("foo") => never
1!..inf & invStrSet("bar" | "foo") => never
1!..inf & invStrSet("bar") => never
1!..inf & invStrSet("") => never
1..!inf & 2..inf => 2..!inf
1..!inf & 2!..inf => 2!..!inf
1..!inf & 2.5..inf => 2.5..!inf
1..!inf & -inf..0 => never
1..!inf & -inf..inf => 1..!inf
1..!inf & -inf!..inf => 1..!inf
1..!inf & -inf..!inf => 1..!inf
1..!inf & -inf!..!inf => 1..!inf
1..!inf & int(0..1) => 1
1..!inf & int(0..2) => int(1..2)
1..!inf & int(1..2) => int(1..2)
1..!inf & int(5..20) => int(5..20)
1..!inf & int(-20..-5) => never
1..!inf & int(-10..10) => int(1..10)
1..!inf & int(0..inf) => int(1..inf)
1..!inf & int(1..inf) => int(1..inf)
1..!inf & int(-inf..0) => never
1..!inf & int(-inf..1) => 1
1..!inf & int(-inf..inf) => int(1..inf)
1..!inf & nonInt(0..1) => never
1..!inf & nonInt(0..2) => nonInt(1..2)
1..!inf & nonInt(-1..2) => nonInt(1..2)
1..!inf & nonInt(0..inf) => nonInt(1..inf)
1..!inf & nonInt(-1..inf) => nonInt(1..inf)
1..!inf & nonInt(-inf..0) => never
1..!inf & nonInt(-inf..1) => never
1..!inf & nonInt(-inf..inf) => nonInt(1..inf)
1..!inf & (1 | int(3..4)) => 1 | int(3..4)
1..!inf & string => never
1..!inf & "" => never
1..!inf & "foo" => never
1..!inf & "bar" => never
1..!inf & "ðŸ’©" => never
1..!inf & ("bar" | "foo") => never
1..!inf & ("baz" | "foo") => never
1..!inf & invStrSet("foo") => never
1..!inf & invStrSet("bar" | "foo") => never
1..!inf & invStrSet("bar") => never
1..!inf & invStrSet("") => never
2..inf & 2!..inf => 2!..inf
2..inf & 2.5..inf => 2.5..inf
2..inf & -inf..0 => never
2..inf & -inf..inf => 2..inf
2..inf & -inf!..inf => 2..inf
2..inf & -inf..!inf => 2..!inf
2..inf & -inf!..!inf => 2..!inf
2..inf & int(0..1) => never
2..inf & int(0..2) => 2
2..inf & int(1..2) => 2
2..inf & int(5..20) => int(5..20)
2..inf & int(-20..-5) => never
2..inf & int(-10..10) => int(2..10)
2..inf & int(0..inf) => int(2..inf)
2..inf & int(1..inf) => int(2..inf)
2..inf & int(-inf..0) => never
2..inf & int(-inf..1) => never
2..inf & int(-inf..inf) => int(2..inf)
2..inf & nonInt(0..1) => never
2..inf & nonInt(0..2) => never
2..inf & nonInt(-1..2) => never
2..inf & nonInt(0..inf) => nonInt(2..inf)
2..inf & nonInt(-1..inf) => nonInt(2..inf)
2..inf & nonInt(-inf..0) => never
2..inf & nonInt(-inf..1) => never
2..inf & nonInt(-inf..inf) => nonInt(2..inf)
2..inf & (1 | int(3..4)) => int(3..4)
2..inf & string => never
2..inf & "" => never
2..inf & "foo" => never
2..inf & "bar" => never
2..inf & "ðŸ’©" => never
2..inf & ("bar" | "foo") => never
2..inf & ("baz" | "foo") => never
2..inf & invStrSet("foo") => never
2..inf & invStrSet("bar" | "foo") => never
2..inf & invStrSet("bar") => never
2..inf & invStrSet("") => never
2!..inf & 2.5..inf => 2.5..inf
2!..inf & -inf..0 => never
2!..inf & -inf..inf => 2!..inf
2!..inf & -inf!..inf => 2!..inf
2!..inf & -inf..!inf => 2!..!inf
2!..inf & -inf!..!inf => 2!..!inf
2!..inf & int(0..1) => never
2!..inf & int(0..2) => never
2!..inf & int(1..2) => never
2!..inf & int(5..20) => int(5..20)
2!..inf & int(-20..-5) => never
2!..inf & int(-10..10) => int(3..10)
2!..inf & int(0..inf) => int(3..inf)
2!..inf & int(1..inf) => int(3..inf)
2!..inf & int(-inf..0) => never
2!..inf & int(-inf..1) => never
2!..inf & int(-inf..inf) => int(3..inf)
2!..inf & nonInt(0..1) => never
2!..inf & nonInt(0..2) => never
2!..inf & nonInt(-1..2) => never
2!..inf & nonInt(0..inf) => nonInt(2..inf)
2!..inf & nonInt(-1..inf) => nonInt(2..inf)
2!..inf & nonInt(-inf..0) => never
2!..inf & nonInt(-inf..1) => never
2!..inf & nonInt(-inf..inf) => nonInt(2..inf)
2!..inf & (1 | int(3..4)) => int(3..4)
2!..inf & string => never
2!..inf & "" => never
2!..inf & "foo" => never
2!..inf & "bar" => never
2!..inf & "ðŸ’©" => never
2!..inf & ("bar" | "foo") => never
2!..inf & ("baz" | "foo") => never
2!..inf & invStrSet("foo") => never
2!..inf & invStrSet("bar" | "foo") => never
2!..inf & invStrSet("bar") => never
2!..inf & invStrSet("") => never
2.5..inf & -inf..0 => never
2.5..inf & -inf..inf => 2.5..inf
2.5..inf & -inf!..inf => 2.5..inf
2.5..inf & -inf..!inf => 2.5..!inf
2.5..inf & -inf!..!inf => 2.5..!inf
2.5..inf & int(0..1) => never
2.5..inf & int(0..2) => never
2.5..inf & int(1..2) => never
2.5..inf & int(5..20) => int(5..20)
2.5..inf & int(-20..-5) => never
2.5..inf & int(-10..10) => int(3..10)
2.5..inf & int(0..inf) => int(3..inf)
2.5..inf & int(1..inf) => int(3..inf)
2.5..inf & int(-inf..0) => never
2.5..inf & int(-inf..1) => never
2.5..inf & int(-inf..inf) => int(3..inf)
2.5..inf & nonInt(0..1) => never
2.5..inf & nonInt(0..2) => never
2.5..inf & nonInt(-1..2) => never
2.5..inf & nonInt(0..inf) => 2.5..!3 | nonInt(3..inf)
2.5..inf & nonInt(-1..inf) => 2.5..!3 | nonInt(3..inf)
2.5..inf & nonInt(-inf..0) => never
2.5..inf & nonInt(-inf..1) => never
2.5..inf & nonInt(-inf..inf) => 2.5..!3 | nonInt(3..inf)
2.5..inf & (1 | int(3..4)) => int(3..4)
2.5..inf & string => never
2.5..inf & "" => never
2.5..inf & "foo" => never
2.5..inf & "bar" => never
2.5..inf & "ðŸ’©" => never
2.5..inf & ("bar" | "foo") => never
2.5..inf & ("baz" | "foo") => never
2.5..inf & invStrSet("foo") => never
2.5..inf & invStrSet("bar" | "foo") => never
2.5..inf & invStrSet("bar") => never
2.5..inf & invStrSet("") => never
-inf..0 & -inf..inf => -inf..0
-inf..0 & -inf!..inf => -inf!..0
-inf..0 & -inf..!inf => -inf..0
-inf..0 & -inf!..!inf => -inf!..0
-inf..0 & int(0..1) => 0
-inf..0 & int(0..2) => 0
-inf..0 & int(1..2) => never
-inf..0 & int(5..20) => never
-inf..0 & int(-20..-5) => int(-20..-5)
-inf..0 & int(-10..10) => int(-10..0)
-inf..0 & int(0..inf) => 0
-inf..0 & int(1..inf) => never
-inf..0 & int(-inf..0) => int(-inf..0)
-inf..0 & int(-inf..1) => int(-inf..0)
-inf..0 & int(-inf..inf) => int(-inf..0)
-inf..0 & nonInt(0..1) => never
-inf..0 & nonInt(0..2) => never
-inf..0 & nonInt(-1..2) => nonInt(-1..0)
-inf..0 & nonInt(0..inf) => never
-inf..0 & nonInt(-1..inf) => nonInt(-1..0)
-inf..0 & nonInt(-inf..0) => nonInt(-inf..0)
-inf..0 & nonInt(-inf..1) => nonInt(-inf..0)
-inf..0 & nonInt(-inf..inf) => nonInt(-inf..0)
-inf..0 & (1 | int(3..4)) => never
-inf..0 & string => never
-inf..0 & "" => never
-inf..0 & "foo" => never
-inf..0 & "bar" => never
-inf..0 & "ðŸ’©" => never
-inf..0 & ("bar" | "foo") => never
-inf..0 & ("baz" | "foo") => never
-inf..0 & invStrSet("foo") => never
-inf..0 & invStrSet("bar" | "foo") => never
-inf..0 & invStrSet("bar") => never
-inf..0 & invStrSet("") => never
-inf..inf & -inf!..inf => -inf!..inf
-inf..inf & -inf..!inf => -inf..!inf
-inf..inf & -inf!..!inf => -inf!..!inf
-inf..inf & int(0..1) => int(0..1)
-inf..inf & int(0..2) => int(0..2)
-inf..inf & int(1..2) => int(1..2)
-inf..inf & int(5..20) => int(5..20)
-inf..inf & int(-20..-5) => int(-20..-5)
-inf..inf & int(-10..10) => int(-10..10)
-inf..inf & int(0..inf) => int(0..inf)
-inf..inf & int(1..inf) => int(1..inf)
-inf..inf & int(-inf..0) => int(-inf..0)
-inf..inf & int(-inf..1) => int(-inf..1)
-inf..inf & int(-inf..inf) => int(-inf..inf)
-inf..inf & nonInt(0..1) => nonInt(0..1)
-inf..inf & nonInt(0..2) => nonInt(0..2)
-inf..inf & nonInt(-1..2) => nonInt(-1..2)
-inf..inf & nonInt(0..inf) => nonInt(0..inf)
-inf..inf & nonInt(-1..inf) => nonInt(-1..inf)
-inf..inf & nonInt(-inf..0) => nonInt(-inf..0)
-inf..inf & nonInt(-inf..1) => nonInt(-inf..1)
-inf..inf & nonInt(-inf..inf) => nonInt(-inf..inf)
-inf..inf & (1 | int(3..4)) => 1 | int(3..4)
-inf..inf & string => never
-inf..inf & "" => never
-inf..inf & "foo" => never
-inf..inf & "bar" => never
-inf..inf & "ðŸ’©" => never
-inf..inf & ("bar" | "foo") => never
-inf..inf & ("baz" | "foo") => never
-inf..inf & invStrSet("foo") => never
-inf..inf & invStrSet("bar" | "foo") => never
-inf..inf & invStrSet("bar") => never
-inf..inf & invStrSet("") => never
-inf!..inf & -inf..!inf => -inf!..!inf
-inf!..inf & -inf!..!inf => -inf!..!inf
-inf!..inf & int(0..1) => int(0..1)
-inf!..inf & int(0..2) => int(0..2)
-inf!..inf & int(1..2) => int(1..2)
-inf!..inf & int(5..20) => int(5..20)
-inf!..inf & int(-20..-5) => int(-20..-5)
-inf!..inf & int(-10..10) => int(-10..10)
-inf!..inf & int(0..inf) => int(0..inf)
-inf!..inf & int(1..inf) => int(1..inf)
-inf!..inf & int(-inf..0) => int(-inf..0)
-inf!..inf & int(-inf..1) => int(-inf..1)
-inf!..inf & int(-inf..inf) => int(-inf..inf)
-inf!..inf & nonInt(0..1) => nonInt(0..1)
-inf!..inf & nonInt(0..2) => nonInt(0..2)
-inf!..inf & nonInt(-1..2) => nonInt(-1..2)
-inf!..inf & nonInt(0..inf) => nonInt(0..inf)
-inf!..inf & nonInt(-1..inf) => nonInt(-1..inf)
-inf!..inf & nonInt(-inf..0) => nonInt(-inf..0)
-inf!..inf & nonInt(-inf..1) => nonInt(-inf..1)
-inf!..inf & nonInt(-inf..inf) => nonInt(-inf..inf)
-inf!..inf & (1 | int(3..4)) => 1 | int(3..4)
-inf!..inf & string => never
-inf!..inf & "" => never
-inf!..inf & "foo" => never
-inf!..inf & "bar" => never
-inf!..inf & "ðŸ’©" => never
-inf!..inf & ("bar" | "foo") => never
-inf!..inf & ("baz" | "foo") => never
-inf!..inf & invStrSet("foo") => never
-inf!..inf & invStrSet("bar" | "foo") => never
-inf!..inf & invStrSet("bar") => never
-inf!..inf & invStrSet("") => never
-inf..!inf & -inf!..!inf => -inf!..!inf
-inf..!inf & int(0..1) => int(0..1)
-inf..!inf & int(0..2) => int(0..2)
-inf..!inf & int(1..2) => int(1..2)
-inf..!inf & int(5..20) => int(5..20)
-inf..!inf & int(-20..-5) => int(-20..-5)
-inf..!inf & int(-10..10) => int(-10..10)
-inf..!inf & int(0..inf) => int(0..inf)
-inf..!inf & int(1..inf) => int(1..inf)
-inf..!inf & int(-inf..0) => int(-inf..0)
-inf..!inf & int(-inf..1) => int(-inf..1)
-inf..!inf & int(-inf..inf) => int(-inf..inf)
-inf..!inf & nonInt(0..1) => nonInt(0..1)
-inf..!inf & nonInt(0..2) => nonInt(0..2)
-inf..!inf & nonInt(-1..2) => nonInt(-1..2)
-inf..!inf & nonInt(0..inf) => nonInt(0..inf)
-inf..!inf & nonInt(-1..inf) => nonInt(-1..inf)
-inf..!inf & nonInt(-inf..0) => nonInt(-inf..0)
-inf..!inf & nonInt(-inf..1) => nonInt(-inf..1)
-inf..!inf & nonInt(-inf..inf) => nonInt(-inf..inf)
-inf..!inf & (1 | int(3..4)) => 1 | int(3..4)
-inf..!inf & string => never
-inf..!inf & "" => never
-inf..!inf & "foo" => never
-inf..!inf & "bar" => never
-inf..!inf & "ðŸ’©" => never
-inf..!inf & ("bar" | "foo") => never
-inf..!inf & ("baz" | "foo") => never
-inf..!inf & invStrSet("foo") => never
-inf..!inf & invStrSet("bar" | "foo") => never
-inf..!inf & invStrSet("bar") => never
-inf..!inf & invStrSet("") => never
-inf!..!inf & int(0..1) => int(0..1)
-inf!..!inf & int(0..2) => int(0..2)
-inf!..!inf & int(1..2) => int(1..2)
-inf!..!inf & int(5..20) => int(5..20)
-inf!..!inf & int(-20..-5) => int(-20..-5)
-inf!..!inf & int(-10..10) => int(-10..10)
-inf!..!inf & int(0..inf) => int(0..inf)
-inf!..!inf & int(1..inf) => int(1..inf)
-inf!..!inf & int(-inf..0) => int(-inf..0)
-inf!..!inf & int(-inf..1) => int(-inf..1)
-inf!..!inf & int(-inf..inf) => int(-inf..inf)
-inf!..!inf & nonInt(0..1) => nonInt(0..1)
-inf!..!inf & nonInt(0..2) => nonInt(0..2)
-inf!..!inf & nonInt(-1..2) => nonInt(-1..2)
-inf!..!inf & nonInt(0..inf) => nonInt(0..inf)
-inf!..!inf & nonInt(-1..inf) => nonInt(-1..inf)
-inf!..!inf & nonInt(-inf..0) => nonInt(-inf..0)
-inf!..!inf & nonInt(-inf..1) => nonInt(-inf..1)
-inf!..!inf & nonInt(-inf..inf) => nonInt(-inf..inf)
-inf!..!inf & (1 | int(3..4)) => 1 | int(3..4)
-inf!..!inf & string => never
-inf!..!inf & "" => never
-inf!..!inf & "foo" => never
-inf!..!inf & "bar" => never
-inf!..!inf & "ðŸ’©" => never
-inf!..!inf & ("bar" | "foo") => never
-inf!..!inf & ("baz" | "foo") => never
-inf!..!inf & invStrSet("foo") => never
-inf!..!inf & invStrSet("bar" | "foo") => never
-inf!..!inf & invStrSet("bar") => never
-inf!..!inf & invStrSet("") => never
int(0..1) & int(0..2) => int(0..1)
int(0..1) & int(1..2) => 1
int(0..1) & int(5..20) => never
int(0..1) & int(-20..-5) => never
int(0..1) & int(-10..10) => int(0..1)
int(0..1) & int(0..inf) => int(0..1)
int(0..1) & int(1..inf) => 1
int(0..1) & int(-inf..0) => 0
int(0..1) & int(-inf..1) => int(0..1)
int(0..1) & int(-inf..inf) => int(0..1)
int(0..1) & nonInt(0..1) => never
int(0..1) & nonInt(0..2) => never
int(0..1) & nonInt(-1..2) => never
int(0..1) & nonInt(0..inf) => never
int(0..1) & nonInt(-1..inf) => never
int(0..1) & nonInt(-inf..0) => never
int(0..1) & nonInt(-inf..1) => never
int(0..1) & nonInt(-inf..inf) => never
int(0..1) & (1 | int(3..4)) => 1
int(0..1) & string => never
int(0..1) & "" => never
int(0..1) & "foo" => never
int(0..1) & "bar" => never
int(0..1) & "ðŸ’©" => never
int(0..1) & ("bar" | "foo") => never
int(0..1) & ("baz" | "foo") => never
int(0..1) & invStrSet("foo") => never
int(0..1) & invStrSet("bar" | "foo") => never
int(0..1) & invStrSet("bar") => never
int(0..1) & invStrSet("") => never
int(0..2) & int(1..2) => int(1..2)
int(0..2) & int(5..20) => never
int(0..2) & int(-20..-5) => never
int(0..2) & int(-10..10) => int(0..2)
int(0..2) & int(0..inf) => int(0..2)
int(0..2) & int(1..inf) => int(1..2)
int(0..2) & int(-inf..0) => 0
int(0..2) & int(-inf..1) => int(0..1)
int(0..2) & int(-inf..inf) => int(0..2)
int(0..2) & nonInt(0..1) => never
int(0..2) & nonInt(0..2) => never
int(0..2) & nonInt(-1..2) => never
int(0..2) & nonInt(0..inf) => never
int(0..2) & nonInt(-1..inf) => never
int(0..2) & nonInt(-inf..0) => never
int(0..2) & nonInt(-inf..1) => never
int(0..2) & nonInt(-inf..inf) => never
int(0..2) & (1 | int(3..4)) => 1
int(0..2) & string => never
int(0..2) & "" => never
int(0..2) & "foo" => never
int(0..2) & "bar" => never
int(0..2) & "ðŸ’©" => never
int(0..2) & ("bar" | "foo") => never
int(0..2) & ("baz" | "foo") => never
int(0..2) & invStrSet("foo") => never
int(0..2) & invStrSet("bar" | "foo") => never
int(0..2) & invStrSet("bar") => never
int(0..2) & invStrSet("") => never
int(1..2) & int(5..20) => never
int(1..2) & int(-20..-5) => never
int(1..2) & int(-10..10) => int(1..2)
int(1..2) & int(0..inf) => int(1..2)
int(1..2) & int(1..inf) => int(1..2)
int(1..2) & int(-inf..0) => never
int(1..2) & int(-inf..1) => 1
int(1..2) & int(-inf..inf) => int(1..2)
int(1..2) & nonInt(0..1) => never
int(1..2) & nonInt(0..2) => never
int(1..2) & nonInt(-1..2) => never
int(1..2) & nonInt(0..inf) => never
int(1..2) & nonInt(-1..inf) => never
int(1..2) & nonInt(-inf..0) => never
int(1..2) & nonInt(-inf..1) => never
int(1..2) & nonInt(-inf..inf) => never
int(1..2) & (1 | int(3..4)) => 1
int(1..2) & string => never
int(1..2) & "" => never
int(1..2) & "foo" => never
int(1..2) & "bar" => never
int(1..2) & "ðŸ’©" => never
int(1..2) & ("bar" | "foo") => never
int(1..2) & ("baz" | "foo") => never
int(1..2) & invStrSet("foo") => never
int(1..2) & invStrSet("bar" | "foo") => never
int(1..2) & invStrSet("bar") => never
int(1..2) & invStrSet("") => never
int(5..20) & int(-20..-5) => never
int(5..20) & int(-10..10) => int(5..10)
int(5..20) & int(0..inf) => int(5..20)
int(5..20) & int(1..inf) => int(5..20)
int(5..20) & int(-inf..0) => never
int(5..20) & int(-inf..1) => never
int(5..20) & int(-inf..inf) => int(5..20)
int(5..20) & nonInt(0..1) => never
int(5..20) & nonInt(0..2) => never
int(5..20) & nonInt(-1..2) => never
int(5..20) & nonInt(0..inf) => never
int(5..20) & nonInt(-1..inf) => never
int(5..20) & nonInt(-inf..0) => never
int(5..20) & nonInt(-inf..1) => never
int(5..20) & nonInt(-inf..inf) => never
int(5..20) & (1 | int(3..4)) => never
int(5..20) & string => never
int(5..20) & "" => never
int(5..20) & "foo" => never
int(5..20) & "bar" => never
int(5..20) & "ðŸ’©" => never
int(5..20) & ("bar" | "foo") => never
int(5..20) & ("baz" | "foo") => never
int(5..20) & invStrSet("foo") => never
int(5..20) & invStrSet("bar" | "foo") => never
int(5..20) & invStrSet("bar") => never
int(5..20) & invStrSet("") => never
int(-20..-5) & int(-10..10) => int(-10..-5)
int(-20..-5) & int(0..inf) => never
int(-20..-5) & int(1..inf) => never
int(-20..-5) & int(-inf..0) => int(-20..-5)
int(-20..-5) & int(-inf..1) => int(-20..-5)
int(-20..-5) & int(-inf..inf) => int(-20..-5)
int(-20..-5) & nonInt(0..1) => never
int(-20..-5) & nonInt(0..2) => never
int(-20..-5) & nonInt(-1..2) => never
int(-20..-5) & nonInt(0..inf) => never
int(-20..-5) & nonInt(-1..inf) => never
int(-20..-5) & nonInt(-inf..0) => never
int(-20..-5) & nonInt(-inf..1) => never
int(-20..-5) & nonInt(-inf..inf) => never
int(-20..-5) & (1 | int(3..4)) => never
int(-20..-5) & string => never
int(-20..-5) & "" => never
int(-20..-5) & "foo" => never
int(-20..-5) & "bar" => never
int(-20..-5) & "ðŸ’©" => never
int(-20..-5) & ("bar" | "foo") => never
int(-20..-5) & ("baz" | "foo") => never
int(-20..-5) & invStrSet("foo") => never
int(-20..-5) & invStrSet("bar" | "foo") => never
int(-20..-5) & invStrSet("bar") => never
int(-20..-5) & invStrSet("") => never
int(-10..10) & int(0..inf) => int(0..10)
int(-10..10) & int(1..inf) => int(1..10)
int(-10..10) & int(-inf..0) => int(-10..0)
int(-10..10) & int(-inf..1) => int(-10..1)
int(-10..10) & int(-inf..inf) => int(-10..10)
int(-10..10) & nonInt(0..1) => never
int(-10..10) & nonInt(0..2) => never
int(-10..10) & nonInt(-1..2) => never
int(-10..10) & nonInt(0..inf) => never
int(-10..10) & nonInt(-1..inf) => never
int(-10..10) & nonInt(-inf..0) => never
int(-10..10) & nonInt(-inf..1) => never
int(-10..10) & nonInt(-inf..inf) => never
int(-10..10) & (1 | int(3..4)) => 1 | int(3..4)
int(-10..10) & string => never
int(-10..10) & "" => never
int(-10..10) & "foo" => never
int(-10..10) & "bar" => never
int(-10..10) & "ðŸ’©" => never
int(-10..10) & ("bar" | "foo") => never
int(-10..10) & ("baz" | "foo") => never
int(-10..10) & invStrSet("foo") => never
int(-10..10) & invStrSet("bar" | "foo") => never
int(-10..10) & invStrSet("bar") => never
int(-10..10) & invStrSet("") => never
int(0..inf) & int(1..inf) => int(1..inf)
int(0..inf) & int(-inf..0) => 0
int(0..inf) & int(-inf..1) => int(0..1)
int(0..inf) & int(-inf..inf) => int(0..inf)
int(0..inf) & nonInt(0..1) => never
int(0..inf) & nonInt(0..2) => never
int(0..inf) & nonInt(-1..2) => never
int(0..inf) & nonInt(0..inf) => never
int(0..inf) & nonInt(-1..inf) => never
int(0..inf) & nonInt(-inf..0) => never
int(0..inf) & nonInt(-inf..1) => never
int(0..inf) & nonInt(-inf..inf) => never
int(0..inf) & (1 | int(3..4)) => 1 | int(3..4)
int(0..inf) & string => never
int(0..inf) & "" => never
int(0..inf) & "foo" => never
int(0..inf) & "bar" => never
int(0..inf) & "ðŸ’©" => never
int(0..inf) & ("bar" | "foo") => never
int(0..inf) & ("baz" | "foo") => never
int(0..inf) & invStrSet("foo") => never
int(0..inf) & invStrSet("bar" | "foo") => never
int(0..inf) & invStrSet("bar") => never
int(0..inf) & invStrSet("") => never
int(1..inf) & int(-inf..0) => never
int(1..inf) & int(-inf..1) => 1
int(1..inf) & int(-inf..inf) => int(1..inf)
int(1..inf) & nonInt(0..1) => never
int(1..inf) & nonInt(0..2) => never
int(1..inf) & nonInt(-1..2) => never
int(1..inf) & nonInt(0..inf) => never
int(1..inf) & nonInt(-1..inf) => never
int(1..inf) & nonInt(-inf..0) => never
int(1..inf) & nonInt(-inf..1) => never
int(1..inf) & nonInt(-inf..inf) => never
int(1..inf) & (1 | int(3..4)) => 1 | int(3..4)
int(1..inf) & string => never
int(1..inf) & "" => never
int(1..inf) & "foo" => never
int(1..inf) & "bar" => never
int(1..inf) & "ðŸ’©" => never
int(1..inf) & ("bar" | "foo") => never
int(1..inf) & ("baz" | "foo") => never
int(1..inf) & invStrSet("foo") => never
int(1..inf) & invStrSet("bar" | "foo") => never
int(1..inf) & invStrSet("bar") => never
int(1..inf) & invStrSet("") => never
int(-inf..0) & int(-inf..1) => int(-inf..0)
int(-inf..0) & int(-inf..inf) => int(-inf..0)
int(-inf..0) & nonInt(0..1) => never
int(-inf..0) & nonInt(0..2) => never
int(-inf..0) & nonInt(-1..2) => never
int(-inf..0) & nonInt(0..inf) => never
int(-inf..0) & nonInt(-1..inf) => never
int(-inf..0) & nonInt(-inf..0) => never
int(-inf..0) & nonInt(-inf..1) => never
int(-inf..0) & nonInt(-inf..inf) => never
int(-inf..0) & (1 | int(3..4)) => never
int(-inf..0) & string => never
int(-inf..0) & "" => never
int(-inf..0) & "foo" => never
int(-inf..0) & "bar" => never
int(-inf..0) & "ðŸ’©" => never
int(-inf..0) & ("bar" | "foo") => never
int(-inf..0) & ("baz" | "foo") => never
int(-inf..0) & invStrSet("foo") => never
int(-inf..0) & invStrSet("bar" | "foo") => never
int(-inf..0) & invStrSet("bar") => never
int(-inf..0) & invStrSet("") => never
int(-inf..1) & int(-inf..inf) => int(-inf..1)
int(-inf..1) & nonInt(0..1) => never
int(-inf..1) & nonInt(0..2) => never
int(-inf..1) & nonInt(-1..2) => never
int(-inf..1) & nonInt(0..inf) => never
int(-inf..1) & nonInt(-1..inf) => never
int(-inf..1) & nonInt(-inf..0) => never
int(-inf..1) & nonInt(-inf..1) => never
int(-inf..1) & nonInt(-inf..inf) => never
int(-inf..1) & (1 | int(3..4)) => 1
int(-inf..1) & string => never
int(-inf..1) & "" => never
int(-inf..1) & "foo" => never
int(-inf..1) & "bar" => never
int(-inf..1) & "ðŸ’©" => never
int(-inf..1) & ("bar" | "foo") => never
int(-inf..1) & ("baz" | "foo") => never
int(-inf..1) & invStrSet("foo") => never
int(-inf..1) & invStrSet("bar" | "foo") => never
int(-inf..1) & invStrSet("bar") => never
int(-inf..1) & invStrSet("") => never
int(-inf..inf) & nonInt(0..1) => never
int(-inf..inf) & nonInt(0..2) => never
int(-inf..inf) & nonInt(-1..2) => never
int(-inf..inf) & nonInt(0..inf) => never
int(-inf..inf) & nonInt(-1..inf) => never
int(-inf..inf) & nonInt(-inf..0) => never
int(-inf..inf) & nonInt(-inf..1) => never
int(-inf..inf) & nonInt(-inf..inf) => never
int(-inf..inf) & (1 | int(3..4)) => 1 | int(3..4)
int(-inf..inf) & string => never
int(-inf..inf) & "" => never
int(-inf..inf) & "foo" => never
int(-inf..inf) & "bar" => never
int(-inf..inf) & "ðŸ’©" => never
int(-inf..inf) & ("bar" | "foo") => never
int(-inf..inf) & ("baz" | "foo") => never
int(-inf..inf) & invStrSet("foo") => never
int(-inf..inf) & invStrSet("bar" | "foo") => never
int(-inf..inf) & invStrSet("bar") => never
int(-inf..inf) & invStrSet("") => never
nonInt(0..1) & nonInt(0..2) => nonInt(0..1)
nonInt(0..1) & nonInt(-1..2) => nonInt(0..1)
nonInt(0..1) & nonInt(0..inf) => nonInt(0..1)
nonInt(0..1) & nonInt(-1..inf) => nonInt(0..1)
nonInt(0..1) & nonInt(-inf..0) => never
nonInt(0..1) & nonInt(-inf..1) => nonInt(0..1)
nonInt(0..1) & nonInt(-inf..inf) => nonInt(0..1)
nonInt(0..1) & (1 | int(3..4)) => never
nonInt(0..1) & string => never
nonInt(0..1) & "" => never
nonInt(0..1) & "foo" => never
nonInt(0..1) & "bar" => never
nonInt(0..1) & "ðŸ’©" => never
nonInt(0..1) & ("bar" | "foo") => never
nonInt(0..1) & ("baz" | "foo") => never
nonInt(0..1) & invStrSet("foo") => never
nonInt(0..1) & invStrSet("bar" | "foo") => never
nonInt(0..1) & invStrSet("bar") => never
nonInt(0..1) & invStrSet("") => never
nonInt(0..2) & nonInt(-1..2) => nonInt(0..2)
nonInt(0..2) & nonInt(0..inf) => nonInt(0..2)
nonInt(0..2) & nonInt(-1..inf) => nonInt(0..2)
nonInt(0..2) & nonInt(-inf..0) => never
nonInt(0..2) & nonInt(-inf..1) => nonInt(0..1)
nonInt(0..2) & nonInt(-inf..inf) => nonInt(0..2)
nonInt(0..2) & (1 | int(3..4)) => never
nonInt(0..2) & string => never
nonInt(0..2) & "" => never
nonInt(0..2) & "foo" => never
nonInt(0..2) & "bar" => never
nonInt(0..2) & "ðŸ’©" => never
nonInt(0..2) & ("bar" | "foo") => never
nonInt(0..2) & ("baz" | "foo") => never
nonInt(0..2) & invStrSet("foo") => never
nonInt(0..2) & invStrSet("bar" | "foo") => never
nonInt(0..2) & invStrSet("bar") => never
nonInt(0..2) & invStrSet("") => never
nonInt(-1..2) & nonInt(0..inf) => nonInt(0..2)
nonInt(-1..2) & nonInt(-1..inf) => nonInt(-1..2)
nonInt(-1..2) & nonInt(-inf..0) => nonInt(-1..0)
nonInt(-1..2) & nonInt(-inf..1) => nonInt(-1..1)
nonInt(-1..2) & nonInt(-inf..inf) => nonInt(-1..2)
nonInt(-1..2) & (1 | int(3..4)) => never
nonInt(-1..2) & string => never
nonInt(-1..2) & "" => never
nonInt(-1..2) & "foo" => never
nonInt(-1..2) & "bar" => never
nonInt(-1..2) & "ðŸ’©" => never
nonInt(-1..2) & ("bar" | "foo") => never
nonInt(-1..2) & ("baz" | "foo") => never
nonInt(-1..2) & invStrSet("foo") => never
nonInt(-1..2) & invStrSet("bar" | "foo") => never
nonInt(-1..2) & invStrSet("bar") => never
nonInt(-1..2) & invStrSet("") => never
nonInt(0..inf) & nonInt(-1..inf) => nonInt(0..inf)
nonInt(0..inf) & nonInt(-inf..0) => never
nonInt(0..inf) & nonInt(-inf..1) => nonInt(0..1)
nonInt(0..inf) & nonInt(-inf..inf) => nonInt(0..inf)
nonInt(0..inf) & (1 | int(3..4)) => never
nonInt(0..inf) & string => never
nonInt(0..inf) & "" => never
nonInt(0..inf) & "foo" => never
nonInt(0..inf) & "bar" => never
nonInt(0..inf) & "ðŸ’©" => never
nonInt(0..inf) & ("bar" | "foo") => never
nonInt(0..inf) & ("baz" | "foo") => never
nonInt(0..inf) & invStrSet("foo") => never
nonInt(0..inf) & invStrSet("bar" | "foo") => never
nonInt(0..inf) & invStrSet("bar") => never
nonInt(0..inf) & invStrSet("") => never
nonInt(-1..inf) & nonInt(-inf..0) => nonInt(-1..0)
nonInt(-1..inf) & nonInt(-inf..1) => nonInt(-1..1)
nonInt(-1..inf) & nonInt(-inf..inf) => nonInt(-1..inf)
nonInt(-1..inf) & (1 | int(3..4)) => never
nonInt(-1..inf) & string => never
nonInt(-1..inf) & "" => never
nonInt(-1..inf) & "foo" => never
nonInt(-1..inf) & "bar" => never
nonInt(-1..inf) & "ðŸ’©" => never
nonInt(-1..inf) & ("bar" | "foo") => never
nonInt(-1..inf) & ("baz" | "foo") => never
nonInt(-1..inf) & invStrSet("foo") => never
nonInt(-1..inf) & invStrSet("bar" | "foo") => never
nonInt(-1..inf) & invStrSet("bar") => never
nonInt(-1..inf) & invStrSet("") => never
nonInt(-inf..0) & nonInt(-inf..1) => nonInt(-inf..0)
nonInt(-inf..0) & nonInt(-inf..inf) => nonInt(-inf..0)
nonInt(-inf..0) & (1 | int(3..4)) => never
nonInt(-inf..0) & string => never
nonInt(-inf..0) & "" => never
nonInt(-inf..0) & "foo" => never
nonInt(-inf..0) & "bar" => never
nonInt(-inf..0) & "ðŸ’©" => never
nonInt(-inf..0) & ("bar" | "foo") => never
nonInt(-inf..0) & ("baz" | "foo") => never
nonInt(-inf..0) & invStrSet("foo") => never
nonInt(-inf..0) & invStrSet("bar" | "foo") => never
nonInt(-inf..0) & invStrSet("bar") => never
nonInt(-inf..0) & invStrSet("") => never
nonInt(-inf..1) & nonInt(-inf..inf) => nonInt(-inf..1)
nonInt(-inf..1) & (1 | int(3..4)) => never
nonInt(-inf..1) & string => never
nonInt(-inf..1) & "" => never
nonInt(-inf..1) & "foo" => never
nonInt(-inf..1) & "bar" => never
nonInt(-inf..1) & "ðŸ’©" => never
nonInt(-inf..1) & ("bar" | "foo") => never
nonInt(-inf..1) & ("baz" | "foo") => never
nonInt(-inf..1) & invStrSet("foo") => never
nonInt(-inf..1) & invStrSet("bar" | "foo") => never
nonInt(-inf..1) & invStrSet("bar") => never
nonInt(-inf..1) & invStrSet("") => never
nonInt(-inf..inf) & (1 | int(3..4)) => never
nonInt(-inf..inf) & string => never
nonInt(-inf..inf) & "" => never
nonInt(-inf..inf) & "foo" => never
nonInt(-inf..inf) & "bar" => never
nonInt(-inf..inf) & "ðŸ’©" => never
nonInt(-inf..inf) & ("bar" | "foo") => never
nonInt(-inf..inf) & ("baz" | "foo") => never
nonInt(-inf..inf) & invStrSet("foo") => never
nonInt(-inf..inf) & invStrSet("bar" | "foo") => never
nonInt(-inf..inf) & invStrSet("bar") => never
nonInt(-inf..inf) & invStrSet("") => never
(1 | int(3..4)) & string => never
(1 | int(3..4)) & "" => never
(1 | int(3..4)) & "foo" => never
(1 | int(3..4)) & "bar" => never
(1 | int(3..4)) & "ðŸ’©" => never
(1 | int(3..4)) & ("bar" | "foo") => never
(1 | int(3..4)) & ("baz" | "foo") => never
(1 | int(3..4)) & invStrSet("foo") => never
(1 | int(3..4)) & invStrSet("bar" | "foo") => never
(1 | int(3..4)) & invStrSet("bar") => never
(1 | int(3..4)) & invStrSet("") => never
string & "" => ""
string & "foo" => "foo"
string & "bar" => "bar"
string & "ðŸ’©" => "ðŸ’©"
string & ("bar" | "foo") => "bar" | "foo"
string & ("baz" | "foo") => "baz" | "foo"
string & invStrSet("foo") => invStrSet("foo")
string & invStrSet("bar" | "foo") => invStrSet("bar" | "foo")
string & invStrSet("bar") => invStrSet("bar")
string & invStrSet("") => invStrSet("")
"" & "foo" => never
"" & "bar" => never
"" & "ðŸ’©" => never
"" & ("bar" | "foo") => never
"" & ("baz" | "foo") => never
"" & invStrSet("foo") => ""
"" & invStrSet("bar" | "foo") => ""
"" & invStrSet("bar") => ""
"" & invStrSet("") => never
"foo" & "bar" => never
"foo" & "ðŸ’©" => never
"foo" & ("bar" | "foo") => "foo"
"foo" & ("baz" | "foo") => "foo"
"foo" & invStrSet("foo") => never
"foo" & invStrSet("bar" | "foo") => never
"foo" & invStrSet("bar") => "foo"
"foo" & invStrSet("") => "foo"
"bar" & "ðŸ’©" => never
"bar" & ("bar" | "foo") => "bar"
"bar" & ("baz" | "foo") => never
"bar" & invStrSet("foo") => "bar"
"bar" & invStrSet("bar" | "foo") => never
"bar" & invStrSet("bar") => never
"bar" & invStrSet("") => "bar"
"ðŸ’©" & ("bar" | "foo") => never
"ðŸ’©" & ("baz" | "foo") => never
"ðŸ’©" & invStrSet("foo") => "ðŸ’©"
"ðŸ’©" & invStrSet("bar" | "foo") => "ðŸ’©"
"ðŸ’©" & invStrSet("bar") => "ðŸ’©"
"ðŸ’©" & invStrSet("") => "ðŸ’©"
("bar" | "foo") & ("baz" | "foo") => "foo"
("bar" | "foo") & invStrSet("foo") => "bar"
("bar" | "foo") & invStrSet("bar" | "foo") => never
("bar" | "foo") & invStrSet("bar") => "foo"
("bar" | "foo") & invStrSet("") => "bar" | "foo"
("baz" | "foo") & invStrSet("foo") => "baz"
("baz" | "foo") & invStrSet("bar" | "foo") => "baz"
("baz" | "foo") & invStrSet("bar") => "baz" | "foo"
("baz" | "foo") & invStrSet("") => "baz" | "foo"
invStrSet("foo") & invStrSet("bar" | "foo") => invStrSet("bar" | "foo")
invStrSet("foo") & invStrSet("bar") => invStrSet("bar" | "foo")
invStrSet("foo") & invStrSet("") => invStrSet("" | "foo")
invStrSet("bar" | "foo") & invStrSet("bar") => invStrSet("bar" | "foo")
invStrSet("bar" | "foo") & invStrSet("") => invStrSet("" | "bar" | "foo")
invStrSet("bar") & invStrSet("") => invStrSet("" | "bar")
false => false
true => true
false | true => false | true
Foo { a: 1, b: 2 } => Foo { a: 1, b: 2 }
Foo { a: 3, b: 2 } => Foo { a: 3, b: 2 }
Foo { a: 3, b: 4 } => Foo { a: 3, b: 4 }
Foo { a: 1 | 3, b: 2 } => Foo { a: 1 | 3, b: 2 }
Foo { a: 3, b: number } => Foo { a: 3, b: number }
Foo { a: int(0..inf), b: number } => Foo { a: int(0..inf), b: number }
notStructs(Foo) => notStructs(Foo)
notStructs(true | Foo) => notStructs(true | Foo)
notStructs(true) => notStructs(true)
anyStruct => anyStruct
false | true => false | true
false | (false | true) => false | true
false | Foo { a: 1, b: 2 } => false | Foo { a: 1, b: 2 }
false | Foo { a: 3, b: 2 } => false | Foo { a: 3, b: 2 }
false | Foo { a: 3, b: 4 } => false | Foo { a: 3, b: 4 }
false | Foo { a: 1 | 3, b: 2 } => false | Foo { a: 1 | 3, b: 2 }
false | Foo { a: 3, b: number } => false | Foo { a: 3, b: number }
false | Foo { a: int(0..inf), b: number } => false | Foo { a: int(0..inf), b: number }
false | notStructs(Foo) => notStructs(Foo)
false | notStructs(true | Foo) => notStructs(true | Foo)
false | notStructs(true) => notStructs(true)
false | anyStruct => anyStruct
true | (false | true) => false | true
true | Foo { a: 1, b: 2 } => true | Foo { a: 1, b: 2 }
true | Foo { a: 3, b: 2 } => true | Foo { a: 3, b: 2 }
true | Foo { a: 3, b: 4 } => true | Foo { a: 3, b: 4 }
true | Foo { a: 1 | 3, b: 2 } => true | Foo { a: 1 | 3, b: 2 }
true | Foo { a: 3, b: number } => true | Foo { a: 3, b: number }
true | Foo { a: int(0..inf), b: number } => true | Foo { a: int(0..inf), b: number }
true | notStructs(Foo) => notStructs(Foo)
true | notStructs(true | Foo) => notStructs(Foo)
true | notStructs(true) => anyStruct
true | anyStruct => anyStruct
(false | true) | Foo { a: 1, b: 2 } => false | true | Foo { a: 1, b: 2 }
(false | true) | Foo { a: 3, b: 2 } => false | true | Foo { a: 3, b: 2 }
(false | true) | Foo { a: 3, b: 4 } => false | true | Foo { a: 3, b: 4 }
(false | true) | Foo { a: 1 | 3, b: 2 } => false | true | Foo { a: 1 | 3, b: 2 }
(false | true) | Foo { a: 3, b: number } => false | true | Foo { a: 3, b: number }
(false | true) | Foo { a: int(0..inf), b: number } => false | true | Foo { a: int(0..inf), b: number }
(false | true) | notStructs(Foo) => notStructs(Foo)
(false | true) | notStructs(true | Foo) => notStructs(Foo)
(false | true) | notStructs(true) => anyStruct
(false | true) | anyStruct => anyStruct
Foo { a: 1, b: 2 } | Foo { a: 3, b: 2 } => Foo { a: 1 | 3, b: 2 }
Foo { a: 1, b: 2 } | Foo { a: 3, b: 4 } => Foo { a: 1 | 3, b: 2 | 4 }
Foo { a: 1, b: 2 } | Foo { a: 1 | 3, b: 2 } => Foo { a: 1 | 3, b: 2 }
Foo { a: 1, b: 2 } | Foo { a: 3, b: number } => Foo { a: 1 | 3, b: number }
Foo { a: 1, b: 2 } | Foo { a: int(0..inf), b: number } => Foo { a: int(0..inf), b: number }
Foo { a: 1, b: 2 } | notStructs(Foo) => Foo { a: 1, b: 2 } | notStructs(Foo)
Foo { a: 1, b: 2 } | notStructs(true | Foo) => Foo { a: 1, b: 2 } | notStructs(true | Foo)
Foo { a: 1, b: 2 } | notStructs(true) => notStructs(true)
Foo { a: 1, b: 2 } | anyStruct => anyStruct
Foo { a: 3, b: 2 } | Foo { a: 3, b: 4 } => Foo { a: 3, b: 2 | 4 }
Foo { a: 3, b: 2 } | Foo { a: 1 | 3, b: 2 } => Foo { a: 1 | 3, b: 2 }
Foo { a: 3, b: 2 } | Foo { a: 3, b: number } => Foo { a: 3, b: number }
Foo { a: 3, b: 2 } | Foo { a: int(0..inf), b: number } => Foo { a: int(0..inf), b: number }
Foo { a: 3, b: 2 } | notStructs(Foo) => Foo { a: 3, b: 2 } | notStructs(Foo)
Foo { a: 3, b: 2 } | notStructs(true | Foo) => Foo { a: 3, b: 2 } | notStructs(true | Foo)
Foo { a: 3, b: 2 } | notStructs(true) => notStructs(true)
Foo { a: 3, b: 2 } | anyStruct => anyStruct
Foo { a: 3, b: 4 } | Foo { a: 1 | 3, b: 2 } => Foo { a: 1 | 3, b: 2 | 4 }
Foo { a: 3, b: 4 } | Foo { a: 3, b: number } => Foo { a: 3, b: number }
Foo { a: 3, b: 4 } | Foo { a: int(0..inf), b: number } => Foo { a: int(0..inf), b: number }
Foo { a: 3, b: 4 } | notStructs(Foo) => Foo { a: 3, b: 4 } | notStructs(Foo)
Foo { a: 3, b: 4 } | notStructs(true | Foo) => Foo { a: 3, b: 4 } | notStructs(true | Foo)
Foo { a: 3, b: 4 } | notStructs(true) => notStructs(true)
Foo { a: 3, b: 4 } | anyStruct => anyStruct
Foo { a: 1 | 3, b: 2 } | Foo { a: 3, b: number } => Foo { a: 1 | 3, b: number }
Foo { a: 1 | 3, b: 2 } | Foo { a: int(0..inf), b: number } => Foo { a: int(0..inf), b: number }
Foo { a: 1 | 3, b: 2 } | notStructs(Foo) => Foo { a: 1 | 3, b: 2 } | notStructs(Foo)
Foo { a: 1 | 3, b: 2 } | notStructs(true | Foo) => Foo { a: 1 | 3, b: 2 } | notStructs(true | Foo)
Foo { a: 1 | 3, b: 2 } | notStructs(true) => notStructs(true)
Foo { a: 1 | 3, b: 2 } | anyStruct => anyStruct
Foo { a: 3, b: number } | Foo { a: int(0..inf), b: number } => Foo { a: int(0..inf), b: number }
Foo { a: 3, b: number } | notStructs(Foo) => Foo { a: 3, b: number } | notStructs(Foo)
Foo { a: 3, b: number } | notStructs(true | Foo) => Foo { a: 3, b: number } | notStructs(true | Foo)
Foo { a: 3, b: number } | notStructs(true) => notStructs(true)
Foo { a: 3, b: number } | anyStruct => anyStruct
Foo { a: int(0..inf), b: number } | notStructs(Foo) => anyStruct
Foo { a: int(0..inf), b: number } | notStructs(true | Foo) => notStructs(true)
Foo { a: int(0..inf), b: number } | notStructs(true) => notStructs(true)
Foo { a: int(0..inf), b: number } | anyStruct => anyStruct
notStructs(Foo) | notStructs(true | Foo) => notStructs(Foo)
notStructs(Foo) | notStructs(true) => anyStruct
notStructs(Foo) | anyStruct => anyStruct
notStructs(true | Foo) | notStructs(true) => notStructs(true)
notStructs(true | Foo) | anyStruct => anyStruct
notStructs(true) | anyStruct => anyStruct
false & true => never
false & (false | true) => false
false & Foo { a: 1, b: 2 } => never
false & Foo { a: 3, b: 2 } => never
false & Foo { a: 3, b: 4 } => never
false & Foo { a: 1 | 3, b: 2 } => never
false & Foo { a: 3, b: number } => never
false & Foo { a: int(0..inf), b: number } => never
false & notStructs(Foo) => false
false & notStructs(true | Foo) => false
false & notStructs(true) => false
false & anyStruct => false
true & (false | true) => true
true & Foo { a: 1, b: 2 } => never
true & Foo { a: 3, b: 2 } => never
true & Foo { a: 3, b: 4 } => never
true & Foo { a: 1 | 3, b: 2 } => never
true & Foo { a: 3, b: number } => never
true & Foo { a: int(0..inf), b: number } => never
true & notStructs(Foo) => true
true & notStructs(true | Foo) => never
true & notStructs(true) => never
true & anyStruct => true
(false | true) & Foo { a: 1, b: 2 } => never
(false | true) & Foo { a: 3, b: 2 } => never
(false | true) & Foo { a: 3, b: 4 } => never
(false | true) & Foo { a: 1 | 3, b: 2 } => never
(false | true) & Foo { a: 3, b: number } => never
(false | true) & Foo { a: int(0..inf), b: number } => never
(false | true) & notStructs(Foo) => false | true
(false | true) & notStructs(true | Foo) => false
(false | true) & notStructs(true) => false
(false | true) & anyStruct => false | true
Foo { a: 1, b: 2 } & Foo { a: 3, b: 2 } => never
Foo { a: 1, b: 2 } & Foo { a: 3, b: 4 } => never
Foo { a: 1, b: 2 } & Foo { a: 1 | 3, b: 2 } => Foo { a: 1, b: 2 }
Foo { a: 1, b: 2 } & Foo { a: 3, b: number } => never
Foo { a: 1, b: 2 } & Foo { a: int(0..inf), b: number } => Foo { a: 1, b: 2 }
Foo { a: 1, b: 2 } & notStructs(Foo) => never
Foo { a: 1, b: 2 } & notStructs(true | Foo) => never
Foo { a: 1, b: 2 } & notStructs(true) => Foo { a: 1, b: 2 }
Foo { a: 1, b: 2 } & anyStruct => Foo { a: 1, b: 2 }
Foo { a: 3, b: 2 } & Foo { a: 3, b: 4 } => never
Foo { a: 3, b: 2 } & Foo { a: 1 | 3, b: 2 } => Foo { a: 3, b: 2 }
Foo { a: 3, b: 2 } & Foo { a: 3, b: number } => Foo { a: 3, b: 2 }
Foo { a: 3, b: 2 } & Foo { a: int(0..inf), b: number } => Foo { a: 3, b: 2 }
Foo { a: 3, b: 2 } & notStructs(Foo) => never
Foo { a: 3, b: 2 } & notStructs(true | Foo) => never
Foo { a: 3, b: 2 } & notStructs(true) => Foo { a: 3, b: 2 }
Foo { a: 3, b: 2 } & anyStruct => Foo { a: 3, b: 2 }
Foo { a: 3, b: 4 } & Foo { a: 1 | 3, b: 2 } => never
Foo { a: 3, b: 4 } & Foo { a: 3, b: number } => Foo { a: 3, b: 4 }
Foo { a: 3, b: 4 } & Foo { a: int(0..inf), b: number } => Foo { a: 3, b: 4 }
Foo { a: 3, b: 4 } & notStructs(Foo) => never
Foo { a: 3, b: 4 } & notStructs(true | Foo) => never
Foo { a: 3, b: 4 } & notStructs(true) => Foo { a: 3, b: 4 }
Foo { a: 3, b: 4 } & anyStruct => Foo { a: 3, b: 4 }
Foo { a: 1 | 3, b: 2 } & Foo { a: 3, b: number } => Foo { a: 3, b: 2 }
Foo { a: 1 | 3, b: 2 } & Foo { a: int(0..inf), b: number } => Foo { a: 1 | 3, b: 2 }
Foo { a: 1 | 3, b: 2 } & notStructs(Foo) => never
Foo { a: 1 | 3, b: 2 } & notStructs(true | Foo) => never
Foo { a: 1 | 3, b: 2 } & notStructs(true) => Foo { a: 1 | 3, b: 2 }
Foo { a: 1 | 3, b: 2 } & anyStruct => Foo { a: 1 | 3, b: 2 }
Foo { a: 3, b: number } & Foo { a: int(0..inf), b: number } => Foo { a: 3, b: number }
Foo { a: 3, b: number } & notStructs(Foo) => never
Foo { a: 3, b: number } & notStructs(true | Foo) => never
Foo { a: 3, b: number } & notStructs(true) => Foo { a: 3, b: number }
Foo { a: 3, b: number } & anyStruct => Foo { a: 3, b: number }
Foo { a: int(0..inf), b: number } & notStructs(Foo) => never
Foo { a: int(0..inf), b: number } & notStructs(true | Foo) => never
Foo { a: int(0..inf), b: number } & notStructs(true) => Foo { a: int(0..inf), b: number }
Foo { a: int(0..inf), b: number } & anyStruct => Foo { a: int(0..inf), b: number }
notStructs(Foo) & notStructs(true | Foo) => notStructs(true | Foo)
notStructs(Foo) & notStructs(true) => notStructs(true | Foo)
notStructs(Foo) & anyStruct => notStructs(Foo)
notStructs(true | Foo) & notStructs(true) => notStructs(true | Foo)
notStructs(true | Foo) & anyStruct => notStructs(true | Foo)
notStructs(true) & anyStruct => notStructs(true)
never.a => never
any.a => Error: Invalid field access: The \`any\` type is not guaranteed to have a field \`a\`.
number.a => Error: Invalid field access: Primitive types do not have fields.
-3.14.a => Error: Invalid field access: Primitive types do not have fields.
-2.a => Error: Invalid field access: Primitive types do not have fields.
-1.a => Error: Invalid field access: Primitive types do not have fields.
-0.5.a => Error: Invalid field access: Primitive types do not have fields.
0.a => Error: Invalid field access: Primitive types do not have fields.
0.5.a => Error: Invalid field access: Primitive types do not have fields.
1.a => Error: Invalid field access: Primitive types do not have fields.
2.a => Error: Invalid field access: Primitive types do not have fields.
2.78.a => Error: Invalid field access: Primitive types do not have fields.
3.a => Error: Invalid field access: Primitive types do not have fields.
3.14.a => Error: Invalid field access: Primitive types do not have fields.
10.a => Error: Invalid field access: Primitive types do not have fields.
100.a => Error: Invalid field access: Primitive types do not have fields.
-inf.a => Error: Invalid field access: Primitive types do not have fields.
inf.a => Error: Invalid field access: Primitive types do not have fields.
nan.a => Error: Invalid field access: Primitive types do not have fields.
0..1.a => Error: Invalid field access: Primitive types do not have fields.
0!..1.a => Error: Invalid field access: Primitive types do not have fields.
0..!1.a => Error: Invalid field access: Primitive types do not have fields.
0..2.a => Error: Invalid field access: Primitive types do not have fields.
0!..!2.a => Error: Invalid field access: Primitive types do not have fields.
0.5..1.5.a => Error: Invalid field access: Primitive types do not have fields.
0.5..2.5.a => Error: Invalid field access: Primitive types do not have fields.
0.5!..2.5.a => Error: Invalid field access: Primitive types do not have fields.
0.5..!2.5.a => Error: Invalid field access: Primitive types do not have fields.
-2.56..3.35.a => Error: Invalid field access: Primitive types do not have fields.
0.5..0.75.a => Error: Invalid field access: Primitive types do not have fields.
1..2.a => Error: Invalid field access: Primitive types do not have fields.
0..inf.a => Error: Invalid field access: Primitive types do not have fields.
0!..inf.a => Error: Invalid field access: Primitive types do not have fields.
0..!inf.a => Error: Invalid field access: Primitive types do not have fields.
0!..!inf.a => Error: Invalid field access: Primitive types do not have fields.
1..inf.a => Error: Invalid field access: Primitive types do not have fields.
1!..inf.a => Error: Invalid field access: Primitive types do not have fields.
1..!inf.a => Error: Invalid field access: Primitive types do not have fields.
2..inf.a => Error: Invalid field access: Primitive types do not have fields.
2!..inf.a => Error: Invalid field access: Primitive types do not have fields.
2.5..inf.a => Error: Invalid field access: Primitive types do not have fields.
-inf..0.a => Error: Invalid field access: Primitive types do not have fields.
-inf..inf.a => Error: Invalid field access: Primitive types do not have fields.
-inf!..inf.a => Error: Invalid field access: Primitive types do not have fields.
-inf..!inf.a => Error: Invalid field access: Primitive types do not have fields.
-inf!..!inf.a => Error: Invalid field access: Primitive types do not have fields.
int(0..1).a => Error: Invalid field access: Primitive types do not have fields.
int(0..2).a => Error: Invalid field access: Primitive types do not have fields.
int(1..2).a => Error: Invalid field access: Primitive types do not have fields.
int(5..20).a => Error: Invalid field access: Primitive types do not have fields.
int(-20..-5).a => Error: Invalid field access: Primitive types do not have fields.
int(-10..10).a => Error: Invalid field access: Primitive types do not have fields.
int(0..inf).a => Error: Invalid field access: Primitive types do not have fields.
int(1..inf).a => Error: Invalid field access: Primitive types do not have fields.
int(-inf..0).a => Error: Invalid field access: Primitive types do not have fields.
int(-inf..1).a => Error: Invalid field access: Primitive types do not have fields.
int(-inf..inf).a => Error: Invalid field access: Primitive types do not have fields.
nonInt(0..1).a => Error: Invalid field access: Primitive types do not have fields.
nonInt(0..2).a => Error: Invalid field access: Primitive types do not have fields.
nonInt(-1..2).a => Error: Invalid field access: Primitive types do not have fields.
nonInt(0..inf).a => Error: Invalid field access: Primitive types do not have fields.
nonInt(-1..inf).a => Error: Invalid field access: Primitive types do not have fields.
nonInt(-inf..0).a => Error: Invalid field access: Primitive types do not have fields.
nonInt(-inf..1).a => Error: Invalid field access: Primitive types do not have fields.
nonInt(-inf..inf).a => Error: Invalid field access: Primitive types do not have fields.
(1 | int(3..4)).a => Error: Invalid field access: Primitive types do not have fields.
string.a => Error: Invalid field access: Primitive types do not have fields.
"".a => Error: Invalid field access: Primitive types do not have fields.
"foo".a => Error: Invalid field access: Primitive types do not have fields.
"bar".a => Error: Invalid field access: Primitive types do not have fields.
"ðŸ’©".a => Error: Invalid field access: Primitive types do not have fields.
("bar" | "foo").a => Error: Invalid field access: Primitive types do not have fields.
("baz" | "foo").a => Error: Invalid field access: Primitive types do not have fields.
invStrSet("foo").a => Error: Invalid field access: Primitive types do not have fields.
invStrSet("bar" | "foo").a => Error: Invalid field access: Primitive types do not have fields.
invStrSet("bar").a => Error: Invalid field access: Primitive types do not have fields.
invStrSet("").a => Error: Invalid field access: Primitive types do not have fields.
false.a => Error: Invalid field access: The false structure does not define a field \`a\`.
true.a => Error: Invalid field access: The true structure does not define a field \`a\`.
(false | true).a => Error: Invalid field access: The false structure does not define a field \`a\`.
Foo { a: 1, b: 2 }.a => 1
Foo { a: 3, b: 2 }.a => 3
Foo { a: 3, b: 4 }.a => 3
Foo { a: 1 | 3, b: 2 }.a => 1 | 3
Foo { a: 3, b: number }.a => 3
Foo { a: int(0..inf), b: number }.a => int(0..inf)
notStructs(Foo).a => Error: Invalid field access: \`notStructs(Foo)\` is not guaranteed to have a field \`a\`.
notStructs(true | Foo).a => Error: Invalid field access: \`notStructs(true | Foo)\` is not guaranteed to have a field \`a\`.
notStructs(true).a => Error: Invalid field access: \`notStructs(true)\` is not guaranteed to have a field \`a\`.
anyStruct.a => Error: Invalid field access: \`anyStruct\` is not guaranteed to have a field \`a\`.
(false | true).a => Error: Invalid field access: The false structure does not define a field \`a\`.
(false | (false | true)).a => Error: Invalid field access: The false structure does not define a field \`a\`.
(false | Foo { a: 1, b: 2 }).a => Error: Invalid field access: The false structure does not define a field \`a\`.
(false | Foo { a: 3, b: 2 }).a => Error: Invalid field access: The false structure does not define a field \`a\`.
(false | Foo { a: 3, b: 4 }).a => Error: Invalid field access: The false structure does not define a field \`a\`.
(false | Foo { a: 1 | 3, b: 2 }).a => Error: Invalid field access: The false structure does not define a field \`a\`.
(false | Foo { a: 3, b: number }).a => Error: Invalid field access: The false structure does not define a field \`a\`.
(false | Foo { a: int(0..inf), b: number }).a => Error: Invalid field access: The false structure does not define a field \`a\`.
(false | notStructs(Foo)).a => Error: Invalid field access: \`notStructs(Foo)\` is not guaranteed to have a field \`a\`.
(false | notStructs(true | Foo)).a => Error: Invalid field access: \`notStructs(true | Foo)\` is not guaranteed to have a field \`a\`.
(false | notStructs(true)).a => Error: Invalid field access: \`notStructs(true)\` is not guaranteed to have a field \`a\`.
(false | anyStruct).a => Error: Invalid field access: \`anyStruct\` is not guaranteed to have a field \`a\`.
(true | (false | true)).a => Error: Invalid field access: The false structure does not define a field \`a\`.
(true | Foo { a: 1, b: 2 }).a => Error: Invalid field access: The true structure does not define a field \`a\`.
(true | Foo { a: 3, b: 2 }).a => Error: Invalid field access: The true structure does not define a field \`a\`.
(true | Foo { a: 3, b: 4 }).a => Error: Invalid field access: The true structure does not define a field \`a\`.
(true | Foo { a: 1 | 3, b: 2 }).a => Error: Invalid field access: The true structure does not define a field \`a\`.
(true | Foo { a: 3, b: number }).a => Error: Invalid field access: The true structure does not define a field \`a\`.
(true | Foo { a: int(0..inf), b: number }).a => Error: Invalid field access: The true structure does not define a field \`a\`.
(true | notStructs(Foo)).a => Error: Invalid field access: \`notStructs(Foo)\` is not guaranteed to have a field \`a\`.
(true | notStructs(true | Foo)).a => Error: Invalid field access: \`notStructs(Foo)\` is not guaranteed to have a field \`a\`.
(true | notStructs(true)).a => Error: Invalid field access: \`anyStruct\` is not guaranteed to have a field \`a\`.
(true | anyStruct).a => Error: Invalid field access: \`anyStruct\` is not guaranteed to have a field \`a\`.
((false | true) | Foo { a: 1, b: 2 }).a => Error: Invalid field access: The false structure does not define a field \`a\`.
((false | true) | Foo { a: 3, b: 2 }).a => Error: Invalid field access: The false structure does not define a field \`a\`.
((false | true) | Foo { a: 3, b: 4 }).a => Error: Invalid field access: The false structure does not define a field \`a\`.
((false | true) | Foo { a: 1 | 3, b: 2 }).a => Error: Invalid field access: The false structure does not define a field \`a\`.
((false | true) | Foo { a: 3, b: number }).a => Error: Invalid field access: The false structure does not define a field \`a\`.
((false | true) | Foo { a: int(0..inf), b: number }).a => Error: Invalid field access: The false structure does not define a field \`a\`.
((false | true) | notStructs(Foo)).a => Error: Invalid field access: \`notStructs(Foo)\` is not guaranteed to have a field \`a\`.
((false | true) | notStructs(true | Foo)).a => Error: Invalid field access: \`notStructs(Foo)\` is not guaranteed to have a field \`a\`.
((false | true) | notStructs(true)).a => Error: Invalid field access: \`anyStruct\` is not guaranteed to have a field \`a\`.
((false | true) | anyStruct).a => Error: Invalid field access: \`anyStruct\` is not guaranteed to have a field \`a\`.
(Foo { a: 1, b: 2 } | Foo { a: 3, b: 2 }).a => 1 | 3
(Foo { a: 1, b: 2 } | Foo { a: 3, b: 4 }).a => 1 | 3
(Foo { a: 1, b: 2 } | Foo { a: 1 | 3, b: 2 }).a => 1 | 3
(Foo { a: 1, b: 2 } | Foo { a: 3, b: number }).a => 1 | 3
(Foo { a: 1, b: 2 } | Foo { a: int(0..inf), b: number }).a => int(0..inf)
(Foo { a: 1, b: 2 } | notStructs(Foo)).a => Error: Invalid field access: \`notStructs(Foo)\` is not guaranteed to have a field \`a\`.
(Foo { a: 1, b: 2 } | notStructs(true | Foo)).a => Error: Invalid field access: \`notStructs(true | Foo)\` is not guaranteed to have a field \`a\`.
(Foo { a: 1, b: 2 } | notStructs(true)).a => Error: Invalid field access: \`notStructs(true)\` is not guaranteed to have a field \`a\`.
(Foo { a: 1, b: 2 } | anyStruct).a => Error: Invalid field access: \`anyStruct\` is not guaranteed to have a field \`a\`.
(Foo { a: 3, b: 2 } | Foo { a: 3, b: 4 }).a => 3
(Foo { a: 3, b: 2 } | Foo { a: 1 | 3, b: 2 }).a => 1 | 3
(Foo { a: 3, b: 2 } | Foo { a: 3, b: number }).a => 3
(Foo { a: 3, b: 2 } | Foo { a: int(0..inf), b: number }).a => int(0..inf)
(Foo { a: 3, b: 2 } | notStructs(Foo)).a => Error: Invalid field access: \`notStructs(Foo)\` is not guaranteed to have a field \`a\`.
(Foo { a: 3, b: 2 } | notStructs(true | Foo)).a => Error: Invalid field access: \`notStructs(true | Foo)\` is not guaranteed to have a field \`a\`.
(Foo { a: 3, b: 2 } | notStructs(true)).a => Error: Invalid field access: \`notStructs(true)\` is not guaranteed to have a field \`a\`.
(Foo { a: 3, b: 2 } | anyStruct).a => Error: Invalid field access: \`anyStruct\` is not guaranteed to have a field \`a\`.
(Foo { a: 3, b: 4 } | Foo { a: 1 | 3, b: 2 }).a => 1 | 3
(Foo { a: 3, b: 4 } | Foo { a: 3, b: number }).a => 3
(Foo { a: 3, b: 4 } | Foo { a: int(0..inf), b: number }).a => int(0..inf)
(Foo { a: 3, b: 4 } | notStructs(Foo)).a => Error: Invalid field access: \`notStructs(Foo)\` is not guaranteed to have a field \`a\`.
(Foo { a: 3, b: 4 } | notStructs(true | Foo)).a => Error: Invalid field access: \`notStructs(true | Foo)\` is not guaranteed to have a field \`a\`.
(Foo { a: 3, b: 4 } | notStructs(true)).a => Error: Invalid field access: \`notStructs(true)\` is not guaranteed to have a field \`a\`.
(Foo { a: 3, b: 4 } | anyStruct).a => Error: Invalid field access: \`anyStruct\` is not guaranteed to have a field \`a\`.
(Foo { a: 1 | 3, b: 2 } | Foo { a: 3, b: number }).a => 1 | 3
(Foo { a: 1 | 3, b: 2 } | Foo { a: int(0..inf), b: number }).a => int(0..inf)
(Foo { a: 1 | 3, b: 2 } | notStructs(Foo)).a => Error: Invalid field access: \`notStructs(Foo)\` is not guaranteed to have a field \`a\`.
(Foo { a: 1 | 3, b: 2 } | notStructs(true | Foo)).a => Error: Invalid field access: \`notStructs(true | Foo)\` is not guaranteed to have a field \`a\`.
(Foo { a: 1 | 3, b: 2 } | notStructs(true)).a => Error: Invalid field access: \`notStructs(true)\` is not guaranteed to have a field \`a\`.
(Foo { a: 1 | 3, b: 2 } | anyStruct).a => Error: Invalid field access: \`anyStruct\` is not guaranteed to have a field \`a\`.
(Foo { a: 3, b: number } | Foo { a: int(0..inf), b: number }).a => int(0..inf)
(Foo { a: 3, b: number } | notStructs(Foo)).a => Error: Invalid field access: \`notStructs(Foo)\` is not guaranteed to have a field \`a\`.
(Foo { a: 3, b: number } | notStructs(true | Foo)).a => Error: Invalid field access: \`notStructs(true | Foo)\` is not guaranteed to have a field \`a\`.
(Foo { a: 3, b: number } | notStructs(true)).a => Error: Invalid field access: \`notStructs(true)\` is not guaranteed to have a field \`a\`.
(Foo { a: 3, b: number } | anyStruct).a => Error: Invalid field access: \`anyStruct\` is not guaranteed to have a field \`a\`.
(Foo { a: int(0..inf), b: number } | notStructs(Foo)).a => Error: Invalid field access: \`anyStruct\` is not guaranteed to have a field \`a\`.
(Foo { a: int(0..inf), b: number } | notStructs(true | Foo)).a => Error: Invalid field access: \`notStructs(true)\` is not guaranteed to have a field \`a\`.
(Foo { a: int(0..inf), b: number } | notStructs(true)).a => Error: Invalid field access: \`notStructs(true)\` is not guaranteed to have a field \`a\`.
(Foo { a: int(0..inf), b: number } | anyStruct).a => Error: Invalid field access: \`anyStruct\` is not guaranteed to have a field \`a\`.
(notStructs(Foo) | notStructs(true | Foo)).a => Error: Invalid field access: \`notStructs(Foo)\` is not guaranteed to have a field \`a\`.
(notStructs(Foo) | notStructs(true)).a => Error: Invalid field access: \`anyStruct\` is not guaranteed to have a field \`a\`.
(notStructs(Foo) | anyStruct).a => Error: Invalid field access: \`anyStruct\` is not guaranteed to have a field \`a\`.
(notStructs(true | Foo) | notStructs(true)).a => Error: Invalid field access: \`notStructs(true)\` is not guaranteed to have a field \`a\`.
(notStructs(true | Foo) | anyStruct).a => Error: Invalid field access: \`anyStruct\` is not guaranteed to have a field \`a\`.
(notStructs(true) | anyStruct).a => Error: Invalid field access: \`anyStruct\` is not guaranteed to have a field \`a\`.
(false & true).a => never
(false & (false | true)).a => Error: Invalid field access: The false structure does not define a field \`a\`.
(false & Foo { a: 1, b: 2 }).a => never
(false & Foo { a: 3, b: 2 }).a => never
(false & Foo { a: 3, b: 4 }).a => never
(false & Foo { a: 1 | 3, b: 2 }).a => never
(false & Foo { a: 3, b: number }).a => never
(false & Foo { a: int(0..inf), b: number }).a => never
(false & notStructs(Foo)).a => Error: Invalid field access: The false structure does not define a field \`a\`.
(false & notStructs(true | Foo)).a => Error: Invalid field access: The false structure does not define a field \`a\`.
(false & notStructs(true)).a => Error: Invalid field access: The false structure does not define a field \`a\`.
(false & anyStruct).a => Error: Invalid field access: The false structure does not define a field \`a\`.
(true & (false | true)).a => Error: Invalid field access: The true structure does not define a field \`a\`.
(true & Foo { a: 1, b: 2 }).a => never
(true & Foo { a: 3, b: 2 }).a => never
(true & Foo { a: 3, b: 4 }).a => never
(true & Foo { a: 1 | 3, b: 2 }).a => never
(true & Foo { a: 3, b: number }).a => never
(true & Foo { a: int(0..inf), b: number }).a => never
(true & notStructs(Foo)).a => Error: Invalid field access: The true structure does not define a field \`a\`.
(true & notStructs(true | Foo)).a => never
(true & notStructs(true)).a => never
(true & anyStruct).a => Error: Invalid field access: The true structure does not define a field \`a\`.
((false | true) & Foo { a: 1, b: 2 }).a => never
((false | true) & Foo { a: 3, b: 2 }).a => never
((false | true) & Foo { a: 3, b: 4 }).a => never
((false | true) & Foo { a: 1 | 3, b: 2 }).a => never
((false | true) & Foo { a: 3, b: number }).a => never
((false | true) & Foo { a: int(0..inf), b: number }).a => never
((false | true) & notStructs(Foo)).a => Error: Invalid field access: The false structure does not define a field \`a\`.
((false | true) & notStructs(true | Foo)).a => Error: Invalid field access: The false structure does not define a field \`a\`.
((false | true) & notStructs(true)).a => Error: Invalid field access: The false structure does not define a field \`a\`.
((false | true) & anyStruct).a => Error: Invalid field access: The false structure does not define a field \`a\`.
(Foo { a: 1, b: 2 } & Foo { a: 3, b: 2 }).a => never
(Foo { a: 1, b: 2 } & Foo { a: 3, b: 4 }).a => never
(Foo { a: 1, b: 2 } & Foo { a: 1 | 3, b: 2 }).a => 1
(Foo { a: 1, b: 2 } & Foo { a: 3, b: number }).a => never
(Foo { a: 1, b: 2 } & Foo { a: int(0..inf), b: number }).a => 1
(Foo { a: 1, b: 2 } & notStructs(Foo)).a => never
(Foo { a: 1, b: 2 } & notStructs(true | Foo)).a => never
(Foo { a: 1, b: 2 } & notStructs(true)).a => 1
(Foo { a: 1, b: 2 } & anyStruct).a => 1
(Foo { a: 3, b: 2 } & Foo { a: 3, b: 4 }).a => never
(Foo { a: 3, b: 2 } & Foo { a: 1 | 3, b: 2 }).a => 3
(Foo { a: 3, b: 2 } & Foo { a: 3, b: number }).a => 3
(Foo { a: 3, b: 2 } & Foo { a: int(0..inf), b: number }).a => 3
(Foo { a: 3, b: 2 } & notStructs(Foo)).a => never
(Foo { a: 3, b: 2 } & notStructs(true | Foo)).a => never
(Foo { a: 3, b: 2 } & notStructs(true)).a => 3
(Foo { a: 3, b: 2 } & anyStruct).a => 3
(Foo { a: 3, b: 4 } & Foo { a: 1 | 3, b: 2 }).a => never
(Foo { a: 3, b: 4 } & Foo { a: 3, b: number }).a => 3
(Foo { a: 3, b: 4 } & Foo { a: int(0..inf), b: number }).a => 3
(Foo { a: 3, b: 4 } & notStructs(Foo)).a => never
(Foo { a: 3, b: 4 } & notStructs(true | Foo)).a => never
(Foo { a: 3, b: 4 } & notStructs(true)).a => 3
(Foo { a: 3, b: 4 } & anyStruct).a => 3
(Foo { a: 1 | 3, b: 2 } & Foo { a: 3, b: number }).a => 3
(Foo { a: 1 | 3, b: 2 } & Foo { a: int(0..inf), b: number }).a => 1 | 3
(Foo { a: 1 | 3, b: 2 } & notStructs(Foo)).a => never
(Foo { a: 1 | 3, b: 2 } & notStructs(true | Foo)).a => never
(Foo { a: 1 | 3, b: 2 } & notStructs(true)).a => 1 | 3
(Foo { a: 1 | 3, b: 2 } & anyStruct).a => 1 | 3
(Foo { a: 3, b: number } & Foo { a: int(0..inf), b: number }).a => 3
(Foo { a: 3, b: number } & notStructs(Foo)).a => never
(Foo { a: 3, b: number } & notStructs(true | Foo)).a => never
(Foo { a: 3, b: number } & notStructs(true)).a => 3
(Foo { a: 3, b: number } & anyStruct).a => 3
(Foo { a: int(0..inf), b: number } & notStructs(Foo)).a => never
(Foo { a: int(0..inf), b: number } & notStructs(true | Foo)).a => never
(Foo { a: int(0..inf), b: number } & notStructs(true)).a => int(0..inf)
(Foo { a: int(0..inf), b: number } & anyStruct).a => int(0..inf)
(notStructs(Foo) & notStructs(true | Foo)).a => Error: Invalid field access: \`notStructs(true | Foo)\` is not guaranteed to have a field \`a\`.
(notStructs(Foo) & notStructs(true)).a => Error: Invalid field access: \`notStructs(true | Foo)\` is not guaranteed to have a field \`a\`.
(notStructs(Foo) & anyStruct).a => Error: Invalid field access: \`notStructs(Foo)\` is not guaranteed to have a field \`a\`.
(notStructs(true | Foo) & notStructs(true)).a => Error: Invalid field access: \`notStructs(true | Foo)\` is not guaranteed to have a field \`a\`.
(notStructs(true | Foo) & anyStruct).a => Error: Invalid field access: \`notStructs(true | Foo)\` is not guaranteed to have a field \`a\`.
(notStructs(true) & anyStruct).a => Error: Invalid field access: \`notStructs(true)\` is not guaranteed to have a field \`a\`."
`;

exports[`Match evaluate 1`] = `
"match never { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => never
match any { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "2" | "null" | "number" | "other" | "string"
match number { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "2" | "number"
match -3.14 { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "number"
match -2 { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "number"
match -1 { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "number"
match -0.5 { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "number"
match 0 { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "number"
match 0.5 { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "number"
match 1 { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "number"
match 2 { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "2"
match 2.78 { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "number"
match 3 { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "number"
match 3.14 { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "number"
match 10 { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "number"
match 100 { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "number"
match -inf { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "number"
match inf { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "number"
match nan { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "number"
match 0..1 { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "number"
match 0!..1 { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "number"
match 0..!1 { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "number"
match 0..2 { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "2" | "number"
match 0!..!2 { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "number"
match 0.5..1.5 { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "number"
match 0.5..2.5 { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "2" | "number"
match 0.5!..2.5 { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "2" | "number"
match 0.5..!2.5 { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "2" | "number"
match -2.56..3.35 { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "2" | "number"
match 0.5..0.75 { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "number"
match 1..2 { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "2" | "number"
match 0..inf { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "2" | "number"
match 0!..inf { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "2" | "number"
match 0..!inf { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "2" | "number"
match 0!..!inf { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "2" | "number"
match 1..inf { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "2" | "number"
match 1!..inf { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "2" | "number"
match 1..!inf { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "2" | "number"
match 2..inf { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "2" | "number"
match 2!..inf { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "number"
match 2.5..inf { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "number"
match -inf..0 { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "number"
match -inf..inf { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "2" | "number"
match -inf!..inf { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "2" | "number"
match -inf..!inf { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "2" | "number"
match -inf!..!inf { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "2" | "number"
match int(0..1) { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "number"
match int(0..2) { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "2" | "number"
match int(1..2) { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "2" | "number"
match int(5..20) { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "number"
match int(-20..-5) { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "number"
match int(-10..10) { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "2" | "number"
match int(0..inf) { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "2" | "number"
match int(1..inf) { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "2" | "number"
match int(-inf..0) { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "number"
match int(-inf..1) { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "number"
match int(-inf..inf) { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "2" | "number"
match nonInt(0..1) { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "number"
match nonInt(0..2) { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "number"
match nonInt(-1..2) { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "number"
match nonInt(0..inf) { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "number"
match nonInt(-1..inf) { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "number"
match nonInt(-inf..0) { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "number"
match nonInt(-inf..1) { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "number"
match nonInt(-inf..inf) { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "number"
match 1 | int(3..4) { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "number"
match string { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "string"
match "" { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "string"
match "foo" { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "string"
match "bar" { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "string"
match "ðŸ’©" { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "string"
match "bar" | "foo" { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "string"
match "baz" | "foo" { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "string"
match invStrSet("foo") { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "string"
match invStrSet("bar" | "foo") { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "string"
match invStrSet("bar") { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "string"
match invStrSet("") { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "string"
match false { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "other"
match true { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "other"
match false | true { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "other"
match Foo { a: 1, b: 2 } { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "other"
match Foo { a: 3, b: 2 } { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "other"
match Foo { a: 3, b: 4 } { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "other"
match Foo { a: 1 | 3, b: 2 } { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "other"
match Foo { a: 3, b: number } { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "other"
match Foo { a: int(0..inf), b: number } { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "other"
match notStructs(Foo) { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "null" | "other"
match notStructs(true | Foo) { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "null" | "other"
match notStructs(true) { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "null" | "other"
match anyStruct { 2 => "2", number => "number", string => "string", null => "null", _ => "other" } => "null" | "other""
`;

exports[`Snippet evaluation 1`] = `
"1 + 1
=>> 2

2 * uint
=>> int(0..inf)

true | false
=>> false | true

let foo: int = 4; foo
=>> 4

let foo: int = 1.2; foo
=>> Error: Incompatible variable type: The type 1.2 is not assignable to int(-inf..inf)

let foo: int = "1"; foo
=>> Error: Incompatible variable type: The type "1" is not assignable to int(-inf..inf)

def foo(): int = 4; foo()
=>> 4

def foo(): int = 1.2; foo()
=>> Error: Incompatible return type: The return value 1.2 is not allowed by the return type int(-inf..inf)

def foo(): int = "1"; foo()
=>> Error: Incompatible return type: The return value "1" is not allowed by the return type int(-inf..inf)

1 == 1
=>> true

1 != 1
=>> false

1 > 1
=>> false

1 >= 1
=>> true

1 < 1
=>> false

1 <= 1
=>> true

"foo" == "foo"
=>> true

"foo" == "bar"
=>> false

"foo" == bool
=>> false

true == true
=>> true

true != false
=>> true

string | number
=>> number | string

string | anyStruct
=>> string | anyStruct

number | anyStruct
=>> number | anyStruct

string | number | anyStruct
=>> any"
`;

exports[`without evaluation 1`] = `
"number \\ number => never
number \\ -3.14 => -inf..!-3.14 | -3.14!..inf | nan
number \\ -2 => -inf..!-2 | -2!..inf | nan
number \\ -1 => -inf..!-1 | -1!..inf | nan
number \\ -0.5 => -inf..!-0.5 | -0.5!..inf | nan
number \\ 0 => -inf..!0 | 0!..inf | nan
number \\ 0.5 => -inf..!0.5 | 0.5!..inf | nan
number \\ 1 => -inf..!1 | 1!..inf | nan
number \\ 2 => -inf..!2 | 2!..inf | nan
number \\ 2.78 => -inf..!2.78 | 2.78!..inf | nan
number \\ 3 => -inf..!3 | 3!..inf | nan
number \\ 3.14 => -inf..!3.14 | 3.14!..inf | nan
number \\ 10 => -inf..!10 | 10!..inf | nan
number \\ 100 => -inf..!100 | 100!..inf | nan
number \\ -inf => -inf!..inf | nan
number \\ inf => -inf..!inf | nan
number \\ nan => -inf..inf
number \\ 0..1 => -inf..!0 | 1!..inf | nan
number \\ 0!..1 => -inf..0 | 1!..inf | nan
number \\ 0..!1 => -inf..!0 | 1..inf | nan
number \\ 0..2 => -inf..!0 | 2!..inf | nan
number \\ 0!..!2 => -inf..0 | 2..inf | nan
number \\ 0.5..1.5 => -inf..!0.5 | 1.5!..inf | nan
number \\ 0.5..2.5 => -inf..!0.5 | 2.5!..inf | nan
number \\ 0.5!..2.5 => -inf..0.5 | 2.5!..inf | nan
number \\ 0.5..!2.5 => -inf..!0.5 | 2.5..inf | nan
number \\ -2.56..3.35 => -inf..!-2.56 | 3.35!..inf | nan
number \\ 0.5..0.75 => -inf..!0.5 | 0.75!..inf | nan
number \\ 1..2 => -inf..!1 | 2!..inf | nan
number \\ 0..inf => -inf..!0 | nan
number \\ 0!..inf => -inf..0 | nan
number \\ 0..!inf => -inf..!0 | inf | nan
number \\ 0!..!inf => -inf..0 | inf | nan
number \\ 1..inf => -inf..!1 | nan
number \\ 1!..inf => -inf..1 | nan
number \\ 1..!inf => -inf..!1 | inf | nan
number \\ 2..inf => -inf..!2 | nan
number \\ 2!..inf => -inf..2 | nan
number \\ 2.5..inf => -inf..!2.5 | nan
number \\ -inf..0 => 0!..inf | nan
number \\ -inf..inf => nan
number \\ -inf!..inf => -inf | nan
number \\ -inf..!inf => inf | nan
number \\ -inf!..!inf => -inf | inf | nan
number \\ int(0..1) => -inf..!0 | nonInt(0..1) | 1!..inf | nan
number \\ int(0..2) => -inf..!0 | nonInt(0..2) | 2!..inf | nan
number \\ int(1..2) => -inf..!1 | nonInt(1..2) | 2!..inf | nan
number \\ int(5..20) => -inf..!5 | nonInt(5..20) | 20!..inf | nan
number \\ int(-20..-5) => -inf..!-20 | nonInt(-20..-5) | -5!..inf | nan
number \\ int(-10..10) => -inf..!-10 | nonInt(-10..10) | 10!..inf | nan
number \\ int(0..inf) => -inf..!0 | nonInt(0..inf) | inf | nan
number \\ int(1..inf) => -inf..!1 | nonInt(1..inf) | inf | nan
number \\ int(-inf..0) => -inf | nonInt(-inf..0) | 0!..inf | nan
number \\ int(-inf..1) => -inf | nonInt(-inf..1) | 1!..inf | nan
number \\ int(-inf..inf) => -inf | nonInt(-inf..inf) | inf | nan
number \\ nonInt(0..1) => -inf..0 | 1..inf | nan
number \\ nonInt(0..2) => -inf..0 | 1 | 2..inf | nan
number \\ nonInt(-1..2) => -inf..-1 | int(0..1) | 2..inf | nan
number \\ nonInt(0..inf) => -inf..0 | int(1..inf) | inf | nan
number \\ nonInt(-1..inf) => -inf..-1 | int(0..inf) | inf | nan
number \\ nonInt(-inf..0) => -inf | int(-inf..-1) | 0..inf | nan
number \\ nonInt(-inf..1) => -inf | int(-inf..0) | 1..inf | nan
number \\ nonInt(-inf..inf) => -inf | int(-inf..inf) | inf | nan
number \\ 1 | int(3..4) => -inf..!1 | 1!..!3 | nonInt(3..4) | 4!..inf | nan
-3.14 \\ number => never
-3.14 \\ -3.14 => never
-3.14 \\ -2 => -3.14
-3.14 \\ -1 => -3.14
-3.14 \\ -0.5 => -3.14
-3.14 \\ 0 => -3.14
-3.14 \\ 0.5 => -3.14
-3.14 \\ 1 => -3.14
-3.14 \\ 2 => -3.14
-3.14 \\ 2.78 => -3.14
-3.14 \\ 3 => -3.14
-3.14 \\ 3.14 => -3.14
-3.14 \\ 10 => -3.14
-3.14 \\ 100 => -3.14
-3.14 \\ -inf => -3.14
-3.14 \\ inf => -3.14
-3.14 \\ nan => -3.14
-3.14 \\ 0..1 => -3.14
-3.14 \\ 0!..1 => -3.14
-3.14 \\ 0..!1 => -3.14
-3.14 \\ 0..2 => -3.14
-3.14 \\ 0!..!2 => -3.14
-3.14 \\ 0.5..1.5 => -3.14
-3.14 \\ 0.5..2.5 => -3.14
-3.14 \\ 0.5!..2.5 => -3.14
-3.14 \\ 0.5..!2.5 => -3.14
-3.14 \\ -2.56..3.35 => -3.14
-3.14 \\ 0.5..0.75 => -3.14
-3.14 \\ 1..2 => -3.14
-3.14 \\ 0..inf => -3.14
-3.14 \\ 0!..inf => -3.14
-3.14 \\ 0..!inf => -3.14
-3.14 \\ 0!..!inf => -3.14
-3.14 \\ 1..inf => -3.14
-3.14 \\ 1!..inf => -3.14
-3.14 \\ 1..!inf => -3.14
-3.14 \\ 2..inf => -3.14
-3.14 \\ 2!..inf => -3.14
-3.14 \\ 2.5..inf => -3.14
-3.14 \\ -inf..0 => never
-3.14 \\ -inf..inf => never
-3.14 \\ -inf!..inf => never
-3.14 \\ -inf..!inf => never
-3.14 \\ -inf!..!inf => never
-3.14 \\ int(0..1) => -3.14
-3.14 \\ int(0..2) => -3.14
-3.14 \\ int(1..2) => -3.14
-3.14 \\ int(5..20) => -3.14
-3.14 \\ int(-20..-5) => -3.14
-3.14 \\ int(-10..10) => -3.14
-3.14 \\ int(0..inf) => -3.14
-3.14 \\ int(1..inf) => -3.14
-3.14 \\ int(-inf..0) => -3.14
-3.14 \\ int(-inf..1) => -3.14
-3.14 \\ int(-inf..inf) => -3.14
-3.14 \\ nonInt(0..1) => -3.14
-3.14 \\ nonInt(0..2) => -3.14
-3.14 \\ nonInt(-1..2) => -3.14
-3.14 \\ nonInt(0..inf) => -3.14
-3.14 \\ nonInt(-1..inf) => -3.14
-3.14 \\ nonInt(-inf..0) => never
-3.14 \\ nonInt(-inf..1) => never
-3.14 \\ nonInt(-inf..inf) => never
-3.14 \\ 1 | int(3..4) => -3.14
-2 \\ number => never
-2 \\ -3.14 => -2
-2 \\ -2 => never
-2 \\ -1 => -2
-2 \\ -0.5 => -2
-2 \\ 0 => -2
-2 \\ 0.5 => -2
-2 \\ 1 => -2
-2 \\ 2 => -2
-2 \\ 2.78 => -2
-2 \\ 3 => -2
-2 \\ 3.14 => -2
-2 \\ 10 => -2
-2 \\ 100 => -2
-2 \\ -inf => -2
-2 \\ inf => -2
-2 \\ nan => -2
-2 \\ 0..1 => -2
-2 \\ 0!..1 => -2
-2 \\ 0..!1 => -2
-2 \\ 0..2 => -2
-2 \\ 0!..!2 => -2
-2 \\ 0.5..1.5 => -2
-2 \\ 0.5..2.5 => -2
-2 \\ 0.5!..2.5 => -2
-2 \\ 0.5..!2.5 => -2
-2 \\ -2.56..3.35 => never
-2 \\ 0.5..0.75 => -2
-2 \\ 1..2 => -2
-2 \\ 0..inf => -2
-2 \\ 0!..inf => -2
-2 \\ 0..!inf => -2
-2 \\ 0!..!inf => -2
-2 \\ 1..inf => -2
-2 \\ 1!..inf => -2
-2 \\ 1..!inf => -2
-2 \\ 2..inf => -2
-2 \\ 2!..inf => -2
-2 \\ 2.5..inf => -2
-2 \\ -inf..0 => never
-2 \\ -inf..inf => never
-2 \\ -inf!..inf => never
-2 \\ -inf..!inf => never
-2 \\ -inf!..!inf => never
-2 \\ int(0..1) => -2
-2 \\ int(0..2) => -2
-2 \\ int(1..2) => -2
-2 \\ int(5..20) => -2
-2 \\ int(-20..-5) => -2
-2 \\ int(-10..10) => never
-2 \\ int(0..inf) => -2
-2 \\ int(1..inf) => -2
-2 \\ int(-inf..0) => never
-2 \\ int(-inf..1) => never
-2 \\ int(-inf..inf) => never
-2 \\ nonInt(0..1) => -2
-2 \\ nonInt(0..2) => -2
-2 \\ nonInt(-1..2) => -2
-2 \\ nonInt(0..inf) => -2
-2 \\ nonInt(-1..inf) => -2
-2 \\ nonInt(-inf..0) => -2
-2 \\ nonInt(-inf..1) => -2
-2 \\ nonInt(-inf..inf) => -2
-2 \\ 1 | int(3..4) => -2
-1 \\ number => never
-1 \\ -3.14 => -1
-1 \\ -2 => -1
-1 \\ -1 => never
-1 \\ -0.5 => -1
-1 \\ 0 => -1
-1 \\ 0.5 => -1
-1 \\ 1 => -1
-1 \\ 2 => -1
-1 \\ 2.78 => -1
-1 \\ 3 => -1
-1 \\ 3.14 => -1
-1 \\ 10 => -1
-1 \\ 100 => -1
-1 \\ -inf => -1
-1 \\ inf => -1
-1 \\ nan => -1
-1 \\ 0..1 => -1
-1 \\ 0!..1 => -1
-1 \\ 0..!1 => -1
-1 \\ 0..2 => -1
-1 \\ 0!..!2 => -1
-1 \\ 0.5..1.5 => -1
-1 \\ 0.5..2.5 => -1
-1 \\ 0.5!..2.5 => -1
-1 \\ 0.5..!2.5 => -1
-1 \\ -2.56..3.35 => never
-1 \\ 0.5..0.75 => -1
-1 \\ 1..2 => -1
-1 \\ 0..inf => -1
-1 \\ 0!..inf => -1
-1 \\ 0..!inf => -1
-1 \\ 0!..!inf => -1
-1 \\ 1..inf => -1
-1 \\ 1!..inf => -1
-1 \\ 1..!inf => -1
-1 \\ 2..inf => -1
-1 \\ 2!..inf => -1
-1 \\ 2.5..inf => -1
-1 \\ -inf..0 => never
-1 \\ -inf..inf => never
-1 \\ -inf!..inf => never
-1 \\ -inf..!inf => never
-1 \\ -inf!..!inf => never
-1 \\ int(0..1) => -1
-1 \\ int(0..2) => -1
-1 \\ int(1..2) => -1
-1 \\ int(5..20) => -1
-1 \\ int(-20..-5) => -1
-1 \\ int(-10..10) => never
-1 \\ int(0..inf) => -1
-1 \\ int(1..inf) => -1
-1 \\ int(-inf..0) => never
-1 \\ int(-inf..1) => never
-1 \\ int(-inf..inf) => never
-1 \\ nonInt(0..1) => -1
-1 \\ nonInt(0..2) => -1
-1 \\ nonInt(-1..2) => -1
-1 \\ nonInt(0..inf) => -1
-1 \\ nonInt(-1..inf) => -1
-1 \\ nonInt(-inf..0) => -1
-1 \\ nonInt(-inf..1) => -1
-1 \\ nonInt(-inf..inf) => -1
-1 \\ 1 | int(3..4) => -1
-0.5 \\ number => never
-0.5 \\ -3.14 => -0.5
-0.5 \\ -2 => -0.5
-0.5 \\ -1 => -0.5
-0.5 \\ -0.5 => never
-0.5 \\ 0 => -0.5
-0.5 \\ 0.5 => -0.5
-0.5 \\ 1 => -0.5
-0.5 \\ 2 => -0.5
-0.5 \\ 2.78 => -0.5
-0.5 \\ 3 => -0.5
-0.5 \\ 3.14 => -0.5
-0.5 \\ 10 => -0.5
-0.5 \\ 100 => -0.5
-0.5 \\ -inf => -0.5
-0.5 \\ inf => -0.5
-0.5 \\ nan => -0.5
-0.5 \\ 0..1 => -0.5
-0.5 \\ 0!..1 => -0.5
-0.5 \\ 0..!1 => -0.5
-0.5 \\ 0..2 => -0.5
-0.5 \\ 0!..!2 => -0.5
-0.5 \\ 0.5..1.5 => -0.5
-0.5 \\ 0.5..2.5 => -0.5
-0.5 \\ 0.5!..2.5 => -0.5
-0.5 \\ 0.5..!2.5 => -0.5
-0.5 \\ -2.56..3.35 => never
-0.5 \\ 0.5..0.75 => -0.5
-0.5 \\ 1..2 => -0.5
-0.5 \\ 0..inf => -0.5
-0.5 \\ 0!..inf => -0.5
-0.5 \\ 0..!inf => -0.5
-0.5 \\ 0!..!inf => -0.5
-0.5 \\ 1..inf => -0.5
-0.5 \\ 1!..inf => -0.5
-0.5 \\ 1..!inf => -0.5
-0.5 \\ 2..inf => -0.5
-0.5 \\ 2!..inf => -0.5
-0.5 \\ 2.5..inf => -0.5
-0.5 \\ -inf..0 => never
-0.5 \\ -inf..inf => never
-0.5 \\ -inf!..inf => never
-0.5 \\ -inf..!inf => never
-0.5 \\ -inf!..!inf => never
-0.5 \\ int(0..1) => -0.5
-0.5 \\ int(0..2) => -0.5
-0.5 \\ int(1..2) => -0.5
-0.5 \\ int(5..20) => -0.5
-0.5 \\ int(-20..-5) => -0.5
-0.5 \\ int(-10..10) => -0.5
-0.5 \\ int(0..inf) => -0.5
-0.5 \\ int(1..inf) => -0.5
-0.5 \\ int(-inf..0) => -0.5
-0.5 \\ int(-inf..1) => -0.5
-0.5 \\ int(-inf..inf) => -0.5
-0.5 \\ nonInt(0..1) => -0.5
-0.5 \\ nonInt(0..2) => -0.5
-0.5 \\ nonInt(-1..2) => never
-0.5 \\ nonInt(0..inf) => -0.5
-0.5 \\ nonInt(-1..inf) => never
-0.5 \\ nonInt(-inf..0) => never
-0.5 \\ nonInt(-inf..1) => never
-0.5 \\ nonInt(-inf..inf) => never
-0.5 \\ 1 | int(3..4) => -0.5
0 \\ number => never
0 \\ -3.14 => 0
0 \\ -2 => 0
0 \\ -1 => 0
0 \\ -0.5 => 0
0 \\ 0 => never
0 \\ 0.5 => 0
0 \\ 1 => 0
0 \\ 2 => 0
0 \\ 2.78 => 0
0 \\ 3 => 0
0 \\ 3.14 => 0
0 \\ 10 => 0
0 \\ 100 => 0
0 \\ -inf => 0
0 \\ inf => 0
0 \\ nan => 0
0 \\ 0..1 => never
0 \\ 0!..1 => 0
0 \\ 0..!1 => never
0 \\ 0..2 => never
0 \\ 0!..!2 => 0
0 \\ 0.5..1.5 => 0
0 \\ 0.5..2.5 => 0
0 \\ 0.5!..2.5 => 0
0 \\ 0.5..!2.5 => 0
0 \\ -2.56..3.35 => never
0 \\ 0.5..0.75 => 0
0 \\ 1..2 => 0
0 \\ 0..inf => never
0 \\ 0!..inf => 0
0 \\ 0..!inf => never
0 \\ 0!..!inf => 0
0 \\ 1..inf => 0
0 \\ 1!..inf => 0
0 \\ 1..!inf => 0
0 \\ 2..inf => 0
0 \\ 2!..inf => 0
0 \\ 2.5..inf => 0
0 \\ -inf..0 => never
0 \\ -inf..inf => never
0 \\ -inf!..inf => never
0 \\ -inf..!inf => never
0 \\ -inf!..!inf => never
0 \\ int(0..1) => never
0 \\ int(0..2) => never
0 \\ int(1..2) => 0
0 \\ int(5..20) => 0
0 \\ int(-20..-5) => 0
0 \\ int(-10..10) => never
0 \\ int(0..inf) => never
0 \\ int(1..inf) => 0
0 \\ int(-inf..0) => never
0 \\ int(-inf..1) => never
0 \\ int(-inf..inf) => never
0 \\ nonInt(0..1) => 0
0 \\ nonInt(0..2) => 0
0 \\ nonInt(-1..2) => 0
0 \\ nonInt(0..inf) => 0
0 \\ nonInt(-1..inf) => 0
0 \\ nonInt(-inf..0) => 0
0 \\ nonInt(-inf..1) => 0
0 \\ nonInt(-inf..inf) => 0
0 \\ 1 | int(3..4) => 0
0.5 \\ number => never
0.5 \\ -3.14 => 0.5
0.5 \\ -2 => 0.5
0.5 \\ -1 => 0.5
0.5 \\ -0.5 => 0.5
0.5 \\ 0 => 0.5
0.5 \\ 0.5 => never
0.5 \\ 1 => 0.5
0.5 \\ 2 => 0.5
0.5 \\ 2.78 => 0.5
0.5 \\ 3 => 0.5
0.5 \\ 3.14 => 0.5
0.5 \\ 10 => 0.5
0.5 \\ 100 => 0.5
0.5 \\ -inf => 0.5
0.5 \\ inf => 0.5
0.5 \\ nan => 0.5
0.5 \\ 0..1 => never
0.5 \\ 0!..1 => never
0.5 \\ 0..!1 => never
0.5 \\ 0..2 => never
0.5 \\ 0!..!2 => never
0.5 \\ 0.5..1.5 => never
0.5 \\ 0.5..2.5 => never
0.5 \\ 0.5!..2.5 => 0.5
0.5 \\ 0.5..!2.5 => never
0.5 \\ -2.56..3.35 => never
0.5 \\ 0.5..0.75 => never
0.5 \\ 1..2 => 0.5
0.5 \\ 0..inf => never
0.5 \\ 0!..inf => never
0.5 \\ 0..!inf => never
0.5 \\ 0!..!inf => never
0.5 \\ 1..inf => 0.5
0.5 \\ 1!..inf => 0.5
0.5 \\ 1..!inf => 0.5
0.5 \\ 2..inf => 0.5
0.5 \\ 2!..inf => 0.5
0.5 \\ 2.5..inf => 0.5
0.5 \\ -inf..0 => 0.5
0.5 \\ -inf..inf => never
0.5 \\ -inf!..inf => never
0.5 \\ -inf..!inf => never
0.5 \\ -inf!..!inf => never
0.5 \\ int(0..1) => 0.5
0.5 \\ int(0..2) => 0.5
0.5 \\ int(1..2) => 0.5
0.5 \\ int(5..20) => 0.5
0.5 \\ int(-20..-5) => 0.5
0.5 \\ int(-10..10) => 0.5
0.5 \\ int(0..inf) => 0.5
0.5 \\ int(1..inf) => 0.5
0.5 \\ int(-inf..0) => 0.5
0.5 \\ int(-inf..1) => 0.5
0.5 \\ int(-inf..inf) => 0.5
0.5 \\ nonInt(0..1) => never
0.5 \\ nonInt(0..2) => never
0.5 \\ nonInt(-1..2) => never
0.5 \\ nonInt(0..inf) => never
0.5 \\ nonInt(-1..inf) => never
0.5 \\ nonInt(-inf..0) => 0.5
0.5 \\ nonInt(-inf..1) => never
0.5 \\ nonInt(-inf..inf) => never
0.5 \\ 1 | int(3..4) => 0.5
1 \\ number => never
1 \\ -3.14 => 1
1 \\ -2 => 1
1 \\ -1 => 1
1 \\ -0.5 => 1
1 \\ 0 => 1
1 \\ 0.5 => 1
1 \\ 1 => never
1 \\ 2 => 1
1 \\ 2.78 => 1
1 \\ 3 => 1
1 \\ 3.14 => 1
1 \\ 10 => 1
1 \\ 100 => 1
1 \\ -inf => 1
1 \\ inf => 1
1 \\ nan => 1
1 \\ 0..1 => never
1 \\ 0!..1 => never
1 \\ 0..!1 => 1
1 \\ 0..2 => never
1 \\ 0!..!2 => never
1 \\ 0.5..1.5 => never
1 \\ 0.5..2.5 => never
1 \\ 0.5!..2.5 => never
1 \\ 0.5..!2.5 => never
1 \\ -2.56..3.35 => never
1 \\ 0.5..0.75 => 1
1 \\ 1..2 => never
1 \\ 0..inf => never
1 \\ 0!..inf => never
1 \\ 0..!inf => never
1 \\ 0!..!inf => never
1 \\ 1..inf => never
1 \\ 1!..inf => 1
1 \\ 1..!inf => never
1 \\ 2..inf => 1
1 \\ 2!..inf => 1
1 \\ 2.5..inf => 1
1 \\ -inf..0 => 1
1 \\ -inf..inf => never
1 \\ -inf!..inf => never
1 \\ -inf..!inf => never
1 \\ -inf!..!inf => never
1 \\ int(0..1) => never
1 \\ int(0..2) => never
1 \\ int(1..2) => never
1 \\ int(5..20) => 1
1 \\ int(-20..-5) => 1
1 \\ int(-10..10) => never
1 \\ int(0..inf) => never
1 \\ int(1..inf) => never
1 \\ int(-inf..0) => 1
1 \\ int(-inf..1) => never
1 \\ int(-inf..inf) => never
1 \\ nonInt(0..1) => 1
1 \\ nonInt(0..2) => 1
1 \\ nonInt(-1..2) => 1
1 \\ nonInt(0..inf) => 1
1 \\ nonInt(-1..inf) => 1
1 \\ nonInt(-inf..0) => 1
1 \\ nonInt(-inf..1) => 1
1 \\ nonInt(-inf..inf) => 1
1 \\ 1 | int(3..4) => never
2 \\ number => never
2 \\ -3.14 => 2
2 \\ -2 => 2
2 \\ -1 => 2
2 \\ -0.5 => 2
2 \\ 0 => 2
2 \\ 0.5 => 2
2 \\ 1 => 2
2 \\ 2 => never
2 \\ 2.78 => 2
2 \\ 3 => 2
2 \\ 3.14 => 2
2 \\ 10 => 2
2 \\ 100 => 2
2 \\ -inf => 2
2 \\ inf => 2
2 \\ nan => 2
2 \\ 0..1 => 2
2 \\ 0!..1 => 2
2 \\ 0..!1 => 2
2 \\ 0..2 => never
2 \\ 0!..!2 => 2
2 \\ 0.5..1.5 => 2
2 \\ 0.5..2.5 => never
2 \\ 0.5!..2.5 => never
2 \\ 0.5..!2.5 => never
2 \\ -2.56..3.35 => never
2 \\ 0.5..0.75 => 2
2 \\ 1..2 => never
2 \\ 0..inf => never
2 \\ 0!..inf => never
2 \\ 0..!inf => never
2 \\ 0!..!inf => never
2 \\ 1..inf => never
2 \\ 1!..inf => never
2 \\ 1..!inf => never
2 \\ 2..inf => never
2 \\ 2!..inf => 2
2 \\ 2.5..inf => 2
2 \\ -inf..0 => 2
2 \\ -inf..inf => never
2 \\ -inf!..inf => never
2 \\ -inf..!inf => never
2 \\ -inf!..!inf => never
2 \\ int(0..1) => 2
2 \\ int(0..2) => never
2 \\ int(1..2) => never
2 \\ int(5..20) => 2
2 \\ int(-20..-5) => 2
2 \\ int(-10..10) => never
2 \\ int(0..inf) => never
2 \\ int(1..inf) => never
2 \\ int(-inf..0) => 2
2 \\ int(-inf..1) => 2
2 \\ int(-inf..inf) => never
2 \\ nonInt(0..1) => 2
2 \\ nonInt(0..2) => 2
2 \\ nonInt(-1..2) => 2
2 \\ nonInt(0..inf) => 2
2 \\ nonInt(-1..inf) => 2
2 \\ nonInt(-inf..0) => 2
2 \\ nonInt(-inf..1) => 2
2 \\ nonInt(-inf..inf) => 2
2 \\ 1 | int(3..4) => 2
2.78 \\ number => never
2.78 \\ -3.14 => 2.78
2.78 \\ -2 => 2.78
2.78 \\ -1 => 2.78
2.78 \\ -0.5 => 2.78
2.78 \\ 0 => 2.78
2.78 \\ 0.5 => 2.78
2.78 \\ 1 => 2.78
2.78 \\ 2 => 2.78
2.78 \\ 2.78 => never
2.78 \\ 3 => 2.78
2.78 \\ 3.14 => 2.78
2.78 \\ 10 => 2.78
2.78 \\ 100 => 2.78
2.78 \\ -inf => 2.78
2.78 \\ inf => 2.78
2.78 \\ nan => 2.78
2.78 \\ 0..1 => 2.78
2.78 \\ 0!..1 => 2.78
2.78 \\ 0..!1 => 2.78
2.78 \\ 0..2 => 2.78
2.78 \\ 0!..!2 => 2.78
2.78 \\ 0.5..1.5 => 2.78
2.78 \\ 0.5..2.5 => 2.78
2.78 \\ 0.5!..2.5 => 2.78
2.78 \\ 0.5..!2.5 => 2.78
2.78 \\ -2.56..3.35 => never
2.78 \\ 0.5..0.75 => 2.78
2.78 \\ 1..2 => 2.78
2.78 \\ 0..inf => never
2.78 \\ 0!..inf => never
2.78 \\ 0..!inf => never
2.78 \\ 0!..!inf => never
2.78 \\ 1..inf => never
2.78 \\ 1!..inf => never
2.78 \\ 1..!inf => never
2.78 \\ 2..inf => never
2.78 \\ 2!..inf => never
2.78 \\ 2.5..inf => never
2.78 \\ -inf..0 => 2.78
2.78 \\ -inf..inf => never
2.78 \\ -inf!..inf => never
2.78 \\ -inf..!inf => never
2.78 \\ -inf!..!inf => never
2.78 \\ int(0..1) => 2.78
2.78 \\ int(0..2) => 2.78
2.78 \\ int(1..2) => 2.78
2.78 \\ int(5..20) => 2.78
2.78 \\ int(-20..-5) => 2.78
2.78 \\ int(-10..10) => 2.78
2.78 \\ int(0..inf) => 2.78
2.78 \\ int(1..inf) => 2.78
2.78 \\ int(-inf..0) => 2.78
2.78 \\ int(-inf..1) => 2.78
2.78 \\ int(-inf..inf) => 2.78
2.78 \\ nonInt(0..1) => 2.78
2.78 \\ nonInt(0..2) => 2.78
2.78 \\ nonInt(-1..2) => 2.78
2.78 \\ nonInt(0..inf) => never
2.78 \\ nonInt(-1..inf) => never
2.78 \\ nonInt(-inf..0) => 2.78
2.78 \\ nonInt(-inf..1) => 2.78
2.78 \\ nonInt(-inf..inf) => never
2.78 \\ 1 | int(3..4) => 2.78
3 \\ number => never
3 \\ -3.14 => 3
3 \\ -2 => 3
3 \\ -1 => 3
3 \\ -0.5 => 3
3 \\ 0 => 3
3 \\ 0.5 => 3
3 \\ 1 => 3
3 \\ 2 => 3
3 \\ 2.78 => 3
3 \\ 3 => never
3 \\ 3.14 => 3
3 \\ 10 => 3
3 \\ 100 => 3
3 \\ -inf => 3
3 \\ inf => 3
3 \\ nan => 3
3 \\ 0..1 => 3
3 \\ 0!..1 => 3
3 \\ 0..!1 => 3
3 \\ 0..2 => 3
3 \\ 0!..!2 => 3
3 \\ 0.5..1.5 => 3
3 \\ 0.5..2.5 => 3
3 \\ 0.5!..2.5 => 3
3 \\ 0.5..!2.5 => 3
3 \\ -2.56..3.35 => never
3 \\ 0.5..0.75 => 3
3 \\ 1..2 => 3
3 \\ 0..inf => never
3 \\ 0!..inf => never
3 \\ 0..!inf => never
3 \\ 0!..!inf => never
3 \\ 1..inf => never
3 \\ 1!..inf => never
3 \\ 1..!inf => never
3 \\ 2..inf => never
3 \\ 2!..inf => never
3 \\ 2.5..inf => never
3 \\ -inf..0 => 3
3 \\ -inf..inf => never
3 \\ -inf!..inf => never
3 \\ -inf..!inf => never
3 \\ -inf!..!inf => never
3 \\ int(0..1) => 3
3 \\ int(0..2) => 3
3 \\ int(1..2) => 3
3 \\ int(5..20) => 3
3 \\ int(-20..-5) => 3
3 \\ int(-10..10) => never
3 \\ int(0..inf) => never
3 \\ int(1..inf) => never
3 \\ int(-inf..0) => 3
3 \\ int(-inf..1) => 3
3 \\ int(-inf..inf) => never
3 \\ nonInt(0..1) => 3
3 \\ nonInt(0..2) => 3
3 \\ nonInt(-1..2) => 3
3 \\ nonInt(0..inf) => 3
3 \\ nonInt(-1..inf) => 3
3 \\ nonInt(-inf..0) => 3
3 \\ nonInt(-inf..1) => 3
3 \\ nonInt(-inf..inf) => 3
3 \\ 1 | int(3..4) => never
3.14 \\ number => never
3.14 \\ -3.14 => 3.14
3.14 \\ -2 => 3.14
3.14 \\ -1 => 3.14
3.14 \\ -0.5 => 3.14
3.14 \\ 0 => 3.14
3.14 \\ 0.5 => 3.14
3.14 \\ 1 => 3.14
3.14 \\ 2 => 3.14
3.14 \\ 2.78 => 3.14
3.14 \\ 3 => 3.14
3.14 \\ 3.14 => never
3.14 \\ 10 => 3.14
3.14 \\ 100 => 3.14
3.14 \\ -inf => 3.14
3.14 \\ inf => 3.14
3.14 \\ nan => 3.14
3.14 \\ 0..1 => 3.14
3.14 \\ 0!..1 => 3.14
3.14 \\ 0..!1 => 3.14
3.14 \\ 0..2 => 3.14
3.14 \\ 0!..!2 => 3.14
3.14 \\ 0.5..1.5 => 3.14
3.14 \\ 0.5..2.5 => 3.14
3.14 \\ 0.5!..2.5 => 3.14
3.14 \\ 0.5..!2.5 => 3.14
3.14 \\ -2.56..3.35 => never
3.14 \\ 0.5..0.75 => 3.14
3.14 \\ 1..2 => 3.14
3.14 \\ 0..inf => never
3.14 \\ 0!..inf => never
3.14 \\ 0..!inf => never
3.14 \\ 0!..!inf => never
3.14 \\ 1..inf => never
3.14 \\ 1!..inf => never
3.14 \\ 1..!inf => never
3.14 \\ 2..inf => never
3.14 \\ 2!..inf => never
3.14 \\ 2.5..inf => never
3.14 \\ -inf..0 => 3.14
3.14 \\ -inf..inf => never
3.14 \\ -inf!..inf => never
3.14 \\ -inf..!inf => never
3.14 \\ -inf!..!inf => never
3.14 \\ int(0..1) => 3.14
3.14 \\ int(0..2) => 3.14
3.14 \\ int(1..2) => 3.14
3.14 \\ int(5..20) => 3.14
3.14 \\ int(-20..-5) => 3.14
3.14 \\ int(-10..10) => 3.14
3.14 \\ int(0..inf) => 3.14
3.14 \\ int(1..inf) => 3.14
3.14 \\ int(-inf..0) => 3.14
3.14 \\ int(-inf..1) => 3.14
3.14 \\ int(-inf..inf) => 3.14
3.14 \\ nonInt(0..1) => 3.14
3.14 \\ nonInt(0..2) => 3.14
3.14 \\ nonInt(-1..2) => 3.14
3.14 \\ nonInt(0..inf) => never
3.14 \\ nonInt(-1..inf) => never
3.14 \\ nonInt(-inf..0) => 3.14
3.14 \\ nonInt(-inf..1) => 3.14
3.14 \\ nonInt(-inf..inf) => never
3.14 \\ 1 | int(3..4) => 3.14
10 \\ number => never
10 \\ -3.14 => 10
10 \\ -2 => 10
10 \\ -1 => 10
10 \\ -0.5 => 10
10 \\ 0 => 10
10 \\ 0.5 => 10
10 \\ 1 => 10
10 \\ 2 => 10
10 \\ 2.78 => 10
10 \\ 3 => 10
10 \\ 3.14 => 10
10 \\ 10 => never
10 \\ 100 => 10
10 \\ -inf => 10
10 \\ inf => 10
10 \\ nan => 10
10 \\ 0..1 => 10
10 \\ 0!..1 => 10
10 \\ 0..!1 => 10
10 \\ 0..2 => 10
10 \\ 0!..!2 => 10
10 \\ 0.5..1.5 => 10
10 \\ 0.5..2.5 => 10
10 \\ 0.5!..2.5 => 10
10 \\ 0.5..!2.5 => 10
10 \\ -2.56..3.35 => 10
10 \\ 0.5..0.75 => 10
10 \\ 1..2 => 10
10 \\ 0..inf => never
10 \\ 0!..inf => never
10 \\ 0..!inf => never
10 \\ 0!..!inf => never
10 \\ 1..inf => never
10 \\ 1!..inf => never
10 \\ 1..!inf => never
10 \\ 2..inf => never
10 \\ 2!..inf => never
10 \\ 2.5..inf => never
10 \\ -inf..0 => 10
10 \\ -inf..inf => never
10 \\ -inf!..inf => never
10 \\ -inf..!inf => never
10 \\ -inf!..!inf => never
10 \\ int(0..1) => 10
10 \\ int(0..2) => 10
10 \\ int(1..2) => 10
10 \\ int(5..20) => never
10 \\ int(-20..-5) => 10
10 \\ int(-10..10) => never
10 \\ int(0..inf) => never
10 \\ int(1..inf) => never
10 \\ int(-inf..0) => 10
10 \\ int(-inf..1) => 10
10 \\ int(-inf..inf) => never
10 \\ nonInt(0..1) => 10
10 \\ nonInt(0..2) => 10
10 \\ nonInt(-1..2) => 10
10 \\ nonInt(0..inf) => 10
10 \\ nonInt(-1..inf) => 10
10 \\ nonInt(-inf..0) => 10
10 \\ nonInt(-inf..1) => 10
10 \\ nonInt(-inf..inf) => 10
10 \\ 1 | int(3..4) => 10
100 \\ number => never
100 \\ -3.14 => 100
100 \\ -2 => 100
100 \\ -1 => 100
100 \\ -0.5 => 100
100 \\ 0 => 100
100 \\ 0.5 => 100
100 \\ 1 => 100
100 \\ 2 => 100
100 \\ 2.78 => 100
100 \\ 3 => 100
100 \\ 3.14 => 100
100 \\ 10 => 100
100 \\ 100 => never
100 \\ -inf => 100
100 \\ inf => 100
100 \\ nan => 100
100 \\ 0..1 => 100
100 \\ 0!..1 => 100
100 \\ 0..!1 => 100
100 \\ 0..2 => 100
100 \\ 0!..!2 => 100
100 \\ 0.5..1.5 => 100
100 \\ 0.5..2.5 => 100
100 \\ 0.5!..2.5 => 100
100 \\ 0.5..!2.5 => 100
100 \\ -2.56..3.35 => 100
100 \\ 0.5..0.75 => 100
100 \\ 1..2 => 100
100 \\ 0..inf => never
100 \\ 0!..inf => never
100 \\ 0..!inf => never
100 \\ 0!..!inf => never
100 \\ 1..inf => never
100 \\ 1!..inf => never
100 \\ 1..!inf => never
100 \\ 2..inf => never
100 \\ 2!..inf => never
100 \\ 2.5..inf => never
100 \\ -inf..0 => 100
100 \\ -inf..inf => never
100 \\ -inf!..inf => never
100 \\ -inf..!inf => never
100 \\ -inf!..!inf => never
100 \\ int(0..1) => 100
100 \\ int(0..2) => 100
100 \\ int(1..2) => 100
100 \\ int(5..20) => 100
100 \\ int(-20..-5) => 100
100 \\ int(-10..10) => 100
100 \\ int(0..inf) => never
100 \\ int(1..inf) => never
100 \\ int(-inf..0) => 100
100 \\ int(-inf..1) => 100
100 \\ int(-inf..inf) => never
100 \\ nonInt(0..1) => 100
100 \\ nonInt(0..2) => 100
100 \\ nonInt(-1..2) => 100
100 \\ nonInt(0..inf) => 100
100 \\ nonInt(-1..inf) => 100
100 \\ nonInt(-inf..0) => 100
100 \\ nonInt(-inf..1) => 100
100 \\ nonInt(-inf..inf) => 100
100 \\ 1 | int(3..4) => 100
-inf \\ number => never
-inf \\ -3.14 => -inf
-inf \\ -2 => -inf
-inf \\ -1 => -inf
-inf \\ -0.5 => -inf
-inf \\ 0 => -inf
-inf \\ 0.5 => -inf
-inf \\ 1 => -inf
-inf \\ 2 => -inf
-inf \\ 2.78 => -inf
-inf \\ 3 => -inf
-inf \\ 3.14 => -inf
-inf \\ 10 => -inf
-inf \\ 100 => -inf
-inf \\ -inf => never
-inf \\ inf => -inf
-inf \\ nan => -inf
-inf \\ 0..1 => -inf
-inf \\ 0!..1 => -inf
-inf \\ 0..!1 => -inf
-inf \\ 0..2 => -inf
-inf \\ 0!..!2 => -inf
-inf \\ 0.5..1.5 => -inf
-inf \\ 0.5..2.5 => -inf
-inf \\ 0.5!..2.5 => -inf
-inf \\ 0.5..!2.5 => -inf
-inf \\ -2.56..3.35 => -inf
-inf \\ 0.5..0.75 => -inf
-inf \\ 1..2 => -inf
-inf \\ 0..inf => -inf
-inf \\ 0!..inf => -inf
-inf \\ 0..!inf => -inf
-inf \\ 0!..!inf => -inf
-inf \\ 1..inf => -inf
-inf \\ 1!..inf => -inf
-inf \\ 1..!inf => -inf
-inf \\ 2..inf => -inf
-inf \\ 2!..inf => -inf
-inf \\ 2.5..inf => -inf
-inf \\ -inf..0 => never
-inf \\ -inf..inf => never
-inf \\ -inf!..inf => -inf
-inf \\ -inf..!inf => never
-inf \\ -inf!..!inf => -inf
-inf \\ int(0..1) => -inf
-inf \\ int(0..2) => -inf
-inf \\ int(1..2) => -inf
-inf \\ int(5..20) => -inf
-inf \\ int(-20..-5) => -inf
-inf \\ int(-10..10) => -inf
-inf \\ int(0..inf) => -inf
-inf \\ int(1..inf) => -inf
-inf \\ int(-inf..0) => -inf
-inf \\ int(-inf..1) => -inf
-inf \\ int(-inf..inf) => -inf
-inf \\ nonInt(0..1) => -inf
-inf \\ nonInt(0..2) => -inf
-inf \\ nonInt(-1..2) => -inf
-inf \\ nonInt(0..inf) => -inf
-inf \\ nonInt(-1..inf) => -inf
-inf \\ nonInt(-inf..0) => -inf
-inf \\ nonInt(-inf..1) => -inf
-inf \\ nonInt(-inf..inf) => -inf
-inf \\ 1 | int(3..4) => -inf
inf \\ number => never
inf \\ -3.14 => inf
inf \\ -2 => inf
inf \\ -1 => inf
inf \\ -0.5 => inf
inf \\ 0 => inf
inf \\ 0.5 => inf
inf \\ 1 => inf
inf \\ 2 => inf
inf \\ 2.78 => inf
inf \\ 3 => inf
inf \\ 3.14 => inf
inf \\ 10 => inf
inf \\ 100 => inf
inf \\ -inf => inf
inf \\ inf => never
inf \\ nan => inf
inf \\ 0..1 => inf
inf \\ 0!..1 => inf
inf \\ 0..!1 => inf
inf \\ 0..2 => inf
inf \\ 0!..!2 => inf
inf \\ 0.5..1.5 => inf
inf \\ 0.5..2.5 => inf
inf \\ 0.5!..2.5 => inf
inf \\ 0.5..!2.5 => inf
inf \\ -2.56..3.35 => inf
inf \\ 0.5..0.75 => inf
inf \\ 1..2 => inf
inf \\ 0..inf => never
inf \\ 0!..inf => never
inf \\ 0..!inf => inf
inf \\ 0!..!inf => inf
inf \\ 1..inf => never
inf \\ 1!..inf => never
inf \\ 1..!inf => inf
inf \\ 2..inf => never
inf \\ 2!..inf => never
inf \\ 2.5..inf => never
inf \\ -inf..0 => inf
inf \\ -inf..inf => never
inf \\ -inf!..inf => never
inf \\ -inf..!inf => inf
inf \\ -inf!..!inf => inf
inf \\ int(0..1) => inf
inf \\ int(0..2) => inf
inf \\ int(1..2) => inf
inf \\ int(5..20) => inf
inf \\ int(-20..-5) => inf
inf \\ int(-10..10) => inf
inf \\ int(0..inf) => inf
inf \\ int(1..inf) => inf
inf \\ int(-inf..0) => inf
inf \\ int(-inf..1) => inf
inf \\ int(-inf..inf) => inf
inf \\ nonInt(0..1) => inf
inf \\ nonInt(0..2) => inf
inf \\ nonInt(-1..2) => inf
inf \\ nonInt(0..inf) => inf
inf \\ nonInt(-1..inf) => inf
inf \\ nonInt(-inf..0) => inf
inf \\ nonInt(-inf..1) => inf
inf \\ nonInt(-inf..inf) => inf
inf \\ 1 | int(3..4) => inf
nan \\ number => never
nan \\ -3.14 => nan
nan \\ -2 => nan
nan \\ -1 => nan
nan \\ -0.5 => nan
nan \\ 0 => nan
nan \\ 0.5 => nan
nan \\ 1 => nan
nan \\ 2 => nan
nan \\ 2.78 => nan
nan \\ 3 => nan
nan \\ 3.14 => nan
nan \\ 10 => nan
nan \\ 100 => nan
nan \\ -inf => nan
nan \\ inf => nan
nan \\ nan => never
nan \\ 0..1 => nan
nan \\ 0!..1 => nan
nan \\ 0..!1 => nan
nan \\ 0..2 => nan
nan \\ 0!..!2 => nan
nan \\ 0.5..1.5 => nan
nan \\ 0.5..2.5 => nan
nan \\ 0.5!..2.5 => nan
nan \\ 0.5..!2.5 => nan
nan \\ -2.56..3.35 => nan
nan \\ 0.5..0.75 => nan
nan \\ 1..2 => nan
nan \\ 0..inf => nan
nan \\ 0!..inf => nan
nan \\ 0..!inf => nan
nan \\ 0!..!inf => nan
nan \\ 1..inf => nan
nan \\ 1!..inf => nan
nan \\ 1..!inf => nan
nan \\ 2..inf => nan
nan \\ 2!..inf => nan
nan \\ 2.5..inf => nan
nan \\ -inf..0 => nan
nan \\ -inf..inf => nan
nan \\ -inf!..inf => nan
nan \\ -inf..!inf => nan
nan \\ -inf!..!inf => nan
nan \\ int(0..1) => nan
nan \\ int(0..2) => nan
nan \\ int(1..2) => nan
nan \\ int(5..20) => nan
nan \\ int(-20..-5) => nan
nan \\ int(-10..10) => nan
nan \\ int(0..inf) => nan
nan \\ int(1..inf) => nan
nan \\ int(-inf..0) => nan
nan \\ int(-inf..1) => nan
nan \\ int(-inf..inf) => nan
nan \\ nonInt(0..1) => nan
nan \\ nonInt(0..2) => nan
nan \\ nonInt(-1..2) => nan
nan \\ nonInt(0..inf) => nan
nan \\ nonInt(-1..inf) => nan
nan \\ nonInt(-inf..0) => nan
nan \\ nonInt(-inf..1) => nan
nan \\ nonInt(-inf..inf) => nan
nan \\ 1 | int(3..4) => nan
0..1 \\ number => never
0..1 \\ -3.14 => 0..1
0..1 \\ -2 => 0..1
0..1 \\ -1 => 0..1
0..1 \\ -0.5 => 0..1
0..1 \\ 0 => 0!..1
0..1 \\ 0.5 => 0..!0.5 | 0.5!..1
0..1 \\ 1 => 0..!1
0..1 \\ 2 => 0..1
0..1 \\ 2.78 => 0..1
0..1 \\ 3 => 0..1
0..1 \\ 3.14 => 0..1
0..1 \\ 10 => 0..1
0..1 \\ 100 => 0..1
0..1 \\ -inf => 0..1
0..1 \\ inf => 0..1
0..1 \\ nan => 0..1
0..1 \\ 0..1 => never
0..1 \\ 0!..1 => 0
0..1 \\ 0..!1 => 1
0..1 \\ 0..2 => never
0..1 \\ 0!..!2 => 0
0..1 \\ 0.5..1.5 => 0..!0.5
0..1 \\ 0.5..2.5 => 0..!0.5
0..1 \\ 0.5!..2.5 => 0..0.5
0..1 \\ 0.5..!2.5 => 0..!0.5
0..1 \\ -2.56..3.35 => never
0..1 \\ 0.5..0.75 => 0..!0.5 | 0.75!..1
0..1 \\ 1..2 => 0..!1
0..1 \\ 0..inf => never
0..1 \\ 0!..inf => 0
0..1 \\ 0..!inf => never
0..1 \\ 0!..!inf => 0
0..1 \\ 1..inf => 0..!1
0..1 \\ 1!..inf => 0..1
0..1 \\ 1..!inf => 0..!1
0..1 \\ 2..inf => 0..1
0..1 \\ 2!..inf => 0..1
0..1 \\ 2.5..inf => 0..1
0..1 \\ -inf..0 => 0!..1
0..1 \\ -inf..inf => never
0..1 \\ -inf!..inf => never
0..1 \\ -inf..!inf => never
0..1 \\ -inf!..!inf => never
0..1 \\ int(0..1) => nonInt(0..1)
0..1 \\ int(0..2) => nonInt(0..1)
0..1 \\ int(1..2) => 0..!1
0..1 \\ int(5..20) => 0..1
0..1 \\ int(-20..-5) => 0..1
0..1 \\ int(-10..10) => nonInt(0..1)
0..1 \\ int(0..inf) => nonInt(0..1)
0..1 \\ int(1..inf) => 0..!1
0..1 \\ int(-inf..0) => 0!..1
0..1 \\ int(-inf..1) => nonInt(0..1)
0..1 \\ int(-inf..inf) => nonInt(0..1)
0..1 \\ nonInt(0..1) => int(0..1)
0..1 \\ nonInt(0..2) => int(0..1)
0..1 \\ nonInt(-1..2) => int(0..1)
0..1 \\ nonInt(0..inf) => int(0..1)
0..1 \\ nonInt(-1..inf) => int(0..1)
0..1 \\ nonInt(-inf..0) => 0..1
0..1 \\ nonInt(-inf..1) => int(0..1)
0..1 \\ nonInt(-inf..inf) => int(0..1)
0..1 \\ 1 | int(3..4) => 0..!1
0!..1 \\ number => never
0!..1 \\ -3.14 => 0!..1
0!..1 \\ -2 => 0!..1
0!..1 \\ -1 => 0!..1
0!..1 \\ -0.5 => 0!..1
0!..1 \\ 0 => 0!..1
0!..1 \\ 0.5 => 0!..!0.5 | 0.5!..1
0!..1 \\ 1 => nonInt(0..1)
0!..1 \\ 2 => 0!..1
0!..1 \\ 2.78 => 0!..1
0!..1 \\ 3 => 0!..1
0!..1 \\ 3.14 => 0!..1
0!..1 \\ 10 => 0!..1
0!..1 \\ 100 => 0!..1
0!..1 \\ -inf => 0!..1
0!..1 \\ inf => 0!..1
0!..1 \\ nan => 0!..1
0!..1 \\ 0..1 => never
0!..1 \\ 0!..1 => never
0!..1 \\ 0..!1 => 1
0!..1 \\ 0..2 => never
0!..1 \\ 0!..!2 => never
0!..1 \\ 0.5..1.5 => 0!..!0.5
0!..1 \\ 0.5..2.5 => 0!..!0.5
0!..1 \\ 0.5!..2.5 => 0!..0.5
0!..1 \\ 0.5..!2.5 => 0!..!0.5
0!..1 \\ -2.56..3.35 => never
0!..1 \\ 0.5..0.75 => 0!..!0.5 | 0.75!..1
0!..1 \\ 1..2 => nonInt(0..1)
0!..1 \\ 0..inf => never
0!..1 \\ 0!..inf => never
0!..1 \\ 0..!inf => never
0!..1 \\ 0!..!inf => never
0!..1 \\ 1..inf => nonInt(0..1)
0!..1 \\ 1!..inf => 0!..1
0!..1 \\ 1..!inf => nonInt(0..1)
0!..1 \\ 2..inf => 0!..1
0!..1 \\ 2!..inf => 0!..1
0!..1 \\ 2.5..inf => 0!..1
0!..1 \\ -inf..0 => 0!..1
0!..1 \\ -inf..inf => never
0!..1 \\ -inf!..inf => never
0!..1 \\ -inf..!inf => never
0!..1 \\ -inf!..!inf => never
0!..1 \\ int(0..1) => nonInt(0..1)
0!..1 \\ int(0..2) => nonInt(0..1)
0!..1 \\ int(1..2) => nonInt(0..1)
0!..1 \\ int(5..20) => 0!..1
0!..1 \\ int(-20..-5) => 0!..1
0!..1 \\ int(-10..10) => nonInt(0..1)
0!..1 \\ int(0..inf) => nonInt(0..1)
0!..1 \\ int(1..inf) => nonInt(0..1)
0!..1 \\ int(-inf..0) => 0!..1
0!..1 \\ int(-inf..1) => nonInt(0..1)
0!..1 \\ int(-inf..inf) => nonInt(0..1)
0!..1 \\ nonInt(0..1) => 1
0!..1 \\ nonInt(0..2) => 1
0!..1 \\ nonInt(-1..2) => 1
0!..1 \\ nonInt(0..inf) => 1
0!..1 \\ nonInt(-1..inf) => 1
0!..1 \\ nonInt(-inf..0) => 0!..1
0!..1 \\ nonInt(-inf..1) => 1
0!..1 \\ nonInt(-inf..inf) => 1
0!..1 \\ 1 | int(3..4) => nonInt(0..1)
0..!1 \\ number => never
0..!1 \\ -3.14 => 0..!1
0..!1 \\ -2 => 0..!1
0..!1 \\ -1 => 0..!1
0..!1 \\ -0.5 => 0..!1
0..!1 \\ 0 => nonInt(0..1)
0..!1 \\ 0.5 => 0..!0.5 | 0.5!..!1
0..!1 \\ 1 => 0..!1
0..!1 \\ 2 => 0..!1
0..!1 \\ 2.78 => 0..!1
0..!1 \\ 3 => 0..!1
0..!1 \\ 3.14 => 0..!1
0..!1 \\ 10 => 0..!1
0..!1 \\ 100 => 0..!1
0..!1 \\ -inf => 0..!1
0..!1 \\ inf => 0..!1
0..!1 \\ nan => 0..!1
0..!1 \\ 0..1 => never
0..!1 \\ 0!..1 => 0
0..!1 \\ 0..!1 => never
0..!1 \\ 0..2 => never
0..!1 \\ 0!..!2 => 0
0..!1 \\ 0.5..1.5 => 0..!0.5
0..!1 \\ 0.5..2.5 => 0..!0.5
0..!1 \\ 0.5!..2.5 => 0..0.5
0..!1 \\ 0.5..!2.5 => 0..!0.5
0..!1 \\ -2.56..3.35 => never
0..!1 \\ 0.5..0.75 => 0..!0.5 | 0.75!..!1
0..!1 \\ 1..2 => 0..!1
0..!1 \\ 0..inf => never
0..!1 \\ 0!..inf => 0
0..!1 \\ 0..!inf => never
0..!1 \\ 0!..!inf => 0
0..!1 \\ 1..inf => 0..!1
0..!1 \\ 1!..inf => 0..!1
0..!1 \\ 1..!inf => 0..!1
0..!1 \\ 2..inf => 0..!1
0..!1 \\ 2!..inf => 0..!1
0..!1 \\ 2.5..inf => 0..!1
0..!1 \\ -inf..0 => nonInt(0..1)
0..!1 \\ -inf..inf => never
0..!1 \\ -inf!..inf => never
0..!1 \\ -inf..!inf => never
0..!1 \\ -inf!..!inf => never
0..!1 \\ int(0..1) => nonInt(0..1)
0..!1 \\ int(0..2) => nonInt(0..1)
0..!1 \\ int(1..2) => 0..!1
0..!1 \\ int(5..20) => 0..!1
0..!1 \\ int(-20..-5) => 0..!1
0..!1 \\ int(-10..10) => nonInt(0..1)
0..!1 \\ int(0..inf) => nonInt(0..1)
0..!1 \\ int(1..inf) => 0..!1
0..!1 \\ int(-inf..0) => nonInt(0..1)
0..!1 \\ int(-inf..1) => nonInt(0..1)
0..!1 \\ int(-inf..inf) => nonInt(0..1)
0..!1 \\ nonInt(0..1) => 0
0..!1 \\ nonInt(0..2) => 0
0..!1 \\ nonInt(-1..2) => 0
0..!1 \\ nonInt(0..inf) => 0
0..!1 \\ nonInt(-1..inf) => 0
0..!1 \\ nonInt(-inf..0) => 0..!1
0..!1 \\ nonInt(-inf..1) => 0
0..!1 \\ nonInt(-inf..inf) => 0
0..!1 \\ 1 | int(3..4) => 0..!1
0..2 \\ number => never
0..2 \\ -3.14 => 0..2
0..2 \\ -2 => 0..2
0..2 \\ -1 => 0..2
0..2 \\ -0.5 => 0..2
0..2 \\ 0 => 0!..2
0..2 \\ 0.5 => 0..!0.5 | 0.5!..2
0..2 \\ 1 => 0..!1 | 1!..2
0..2 \\ 2 => 0..!2
0..2 \\ 2.78 => 0..2
0..2 \\ 3 => 0..2
0..2 \\ 3.14 => 0..2
0..2 \\ 10 => 0..2
0..2 \\ 100 => 0..2
0..2 \\ -inf => 0..2
0..2 \\ inf => 0..2
0..2 \\ nan => 0..2
0..2 \\ 0..1 => 1!..2
0..2 \\ 0!..1 => 0 | 1!..2
0..2 \\ 0..!1 => 1..2
0..2 \\ 0..2 => never
0..2 \\ 0!..!2 => 0 | 2
0..2 \\ 0.5..1.5 => 0..!0.5 | 1.5!..2
0..2 \\ 0.5..2.5 => 0..!0.5
0..2 \\ 0.5!..2.5 => 0..0.5
0..2 \\ 0.5..!2.5 => 0..!0.5
0..2 \\ -2.56..3.35 => never
0..2 \\ 0.5..0.75 => 0..!0.5 | 0.75!..2
0..2 \\ 1..2 => 0..!1
0..2 \\ 0..inf => never
0..2 \\ 0!..inf => 0
0..2 \\ 0..!inf => never
0..2 \\ 0!..!inf => 0
0..2 \\ 1..inf => 0..!1
0..2 \\ 1!..inf => 0..1
0..2 \\ 1..!inf => 0..!1
0..2 \\ 2..inf => 0..!2
0..2 \\ 2!..inf => 0..2
0..2 \\ 2.5..inf => 0..2
0..2 \\ -inf..0 => 0!..2
0..2 \\ -inf..inf => never
0..2 \\ -inf!..inf => never
0..2 \\ -inf..!inf => never
0..2 \\ -inf!..!inf => never
0..2 \\ int(0..1) => nonInt(0..1) | 1!..2
0..2 \\ int(0..2) => nonInt(0..2)
0..2 \\ int(1..2) => 0..!1 | nonInt(1..2)
0..2 \\ int(5..20) => 0..2
0..2 \\ int(-20..-5) => 0..2
0..2 \\ int(-10..10) => nonInt(0..2)
0..2 \\ int(0..inf) => nonInt(0..2)
0..2 \\ int(1..inf) => 0..!1 | nonInt(1..2)
0..2 \\ int(-inf..0) => 0!..2
0..2 \\ int(-inf..1) => nonInt(0..1) | 1!..2
0..2 \\ int(-inf..inf) => nonInt(0..2)
0..2 \\ nonInt(0..1) => 0 | 1..2
0..2 \\ nonInt(0..2) => int(0..2)
0..2 \\ nonInt(-1..2) => int(0..2)
0..2 \\ nonInt(0..inf) => int(0..2)
0..2 \\ nonInt(-1..inf) => int(0..2)
0..2 \\ nonInt(-inf..0) => 0..2
0..2 \\ nonInt(-inf..1) => 0 | 1..2
0..2 \\ nonInt(-inf..inf) => int(0..2)
0..2 \\ 1 | int(3..4) => 0..!1 | 1!..2
0!..!2 \\ number => never
0!..!2 \\ -3.14 => 0!..!2
0!..!2 \\ -2 => 0!..!2
0!..!2 \\ -1 => 0!..!2
0!..!2 \\ -0.5 => 0!..!2
0!..!2 \\ 0 => 0!..!2
0!..!2 \\ 0.5 => 0!..!0.5 | 0.5!..!2
0!..!2 \\ 1 => nonInt(0..2)
0!..!2 \\ 2 => 0!..!2
0!..!2 \\ 2.78 => 0!..!2
0!..!2 \\ 3 => 0!..!2
0!..!2 \\ 3.14 => 0!..!2
0!..!2 \\ 10 => 0!..!2
0!..!2 \\ 100 => 0!..!2
0!..!2 \\ -inf => 0!..!2
0!..!2 \\ inf => 0!..!2
0!..!2 \\ nan => 0!..!2
0!..!2 \\ 0..1 => nonInt(1..2)
0!..!2 \\ 0!..1 => nonInt(1..2)
0!..!2 \\ 0..!1 => 1..!2
0!..!2 \\ 0..2 => never
0!..!2 \\ 0!..!2 => never
0!..!2 \\ 0.5..1.5 => 0!..!0.5 | 1.5!..!2
0!..!2 \\ 0.5..2.5 => 0!..!0.5
0!..!2 \\ 0.5!..2.5 => 0!..0.5
0!..!2 \\ 0.5..!2.5 => 0!..!0.5
0!..!2 \\ -2.56..3.35 => never
0!..!2 \\ 0.5..0.75 => 0!..!0.5 | 0.75!..!2
0!..!2 \\ 1..2 => nonInt(0..1)
0!..!2 \\ 0..inf => never
0!..!2 \\ 0!..inf => never
0!..!2 \\ 0..!inf => never
0!..!2 \\ 0!..!inf => never
0!..!2 \\ 1..inf => nonInt(0..1)
0!..!2 \\ 1!..inf => 0!..1
0!..!2 \\ 1..!inf => nonInt(0..1)
0!..!2 \\ 2..inf => 0!..!2
0!..!2 \\ 2!..inf => 0!..!2
0!..!2 \\ 2.5..inf => 0!..!2
0!..!2 \\ -inf..0 => 0!..!2
0!..!2 \\ -inf..inf => never
0!..!2 \\ -inf!..inf => never
0!..!2 \\ -inf..!inf => never
0!..!2 \\ -inf!..!inf => never
0!..!2 \\ int(0..1) => nonInt(0..2)
0!..!2 \\ int(0..2) => nonInt(0..2)
0!..!2 \\ int(1..2) => nonInt(0..2)
0!..!2 \\ int(5..20) => 0!..!2
0!..!2 \\ int(-20..-5) => 0!..!2
0!..!2 \\ int(-10..10) => nonInt(0..2)
0!..!2 \\ int(0..inf) => nonInt(0..2)
0!..!2 \\ int(1..inf) => nonInt(0..2)
0!..!2 \\ int(-inf..0) => 0!..!2
0!..!2 \\ int(-inf..1) => nonInt(0..2)
0!..!2 \\ int(-inf..inf) => nonInt(0..2)
0!..!2 \\ nonInt(0..1) => 1..!2
0!..!2 \\ nonInt(0..2) => 1
0!..!2 \\ nonInt(-1..2) => 1
0!..!2 \\ nonInt(0..inf) => 1
0!..!2 \\ nonInt(-1..inf) => 1
0!..!2 \\ nonInt(-inf..0) => 0!..!2
0!..!2 \\ nonInt(-inf..1) => 1..!2
0!..!2 \\ nonInt(-inf..inf) => 1
0!..!2 \\ 1 | int(3..4) => nonInt(0..2)
0.5..1.5 \\ number => never
0.5..1.5 \\ -3.14 => 0.5..1.5
0.5..1.5 \\ -2 => 0.5..1.5
0.5..1.5 \\ -1 => 0.5..1.5
0.5..1.5 \\ -0.5 => 0.5..1.5
0.5..1.5 \\ 0 => 0.5..1.5
0.5..1.5 \\ 0.5 => 0.5!..1.5
0.5..1.5 \\ 1 => 0.5..!1 | 1!..1.5
0.5..1.5 \\ 2 => 0.5..1.5
0.5..1.5 \\ 2.78 => 0.5..1.5
0.5..1.5 \\ 3 => 0.5..1.5
0.5..1.5 \\ 3.14 => 0.5..1.5
0.5..1.5 \\ 10 => 0.5..1.5
0.5..1.5 \\ 100 => 0.5..1.5
0.5..1.5 \\ -inf => 0.5..1.5
0.5..1.5 \\ inf => 0.5..1.5
0.5..1.5 \\ nan => 0.5..1.5
0.5..1.5 \\ 0..1 => 1!..1.5
0.5..1.5 \\ 0!..1 => 1!..1.5
0.5..1.5 \\ 0..!1 => 1..1.5
0.5..1.5 \\ 0..2 => never
0.5..1.5 \\ 0!..!2 => never
0.5..1.5 \\ 0.5..1.5 => never
0.5..1.5 \\ 0.5..2.5 => never
0.5..1.5 \\ 0.5!..2.5 => 0.5
0.5..1.5 \\ 0.5..!2.5 => never
0.5..1.5 \\ -2.56..3.35 => never
0.5..1.5 \\ 0.5..0.75 => 0.75!..1.5
0.5..1.5 \\ 1..2 => 0.5..!1
0.5..1.5 \\ 0..inf => never
0.5..1.5 \\ 0!..inf => never
0.5..1.5 \\ 0..!inf => never
0.5..1.5 \\ 0!..!inf => never
0.5..1.5 \\ 1..inf => 0.5..!1
0.5..1.5 \\ 1!..inf => 0.5..1
0.5..1.5 \\ 1..!inf => 0.5..!1
0.5..1.5 \\ 2..inf => 0.5..1.5
0.5..1.5 \\ 2!..inf => 0.5..1.5
0.5..1.5 \\ 2.5..inf => 0.5..1.5
0.5..1.5 \\ -inf..0 => 0.5..1.5
0.5..1.5 \\ -inf..inf => never
0.5..1.5 \\ -inf!..inf => never
0.5..1.5 \\ -inf..!inf => never
0.5..1.5 \\ -inf!..!inf => never
0.5..1.5 \\ int(0..1) => 0.5..!1 | 1!..1.5
0.5..1.5 \\ int(0..2) => 0.5..!1 | 1!..1.5
0.5..1.5 \\ int(1..2) => 0.5..!1 | 1!..1.5
0.5..1.5 \\ int(5..20) => 0.5..1.5
0.5..1.5 \\ int(-20..-5) => 0.5..1.5
0.5..1.5 \\ int(-10..10) => 0.5..!1 | 1!..1.5
0.5..1.5 \\ int(0..inf) => 0.5..!1 | 1!..1.5
0.5..1.5 \\ int(1..inf) => 0.5..!1 | 1!..1.5
0.5..1.5 \\ int(-inf..0) => 0.5..1.5
0.5..1.5 \\ int(-inf..1) => 0.5..!1 | 1!..1.5
0.5..1.5 \\ int(-inf..inf) => 0.5..!1 | 1!..1.5
0.5..1.5 \\ nonInt(0..1) => 1..1.5
0.5..1.5 \\ nonInt(0..2) => 1
0.5..1.5 \\ nonInt(-1..2) => 1
0.5..1.5 \\ nonInt(0..inf) => 1
0.5..1.5 \\ nonInt(-1..inf) => 1
0.5..1.5 \\ nonInt(-inf..0) => 0.5..1.5
0.5..1.5 \\ nonInt(-inf..1) => 1..1.5
0.5..1.5 \\ nonInt(-inf..inf) => 1
0.5..1.5 \\ 1 | int(3..4) => 0.5..!1 | 1!..1.5
0.5..2.5 \\ number => never
0.5..2.5 \\ -3.14 => 0.5..2.5
0.5..2.5 \\ -2 => 0.5..2.5
0.5..2.5 \\ -1 => 0.5..2.5
0.5..2.5 \\ -0.5 => 0.5..2.5
0.5..2.5 \\ 0 => 0.5..2.5
0.5..2.5 \\ 0.5 => 0.5!..2.5
0.5..2.5 \\ 1 => 0.5..!1 | 1!..2.5
0.5..2.5 \\ 2 => 0.5..!2 | 2!..2.5
0.5..2.5 \\ 2.78 => 0.5..2.5
0.5..2.5 \\ 3 => 0.5..2.5
0.5..2.5 \\ 3.14 => 0.5..2.5
0.5..2.5 \\ 10 => 0.5..2.5
0.5..2.5 \\ 100 => 0.5..2.5
0.5..2.5 \\ -inf => 0.5..2.5
0.5..2.5 \\ inf => 0.5..2.5
0.5..2.5 \\ nan => 0.5..2.5
0.5..2.5 \\ 0..1 => 1!..2.5
0.5..2.5 \\ 0!..1 => 1!..2.5
0.5..2.5 \\ 0..!1 => 1..2.5
0.5..2.5 \\ 0..2 => 2!..2.5
0.5..2.5 \\ 0!..!2 => 2..2.5
0.5..2.5 \\ 0.5..1.5 => 1.5!..2.5
0.5..2.5 \\ 0.5..2.5 => never
0.5..2.5 \\ 0.5!..2.5 => 0.5
0.5..2.5 \\ 0.5..!2.5 => 2.5
0.5..2.5 \\ -2.56..3.35 => never
0.5..2.5 \\ 0.5..0.75 => 0.75!..2.5
0.5..2.5 \\ 1..2 => 0.5..!1 | 2!..2.5
0.5..2.5 \\ 0..inf => never
0.5..2.5 \\ 0!..inf => never
0.5..2.5 \\ 0..!inf => never
0.5..2.5 \\ 0!..!inf => never
0.5..2.5 \\ 1..inf => 0.5..!1
0.5..2.5 \\ 1!..inf => 0.5..1
0.5..2.5 \\ 1..!inf => 0.5..!1
0.5..2.5 \\ 2..inf => 0.5..!2
0.5..2.5 \\ 2!..inf => 0.5..2
0.5..2.5 \\ 2.5..inf => 0.5..!2.5
0.5..2.5 \\ -inf..0 => 0.5..2.5
0.5..2.5 \\ -inf..inf => never
0.5..2.5 \\ -inf!..inf => never
0.5..2.5 \\ -inf..!inf => never
0.5..2.5 \\ -inf!..!inf => never
0.5..2.5 \\ int(0..1) => 0.5..!1 | 1!..2.5
0.5..2.5 \\ int(0..2) => 0.5..!1 | nonInt(1..2) | 2!..2.5
0.5..2.5 \\ int(1..2) => 0.5..!1 | nonInt(1..2) | 2!..2.5
0.5..2.5 \\ int(5..20) => 0.5..2.5
0.5..2.5 \\ int(-20..-5) => 0.5..2.5
0.5..2.5 \\ int(-10..10) => 0.5..!1 | nonInt(1..2) | 2!..2.5
0.5..2.5 \\ int(0..inf) => 0.5..!1 | nonInt(1..2) | 2!..2.5
0.5..2.5 \\ int(1..inf) => 0.5..!1 | nonInt(1..2) | 2!..2.5
0.5..2.5 \\ int(-inf..0) => 0.5..2.5
0.5..2.5 \\ int(-inf..1) => 0.5..!1 | 1!..2.5
0.5..2.5 \\ int(-inf..inf) => 0.5..!1 | nonInt(1..2) | 2!..2.5
0.5..2.5 \\ nonInt(0..1) => 1..2.5
0.5..2.5 \\ nonInt(0..2) => 1 | 2..2.5
0.5..2.5 \\ nonInt(-1..2) => 1 | 2..2.5
0.5..2.5 \\ nonInt(0..inf) => int(1..2)
0.5..2.5 \\ nonInt(-1..inf) => int(1..2)
0.5..2.5 \\ nonInt(-inf..0) => 0.5..2.5
0.5..2.5 \\ nonInt(-inf..1) => 1..2.5
0.5..2.5 \\ nonInt(-inf..inf) => int(1..2)
0.5..2.5 \\ 1 | int(3..4) => 0.5..!1 | 1!..2.5
0.5!..2.5 \\ number => never
0.5!..2.5 \\ -3.14 => 0.5!..2.5
0.5!..2.5 \\ -2 => 0.5!..2.5
0.5!..2.5 \\ -1 => 0.5!..2.5
0.5!..2.5 \\ -0.5 => 0.5!..2.5
0.5!..2.5 \\ 0 => 0.5!..2.5
0.5!..2.5 \\ 0.5 => 0.5!..2.5
0.5!..2.5 \\ 1 => 0.5!..!1 | 1!..2.5
0.5!..2.5 \\ 2 => 0.5!..!2 | 2!..2.5
0.5!..2.5 \\ 2.78 => 0.5!..2.5
0.5!..2.5 \\ 3 => 0.5!..2.5
0.5!..2.5 \\ 3.14 => 0.5!..2.5
0.5!..2.5 \\ 10 => 0.5!..2.5
0.5!..2.5 \\ 100 => 0.5!..2.5
0.5!..2.5 \\ -inf => 0.5!..2.5
0.5!..2.5 \\ inf => 0.5!..2.5
0.5!..2.5 \\ nan => 0.5!..2.5
0.5!..2.5 \\ 0..1 => 1!..2.5
0.5!..2.5 \\ 0!..1 => 1!..2.5
0.5!..2.5 \\ 0..!1 => 1..2.5
0.5!..2.5 \\ 0..2 => 2!..2.5
0.5!..2.5 \\ 0!..!2 => 2..2.5
0.5!..2.5 \\ 0.5..1.5 => 1.5!..2.5
0.5!..2.5 \\ 0.5..2.5 => never
0.5!..2.5 \\ 0.5!..2.5 => never
0.5!..2.5 \\ 0.5..!2.5 => 2.5
0.5!..2.5 \\ -2.56..3.35 => never
0.5!..2.5 \\ 0.5..0.75 => 0.75!..2.5
0.5!..2.5 \\ 1..2 => 0.5!..!1 | 2!..2.5
0.5!..2.5 \\ 0..inf => never
0.5!..2.5 \\ 0!..inf => never
0.5!..2.5 \\ 0..!inf => never
0.5!..2.5 \\ 0!..!inf => never
0.5!..2.5 \\ 1..inf => 0.5!..!1
0.5!..2.5 \\ 1!..inf => 0.5!..1
0.5!..2.5 \\ 1..!inf => 0.5!..!1
0.5!..2.5 \\ 2..inf => 0.5!..!2
0.5!..2.5 \\ 2!..inf => 0.5!..2
0.5!..2.5 \\ 2.5..inf => 0.5!..!2.5
0.5!..2.5 \\ -inf..0 => 0.5!..2.5
0.5!..2.5 \\ -inf..inf => never
0.5!..2.5 \\ -inf!..inf => never
0.5!..2.5 \\ -inf..!inf => never
0.5!..2.5 \\ -inf!..!inf => never
0.5!..2.5 \\ int(0..1) => 0.5!..!1 | 1!..2.5
0.5!..2.5 \\ int(0..2) => 0.5!..!1 | nonInt(1..2) | 2!..2.5
0.5!..2.5 \\ int(1..2) => 0.5!..!1 | nonInt(1..2) | 2!..2.5
0.5!..2.5 \\ int(5..20) => 0.5!..2.5
0.5!..2.5 \\ int(-20..-5) => 0.5!..2.5
0.5!..2.5 \\ int(-10..10) => 0.5!..!1 | nonInt(1..2) | 2!..2.5
0.5!..2.5 \\ int(0..inf) => 0.5!..!1 | nonInt(1..2) | 2!..2.5
0.5!..2.5 \\ int(1..inf) => 0.5!..!1 | nonInt(1..2) | 2!..2.5
0.5!..2.5 \\ int(-inf..0) => 0.5!..2.5
0.5!..2.5 \\ int(-inf..1) => 0.5!..!1 | 1!..2.5
0.5!..2.5 \\ int(-inf..inf) => 0.5!..!1 | nonInt(1..2) | 2!..2.5
0.5!..2.5 \\ nonInt(0..1) => 1..2.5
0.5!..2.5 \\ nonInt(0..2) => 1 | 2..2.5
0.5!..2.5 \\ nonInt(-1..2) => 1 | 2..2.5
0.5!..2.5 \\ nonInt(0..inf) => int(1..2)
0.5!..2.5 \\ nonInt(-1..inf) => int(1..2)
0.5!..2.5 \\ nonInt(-inf..0) => 0.5!..2.5
0.5!..2.5 \\ nonInt(-inf..1) => 1..2.5
0.5!..2.5 \\ nonInt(-inf..inf) => int(1..2)
0.5!..2.5 \\ 1 | int(3..4) => 0.5!..!1 | 1!..2.5
0.5..!2.5 \\ number => never
0.5..!2.5 \\ -3.14 => 0.5..!2.5
0.5..!2.5 \\ -2 => 0.5..!2.5
0.5..!2.5 \\ -1 => 0.5..!2.5
0.5..!2.5 \\ -0.5 => 0.5..!2.5
0.5..!2.5 \\ 0 => 0.5..!2.5
0.5..!2.5 \\ 0.5 => 0.5!..!2.5
0.5..!2.5 \\ 1 => 0.5..!1 | 1!..!2.5
0.5..!2.5 \\ 2 => 0.5..!2 | 2!..!2.5
0.5..!2.5 \\ 2.78 => 0.5..!2.5
0.5..!2.5 \\ 3 => 0.5..!2.5
0.5..!2.5 \\ 3.14 => 0.5..!2.5
0.5..!2.5 \\ 10 => 0.5..!2.5
0.5..!2.5 \\ 100 => 0.5..!2.5
0.5..!2.5 \\ -inf => 0.5..!2.5
0.5..!2.5 \\ inf => 0.5..!2.5
0.5..!2.5 \\ nan => 0.5..!2.5
0.5..!2.5 \\ 0..1 => 1!..!2.5
0.5..!2.5 \\ 0!..1 => 1!..!2.5
0.5..!2.5 \\ 0..!1 => 1..!2.5
0.5..!2.5 \\ 0..2 => 2!..!2.5
0.5..!2.5 \\ 0!..!2 => 2..!2.5
0.5..!2.5 \\ 0.5..1.5 => 1.5!..!2.5
0.5..!2.5 \\ 0.5..2.5 => never
0.5..!2.5 \\ 0.5!..2.5 => 0.5
0.5..!2.5 \\ 0.5..!2.5 => never
0.5..!2.5 \\ -2.56..3.35 => never
0.5..!2.5 \\ 0.5..0.75 => 0.75!..!2.5
0.5..!2.5 \\ 1..2 => 0.5..!1 | 2!..!2.5
0.5..!2.5 \\ 0..inf => never
0.5..!2.5 \\ 0!..inf => never
0.5..!2.5 \\ 0..!inf => never
0.5..!2.5 \\ 0!..!inf => never
0.5..!2.5 \\ 1..inf => 0.5..!1
0.5..!2.5 \\ 1!..inf => 0.5..1
0.5..!2.5 \\ 1..!inf => 0.5..!1
0.5..!2.5 \\ 2..inf => 0.5..!2
0.5..!2.5 \\ 2!..inf => 0.5..2
0.5..!2.5 \\ 2.5..inf => 0.5..!2.5
0.5..!2.5 \\ -inf..0 => 0.5..!2.5
0.5..!2.5 \\ -inf..inf => never
0.5..!2.5 \\ -inf!..inf => never
0.5..!2.5 \\ -inf..!inf => never
0.5..!2.5 \\ -inf!..!inf => never
0.5..!2.5 \\ int(0..1) => 0.5..!1 | 1!..!2.5
0.5..!2.5 \\ int(0..2) => 0.5..!1 | nonInt(1..2) | 2!..!2.5
0.5..!2.5 \\ int(1..2) => 0.5..!1 | nonInt(1..2) | 2!..!2.5
0.5..!2.5 \\ int(5..20) => 0.5..!2.5
0.5..!2.5 \\ int(-20..-5) => 0.5..!2.5
0.5..!2.5 \\ int(-10..10) => 0.5..!1 | nonInt(1..2) | 2!..!2.5
0.5..!2.5 \\ int(0..inf) => 0.5..!1 | nonInt(1..2) | 2!..!2.5
0.5..!2.5 \\ int(1..inf) => 0.5..!1 | nonInt(1..2) | 2!..!2.5
0.5..!2.5 \\ int(-inf..0) => 0.5..!2.5
0.5..!2.5 \\ int(-inf..1) => 0.5..!1 | 1!..!2.5
0.5..!2.5 \\ int(-inf..inf) => 0.5..!1 | nonInt(1..2) | 2!..!2.5
0.5..!2.5 \\ nonInt(0..1) => 1..!2.5
0.5..!2.5 \\ nonInt(0..2) => 1 | 2..!2.5
0.5..!2.5 \\ nonInt(-1..2) => 1 | 2..!2.5
0.5..!2.5 \\ nonInt(0..inf) => int(1..2)
0.5..!2.5 \\ nonInt(-1..inf) => int(1..2)
0.5..!2.5 \\ nonInt(-inf..0) => 0.5..!2.5
0.5..!2.5 \\ nonInt(-inf..1) => 1..!2.5
0.5..!2.5 \\ nonInt(-inf..inf) => int(1..2)
0.5..!2.5 \\ 1 | int(3..4) => 0.5..!1 | 1!..!2.5
-2.56..3.35 \\ number => never
-2.56..3.35 \\ -3.14 => -2.56..3.35
-2.56..3.35 \\ -2 => -2.56..!-2 | -2!..3.35
-2.56..3.35 \\ -1 => -2.56..!-1 | -1!..3.35
-2.56..3.35 \\ -0.5 => -2.56..!-0.5 | -0.5!..3.35
-2.56..3.35 \\ 0 => -2.56..!0 | 0!..3.35
-2.56..3.35 \\ 0.5 => -2.56..!0.5 | 0.5!..3.35
-2.56..3.35 \\ 1 => -2.56..!1 | 1!..3.35
-2.56..3.35 \\ 2 => -2.56..!2 | 2!..3.35
-2.56..3.35 \\ 2.78 => -2.56..!2.78 | 2.78!..3.35
-2.56..3.35 \\ 3 => -2.56..!3 | 3!..3.35
-2.56..3.35 \\ 3.14 => -2.56..!3.14 | 3.14!..3.35
-2.56..3.35 \\ 10 => -2.56..3.35
-2.56..3.35 \\ 100 => -2.56..3.35
-2.56..3.35 \\ -inf => -2.56..3.35
-2.56..3.35 \\ inf => -2.56..3.35
-2.56..3.35 \\ nan => -2.56..3.35
-2.56..3.35 \\ 0..1 => -2.56..!0 | 1!..3.35
-2.56..3.35 \\ 0!..1 => -2.56..0 | 1!..3.35
-2.56..3.35 \\ 0..!1 => -2.56..!0 | 1..3.35
-2.56..3.35 \\ 0..2 => -2.56..!0 | 2!..3.35
-2.56..3.35 \\ 0!..!2 => -2.56..0 | 2..3.35
-2.56..3.35 \\ 0.5..1.5 => -2.56..!0.5 | 1.5!..3.35
-2.56..3.35 \\ 0.5..2.5 => -2.56..!0.5 | 2.5!..3.35
-2.56..3.35 \\ 0.5!..2.5 => -2.56..0.5 | 2.5!..3.35
-2.56..3.35 \\ 0.5..!2.5 => -2.56..!0.5 | 2.5..3.35
-2.56..3.35 \\ -2.56..3.35 => never
-2.56..3.35 \\ 0.5..0.75 => -2.56..!0.5 | 0.75!..3.35
-2.56..3.35 \\ 1..2 => -2.56..!1 | 2!..3.35
-2.56..3.35 \\ 0..inf => -2.56..!0
-2.56..3.35 \\ 0!..inf => -2.56..0
-2.56..3.35 \\ 0..!inf => -2.56..!0
-2.56..3.35 \\ 0!..!inf => -2.56..0
-2.56..3.35 \\ 1..inf => -2.56..!1
-2.56..3.35 \\ 1!..inf => -2.56..1
-2.56..3.35 \\ 1..!inf => -2.56..!1
-2.56..3.35 \\ 2..inf => -2.56..!2
-2.56..3.35 \\ 2!..inf => -2.56..2
-2.56..3.35 \\ 2.5..inf => -2.56..!2.5
-2.56..3.35 \\ -inf..0 => 0!..3.35
-2.56..3.35 \\ -inf..inf => never
-2.56..3.35 \\ -inf!..inf => never
-2.56..3.35 \\ -inf..!inf => never
-2.56..3.35 \\ -inf!..!inf => never
-2.56..3.35 \\ int(0..1) => -2.56..!0 | nonInt(0..1) | 1!..3.35
-2.56..3.35 \\ int(0..2) => -2.56..!0 | nonInt(0..2) | 2!..3.35
-2.56..3.35 \\ int(1..2) => -2.56..!1 | nonInt(1..2) | 2!..3.35
-2.56..3.35 \\ int(5..20) => -2.56..3.35
-2.56..3.35 \\ int(-20..-5) => -2.56..3.35
-2.56..3.35 \\ int(-10..10) => -2.56..!-2 | nonInt(-2..3) | 3!..3.35
-2.56..3.35 \\ int(0..inf) => -2.56..!0 | nonInt(0..3) | 3!..3.35
-2.56..3.35 \\ int(1..inf) => -2.56..!1 | nonInt(1..3) | 3!..3.35
-2.56..3.35 \\ int(-inf..0) => -2.56..!-2 | nonInt(-2..0) | 0!..3.35
-2.56..3.35 \\ int(-inf..1) => -2.56..!-2 | nonInt(-2..1) | 1!..3.35
-2.56..3.35 \\ int(-inf..inf) => -2.56..!-2 | nonInt(-2..3) | 3!..3.35
-2.56..3.35 \\ nonInt(0..1) => -2.56..0 | 1..3.35
-2.56..3.35 \\ nonInt(0..2) => -2.56..0 | 1 | 2..3.35
-2.56..3.35 \\ nonInt(-1..2) => -2.56..-1 | int(0..1) | 2..3.35
-2.56..3.35 \\ nonInt(0..inf) => -2.56..0 | int(1..3)
-2.56..3.35 \\ nonInt(-1..inf) => -2.56..-1 | int(0..3)
-2.56..3.35 \\ nonInt(-inf..0) => int(-2..-1) | 0..3.35
-2.56..3.35 \\ nonInt(-inf..1) => int(-2..0) | 1..3.35
-2.56..3.35 \\ nonInt(-inf..inf) => int(-2..3)
-2.56..3.35 \\ 1 | int(3..4) => -2.56..!1 | 1!..!3 | 3!..3.35
0.5..0.75 \\ number => never
0.5..0.75 \\ -3.14 => 0.5..0.75
0.5..0.75 \\ -2 => 0.5..0.75
0.5..0.75 \\ -1 => 0.5..0.75
0.5..0.75 \\ -0.5 => 0.5..0.75
0.5..0.75 \\ 0 => 0.5..0.75
0.5..0.75 \\ 0.5 => 0.5!..0.75
0.5..0.75 \\ 1 => 0.5..0.75
0.5..0.75 \\ 2 => 0.5..0.75
0.5..0.75 \\ 2.78 => 0.5..0.75
0.5..0.75 \\ 3 => 0.5..0.75
0.5..0.75 \\ 3.14 => 0.5..0.75
0.5..0.75 \\ 10 => 0.5..0.75
0.5..0.75 \\ 100 => 0.5..0.75
0.5..0.75 \\ -inf => 0.5..0.75
0.5..0.75 \\ inf => 0.5..0.75
0.5..0.75 \\ nan => 0.5..0.75
0.5..0.75 \\ 0..1 => never
0.5..0.75 \\ 0!..1 => never
0.5..0.75 \\ 0..!1 => never
0.5..0.75 \\ 0..2 => never
0.5..0.75 \\ 0!..!2 => never
0.5..0.75 \\ 0.5..1.5 => never
0.5..0.75 \\ 0.5..2.5 => never
0.5..0.75 \\ 0.5!..2.5 => 0.5
0.5..0.75 \\ 0.5..!2.5 => never
0.5..0.75 \\ -2.56..3.35 => never
0.5..0.75 \\ 0.5..0.75 => never
0.5..0.75 \\ 1..2 => 0.5..0.75
0.5..0.75 \\ 0..inf => never
0.5..0.75 \\ 0!..inf => never
0.5..0.75 \\ 0..!inf => never
0.5..0.75 \\ 0!..!inf => never
0.5..0.75 \\ 1..inf => 0.5..0.75
0.5..0.75 \\ 1!..inf => 0.5..0.75
0.5..0.75 \\ 1..!inf => 0.5..0.75
0.5..0.75 \\ 2..inf => 0.5..0.75
0.5..0.75 \\ 2!..inf => 0.5..0.75
0.5..0.75 \\ 2.5..inf => 0.5..0.75
0.5..0.75 \\ -inf..0 => 0.5..0.75
0.5..0.75 \\ -inf..inf => never
0.5..0.75 \\ -inf!..inf => never
0.5..0.75 \\ -inf..!inf => never
0.5..0.75 \\ -inf!..!inf => never
0.5..0.75 \\ int(0..1) => 0.5..0.75
0.5..0.75 \\ int(0..2) => 0.5..0.75
0.5..0.75 \\ int(1..2) => 0.5..0.75
0.5..0.75 \\ int(5..20) => 0.5..0.75
0.5..0.75 \\ int(-20..-5) => 0.5..0.75
0.5..0.75 \\ int(-10..10) => 0.5..0.75
0.5..0.75 \\ int(0..inf) => 0.5..0.75
0.5..0.75 \\ int(1..inf) => 0.5..0.75
0.5..0.75 \\ int(-inf..0) => 0.5..0.75
0.5..0.75 \\ int(-inf..1) => 0.5..0.75
0.5..0.75 \\ int(-inf..inf) => 0.5..0.75
0.5..0.75 \\ nonInt(0..1) => never
0.5..0.75 \\ nonInt(0..2) => never
0.5..0.75 \\ nonInt(-1..2) => never
0.5..0.75 \\ nonInt(0..inf) => never
0.5..0.75 \\ nonInt(-1..inf) => never
0.5..0.75 \\ nonInt(-inf..0) => 0.5..0.75
0.5..0.75 \\ nonInt(-inf..1) => never
0.5..0.75 \\ nonInt(-inf..inf) => never
0.5..0.75 \\ 1 | int(3..4) => 0.5..0.75
1..2 \\ number => never
1..2 \\ -3.14 => 1..2
1..2 \\ -2 => 1..2
1..2 \\ -1 => 1..2
1..2 \\ -0.5 => 1..2
1..2 \\ 0 => 1..2
1..2 \\ 0.5 => 1..2
1..2 \\ 1 => 1!..2
1..2 \\ 2 => 1..!2
1..2 \\ 2.78 => 1..2
1..2 \\ 3 => 1..2
1..2 \\ 3.14 => 1..2
1..2 \\ 10 => 1..2
1..2 \\ 100 => 1..2
1..2 \\ -inf => 1..2
1..2 \\ inf => 1..2
1..2 \\ nan => 1..2
1..2 \\ 0..1 => 1!..2
1..2 \\ 0!..1 => 1!..2
1..2 \\ 0..!1 => 1..2
1..2 \\ 0..2 => never
1..2 \\ 0!..!2 => 2
1..2 \\ 0.5..1.5 => 1.5!..2
1..2 \\ 0.5..2.5 => never
1..2 \\ 0.5!..2.5 => never
1..2 \\ 0.5..!2.5 => never
1..2 \\ -2.56..3.35 => never
1..2 \\ 0.5..0.75 => 1..2
1..2 \\ 1..2 => never
1..2 \\ 0..inf => never
1..2 \\ 0!..inf => never
1..2 \\ 0..!inf => never
1..2 \\ 0!..!inf => never
1..2 \\ 1..inf => never
1..2 \\ 1!..inf => 1
1..2 \\ 1..!inf => never
1..2 \\ 2..inf => 1..!2
1..2 \\ 2!..inf => 1..2
1..2 \\ 2.5..inf => 1..2
1..2 \\ -inf..0 => 1..2
1..2 \\ -inf..inf => never
1..2 \\ -inf!..inf => never
1..2 \\ -inf..!inf => never
1..2 \\ -inf!..!inf => never
1..2 \\ int(0..1) => 1!..2
1..2 \\ int(0..2) => nonInt(1..2)
1..2 \\ int(1..2) => nonInt(1..2)
1..2 \\ int(5..20) => 1..2
1..2 \\ int(-20..-5) => 1..2
1..2 \\ int(-10..10) => nonInt(1..2)
1..2 \\ int(0..inf) => nonInt(1..2)
1..2 \\ int(1..inf) => nonInt(1..2)
1..2 \\ int(-inf..0) => 1..2
1..2 \\ int(-inf..1) => 1!..2
1..2 \\ int(-inf..inf) => nonInt(1..2)
1..2 \\ nonInt(0..1) => 1..2
1..2 \\ nonInt(0..2) => int(1..2)
1..2 \\ nonInt(-1..2) => int(1..2)
1..2 \\ nonInt(0..inf) => int(1..2)
1..2 \\ nonInt(-1..inf) => int(1..2)
1..2 \\ nonInt(-inf..0) => 1..2
1..2 \\ nonInt(-inf..1) => 1..2
1..2 \\ nonInt(-inf..inf) => int(1..2)
1..2 \\ 1 | int(3..4) => 1!..2
0..inf \\ number => never
0..inf \\ -3.14 => 0..inf
0..inf \\ -2 => 0..inf
0..inf \\ -1 => 0..inf
0..inf \\ -0.5 => 0..inf
0..inf \\ 0 => 0!..inf
0..inf \\ 0.5 => 0..!0.5 | 0.5!..inf
0..inf \\ 1 => 0..!1 | 1!..inf
0..inf \\ 2 => 0..!2 | 2!..inf
0..inf \\ 2.78 => 0..!2.78 | 2.78!..inf
0..inf \\ 3 => 0..!3 | 3!..inf
0..inf \\ 3.14 => 0..!3.14 | 3.14!..inf
0..inf \\ 10 => 0..!10 | 10!..inf
0..inf \\ 100 => 0..!100 | 100!..inf
0..inf \\ -inf => 0..inf
0..inf \\ inf => 0..!inf
0..inf \\ nan => 0..inf
0..inf \\ 0..1 => 1!..inf
0..inf \\ 0!..1 => 0 | 1!..inf
0..inf \\ 0..!1 => 1..inf
0..inf \\ 0..2 => 2!..inf
0..inf \\ 0!..!2 => 0 | 2..inf
0..inf \\ 0.5..1.5 => 0..!0.5 | 1.5!..inf
0..inf \\ 0.5..2.5 => 0..!0.5 | 2.5!..inf
0..inf \\ 0.5!..2.5 => 0..0.5 | 2.5!..inf
0..inf \\ 0.5..!2.5 => 0..!0.5 | 2.5..inf
0..inf \\ -2.56..3.35 => 3.35!..inf
0..inf \\ 0.5..0.75 => 0..!0.5 | 0.75!..inf
0..inf \\ 1..2 => 0..!1 | 2!..inf
0..inf \\ 0..inf => never
0..inf \\ 0!..inf => 0
0..inf \\ 0..!inf => inf
0..inf \\ 0!..!inf => 0 | inf
0..inf \\ 1..inf => 0..!1
0..inf \\ 1!..inf => 0..1
0..inf \\ 1..!inf => 0..!1 | inf
0..inf \\ 2..inf => 0..!2
0..inf \\ 2!..inf => 0..2
0..inf \\ 2.5..inf => 0..!2.5
0..inf \\ -inf..0 => 0!..inf
0..inf \\ -inf..inf => never
0..inf \\ -inf!..inf => never
0..inf \\ -inf..!inf => inf
0..inf \\ -inf!..!inf => inf
0..inf \\ int(0..1) => nonInt(0..1) | 1!..inf
0..inf \\ int(0..2) => nonInt(0..2) | 2!..inf
0..inf \\ int(1..2) => 0..!1 | nonInt(1..2) | 2!..inf
0..inf \\ int(5..20) => 0..!5 | nonInt(5..20) | 20!..inf
0..inf \\ int(-20..-5) => 0..inf
0..inf \\ int(-10..10) => nonInt(0..10) | 10!..inf
0..inf \\ int(0..inf) => nonInt(0..inf) | inf
0..inf \\ int(1..inf) => 0..!1 | nonInt(1..inf) | inf
0..inf \\ int(-inf..0) => 0!..inf
0..inf \\ int(-inf..1) => nonInt(0..1) | 1!..inf
0..inf \\ int(-inf..inf) => nonInt(0..inf) | inf
0..inf \\ nonInt(0..1) => 0 | 1..inf
0..inf \\ nonInt(0..2) => int(0..1) | 2..inf
0..inf \\ nonInt(-1..2) => int(0..1) | 2..inf
0..inf \\ nonInt(0..inf) => int(0..inf) | inf
0..inf \\ nonInt(-1..inf) => int(0..inf) | inf
0..inf \\ nonInt(-inf..0) => 0..inf
0..inf \\ nonInt(-inf..1) => 0 | 1..inf
0..inf \\ nonInt(-inf..inf) => int(0..inf) | inf
0..inf \\ 1 | int(3..4) => 0..!1 | 1!..!3 | nonInt(3..4) | 4!..inf
0!..inf \\ number => never
0!..inf \\ -3.14 => 0!..inf
0!..inf \\ -2 => 0!..inf
0!..inf \\ -1 => 0!..inf
0!..inf \\ -0.5 => 0!..inf
0!..inf \\ 0 => 0!..inf
0!..inf \\ 0.5 => 0!..!0.5 | 0.5!..inf
0!..inf \\ 1 => nonInt(0..1) | 1!..inf
0!..inf \\ 2 => 0!..!2 | 2!..inf
0!..inf \\ 2.78 => 0!..!2.78 | 2.78!..inf
0!..inf \\ 3 => 0!..!3 | 3!..inf
0!..inf \\ 3.14 => 0!..!3.14 | 3.14!..inf
0!..inf \\ 10 => 0!..!10 | 10!..inf
0!..inf \\ 100 => 0!..!100 | 100!..inf
0!..inf \\ -inf => 0!..inf
0!..inf \\ inf => 0!..!inf
0!..inf \\ nan => 0!..inf
0!..inf \\ 0..1 => 1!..inf
0!..inf \\ 0!..1 => 1!..inf
0!..inf \\ 0..!1 => 1..inf
0!..inf \\ 0..2 => 2!..inf
0!..inf \\ 0!..!2 => 2..inf
0!..inf \\ 0.5..1.5 => 0!..!0.5 | 1.5!..inf
0!..inf \\ 0.5..2.5 => 0!..!0.5 | 2.5!..inf
0!..inf \\ 0.5!..2.5 => 0!..0.5 | 2.5!..inf
0!..inf \\ 0.5..!2.5 => 0!..!0.5 | 2.5..inf
0!..inf \\ -2.56..3.35 => 3.35!..inf
0!..inf \\ 0.5..0.75 => 0!..!0.5 | 0.75!..inf
0!..inf \\ 1..2 => nonInt(0..1) | 2!..inf
0!..inf \\ 0..inf => never
0!..inf \\ 0!..inf => never
0!..inf \\ 0..!inf => inf
0!..inf \\ 0!..!inf => inf
0!..inf \\ 1..inf => nonInt(0..1)
0!..inf \\ 1!..inf => 0!..1
0!..inf \\ 1..!inf => nonInt(0..1) | inf
0!..inf \\ 2..inf => 0!..!2
0!..inf \\ 2!..inf => 0!..2
0!..inf \\ 2.5..inf => 0!..!2.5
0!..inf \\ -inf..0 => 0!..inf
0!..inf \\ -inf..inf => never
0!..inf \\ -inf!..inf => never
0!..inf \\ -inf..!inf => inf
0!..inf \\ -inf!..!inf => inf
0!..inf \\ int(0..1) => nonInt(0..1) | 1!..inf
0!..inf \\ int(0..2) => nonInt(0..2) | 2!..inf
0!..inf \\ int(1..2) => nonInt(0..2) | 2!..inf
0!..inf \\ int(5..20) => 0!..!5 | nonInt(5..20) | 20!..inf
0!..inf \\ int(-20..-5) => 0!..inf
0!..inf \\ int(-10..10) => nonInt(0..10) | 10!..inf
0!..inf \\ int(0..inf) => nonInt(0..inf) | inf
0!..inf \\ int(1..inf) => nonInt(0..inf) | inf
0!..inf \\ int(-inf..0) => 0!..inf
0!..inf \\ int(-inf..1) => nonInt(0..1) | 1!..inf
0!..inf \\ int(-inf..inf) => nonInt(0..inf) | inf
0!..inf \\ nonInt(0..1) => 1..inf
0!..inf \\ nonInt(0..2) => 1 | 2..inf
0!..inf \\ nonInt(-1..2) => 1 | 2..inf
0!..inf \\ nonInt(0..inf) => int(1..inf) | inf
0!..inf \\ nonInt(-1..inf) => int(1..inf) | inf
0!..inf \\ nonInt(-inf..0) => 0!..inf
0!..inf \\ nonInt(-inf..1) => 1..inf
0!..inf \\ nonInt(-inf..inf) => int(1..inf) | inf
0!..inf \\ 1 | int(3..4) => nonInt(0..1) | 1!..!3 | nonInt(3..4) | 4!..inf
0..!inf \\ number => never
0..!inf \\ -3.14 => 0..!inf
0..!inf \\ -2 => 0..!inf
0..!inf \\ -1 => 0..!inf
0..!inf \\ -0.5 => 0..!inf
0..!inf \\ 0 => 0!..!inf
0..!inf \\ 0.5 => 0..!0.5 | 0.5!..!inf
0..!inf \\ 1 => 0..!1 | 1!..!inf
0..!inf \\ 2 => 0..!2 | 2!..!inf
0..!inf \\ 2.78 => 0..!2.78 | 2.78!..!inf
0..!inf \\ 3 => 0..!3 | 3!..!inf
0..!inf \\ 3.14 => 0..!3.14 | 3.14!..!inf
0..!inf \\ 10 => 0..!10 | 10!..!inf
0..!inf \\ 100 => 0..!100 | 100!..!inf
0..!inf \\ -inf => 0..!inf
0..!inf \\ inf => 0..!inf
0..!inf \\ nan => 0..!inf
0..!inf \\ 0..1 => 1!..!inf
0..!inf \\ 0!..1 => 0 | 1!..!inf
0..!inf \\ 0..!1 => 1..!inf
0..!inf \\ 0..2 => 2!..!inf
0..!inf \\ 0!..!2 => 0 | 2..!inf
0..!inf \\ 0.5..1.5 => 0..!0.5 | 1.5!..!inf
0..!inf \\ 0.5..2.5 => 0..!0.5 | 2.5!..!inf
0..!inf \\ 0.5!..2.5 => 0..0.5 | 2.5!..!inf
0..!inf \\ 0.5..!2.5 => 0..!0.5 | 2.5..!inf
0..!inf \\ -2.56..3.35 => 3.35!..!inf
0..!inf \\ 0.5..0.75 => 0..!0.5 | 0.75!..!inf
0..!inf \\ 1..2 => 0..!1 | 2!..!inf
0..!inf \\ 0..inf => never
0..!inf \\ 0!..inf => 0
0..!inf \\ 0..!inf => never
0..!inf \\ 0!..!inf => 0
0..!inf \\ 1..inf => 0..!1
0..!inf \\ 1!..inf => 0..1
0..!inf \\ 1..!inf => 0..!1
0..!inf \\ 2..inf => 0..!2
0..!inf \\ 2!..inf => 0..2
0..!inf \\ 2.5..inf => 0..!2.5
0..!inf \\ -inf..0 => 0!..!inf
0..!inf \\ -inf..inf => never
0..!inf \\ -inf!..inf => never
0..!inf \\ -inf..!inf => never
0..!inf \\ -inf!..!inf => never
0..!inf \\ int(0..1) => nonInt(0..1) | 1!..!inf
0..!inf \\ int(0..2) => nonInt(0..2) | 2!..!inf
0..!inf \\ int(1..2) => 0..!1 | nonInt(1..2) | 2!..!inf
0..!inf \\ int(5..20) => 0..!5 | nonInt(5..20) | 20!..!inf
0..!inf \\ int(-20..-5) => 0..!inf
0..!inf \\ int(-10..10) => nonInt(0..10) | 10!..!inf
0..!inf \\ int(0..inf) => nonInt(0..inf)
0..!inf \\ int(1..inf) => 0..!1 | nonInt(1..inf)
0..!inf \\ int(-inf..0) => 0!..!inf
0..!inf \\ int(-inf..1) => nonInt(0..1) | 1!..!inf
0..!inf \\ int(-inf..inf) => nonInt(0..inf)
0..!inf \\ nonInt(0..1) => 0 | 1..!inf
0..!inf \\ nonInt(0..2) => int(0..1) | 2..!inf
0..!inf \\ nonInt(-1..2) => int(0..1) | 2..!inf
0..!inf \\ nonInt(0..inf) => int(0..inf)
0..!inf \\ nonInt(-1..inf) => int(0..inf)
0..!inf \\ nonInt(-inf..0) => 0..!inf
0..!inf \\ nonInt(-inf..1) => 0 | 1..!inf
0..!inf \\ nonInt(-inf..inf) => int(0..inf)
0..!inf \\ 1 | int(3..4) => 0..!1 | 1!..!3 | nonInt(3..4) | 4!..!inf
0!..!inf \\ number => never
0!..!inf \\ -3.14 => 0!..!inf
0!..!inf \\ -2 => 0!..!inf
0!..!inf \\ -1 => 0!..!inf
0!..!inf \\ -0.5 => 0!..!inf
0!..!inf \\ 0 => 0!..!inf
0!..!inf \\ 0.5 => 0!..!0.5 | 0.5!..!inf
0!..!inf \\ 1 => nonInt(0..1) | 1!..!inf
0!..!inf \\ 2 => 0!..!2 | 2!..!inf
0!..!inf \\ 2.78 => 0!..!2.78 | 2.78!..!inf
0!..!inf \\ 3 => 0!..!3 | 3!..!inf
0!..!inf \\ 3.14 => 0!..!3.14 | 3.14!..!inf
0!..!inf \\ 10 => 0!..!10 | 10!..!inf
0!..!inf \\ 100 => 0!..!100 | 100!..!inf
0!..!inf \\ -inf => 0!..!inf
0!..!inf \\ inf => 0!..!inf
0!..!inf \\ nan => 0!..!inf
0!..!inf \\ 0..1 => 1!..!inf
0!..!inf \\ 0!..1 => 1!..!inf
0!..!inf \\ 0..!1 => 1..!inf
0!..!inf \\ 0..2 => 2!..!inf
0!..!inf \\ 0!..!2 => 2..!inf
0!..!inf \\ 0.5..1.5 => 0!..!0.5 | 1.5!..!inf
0!..!inf \\ 0.5..2.5 => 0!..!0.5 | 2.5!..!inf
0!..!inf \\ 0.5!..2.5 => 0!..0.5 | 2.5!..!inf
0!..!inf \\ 0.5..!2.5 => 0!..!0.5 | 2.5..!inf
0!..!inf \\ -2.56..3.35 => 3.35!..!inf
0!..!inf \\ 0.5..0.75 => 0!..!0.5 | 0.75!..!inf
0!..!inf \\ 1..2 => nonInt(0..1) | 2!..!inf
0!..!inf \\ 0..inf => never
0!..!inf \\ 0!..inf => never
0!..!inf \\ 0..!inf => never
0!..!inf \\ 0!..!inf => never
0!..!inf \\ 1..inf => nonInt(0..1)
0!..!inf \\ 1!..inf => 0!..1
0!..!inf \\ 1..!inf => nonInt(0..1)
0!..!inf \\ 2..inf => 0!..!2
0!..!inf \\ 2!..inf => 0!..2
0!..!inf \\ 2.5..inf => 0!..!2.5
0!..!inf \\ -inf..0 => 0!..!inf
0!..!inf \\ -inf..inf => never
0!..!inf \\ -inf!..inf => never
0!..!inf \\ -inf..!inf => never
0!..!inf \\ -inf!..!inf => never
0!..!inf \\ int(0..1) => nonInt(0..1) | 1!..!inf
0!..!inf \\ int(0..2) => nonInt(0..2) | 2!..!inf
0!..!inf \\ int(1..2) => nonInt(0..2) | 2!..!inf
0!..!inf \\ int(5..20) => 0!..!5 | nonInt(5..20) | 20!..!inf
0!..!inf \\ int(-20..-5) => 0!..!inf
0!..!inf \\ int(-10..10) => nonInt(0..10) | 10!..!inf
0!..!inf \\ int(0..inf) => nonInt(0..inf)
0!..!inf \\ int(1..inf) => nonInt(0..inf)
0!..!inf \\ int(-inf..0) => 0!..!inf
0!..!inf \\ int(-inf..1) => nonInt(0..1) | 1!..!inf
0!..!inf \\ int(-inf..inf) => nonInt(0..inf)
0!..!inf \\ nonInt(0..1) => 1..!inf
0!..!inf \\ nonInt(0..2) => 1 | 2..!inf
0!..!inf \\ nonInt(-1..2) => 1 | 2..!inf
0!..!inf \\ nonInt(0..inf) => int(1..inf)
0!..!inf \\ nonInt(-1..inf) => int(1..inf)
0!..!inf \\ nonInt(-inf..0) => 0!..!inf
0!..!inf \\ nonInt(-inf..1) => 1..!inf
0!..!inf \\ nonInt(-inf..inf) => int(1..inf)
0!..!inf \\ 1 | int(3..4) => nonInt(0..1) | 1!..!3 | nonInt(3..4) | 4!..!inf
1..inf \\ number => never
1..inf \\ -3.14 => 1..inf
1..inf \\ -2 => 1..inf
1..inf \\ -1 => 1..inf
1..inf \\ -0.5 => 1..inf
1..inf \\ 0 => 1..inf
1..inf \\ 0.5 => 1..inf
1..inf \\ 1 => 1!..inf
1..inf \\ 2 => 1..!2 | 2!..inf
1..inf \\ 2.78 => 1..!2.78 | 2.78!..inf
1..inf \\ 3 => 1..!3 | 3!..inf
1..inf \\ 3.14 => 1..!3.14 | 3.14!..inf
1..inf \\ 10 => 1..!10 | 10!..inf
1..inf \\ 100 => 1..!100 | 100!..inf
1..inf \\ -inf => 1..inf
1..inf \\ inf => 1..!inf
1..inf \\ nan => 1..inf
1..inf \\ 0..1 => 1!..inf
1..inf \\ 0!..1 => 1!..inf
1..inf \\ 0..!1 => 1..inf
1..inf \\ 0..2 => 2!..inf
1..inf \\ 0!..!2 => 2..inf
1..inf \\ 0.5..1.5 => 1.5!..inf
1..inf \\ 0.5..2.5 => 2.5!..inf
1..inf \\ 0.5!..2.5 => 2.5!..inf
1..inf \\ 0.5..!2.5 => 2.5..inf
1..inf \\ -2.56..3.35 => 3.35!..inf
1..inf \\ 0.5..0.75 => 1..inf
1..inf \\ 1..2 => 2!..inf
1..inf \\ 0..inf => never
1..inf \\ 0!..inf => never
1..inf \\ 0..!inf => inf
1..inf \\ 0!..!inf => inf
1..inf \\ 1..inf => never
1..inf \\ 1!..inf => 1
1..inf \\ 1..!inf => inf
1..inf \\ 2..inf => 1..!2
1..inf \\ 2!..inf => 1..2
1..inf \\ 2.5..inf => 1..!2.5
1..inf \\ -inf..0 => 1..inf
1..inf \\ -inf..inf => never
1..inf \\ -inf!..inf => never
1..inf \\ -inf..!inf => inf
1..inf \\ -inf!..!inf => inf
1..inf \\ int(0..1) => 1!..inf
1..inf \\ int(0..2) => nonInt(1..2) | 2!..inf
1..inf \\ int(1..2) => nonInt(1..2) | 2!..inf
1..inf \\ int(5..20) => 1..!5 | nonInt(5..20) | 20!..inf
1..inf \\ int(-20..-5) => 1..inf
1..inf \\ int(-10..10) => nonInt(1..10) | 10!..inf
1..inf \\ int(0..inf) => nonInt(1..inf) | inf
1..inf \\ int(1..inf) => nonInt(1..inf) | inf
1..inf \\ int(-inf..0) => 1..inf
1..inf \\ int(-inf..1) => 1!..inf
1..inf \\ int(-inf..inf) => nonInt(1..inf) | inf
1..inf \\ nonInt(0..1) => 1..inf
1..inf \\ nonInt(0..2) => 1 | 2..inf
1..inf \\ nonInt(-1..2) => 1 | 2..inf
1..inf \\ nonInt(0..inf) => int(1..inf) | inf
1..inf \\ nonInt(-1..inf) => int(1..inf) | inf
1..inf \\ nonInt(-inf..0) => 1..inf
1..inf \\ nonInt(-inf..1) => 1..inf
1..inf \\ nonInt(-inf..inf) => int(1..inf) | inf
1..inf \\ 1 | int(3..4) => 1!..!3 | nonInt(3..4) | 4!..inf
1!..inf \\ number => never
1!..inf \\ -3.14 => 1!..inf
1!..inf \\ -2 => 1!..inf
1!..inf \\ -1 => 1!..inf
1!..inf \\ -0.5 => 1!..inf
1!..inf \\ 0 => 1!..inf
1!..inf \\ 0.5 => 1!..inf
1!..inf \\ 1 => 1!..inf
1!..inf \\ 2 => nonInt(1..2) | 2!..inf
1!..inf \\ 2.78 => 1!..!2.78 | 2.78!..inf
1!..inf \\ 3 => 1!..!3 | 3!..inf
1!..inf \\ 3.14 => 1!..!3.14 | 3.14!..inf
1!..inf \\ 10 => 1!..!10 | 10!..inf
1!..inf \\ 100 => 1!..!100 | 100!..inf
1!..inf \\ -inf => 1!..inf
1!..inf \\ inf => 1!..!inf
1!..inf \\ nan => 1!..inf
1!..inf \\ 0..1 => 1!..inf
1!..inf \\ 0!..1 => 1!..inf
1!..inf \\ 0..!1 => 1!..inf
1!..inf \\ 0..2 => 2!..inf
1!..inf \\ 0!..!2 => 2..inf
1!..inf \\ 0.5..1.5 => 1.5!..inf
1!..inf \\ 0.5..2.5 => 2.5!..inf
1!..inf \\ 0.5!..2.5 => 2.5!..inf
1!..inf \\ 0.5..!2.5 => 2.5..inf
1!..inf \\ -2.56..3.35 => 3.35!..inf
1!..inf \\ 0.5..0.75 => 1!..inf
1!..inf \\ 1..2 => 2!..inf
1!..inf \\ 0..inf => never
1!..inf \\ 0!..inf => never
1!..inf \\ 0..!inf => inf
1!..inf \\ 0!..!inf => inf
1!..inf \\ 1..inf => never
1!..inf \\ 1!..inf => never
1!..inf \\ 1..!inf => inf
1!..inf \\ 2..inf => nonInt(1..2)
1!..inf \\ 2!..inf => 1!..2
1!..inf \\ 2.5..inf => 1!..!2.5
1!..inf \\ -inf..0 => 1!..inf
1!..inf \\ -inf..inf => never
1!..inf \\ -inf!..inf => never
1!..inf \\ -inf..!inf => inf
1!..inf \\ -inf!..!inf => inf
1!..inf \\ int(0..1) => 1!..inf
1!..inf \\ int(0..2) => nonInt(1..2) | 2!..inf
1!..inf \\ int(1..2) => nonInt(1..2) | 2!..inf
1!..inf \\ int(5..20) => 1!..!5 | nonInt(5..20) | 20!..inf
1!..inf \\ int(-20..-5) => 1!..inf
1!..inf \\ int(-10..10) => nonInt(1..10) | 10!..inf
1!..inf \\ int(0..inf) => nonInt(1..inf) | inf
1!..inf \\ int(1..inf) => nonInt(1..inf) | inf
1!..inf \\ int(-inf..0) => 1!..inf
1!..inf \\ int(-inf..1) => 1!..inf
1!..inf \\ int(-inf..inf) => nonInt(1..inf) | inf
1!..inf \\ nonInt(0..1) => 1!..inf
1!..inf \\ nonInt(0..2) => 2..inf
1!..inf \\ nonInt(-1..2) => 2..inf
1!..inf \\ nonInt(0..inf) => int(2..inf) | inf
1!..inf \\ nonInt(-1..inf) => int(2..inf) | inf
1!..inf \\ nonInt(-inf..0) => 1!..inf
1!..inf \\ nonInt(-inf..1) => 1!..inf
1!..inf \\ nonInt(-inf..inf) => int(2..inf) | inf
1!..inf \\ 1 | int(3..4) => 1!..!3 | nonInt(3..4) | 4!..inf
1..!inf \\ number => never
1..!inf \\ -3.14 => 1..!inf
1..!inf \\ -2 => 1..!inf
1..!inf \\ -1 => 1..!inf
1..!inf \\ -0.5 => 1..!inf
1..!inf \\ 0 => 1..!inf
1..!inf \\ 0.5 => 1..!inf
1..!inf \\ 1 => 1!..!inf
1..!inf \\ 2 => 1..!2 | 2!..!inf
1..!inf \\ 2.78 => 1..!2.78 | 2.78!..!inf
1..!inf \\ 3 => 1..!3 | 3!..!inf
1..!inf \\ 3.14 => 1..!3.14 | 3.14!..!inf
1..!inf \\ 10 => 1..!10 | 10!..!inf
1..!inf \\ 100 => 1..!100 | 100!..!inf
1..!inf \\ -inf => 1..!inf
1..!inf \\ inf => 1..!inf
1..!inf \\ nan => 1..!inf
1..!inf \\ 0..1 => 1!..!inf
1..!inf \\ 0!..1 => 1!..!inf
1..!inf \\ 0..!1 => 1..!inf
1..!inf \\ 0..2 => 2!..!inf
1..!inf \\ 0!..!2 => 2..!inf
1..!inf \\ 0.5..1.5 => 1.5!..!inf
1..!inf \\ 0.5..2.5 => 2.5!..!inf
1..!inf \\ 0.5!..2.5 => 2.5!..!inf
1..!inf \\ 0.5..!2.5 => 2.5..!inf
1..!inf \\ -2.56..3.35 => 3.35!..!inf
1..!inf \\ 0.5..0.75 => 1..!inf
1..!inf \\ 1..2 => 2!..!inf
1..!inf \\ 0..inf => never
1..!inf \\ 0!..inf => never
1..!inf \\ 0..!inf => never
1..!inf \\ 0!..!inf => never
1..!inf \\ 1..inf => never
1..!inf \\ 1!..inf => 1
1..!inf \\ 1..!inf => never
1..!inf \\ 2..inf => 1..!2
1..!inf \\ 2!..inf => 1..2
1..!inf \\ 2.5..inf => 1..!2.5
1..!inf \\ -inf..0 => 1..!inf
1..!inf \\ -inf..inf => never
1..!inf \\ -inf!..inf => never
1..!inf \\ -inf..!inf => never
1..!inf \\ -inf!..!inf => never
1..!inf \\ int(0..1) => 1!..!inf
1..!inf \\ int(0..2) => nonInt(1..2) | 2!..!inf
1..!inf \\ int(1..2) => nonInt(1..2) | 2!..!inf
1..!inf \\ int(5..20) => 1..!5 | nonInt(5..20) | 20!..!inf
1..!inf \\ int(-20..-5) => 1..!inf
1..!inf \\ int(-10..10) => nonInt(1..10) | 10!..!inf
1..!inf \\ int(0..inf) => nonInt(1..inf)
1..!inf \\ int(1..inf) => nonInt(1..inf)
1..!inf \\ int(-inf..0) => 1..!inf
1..!inf \\ int(-inf..1) => 1!..!inf
1..!inf \\ int(-inf..inf) => nonInt(1..inf)
1..!inf \\ nonInt(0..1) => 1..!inf
1..!inf \\ nonInt(0..2) => 1 | 2..!inf
1..!inf \\ nonInt(-1..2) => 1 | 2..!inf
1..!inf \\ nonInt(0..inf) => int(1..inf)
1..!inf \\ nonInt(-1..inf) => int(1..inf)
1..!inf \\ nonInt(-inf..0) => 1..!inf
1..!inf \\ nonInt(-inf..1) => 1..!inf
1..!inf \\ nonInt(-inf..inf) => int(1..inf)
1..!inf \\ 1 | int(3..4) => 1!..!3 | nonInt(3..4) | 4!..!inf
2..inf \\ number => never
2..inf \\ -3.14 => 2..inf
2..inf \\ -2 => 2..inf
2..inf \\ -1 => 2..inf
2..inf \\ -0.5 => 2..inf
2..inf \\ 0 => 2..inf
2..inf \\ 0.5 => 2..inf
2..inf \\ 1 => 2..inf
2..inf \\ 2 => 2!..inf
2..inf \\ 2.78 => 2..!2.78 | 2.78!..inf
2..inf \\ 3 => 2..!3 | 3!..inf
2..inf \\ 3.14 => 2..!3.14 | 3.14!..inf
2..inf \\ 10 => 2..!10 | 10!..inf
2..inf \\ 100 => 2..!100 | 100!..inf
2..inf \\ -inf => 2..inf
2..inf \\ inf => 2..!inf
2..inf \\ nan => 2..inf
2..inf \\ 0..1 => 2..inf
2..inf \\ 0!..1 => 2..inf
2..inf \\ 0..!1 => 2..inf
2..inf \\ 0..2 => 2!..inf
2..inf \\ 0!..!2 => 2..inf
2..inf \\ 0.5..1.5 => 2..inf
2..inf \\ 0.5..2.5 => 2.5!..inf
2..inf \\ 0.5!..2.5 => 2.5!..inf
2..inf \\ 0.5..!2.5 => 2.5..inf
2..inf \\ -2.56..3.35 => 3.35!..inf
2..inf \\ 0.5..0.75 => 2..inf
2..inf \\ 1..2 => 2!..inf
2..inf \\ 0..inf => never
2..inf \\ 0!..inf => never
2..inf \\ 0..!inf => inf
2..inf \\ 0!..!inf => inf
2..inf \\ 1..inf => never
2..inf \\ 1!..inf => never
2..inf \\ 1..!inf => inf
2..inf \\ 2..inf => never
2..inf \\ 2!..inf => 2
2..inf \\ 2.5..inf => 2..!2.5
2..inf \\ -inf..0 => 2..inf
2..inf \\ -inf..inf => never
2..inf \\ -inf!..inf => never
2..inf \\ -inf..!inf => inf
2..inf \\ -inf!..!inf => inf
2..inf \\ int(0..1) => 2..inf
2..inf \\ int(0..2) => 2!..inf
2..inf \\ int(1..2) => 2!..inf
2..inf \\ int(5..20) => 2..!5 | nonInt(5..20) | 20!..inf
2..inf \\ int(-20..-5) => 2..inf
2..inf \\ int(-10..10) => nonInt(2..10) | 10!..inf
2..inf \\ int(0..inf) => nonInt(2..inf) | inf
2..inf \\ int(1..inf) => nonInt(2..inf) | inf
2..inf \\ int(-inf..0) => 2..inf
2..inf \\ int(-inf..1) => 2..inf
2..inf \\ int(-inf..inf) => nonInt(2..inf) | inf
2..inf \\ nonInt(0..1) => 2..inf
2..inf \\ nonInt(0..2) => 2..inf
2..inf \\ nonInt(-1..2) => 2..inf
2..inf \\ nonInt(0..inf) => int(2..inf) | inf
2..inf \\ nonInt(-1..inf) => int(2..inf) | inf
2..inf \\ nonInt(-inf..0) => 2..inf
2..inf \\ nonInt(-inf..1) => 2..inf
2..inf \\ nonInt(-inf..inf) => int(2..inf) | inf
2..inf \\ 1 | int(3..4) => 2..!3 | nonInt(3..4) | 4!..inf
2!..inf \\ number => never
2!..inf \\ -3.14 => 2!..inf
2!..inf \\ -2 => 2!..inf
2!..inf \\ -1 => 2!..inf
2!..inf \\ -0.5 => 2!..inf
2!..inf \\ 0 => 2!..inf
2!..inf \\ 0.5 => 2!..inf
2!..inf \\ 1 => 2!..inf
2!..inf \\ 2 => 2!..inf
2!..inf \\ 2.78 => 2!..!2.78 | 2.78!..inf
2!..inf \\ 3 => nonInt(2..3) | 3!..inf
2!..inf \\ 3.14 => 2!..!3.14 | 3.14!..inf
2!..inf \\ 10 => 2!..!10 | 10!..inf
2!..inf \\ 100 => 2!..!100 | 100!..inf
2!..inf \\ -inf => 2!..inf
2!..inf \\ inf => 2!..!inf
2!..inf \\ nan => 2!..inf
2!..inf \\ 0..1 => 2!..inf
2!..inf \\ 0!..1 => 2!..inf
2!..inf \\ 0..!1 => 2!..inf
2!..inf \\ 0..2 => 2!..inf
2!..inf \\ 0!..!2 => 2!..inf
2!..inf \\ 0.5..1.5 => 2!..inf
2!..inf \\ 0.5..2.5 => 2.5!..inf
2!..inf \\ 0.5!..2.5 => 2.5!..inf
2!..inf \\ 0.5..!2.5 => 2.5..inf
2!..inf \\ -2.56..3.35 => 3.35!..inf
2!..inf \\ 0.5..0.75 => 2!..inf
2!..inf \\ 1..2 => 2!..inf
2!..inf \\ 0..inf => never
2!..inf \\ 0!..inf => never
2!..inf \\ 0..!inf => inf
2!..inf \\ 0!..!inf => inf
2!..inf \\ 1..inf => never
2!..inf \\ 1!..inf => never
2!..inf \\ 1..!inf => inf
2!..inf \\ 2..inf => never
2!..inf \\ 2!..inf => never
2!..inf \\ 2.5..inf => 2!..!2.5
2!..inf \\ -inf..0 => 2!..inf
2!..inf \\ -inf..inf => never
2!..inf \\ -inf!..inf => never
2!..inf \\ -inf..!inf => inf
2!..inf \\ -inf!..!inf => inf
2!..inf \\ int(0..1) => 2!..inf
2!..inf \\ int(0..2) => 2!..inf
2!..inf \\ int(1..2) => 2!..inf
2!..inf \\ int(5..20) => 2!..!5 | nonInt(5..20) | 20!..inf
2!..inf \\ int(-20..-5) => 2!..inf
2!..inf \\ int(-10..10) => nonInt(2..10) | 10!..inf
2!..inf \\ int(0..inf) => nonInt(2..inf) | inf
2!..inf \\ int(1..inf) => nonInt(2..inf) | inf
2!..inf \\ int(-inf..0) => 2!..inf
2!..inf \\ int(-inf..1) => 2!..inf
2!..inf \\ int(-inf..inf) => nonInt(2..inf) | inf
2!..inf \\ nonInt(0..1) => 2!..inf
2!..inf \\ nonInt(0..2) => 2!..inf
2!..inf \\ nonInt(-1..2) => 2!..inf
2!..inf \\ nonInt(0..inf) => int(3..inf) | inf
2!..inf \\ nonInt(-1..inf) => int(3..inf) | inf
2!..inf \\ nonInt(-inf..0) => 2!..inf
2!..inf \\ nonInt(-inf..1) => 2!..inf
2!..inf \\ nonInt(-inf..inf) => int(3..inf) | inf
2!..inf \\ 1 | int(3..4) => nonInt(2..4) | 4!..inf
2.5..inf \\ number => never
2.5..inf \\ -3.14 => 2.5..inf
2.5..inf \\ -2 => 2.5..inf
2.5..inf \\ -1 => 2.5..inf
2.5..inf \\ -0.5 => 2.5..inf
2.5..inf \\ 0 => 2.5..inf
2.5..inf \\ 0.5 => 2.5..inf
2.5..inf \\ 1 => 2.5..inf
2.5..inf \\ 2 => 2.5..inf
2.5..inf \\ 2.78 => 2.5..!2.78 | 2.78!..inf
2.5..inf \\ 3 => 2.5..!3 | 3!..inf
2.5..inf \\ 3.14 => 2.5..!3.14 | 3.14!..inf
2.5..inf \\ 10 => 2.5..!10 | 10!..inf
2.5..inf \\ 100 => 2.5..!100 | 100!..inf
2.5..inf \\ -inf => 2.5..inf
2.5..inf \\ inf => 2.5..!inf
2.5..inf \\ nan => 2.5..inf
2.5..inf \\ 0..1 => 2.5..inf
2.5..inf \\ 0!..1 => 2.5..inf
2.5..inf \\ 0..!1 => 2.5..inf
2.5..inf \\ 0..2 => 2.5..inf
2.5..inf \\ 0!..!2 => 2.5..inf
2.5..inf \\ 0.5..1.5 => 2.5..inf
2.5..inf \\ 0.5..2.5 => 2.5!..inf
2.5..inf \\ 0.5!..2.5 => 2.5!..inf
2.5..inf \\ 0.5..!2.5 => 2.5..inf
2.5..inf \\ -2.56..3.35 => 3.35!..inf
2.5..inf \\ 0.5..0.75 => 2.5..inf
2.5..inf \\ 1..2 => 2.5..inf
2.5..inf \\ 0..inf => never
2.5..inf \\ 0!..inf => never
2.5..inf \\ 0..!inf => inf
2.5..inf \\ 0!..!inf => inf
2.5..inf \\ 1..inf => never
2.5..inf \\ 1!..inf => never
2.5..inf \\ 1..!inf => inf
2.5..inf \\ 2..inf => never
2.5..inf \\ 2!..inf => never
2.5..inf \\ 2.5..inf => never
2.5..inf \\ -inf..0 => 2.5..inf
2.5..inf \\ -inf..inf => never
2.5..inf \\ -inf!..inf => never
2.5..inf \\ -inf..!inf => inf
2.5..inf \\ -inf!..!inf => inf
2.5..inf \\ int(0..1) => 2.5..inf
2.5..inf \\ int(0..2) => 2.5..inf
2.5..inf \\ int(1..2) => 2.5..inf
2.5..inf \\ int(5..20) => 2.5..!5 | nonInt(5..20) | 20!..inf
2.5..inf \\ int(-20..-5) => 2.5..inf
2.5..inf \\ int(-10..10) => 2.5..!3 | nonInt(3..10) | 10!..inf
2.5..inf \\ int(0..inf) => 2.5..!3 | nonInt(3..inf) | inf
2.5..inf \\ int(1..inf) => 2.5..!3 | nonInt(3..inf) | inf
2.5..inf \\ int(-inf..0) => 2.5..inf
2.5..inf \\ int(-inf..1) => 2.5..inf
2.5..inf \\ int(-inf..inf) => 2.5..!3 | nonInt(3..inf) | inf
2.5..inf \\ nonInt(0..1) => 2.5..inf
2.5..inf \\ nonInt(0..2) => 2.5..inf
2.5..inf \\ nonInt(-1..2) => 2.5..inf
2.5..inf \\ nonInt(0..inf) => int(3..inf) | inf
2.5..inf \\ nonInt(-1..inf) => int(3..inf) | inf
2.5..inf \\ nonInt(-inf..0) => 2.5..inf
2.5..inf \\ nonInt(-inf..1) => 2.5..inf
2.5..inf \\ nonInt(-inf..inf) => int(3..inf) | inf
2.5..inf \\ 1 | int(3..4) => 2.5..!3 | nonInt(3..4) | 4!..inf
-inf..0 \\ number => never
-inf..0 \\ -3.14 => -inf..!-3.14 | -3.14!..0
-inf..0 \\ -2 => -inf..!-2 | -2!..0
-inf..0 \\ -1 => -inf..!-1 | -1!..0
-inf..0 \\ -0.5 => -inf..!-0.5 | -0.5!..0
-inf..0 \\ 0 => -inf..!0
-inf..0 \\ 0.5 => -inf..0
-inf..0 \\ 1 => -inf..0
-inf..0 \\ 2 => -inf..0
-inf..0 \\ 2.78 => -inf..0
-inf..0 \\ 3 => -inf..0
-inf..0 \\ 3.14 => -inf..0
-inf..0 \\ 10 => -inf..0
-inf..0 \\ 100 => -inf..0
-inf..0 \\ -inf => -inf!..0
-inf..0 \\ inf => -inf..0
-inf..0 \\ nan => -inf..0
-inf..0 \\ 0..1 => -inf..!0
-inf..0 \\ 0!..1 => -inf..0
-inf..0 \\ 0..!1 => -inf..!0
-inf..0 \\ 0..2 => -inf..!0
-inf..0 \\ 0!..!2 => -inf..0
-inf..0 \\ 0.5..1.5 => -inf..0
-inf..0 \\ 0.5..2.5 => -inf..0
-inf..0 \\ 0.5!..2.5 => -inf..0
-inf..0 \\ 0.5..!2.5 => -inf..0
-inf..0 \\ -2.56..3.35 => -inf..!-2.56
-inf..0 \\ 0.5..0.75 => -inf..0
-inf..0 \\ 1..2 => -inf..0
-inf..0 \\ 0..inf => -inf..!0
-inf..0 \\ 0!..inf => -inf..0
-inf..0 \\ 0..!inf => -inf..!0
-inf..0 \\ 0!..!inf => -inf..0
-inf..0 \\ 1..inf => -inf..0
-inf..0 \\ 1!..inf => -inf..0
-inf..0 \\ 1..!inf => -inf..0
-inf..0 \\ 2..inf => -inf..0
-inf..0 \\ 2!..inf => -inf..0
-inf..0 \\ 2.5..inf => -inf..0
-inf..0 \\ -inf..0 => never
-inf..0 \\ -inf..inf => never
-inf..0 \\ -inf!..inf => -inf
-inf..0 \\ -inf..!inf => never
-inf..0 \\ -inf!..!inf => -inf
-inf..0 \\ int(0..1) => -inf..!0
-inf..0 \\ int(0..2) => -inf..!0
-inf..0 \\ int(1..2) => -inf..0
-inf..0 \\ int(5..20) => -inf..0
-inf..0 \\ int(-20..-5) => -inf..!-20 | nonInt(-20..-5) | -5!..0
-inf..0 \\ int(-10..10) => -inf..!-10 | nonInt(-10..0)
-inf..0 \\ int(0..inf) => -inf..!0
-inf..0 \\ int(1..inf) => -inf..0
-inf..0 \\ int(-inf..0) => -inf | nonInt(-inf..0)
-inf..0 \\ int(-inf..1) => -inf | nonInt(-inf..0)
-inf..0 \\ int(-inf..inf) => -inf | nonInt(-inf..0)
-inf..0 \\ nonInt(0..1) => -inf..0
-inf..0 \\ nonInt(0..2) => -inf..0
-inf..0 \\ nonInt(-1..2) => -inf..-1 | 0
-inf..0 \\ nonInt(0..inf) => -inf..0
-inf..0 \\ nonInt(-1..inf) => -inf..-1 | 0
-inf..0 \\ nonInt(-inf..0) => -inf | int(-inf..0)
-inf..0 \\ nonInt(-inf..1) => -inf | int(-inf..0)
-inf..0 \\ nonInt(-inf..inf) => -inf | int(-inf..0)
-inf..0 \\ 1 | int(3..4) => -inf..0
-inf..inf \\ number => never
-inf..inf \\ -3.14 => -inf..!-3.14 | -3.14!..inf
-inf..inf \\ -2 => -inf..!-2 | -2!..inf
-inf..inf \\ -1 => -inf..!-1 | -1!..inf
-inf..inf \\ -0.5 => -inf..!-0.5 | -0.5!..inf
-inf..inf \\ 0 => -inf..!0 | 0!..inf
-inf..inf \\ 0.5 => -inf..!0.5 | 0.5!..inf
-inf..inf \\ 1 => -inf..!1 | 1!..inf
-inf..inf \\ 2 => -inf..!2 | 2!..inf
-inf..inf \\ 2.78 => -inf..!2.78 | 2.78!..inf
-inf..inf \\ 3 => -inf..!3 | 3!..inf
-inf..inf \\ 3.14 => -inf..!3.14 | 3.14!..inf
-inf..inf \\ 10 => -inf..!10 | 10!..inf
-inf..inf \\ 100 => -inf..!100 | 100!..inf
-inf..inf \\ -inf => -inf!..inf
-inf..inf \\ inf => -inf..!inf
-inf..inf \\ nan => -inf..inf
-inf..inf \\ 0..1 => -inf..!0 | 1!..inf
-inf..inf \\ 0!..1 => -inf..0 | 1!..inf
-inf..inf \\ 0..!1 => -inf..!0 | 1..inf
-inf..inf \\ 0..2 => -inf..!0 | 2!..inf
-inf..inf \\ 0!..!2 => -inf..0 | 2..inf
-inf..inf \\ 0.5..1.5 => -inf..!0.5 | 1.5!..inf
-inf..inf \\ 0.5..2.5 => -inf..!0.5 | 2.5!..inf
-inf..inf \\ 0.5!..2.5 => -inf..0.5 | 2.5!..inf
-inf..inf \\ 0.5..!2.5 => -inf..!0.5 | 2.5..inf
-inf..inf \\ -2.56..3.35 => -inf..!-2.56 | 3.35!..inf
-inf..inf \\ 0.5..0.75 => -inf..!0.5 | 0.75!..inf
-inf..inf \\ 1..2 => -inf..!1 | 2!..inf
-inf..inf \\ 0..inf => -inf..!0
-inf..inf \\ 0!..inf => -inf..0
-inf..inf \\ 0..!inf => -inf..!0 | inf
-inf..inf \\ 0!..!inf => -inf..0 | inf
-inf..inf \\ 1..inf => -inf..!1
-inf..inf \\ 1!..inf => -inf..1
-inf..inf \\ 1..!inf => -inf..!1 | inf
-inf..inf \\ 2..inf => -inf..!2
-inf..inf \\ 2!..inf => -inf..2
-inf..inf \\ 2.5..inf => -inf..!2.5
-inf..inf \\ -inf..0 => 0!..inf
-inf..inf \\ -inf..inf => never
-inf..inf \\ -inf!..inf => -inf
-inf..inf \\ -inf..!inf => inf
-inf..inf \\ -inf!..!inf => -inf | inf
-inf..inf \\ int(0..1) => -inf..!0 | nonInt(0..1) | 1!..inf
-inf..inf \\ int(0..2) => -inf..!0 | nonInt(0..2) | 2!..inf
-inf..inf \\ int(1..2) => -inf..!1 | nonInt(1..2) | 2!..inf
-inf..inf \\ int(5..20) => -inf..!5 | nonInt(5..20) | 20!..inf
-inf..inf \\ int(-20..-5) => -inf..!-20 | nonInt(-20..-5) | -5!..inf
-inf..inf \\ int(-10..10) => -inf..!-10 | nonInt(-10..10) | 10!..inf
-inf..inf \\ int(0..inf) => -inf..!0 | nonInt(0..inf) | inf
-inf..inf \\ int(1..inf) => -inf..!1 | nonInt(1..inf) | inf
-inf..inf \\ int(-inf..0) => -inf | nonInt(-inf..0) | 0!..inf
-inf..inf \\ int(-inf..1) => -inf | nonInt(-inf..1) | 1!..inf
-inf..inf \\ int(-inf..inf) => -inf | nonInt(-inf..inf) | inf
-inf..inf \\ nonInt(0..1) => -inf..0 | 1..inf
-inf..inf \\ nonInt(0..2) => -inf..0 | 1 | 2..inf
-inf..inf \\ nonInt(-1..2) => -inf..-1 | int(0..1) | 2..inf
-inf..inf \\ nonInt(0..inf) => -inf..0 | int(1..inf) | inf
-inf..inf \\ nonInt(-1..inf) => -inf..-1 | int(0..inf) | inf
-inf..inf \\ nonInt(-inf..0) => -inf | int(-inf..-1) | 0..inf
-inf..inf \\ nonInt(-inf..1) => -inf | int(-inf..0) | 1..inf
-inf..inf \\ nonInt(-inf..inf) => -inf | int(-inf..inf) | inf
-inf..inf \\ 1 | int(3..4) => -inf..!1 | 1!..!3 | nonInt(3..4) | 4!..inf
-inf!..inf \\ number => never
-inf!..inf \\ -3.14 => -inf!..!-3.14 | -3.14!..inf
-inf!..inf \\ -2 => -inf!..!-2 | -2!..inf
-inf!..inf \\ -1 => -inf!..!-1 | -1!..inf
-inf!..inf \\ -0.5 => -inf!..!-0.5 | -0.5!..inf
-inf!..inf \\ 0 => -inf!..!0 | 0!..inf
-inf!..inf \\ 0.5 => -inf!..!0.5 | 0.5!..inf
-inf!..inf \\ 1 => -inf!..!1 | 1!..inf
-inf!..inf \\ 2 => -inf!..!2 | 2!..inf
-inf!..inf \\ 2.78 => -inf!..!2.78 | 2.78!..inf
-inf!..inf \\ 3 => -inf!..!3 | 3!..inf
-inf!..inf \\ 3.14 => -inf!..!3.14 | 3.14!..inf
-inf!..inf \\ 10 => -inf!..!10 | 10!..inf
-inf!..inf \\ 100 => -inf!..!100 | 100!..inf
-inf!..inf \\ -inf => -inf!..inf
-inf!..inf \\ inf => -inf!..!inf
-inf!..inf \\ nan => -inf!..inf
-inf!..inf \\ 0..1 => -inf!..!0 | 1!..inf
-inf!..inf \\ 0!..1 => -inf!..0 | 1!..inf
-inf!..inf \\ 0..!1 => -inf!..!0 | 1..inf
-inf!..inf \\ 0..2 => -inf!..!0 | 2!..inf
-inf!..inf \\ 0!..!2 => -inf!..0 | 2..inf
-inf!..inf \\ 0.5..1.5 => -inf!..!0.5 | 1.5!..inf
-inf!..inf \\ 0.5..2.5 => -inf!..!0.5 | 2.5!..inf
-inf!..inf \\ 0.5!..2.5 => -inf!..0.5 | 2.5!..inf
-inf!..inf \\ 0.5..!2.5 => -inf!..!0.5 | 2.5..inf
-inf!..inf \\ -2.56..3.35 => -inf!..!-2.56 | 3.35!..inf
-inf!..inf \\ 0.5..0.75 => -inf!..!0.5 | 0.75!..inf
-inf!..inf \\ 1..2 => -inf!..!1 | 2!..inf
-inf!..inf \\ 0..inf => -inf!..!0
-inf!..inf \\ 0!..inf => -inf!..0
-inf!..inf \\ 0..!inf => -inf!..!0 | inf
-inf!..inf \\ 0!..!inf => -inf!..0 | inf
-inf!..inf \\ 1..inf => -inf!..!1
-inf!..inf \\ 1!..inf => -inf!..1
-inf!..inf \\ 1..!inf => -inf!..!1 | inf
-inf!..inf \\ 2..inf => -inf!..!2
-inf!..inf \\ 2!..inf => -inf!..2
-inf!..inf \\ 2.5..inf => -inf!..!2.5
-inf!..inf \\ -inf..0 => 0!..inf
-inf!..inf \\ -inf..inf => never
-inf!..inf \\ -inf!..inf => never
-inf!..inf \\ -inf..!inf => inf
-inf!..inf \\ -inf!..!inf => inf
-inf!..inf \\ int(0..1) => -inf!..!0 | nonInt(0..1) | 1!..inf
-inf!..inf \\ int(0..2) => -inf!..!0 | nonInt(0..2) | 2!..inf
-inf!..inf \\ int(1..2) => -inf!..!1 | nonInt(1..2) | 2!..inf
-inf!..inf \\ int(5..20) => -inf!..!5 | nonInt(5..20) | 20!..inf
-inf!..inf \\ int(-20..-5) => -inf!..!-20 | nonInt(-20..-5) | -5!..inf
-inf!..inf \\ int(-10..10) => -inf!..!-10 | nonInt(-10..10) | 10!..inf
-inf!..inf \\ int(0..inf) => -inf!..!0 | nonInt(0..inf) | inf
-inf!..inf \\ int(1..inf) => -inf!..!1 | nonInt(1..inf) | inf
-inf!..inf \\ int(-inf..0) => nonInt(-inf..0) | 0!..inf
-inf!..inf \\ int(-inf..1) => nonInt(-inf..1) | 1!..inf
-inf!..inf \\ int(-inf..inf) => nonInt(-inf..inf) | inf
-inf!..inf \\ nonInt(0..1) => -inf!..0 | 1..inf
-inf!..inf \\ nonInt(0..2) => -inf!..0 | 1 | 2..inf
-inf!..inf \\ nonInt(-1..2) => -inf!..-1 | int(0..1) | 2..inf
-inf!..inf \\ nonInt(0..inf) => -inf!..0 | int(1..inf) | inf
-inf!..inf \\ nonInt(-1..inf) => -inf!..-1 | int(0..inf) | inf
-inf!..inf \\ nonInt(-inf..0) => int(-inf..-1) | 0..inf
-inf!..inf \\ nonInt(-inf..1) => int(-inf..0) | 1..inf
-inf!..inf \\ nonInt(-inf..inf) => int(-inf..inf) | inf
-inf!..inf \\ 1 | int(3..4) => -inf!..!1 | 1!..!3 | nonInt(3..4) | 4!..inf
-inf..!inf \\ number => never
-inf..!inf \\ -3.14 => -inf..!-3.14 | -3.14!..!inf
-inf..!inf \\ -2 => -inf..!-2 | -2!..!inf
-inf..!inf \\ -1 => -inf..!-1 | -1!..!inf
-inf..!inf \\ -0.5 => -inf..!-0.5 | -0.5!..!inf
-inf..!inf \\ 0 => -inf..!0 | 0!..!inf
-inf..!inf \\ 0.5 => -inf..!0.5 | 0.5!..!inf
-inf..!inf \\ 1 => -inf..!1 | 1!..!inf
-inf..!inf \\ 2 => -inf..!2 | 2!..!inf
-inf..!inf \\ 2.78 => -inf..!2.78 | 2.78!..!inf
-inf..!inf \\ 3 => -inf..!3 | 3!..!inf
-inf..!inf \\ 3.14 => -inf..!3.14 | 3.14!..!inf
-inf..!inf \\ 10 => -inf..!10 | 10!..!inf
-inf..!inf \\ 100 => -inf..!100 | 100!..!inf
-inf..!inf \\ -inf => -inf!..!inf
-inf..!inf \\ inf => -inf..!inf
-inf..!inf \\ nan => -inf..!inf
-inf..!inf \\ 0..1 => -inf..!0 | 1!..!inf
-inf..!inf \\ 0!..1 => -inf..0 | 1!..!inf
-inf..!inf \\ 0..!1 => -inf..!0 | 1..!inf
-inf..!inf \\ 0..2 => -inf..!0 | 2!..!inf
-inf..!inf \\ 0!..!2 => -inf..0 | 2..!inf
-inf..!inf \\ 0.5..1.5 => -inf..!0.5 | 1.5!..!inf
-inf..!inf \\ 0.5..2.5 => -inf..!0.5 | 2.5!..!inf
-inf..!inf \\ 0.5!..2.5 => -inf..0.5 | 2.5!..!inf
-inf..!inf \\ 0.5..!2.5 => -inf..!0.5 | 2.5..!inf
-inf..!inf \\ -2.56..3.35 => -inf..!-2.56 | 3.35!..!inf
-inf..!inf \\ 0.5..0.75 => -inf..!0.5 | 0.75!..!inf
-inf..!inf \\ 1..2 => -inf..!1 | 2!..!inf
-inf..!inf \\ 0..inf => -inf..!0
-inf..!inf \\ 0!..inf => -inf..0
-inf..!inf \\ 0..!inf => -inf..!0
-inf..!inf \\ 0!..!inf => -inf..0
-inf..!inf \\ 1..inf => -inf..!1
-inf..!inf \\ 1!..inf => -inf..1
-inf..!inf \\ 1..!inf => -inf..!1
-inf..!inf \\ 2..inf => -inf..!2
-inf..!inf \\ 2!..inf => -inf..2
-inf..!inf \\ 2.5..inf => -inf..!2.5
-inf..!inf \\ -inf..0 => 0!..!inf
-inf..!inf \\ -inf..inf => never
-inf..!inf \\ -inf!..inf => -inf
-inf..!inf \\ -inf..!inf => never
-inf..!inf \\ -inf!..!inf => -inf
-inf..!inf \\ int(0..1) => -inf..!0 | nonInt(0..1) | 1!..!inf
-inf..!inf \\ int(0..2) => -inf..!0 | nonInt(0..2) | 2!..!inf
-inf..!inf \\ int(1..2) => -inf..!1 | nonInt(1..2) | 2!..!inf
-inf..!inf \\ int(5..20) => -inf..!5 | nonInt(5..20) | 20!..!inf
-inf..!inf \\ int(-20..-5) => -inf..!-20 | nonInt(-20..-5) | -5!..!inf
-inf..!inf \\ int(-10..10) => -inf..!-10 | nonInt(-10..10) | 10!..!inf
-inf..!inf \\ int(0..inf) => -inf..!0 | nonInt(0..inf)
-inf..!inf \\ int(1..inf) => -inf..!1 | nonInt(1..inf)
-inf..!inf \\ int(-inf..0) => -inf | nonInt(-inf..0) | 0!..!inf
-inf..!inf \\ int(-inf..1) => -inf | nonInt(-inf..1) | 1!..!inf
-inf..!inf \\ int(-inf..inf) => -inf | nonInt(-inf..inf)
-inf..!inf \\ nonInt(0..1) => -inf..0 | 1..!inf
-inf..!inf \\ nonInt(0..2) => -inf..0 | 1 | 2..!inf
-inf..!inf \\ nonInt(-1..2) => -inf..-1 | int(0..1) | 2..!inf
-inf..!inf \\ nonInt(0..inf) => -inf..0 | int(1..inf)
-inf..!inf \\ nonInt(-1..inf) => -inf..-1 | int(0..inf)
-inf..!inf \\ nonInt(-inf..0) => -inf | int(-inf..-1) | 0..!inf
-inf..!inf \\ nonInt(-inf..1) => -inf | int(-inf..0) | 1..!inf
-inf..!inf \\ nonInt(-inf..inf) => -inf | int(-inf..inf)
-inf..!inf \\ 1 | int(3..4) => -inf..!1 | 1!..!3 | nonInt(3..4) | 4!..!inf
-inf!..!inf \\ number => never
-inf!..!inf \\ -3.14 => -inf!..!-3.14 | -3.14!..!inf
-inf!..!inf \\ -2 => -inf!..!-2 | -2!..!inf
-inf!..!inf \\ -1 => -inf!..!-1 | -1!..!inf
-inf!..!inf \\ -0.5 => -inf!..!-0.5 | -0.5!..!inf
-inf!..!inf \\ 0 => -inf!..!0 | 0!..!inf
-inf!..!inf \\ 0.5 => -inf!..!0.5 | 0.5!..!inf
-inf!..!inf \\ 1 => -inf!..!1 | 1!..!inf
-inf!..!inf \\ 2 => -inf!..!2 | 2!..!inf
-inf!..!inf \\ 2.78 => -inf!..!2.78 | 2.78!..!inf
-inf!..!inf \\ 3 => -inf!..!3 | 3!..!inf
-inf!..!inf \\ 3.14 => -inf!..!3.14 | 3.14!..!inf
-inf!..!inf \\ 10 => -inf!..!10 | 10!..!inf
-inf!..!inf \\ 100 => -inf!..!100 | 100!..!inf
-inf!..!inf \\ -inf => -inf!..!inf
-inf!..!inf \\ inf => -inf!..!inf
-inf!..!inf \\ nan => -inf!..!inf
-inf!..!inf \\ 0..1 => -inf!..!0 | 1!..!inf
-inf!..!inf \\ 0!..1 => -inf!..0 | 1!..!inf
-inf!..!inf \\ 0..!1 => -inf!..!0 | 1..!inf
-inf!..!inf \\ 0..2 => -inf!..!0 | 2!..!inf
-inf!..!inf \\ 0!..!2 => -inf!..0 | 2..!inf
-inf!..!inf \\ 0.5..1.5 => -inf!..!0.5 | 1.5!..!inf
-inf!..!inf \\ 0.5..2.5 => -inf!..!0.5 | 2.5!..!inf
-inf!..!inf \\ 0.5!..2.5 => -inf!..0.5 | 2.5!..!inf
-inf!..!inf \\ 0.5..!2.5 => -inf!..!0.5 | 2.5..!inf
-inf!..!inf \\ -2.56..3.35 => -inf!..!-2.56 | 3.35!..!inf
-inf!..!inf \\ 0.5..0.75 => -inf!..!0.5 | 0.75!..!inf
-inf!..!inf \\ 1..2 => -inf!..!1 | 2!..!inf
-inf!..!inf \\ 0..inf => -inf!..!0
-inf!..!inf \\ 0!..inf => -inf!..0
-inf!..!inf \\ 0..!inf => -inf!..!0
-inf!..!inf \\ 0!..!inf => -inf!..0
-inf!..!inf \\ 1..inf => -inf!..!1
-inf!..!inf \\ 1!..inf => -inf!..1
-inf!..!inf \\ 1..!inf => -inf!..!1
-inf!..!inf \\ 2..inf => -inf!..!2
-inf!..!inf \\ 2!..inf => -inf!..2
-inf!..!inf \\ 2.5..inf => -inf!..!2.5
-inf!..!inf \\ -inf..0 => 0!..!inf
-inf!..!inf \\ -inf..inf => never
-inf!..!inf \\ -inf!..inf => never
-inf!..!inf \\ -inf..!inf => never
-inf!..!inf \\ -inf!..!inf => never
-inf!..!inf \\ int(0..1) => -inf!..!0 | nonInt(0..1) | 1!..!inf
-inf!..!inf \\ int(0..2) => -inf!..!0 | nonInt(0..2) | 2!..!inf
-inf!..!inf \\ int(1..2) => -inf!..!1 | nonInt(1..2) | 2!..!inf
-inf!..!inf \\ int(5..20) => -inf!..!5 | nonInt(5..20) | 20!..!inf
-inf!..!inf \\ int(-20..-5) => -inf!..!-20 | nonInt(-20..-5) | -5!..!inf
-inf!..!inf \\ int(-10..10) => -inf!..!-10 | nonInt(-10..10) | 10!..!inf
-inf!..!inf \\ int(0..inf) => -inf!..!0 | nonInt(0..inf)
-inf!..!inf \\ int(1..inf) => -inf!..!1 | nonInt(1..inf)
-inf!..!inf \\ int(-inf..0) => nonInt(-inf..0) | 0!..!inf
-inf!..!inf \\ int(-inf..1) => nonInt(-inf..1) | 1!..!inf
-inf!..!inf \\ int(-inf..inf) => nonInt(-inf..inf)
-inf!..!inf \\ nonInt(0..1) => -inf!..0 | 1..!inf
-inf!..!inf \\ nonInt(0..2) => -inf!..0 | 1 | 2..!inf
-inf!..!inf \\ nonInt(-1..2) => -inf!..-1 | int(0..1) | 2..!inf
-inf!..!inf \\ nonInt(0..inf) => -inf!..0 | int(1..inf)
-inf!..!inf \\ nonInt(-1..inf) => -inf!..-1 | int(0..inf)
-inf!..!inf \\ nonInt(-inf..0) => int(-inf..-1) | 0..!inf
-inf!..!inf \\ nonInt(-inf..1) => int(-inf..0) | 1..!inf
-inf!..!inf \\ nonInt(-inf..inf) => int(-inf..inf)
-inf!..!inf \\ 1 | int(3..4) => -inf!..!1 | 1!..!3 | nonInt(3..4) | 4!..!inf
int(0..1) \\ number => never
int(0..1) \\ -3.14 => int(0..1)
int(0..1) \\ -2 => int(0..1)
int(0..1) \\ -1 => int(0..1)
int(0..1) \\ -0.5 => int(0..1)
int(0..1) \\ 0 => 1
int(0..1) \\ 0.5 => int(0..1)
int(0..1) \\ 1 => 0
int(0..1) \\ 2 => int(0..1)
int(0..1) \\ 2.78 => int(0..1)
int(0..1) \\ 3 => int(0..1)
int(0..1) \\ 3.14 => int(0..1)
int(0..1) \\ 10 => int(0..1)
int(0..1) \\ 100 => int(0..1)
int(0..1) \\ -inf => int(0..1)
int(0..1) \\ inf => int(0..1)
int(0..1) \\ nan => int(0..1)
int(0..1) \\ 0..1 => never
int(0..1) \\ 0!..1 => 0
int(0..1) \\ 0..!1 => 1
int(0..1) \\ 0..2 => never
int(0..1) \\ 0!..!2 => 0
int(0..1) \\ 0.5..1.5 => 0
int(0..1) \\ 0.5..2.5 => 0
int(0..1) \\ 0.5!..2.5 => 0
int(0..1) \\ 0.5..!2.5 => 0
int(0..1) \\ -2.56..3.35 => never
int(0..1) \\ 0.5..0.75 => int(0..1)
int(0..1) \\ 1..2 => 0
int(0..1) \\ 0..inf => never
int(0..1) \\ 0!..inf => 0
int(0..1) \\ 0..!inf => never
int(0..1) \\ 0!..!inf => 0
int(0..1) \\ 1..inf => 0
int(0..1) \\ 1!..inf => int(0..1)
int(0..1) \\ 1..!inf => 0
int(0..1) \\ 2..inf => int(0..1)
int(0..1) \\ 2!..inf => int(0..1)
int(0..1) \\ 2.5..inf => int(0..1)
int(0..1) \\ -inf..0 => 1
int(0..1) \\ -inf..inf => never
int(0..1) \\ -inf!..inf => never
int(0..1) \\ -inf..!inf => never
int(0..1) \\ -inf!..!inf => never
int(0..1) \\ int(0..1) => never
int(0..1) \\ int(0..2) => never
int(0..1) \\ int(1..2) => 0
int(0..1) \\ int(5..20) => int(0..1)
int(0..1) \\ int(-20..-5) => int(0..1)
int(0..1) \\ int(-10..10) => never
int(0..1) \\ int(0..inf) => never
int(0..1) \\ int(1..inf) => 0
int(0..1) \\ int(-inf..0) => 1
int(0..1) \\ int(-inf..1) => never
int(0..1) \\ int(-inf..inf) => never
int(0..1) \\ nonInt(0..1) => int(0..1)
int(0..1) \\ nonInt(0..2) => int(0..1)
int(0..1) \\ nonInt(-1..2) => int(0..1)
int(0..1) \\ nonInt(0..inf) => int(0..1)
int(0..1) \\ nonInt(-1..inf) => int(0..1)
int(0..1) \\ nonInt(-inf..0) => int(0..1)
int(0..1) \\ nonInt(-inf..1) => int(0..1)
int(0..1) \\ nonInt(-inf..inf) => int(0..1)
int(0..1) \\ 1 | int(3..4) => 0
int(0..2) \\ number => never
int(0..2) \\ -3.14 => int(0..2)
int(0..2) \\ -2 => int(0..2)
int(0..2) \\ -1 => int(0..2)
int(0..2) \\ -0.5 => int(0..2)
int(0..2) \\ 0 => int(1..2)
int(0..2) \\ 0.5 => int(0..2)
int(0..2) \\ 1 => 0 | 2
int(0..2) \\ 2 => int(0..1)
int(0..2) \\ 2.78 => int(0..2)
int(0..2) \\ 3 => int(0..2)
int(0..2) \\ 3.14 => int(0..2)
int(0..2) \\ 10 => int(0..2)
int(0..2) \\ 100 => int(0..2)
int(0..2) \\ -inf => int(0..2)
int(0..2) \\ inf => int(0..2)
int(0..2) \\ nan => int(0..2)
int(0..2) \\ 0..1 => 2
int(0..2) \\ 0!..1 => 0 | 2
int(0..2) \\ 0..!1 => int(1..2)
int(0..2) \\ 0..2 => never
int(0..2) \\ 0!..!2 => 0 | 2
int(0..2) \\ 0.5..1.5 => 0 | 2
int(0..2) \\ 0.5..2.5 => 0
int(0..2) \\ 0.5!..2.5 => 0
int(0..2) \\ 0.5..!2.5 => 0
int(0..2) \\ -2.56..3.35 => never
int(0..2) \\ 0.5..0.75 => int(0..2)
int(0..2) \\ 1..2 => 0
int(0..2) \\ 0..inf => never
int(0..2) \\ 0!..inf => 0
int(0..2) \\ 0..!inf => never
int(0..2) \\ 0!..!inf => 0
int(0..2) \\ 1..inf => 0
int(0..2) \\ 1!..inf => int(0..1)
int(0..2) \\ 1..!inf => 0
int(0..2) \\ 2..inf => int(0..1)
int(0..2) \\ 2!..inf => int(0..2)
int(0..2) \\ 2.5..inf => int(0..2)
int(0..2) \\ -inf..0 => int(1..2)
int(0..2) \\ -inf..inf => never
int(0..2) \\ -inf!..inf => never
int(0..2) \\ -inf..!inf => never
int(0..2) \\ -inf!..!inf => never
int(0..2) \\ int(0..1) => 2
int(0..2) \\ int(0..2) => never
int(0..2) \\ int(1..2) => 0
int(0..2) \\ int(5..20) => int(0..2)
int(0..2) \\ int(-20..-5) => int(0..2)
int(0..2) \\ int(-10..10) => never
int(0..2) \\ int(0..inf) => never
int(0..2) \\ int(1..inf) => 0
int(0..2) \\ int(-inf..0) => int(1..2)
int(0..2) \\ int(-inf..1) => 2
int(0..2) \\ int(-inf..inf) => never
int(0..2) \\ nonInt(0..1) => int(0..2)
int(0..2) \\ nonInt(0..2) => int(0..2)
int(0..2) \\ nonInt(-1..2) => int(0..2)
int(0..2) \\ nonInt(0..inf) => int(0..2)
int(0..2) \\ nonInt(-1..inf) => int(0..2)
int(0..2) \\ nonInt(-inf..0) => int(0..2)
int(0..2) \\ nonInt(-inf..1) => int(0..2)
int(0..2) \\ nonInt(-inf..inf) => int(0..2)
int(0..2) \\ 1 | int(3..4) => 0 | 2
int(1..2) \\ number => never
int(1..2) \\ -3.14 => int(1..2)
int(1..2) \\ -2 => int(1..2)
int(1..2) \\ -1 => int(1..2)
int(1..2) \\ -0.5 => int(1..2)
int(1..2) \\ 0 => int(1..2)
int(1..2) \\ 0.5 => int(1..2)
int(1..2) \\ 1 => 2
int(1..2) \\ 2 => 1
int(1..2) \\ 2.78 => int(1..2)
int(1..2) \\ 3 => int(1..2)
int(1..2) \\ 3.14 => int(1..2)
int(1..2) \\ 10 => int(1..2)
int(1..2) \\ 100 => int(1..2)
int(1..2) \\ -inf => int(1..2)
int(1..2) \\ inf => int(1..2)
int(1..2) \\ nan => int(1..2)
int(1..2) \\ 0..1 => 2
int(1..2) \\ 0!..1 => 2
int(1..2) \\ 0..!1 => int(1..2)
int(1..2) \\ 0..2 => never
int(1..2) \\ 0!..!2 => 2
int(1..2) \\ 0.5..1.5 => 2
int(1..2) \\ 0.5..2.5 => never
int(1..2) \\ 0.5!..2.5 => never
int(1..2) \\ 0.5..!2.5 => never
int(1..2) \\ -2.56..3.35 => never
int(1..2) \\ 0.5..0.75 => int(1..2)
int(1..2) \\ 1..2 => never
int(1..2) \\ 0..inf => never
int(1..2) \\ 0!..inf => never
int(1..2) \\ 0..!inf => never
int(1..2) \\ 0!..!inf => never
int(1..2) \\ 1..inf => never
int(1..2) \\ 1!..inf => 1
int(1..2) \\ 1..!inf => never
int(1..2) \\ 2..inf => 1
int(1..2) \\ 2!..inf => int(1..2)
int(1..2) \\ 2.5..inf => int(1..2)
int(1..2) \\ -inf..0 => int(1..2)
int(1..2) \\ -inf..inf => never
int(1..2) \\ -inf!..inf => never
int(1..2) \\ -inf..!inf => never
int(1..2) \\ -inf!..!inf => never
int(1..2) \\ int(0..1) => 2
int(1..2) \\ int(0..2) => never
int(1..2) \\ int(1..2) => never
int(1..2) \\ int(5..20) => int(1..2)
int(1..2) \\ int(-20..-5) => int(1..2)
int(1..2) \\ int(-10..10) => never
int(1..2) \\ int(0..inf) => never
int(1..2) \\ int(1..inf) => never
int(1..2) \\ int(-inf..0) => int(1..2)
int(1..2) \\ int(-inf..1) => 2
int(1..2) \\ int(-inf..inf) => never
int(1..2) \\ nonInt(0..1) => int(1..2)
int(1..2) \\ nonInt(0..2) => int(1..2)
int(1..2) \\ nonInt(-1..2) => int(1..2)
int(1..2) \\ nonInt(0..inf) => int(1..2)
int(1..2) \\ nonInt(-1..inf) => int(1..2)
int(1..2) \\ nonInt(-inf..0) => int(1..2)
int(1..2) \\ nonInt(-inf..1) => int(1..2)
int(1..2) \\ nonInt(-inf..inf) => int(1..2)
int(1..2) \\ 1 | int(3..4) => 2
int(5..20) \\ number => never
int(5..20) \\ -3.14 => int(5..20)
int(5..20) \\ -2 => int(5..20)
int(5..20) \\ -1 => int(5..20)
int(5..20) \\ -0.5 => int(5..20)
int(5..20) \\ 0 => int(5..20)
int(5..20) \\ 0.5 => int(5..20)
int(5..20) \\ 1 => int(5..20)
int(5..20) \\ 2 => int(5..20)
int(5..20) \\ 2.78 => int(5..20)
int(5..20) \\ 3 => int(5..20)
int(5..20) \\ 3.14 => int(5..20)
int(5..20) \\ 10 => int(5..9) | int(11..20)
int(5..20) \\ 100 => int(5..20)
int(5..20) \\ -inf => int(5..20)
int(5..20) \\ inf => int(5..20)
int(5..20) \\ nan => int(5..20)
int(5..20) \\ 0..1 => int(5..20)
int(5..20) \\ 0!..1 => int(5..20)
int(5..20) \\ 0..!1 => int(5..20)
int(5..20) \\ 0..2 => int(5..20)
int(5..20) \\ 0!..!2 => int(5..20)
int(5..20) \\ 0.5..1.5 => int(5..20)
int(5..20) \\ 0.5..2.5 => int(5..20)
int(5..20) \\ 0.5!..2.5 => int(5..20)
int(5..20) \\ 0.5..!2.5 => int(5..20)
int(5..20) \\ -2.56..3.35 => int(5..20)
int(5..20) \\ 0.5..0.75 => int(5..20)
int(5..20) \\ 1..2 => int(5..20)
int(5..20) \\ 0..inf => never
int(5..20) \\ 0!..inf => never
int(5..20) \\ 0..!inf => never
int(5..20) \\ 0!..!inf => never
int(5..20) \\ 1..inf => never
int(5..20) \\ 1!..inf => never
int(5..20) \\ 1..!inf => never
int(5..20) \\ 2..inf => never
int(5..20) \\ 2!..inf => never
int(5..20) \\ 2.5..inf => never
int(5..20) \\ -inf..0 => int(5..20)
int(5..20) \\ -inf..inf => never
int(5..20) \\ -inf!..inf => never
int(5..20) \\ -inf..!inf => never
int(5..20) \\ -inf!..!inf => never
int(5..20) \\ int(0..1) => int(5..20)
int(5..20) \\ int(0..2) => int(5..20)
int(5..20) \\ int(1..2) => int(5..20)
int(5..20) \\ int(5..20) => never
int(5..20) \\ int(-20..-5) => int(5..20)
int(5..20) \\ int(-10..10) => int(11..20)
int(5..20) \\ int(0..inf) => never
int(5..20) \\ int(1..inf) => never
int(5..20) \\ int(-inf..0) => int(5..20)
int(5..20) \\ int(-inf..1) => int(5..20)
int(5..20) \\ int(-inf..inf) => never
int(5..20) \\ nonInt(0..1) => int(5..20)
int(5..20) \\ nonInt(0..2) => int(5..20)
int(5..20) \\ nonInt(-1..2) => int(5..20)
int(5..20) \\ nonInt(0..inf) => int(5..20)
int(5..20) \\ nonInt(-1..inf) => int(5..20)
int(5..20) \\ nonInt(-inf..0) => int(5..20)
int(5..20) \\ nonInt(-inf..1) => int(5..20)
int(5..20) \\ nonInt(-inf..inf) => int(5..20)
int(5..20) \\ 1 | int(3..4) => int(5..20)
int(-20..-5) \\ number => never
int(-20..-5) \\ -3.14 => int(-20..-5)
int(-20..-5) \\ -2 => int(-20..-5)
int(-20..-5) \\ -1 => int(-20..-5)
int(-20..-5) \\ -0.5 => int(-20..-5)
int(-20..-5) \\ 0 => int(-20..-5)
int(-20..-5) \\ 0.5 => int(-20..-5)
int(-20..-5) \\ 1 => int(-20..-5)
int(-20..-5) \\ 2 => int(-20..-5)
int(-20..-5) \\ 2.78 => int(-20..-5)
int(-20..-5) \\ 3 => int(-20..-5)
int(-20..-5) \\ 3.14 => int(-20..-5)
int(-20..-5) \\ 10 => int(-20..-5)
int(-20..-5) \\ 100 => int(-20..-5)
int(-20..-5) \\ -inf => int(-20..-5)
int(-20..-5) \\ inf => int(-20..-5)
int(-20..-5) \\ nan => int(-20..-5)
int(-20..-5) \\ 0..1 => int(-20..-5)
int(-20..-5) \\ 0!..1 => int(-20..-5)
int(-20..-5) \\ 0..!1 => int(-20..-5)
int(-20..-5) \\ 0..2 => int(-20..-5)
int(-20..-5) \\ 0!..!2 => int(-20..-5)
int(-20..-5) \\ 0.5..1.5 => int(-20..-5)
int(-20..-5) \\ 0.5..2.5 => int(-20..-5)
int(-20..-5) \\ 0.5!..2.5 => int(-20..-5)
int(-20..-5) \\ 0.5..!2.5 => int(-20..-5)
int(-20..-5) \\ -2.56..3.35 => int(-20..-5)
int(-20..-5) \\ 0.5..0.75 => int(-20..-5)
int(-20..-5) \\ 1..2 => int(-20..-5)
int(-20..-5) \\ 0..inf => int(-20..-5)
int(-20..-5) \\ 0!..inf => int(-20..-5)
int(-20..-5) \\ 0..!inf => int(-20..-5)
int(-20..-5) \\ 0!..!inf => int(-20..-5)
int(-20..-5) \\ 1..inf => int(-20..-5)
int(-20..-5) \\ 1!..inf => int(-20..-5)
int(-20..-5) \\ 1..!inf => int(-20..-5)
int(-20..-5) \\ 2..inf => int(-20..-5)
int(-20..-5) \\ 2!..inf => int(-20..-5)
int(-20..-5) \\ 2.5..inf => int(-20..-5)
int(-20..-5) \\ -inf..0 => never
int(-20..-5) \\ -inf..inf => never
int(-20..-5) \\ -inf!..inf => never
int(-20..-5) \\ -inf..!inf => never
int(-20..-5) \\ -inf!..!inf => never
int(-20..-5) \\ int(0..1) => int(-20..-5)
int(-20..-5) \\ int(0..2) => int(-20..-5)
int(-20..-5) \\ int(1..2) => int(-20..-5)
int(-20..-5) \\ int(5..20) => int(-20..-5)
int(-20..-5) \\ int(-20..-5) => never
int(-20..-5) \\ int(-10..10) => int(-20..-11)
int(-20..-5) \\ int(0..inf) => int(-20..-5)
int(-20..-5) \\ int(1..inf) => int(-20..-5)
int(-20..-5) \\ int(-inf..0) => never
int(-20..-5) \\ int(-inf..1) => never
int(-20..-5) \\ int(-inf..inf) => never
int(-20..-5) \\ nonInt(0..1) => int(-20..-5)
int(-20..-5) \\ nonInt(0..2) => int(-20..-5)
int(-20..-5) \\ nonInt(-1..2) => int(-20..-5)
int(-20..-5) \\ nonInt(0..inf) => int(-20..-5)
int(-20..-5) \\ nonInt(-1..inf) => int(-20..-5)
int(-20..-5) \\ nonInt(-inf..0) => int(-20..-5)
int(-20..-5) \\ nonInt(-inf..1) => int(-20..-5)
int(-20..-5) \\ nonInt(-inf..inf) => int(-20..-5)
int(-20..-5) \\ 1 | int(3..4) => int(-20..-5)
int(-10..10) \\ number => never
int(-10..10) \\ -3.14 => int(-10..10)
int(-10..10) \\ -2 => int(-10..-3) | int(-1..10)
int(-10..10) \\ -1 => int(-10..-2) | int(0..10)
int(-10..10) \\ -0.5 => int(-10..10)
int(-10..10) \\ 0 => int(-10..-1) | int(1..10)
int(-10..10) \\ 0.5 => int(-10..10)
int(-10..10) \\ 1 => int(-10..0) | int(2..10)
int(-10..10) \\ 2 => int(-10..1) | int(3..10)
int(-10..10) \\ 2.78 => int(-10..10)
int(-10..10) \\ 3 => int(-10..2) | int(4..10)
int(-10..10) \\ 3.14 => int(-10..10)
int(-10..10) \\ 10 => int(-10..9)
int(-10..10) \\ 100 => int(-10..10)
int(-10..10) \\ -inf => int(-10..10)
int(-10..10) \\ inf => int(-10..10)
int(-10..10) \\ nan => int(-10..10)
int(-10..10) \\ 0..1 => int(-10..-1) | int(2..10)
int(-10..10) \\ 0!..1 => int(-10..0) | int(2..10)
int(-10..10) \\ 0..!1 => int(-10..-1) | int(1..10)
int(-10..10) \\ 0..2 => int(-10..-1) | int(3..10)
int(-10..10) \\ 0!..!2 => int(-10..0) | int(2..10)
int(-10..10) \\ 0.5..1.5 => int(-10..0) | int(2..10)
int(-10..10) \\ 0.5..2.5 => int(-10..0) | int(3..10)
int(-10..10) \\ 0.5!..2.5 => int(-10..0) | int(3..10)
int(-10..10) \\ 0.5..!2.5 => int(-10..0) | int(3..10)
int(-10..10) \\ -2.56..3.35 => int(-10..-3) | int(4..10)
int(-10..10) \\ 0.5..0.75 => int(-10..10)
int(-10..10) \\ 1..2 => int(-10..0) | int(3..10)
int(-10..10) \\ 0..inf => int(-10..-1)
int(-10..10) \\ 0!..inf => int(-10..0)
int(-10..10) \\ 0..!inf => int(-10..-1)
int(-10..10) \\ 0!..!inf => int(-10..0)
int(-10..10) \\ 1..inf => int(-10..0)
int(-10..10) \\ 1!..inf => int(-10..1)
int(-10..10) \\ 1..!inf => int(-10..0)
int(-10..10) \\ 2..inf => int(-10..1)
int(-10..10) \\ 2!..inf => int(-10..2)
int(-10..10) \\ 2.5..inf => int(-10..2)
int(-10..10) \\ -inf..0 => int(1..10)
int(-10..10) \\ -inf..inf => never
int(-10..10) \\ -inf!..inf => never
int(-10..10) \\ -inf..!inf => never
int(-10..10) \\ -inf!..!inf => never
int(-10..10) \\ int(0..1) => int(-10..-1) | int(2..10)
int(-10..10) \\ int(0..2) => int(-10..-1) | int(3..10)
int(-10..10) \\ int(1..2) => int(-10..0) | int(3..10)
int(-10..10) \\ int(5..20) => int(-10..4)
int(-10..10) \\ int(-20..-5) => int(-4..10)
int(-10..10) \\ int(-10..10) => never
int(-10..10) \\ int(0..inf) => int(-10..-1)
int(-10..10) \\ int(1..inf) => int(-10..0)
int(-10..10) \\ int(-inf..0) => int(1..10)
int(-10..10) \\ int(-inf..1) => int(2..10)
int(-10..10) \\ int(-inf..inf) => never
int(-10..10) \\ nonInt(0..1) => int(-10..10)
int(-10..10) \\ nonInt(0..2) => int(-10..10)
int(-10..10) \\ nonInt(-1..2) => int(-10..10)
int(-10..10) \\ nonInt(0..inf) => int(-10..10)
int(-10..10) \\ nonInt(-1..inf) => int(-10..10)
int(-10..10) \\ nonInt(-inf..0) => int(-10..10)
int(-10..10) \\ nonInt(-inf..1) => int(-10..10)
int(-10..10) \\ nonInt(-inf..inf) => int(-10..10)
int(-10..10) \\ 1 | int(3..4) => int(-10..0) | 2 | int(5..10)
int(0..inf) \\ number => never
int(0..inf) \\ -3.14 => int(0..inf)
int(0..inf) \\ -2 => int(0..inf)
int(0..inf) \\ -1 => int(0..inf)
int(0..inf) \\ -0.5 => int(0..inf)
int(0..inf) \\ 0 => int(1..inf)
int(0..inf) \\ 0.5 => int(0..inf)
int(0..inf) \\ 1 => 0 | int(2..inf)
int(0..inf) \\ 2 => int(0..1) | int(3..inf)
int(0..inf) \\ 2.78 => int(0..inf)
int(0..inf) \\ 3 => int(0..2) | int(4..inf)
int(0..inf) \\ 3.14 => int(0..inf)
int(0..inf) \\ 10 => int(0..9) | int(11..inf)
int(0..inf) \\ 100 => int(0..99) | int(101..inf)
int(0..inf) \\ -inf => int(0..inf)
int(0..inf) \\ inf => int(0..inf)
int(0..inf) \\ nan => int(0..inf)
int(0..inf) \\ 0..1 => int(2..inf)
int(0..inf) \\ 0!..1 => 0 | int(2..inf)
int(0..inf) \\ 0..!1 => int(1..inf)
int(0..inf) \\ 0..2 => int(3..inf)
int(0..inf) \\ 0!..!2 => 0 | int(2..inf)
int(0..inf) \\ 0.5..1.5 => 0 | int(2..inf)
int(0..inf) \\ 0.5..2.5 => 0 | int(3..inf)
int(0..inf) \\ 0.5!..2.5 => 0 | int(3..inf)
int(0..inf) \\ 0.5..!2.5 => 0 | int(3..inf)
int(0..inf) \\ -2.56..3.35 => int(4..inf)
int(0..inf) \\ 0.5..0.75 => int(0..inf)
int(0..inf) \\ 1..2 => 0 | int(3..inf)
int(0..inf) \\ 0..inf => never
int(0..inf) \\ 0!..inf => 0
int(0..inf) \\ 0..!inf => never
int(0..inf) \\ 0!..!inf => 0
int(0..inf) \\ 1..inf => 0
int(0..inf) \\ 1!..inf => int(0..1)
int(0..inf) \\ 1..!inf => 0
int(0..inf) \\ 2..inf => int(0..1)
int(0..inf) \\ 2!..inf => int(0..2)
int(0..inf) \\ 2.5..inf => int(0..2)
int(0..inf) \\ -inf..0 => int(1..inf)
int(0..inf) \\ -inf..inf => never
int(0..inf) \\ -inf!..inf => never
int(0..inf) \\ -inf..!inf => never
int(0..inf) \\ -inf!..!inf => never
int(0..inf) \\ int(0..1) => int(2..inf)
int(0..inf) \\ int(0..2) => int(3..inf)
int(0..inf) \\ int(1..2) => 0 | int(3..inf)
int(0..inf) \\ int(5..20) => int(0..4) | int(21..inf)
int(0..inf) \\ int(-20..-5) => int(0..inf)
int(0..inf) \\ int(-10..10) => int(11..inf)
int(0..inf) \\ int(0..inf) => never
int(0..inf) \\ int(1..inf) => 0
int(0..inf) \\ int(-inf..0) => int(1..inf)
int(0..inf) \\ int(-inf..1) => int(2..inf)
int(0..inf) \\ int(-inf..inf) => never
int(0..inf) \\ nonInt(0..1) => int(0..inf)
int(0..inf) \\ nonInt(0..2) => int(0..inf)
int(0..inf) \\ nonInt(-1..2) => int(0..inf)
int(0..inf) \\ nonInt(0..inf) => int(0..inf)
int(0..inf) \\ nonInt(-1..inf) => int(0..inf)
int(0..inf) \\ nonInt(-inf..0) => int(0..inf)
int(0..inf) \\ nonInt(-inf..1) => int(0..inf)
int(0..inf) \\ nonInt(-inf..inf) => int(0..inf)
int(0..inf) \\ 1 | int(3..4) => 0 | 2 | int(5..inf)
int(1..inf) \\ number => never
int(1..inf) \\ -3.14 => int(1..inf)
int(1..inf) \\ -2 => int(1..inf)
int(1..inf) \\ -1 => int(1..inf)
int(1..inf) \\ -0.5 => int(1..inf)
int(1..inf) \\ 0 => int(1..inf)
int(1..inf) \\ 0.5 => int(1..inf)
int(1..inf) \\ 1 => int(2..inf)
int(1..inf) \\ 2 => 1 | int(3..inf)
int(1..inf) \\ 2.78 => int(1..inf)
int(1..inf) \\ 3 => int(1..2) | int(4..inf)
int(1..inf) \\ 3.14 => int(1..inf)
int(1..inf) \\ 10 => int(1..9) | int(11..inf)
int(1..inf) \\ 100 => int(1..99) | int(101..inf)
int(1..inf) \\ -inf => int(1..inf)
int(1..inf) \\ inf => int(1..inf)
int(1..inf) \\ nan => int(1..inf)
int(1..inf) \\ 0..1 => int(2..inf)
int(1..inf) \\ 0!..1 => int(2..inf)
int(1..inf) \\ 0..!1 => int(1..inf)
int(1..inf) \\ 0..2 => int(3..inf)
int(1..inf) \\ 0!..!2 => int(2..inf)
int(1..inf) \\ 0.5..1.5 => int(2..inf)
int(1..inf) \\ 0.5..2.5 => int(3..inf)
int(1..inf) \\ 0.5!..2.5 => int(3..inf)
int(1..inf) \\ 0.5..!2.5 => int(3..inf)
int(1..inf) \\ -2.56..3.35 => int(4..inf)
int(1..inf) \\ 0.5..0.75 => int(1..inf)
int(1..inf) \\ 1..2 => int(3..inf)
int(1..inf) \\ 0..inf => never
int(1..inf) \\ 0!..inf => never
int(1..inf) \\ 0..!inf => never
int(1..inf) \\ 0!..!inf => never
int(1..inf) \\ 1..inf => never
int(1..inf) \\ 1!..inf => 1
int(1..inf) \\ 1..!inf => never
int(1..inf) \\ 2..inf => 1
int(1..inf) \\ 2!..inf => int(1..2)
int(1..inf) \\ 2.5..inf => int(1..2)
int(1..inf) \\ -inf..0 => int(1..inf)
int(1..inf) \\ -inf..inf => never
int(1..inf) \\ -inf!..inf => never
int(1..inf) \\ -inf..!inf => never
int(1..inf) \\ -inf!..!inf => never
int(1..inf) \\ int(0..1) => int(2..inf)
int(1..inf) \\ int(0..2) => int(3..inf)
int(1..inf) \\ int(1..2) => int(3..inf)
int(1..inf) \\ int(5..20) => int(1..4) | int(21..inf)
int(1..inf) \\ int(-20..-5) => int(1..inf)
int(1..inf) \\ int(-10..10) => int(11..inf)
int(1..inf) \\ int(0..inf) => never
int(1..inf) \\ int(1..inf) => never
int(1..inf) \\ int(-inf..0) => int(1..inf)
int(1..inf) \\ int(-inf..1) => int(2..inf)
int(1..inf) \\ int(-inf..inf) => never
int(1..inf) \\ nonInt(0..1) => int(1..inf)
int(1..inf) \\ nonInt(0..2) => int(1..inf)
int(1..inf) \\ nonInt(-1..2) => int(1..inf)
int(1..inf) \\ nonInt(0..inf) => int(1..inf)
int(1..inf) \\ nonInt(-1..inf) => int(1..inf)
int(1..inf) \\ nonInt(-inf..0) => int(1..inf)
int(1..inf) \\ nonInt(-inf..1) => int(1..inf)
int(1..inf) \\ nonInt(-inf..inf) => int(1..inf)
int(1..inf) \\ 1 | int(3..4) => 2 | int(5..inf)
int(-inf..0) \\ number => never
int(-inf..0) \\ -3.14 => int(-inf..0)
int(-inf..0) \\ -2 => int(-inf..-3) | int(-1..0)
int(-inf..0) \\ -1 => int(-inf..-2) | 0
int(-inf..0) \\ -0.5 => int(-inf..0)
int(-inf..0) \\ 0 => int(-inf..-1)
int(-inf..0) \\ 0.5 => int(-inf..0)
int(-inf..0) \\ 1 => int(-inf..0)
int(-inf..0) \\ 2 => int(-inf..0)
int(-inf..0) \\ 2.78 => int(-inf..0)
int(-inf..0) \\ 3 => int(-inf..0)
int(-inf..0) \\ 3.14 => int(-inf..0)
int(-inf..0) \\ 10 => int(-inf..0)
int(-inf..0) \\ 100 => int(-inf..0)
int(-inf..0) \\ -inf => int(-inf..0)
int(-inf..0) \\ inf => int(-inf..0)
int(-inf..0) \\ nan => int(-inf..0)
int(-inf..0) \\ 0..1 => int(-inf..-1)
int(-inf..0) \\ 0!..1 => int(-inf..0)
int(-inf..0) \\ 0..!1 => int(-inf..-1)
int(-inf..0) \\ 0..2 => int(-inf..-1)
int(-inf..0) \\ 0!..!2 => int(-inf..0)
int(-inf..0) \\ 0.5..1.5 => int(-inf..0)
int(-inf..0) \\ 0.5..2.5 => int(-inf..0)
int(-inf..0) \\ 0.5!..2.5 => int(-inf..0)
int(-inf..0) \\ 0.5..!2.5 => int(-inf..0)
int(-inf..0) \\ -2.56..3.35 => int(-inf..-3)
int(-inf..0) \\ 0.5..0.75 => int(-inf..0)
int(-inf..0) \\ 1..2 => int(-inf..0)
int(-inf..0) \\ 0..inf => int(-inf..-1)
int(-inf..0) \\ 0!..inf => int(-inf..0)
int(-inf..0) \\ 0..!inf => int(-inf..-1)
int(-inf..0) \\ 0!..!inf => int(-inf..0)
int(-inf..0) \\ 1..inf => int(-inf..0)
int(-inf..0) \\ 1!..inf => int(-inf..0)
int(-inf..0) \\ 1..!inf => int(-inf..0)
int(-inf..0) \\ 2..inf => int(-inf..0)
int(-inf..0) \\ 2!..inf => int(-inf..0)
int(-inf..0) \\ 2.5..inf => int(-inf..0)
int(-inf..0) \\ -inf..0 => never
int(-inf..0) \\ -inf..inf => never
int(-inf..0) \\ -inf!..inf => never
int(-inf..0) \\ -inf..!inf => never
int(-inf..0) \\ -inf!..!inf => never
int(-inf..0) \\ int(0..1) => int(-inf..-1)
int(-inf..0) \\ int(0..2) => int(-inf..-1)
int(-inf..0) \\ int(1..2) => int(-inf..0)
int(-inf..0) \\ int(5..20) => int(-inf..0)
int(-inf..0) \\ int(-20..-5) => int(-inf..-21) | int(-4..0)
int(-inf..0) \\ int(-10..10) => int(-inf..-11)
int(-inf..0) \\ int(0..inf) => int(-inf..-1)
int(-inf..0) \\ int(1..inf) => int(-inf..0)
int(-inf..0) \\ int(-inf..0) => never
int(-inf..0) \\ int(-inf..1) => never
int(-inf..0) \\ int(-inf..inf) => never
int(-inf..0) \\ nonInt(0..1) => int(-inf..0)
int(-inf..0) \\ nonInt(0..2) => int(-inf..0)
int(-inf..0) \\ nonInt(-1..2) => int(-inf..0)
int(-inf..0) \\ nonInt(0..inf) => int(-inf..0)
int(-inf..0) \\ nonInt(-1..inf) => int(-inf..0)
int(-inf..0) \\ nonInt(-inf..0) => int(-inf..0)
int(-inf..0) \\ nonInt(-inf..1) => int(-inf..0)
int(-inf..0) \\ nonInt(-inf..inf) => int(-inf..0)
int(-inf..0) \\ 1 | int(3..4) => int(-inf..0)
int(-inf..1) \\ number => never
int(-inf..1) \\ -3.14 => int(-inf..1)
int(-inf..1) \\ -2 => int(-inf..-3) | int(-1..1)
int(-inf..1) \\ -1 => int(-inf..-2) | int(0..1)
int(-inf..1) \\ -0.5 => int(-inf..1)
int(-inf..1) \\ 0 => int(-inf..-1) | 1
int(-inf..1) \\ 0.5 => int(-inf..1)
int(-inf..1) \\ 1 => int(-inf..0)
int(-inf..1) \\ 2 => int(-inf..1)
int(-inf..1) \\ 2.78 => int(-inf..1)
int(-inf..1) \\ 3 => int(-inf..1)
int(-inf..1) \\ 3.14 => int(-inf..1)
int(-inf..1) \\ 10 => int(-inf..1)
int(-inf..1) \\ 100 => int(-inf..1)
int(-inf..1) \\ -inf => int(-inf..1)
int(-inf..1) \\ inf => int(-inf..1)
int(-inf..1) \\ nan => int(-inf..1)
int(-inf..1) \\ 0..1 => int(-inf..-1)
int(-inf..1) \\ 0!..1 => int(-inf..0)
int(-inf..1) \\ 0..!1 => int(-inf..-1) | 1
int(-inf..1) \\ 0..2 => int(-inf..-1)
int(-inf..1) \\ 0!..!2 => int(-inf..0)
int(-inf..1) \\ 0.5..1.5 => int(-inf..0)
int(-inf..1) \\ 0.5..2.5 => int(-inf..0)
int(-inf..1) \\ 0.5!..2.5 => int(-inf..0)
int(-inf..1) \\ 0.5..!2.5 => int(-inf..0)
int(-inf..1) \\ -2.56..3.35 => int(-inf..-3)
int(-inf..1) \\ 0.5..0.75 => int(-inf..1)
int(-inf..1) \\ 1..2 => int(-inf..0)
int(-inf..1) \\ 0..inf => int(-inf..-1)
int(-inf..1) \\ 0!..inf => int(-inf..0)
int(-inf..1) \\ 0..!inf => int(-inf..-1)
int(-inf..1) \\ 0!..!inf => int(-inf..0)
int(-inf..1) \\ 1..inf => int(-inf..0)
int(-inf..1) \\ 1!..inf => int(-inf..1)
int(-inf..1) \\ 1..!inf => int(-inf..0)
int(-inf..1) \\ 2..inf => int(-inf..1)
int(-inf..1) \\ 2!..inf => int(-inf..1)
int(-inf..1) \\ 2.5..inf => int(-inf..1)
int(-inf..1) \\ -inf..0 => 1
int(-inf..1) \\ -inf..inf => never
int(-inf..1) \\ -inf!..inf => never
int(-inf..1) \\ -inf..!inf => never
int(-inf..1) \\ -inf!..!inf => never
int(-inf..1) \\ int(0..1) => int(-inf..-1)
int(-inf..1) \\ int(0..2) => int(-inf..-1)
int(-inf..1) \\ int(1..2) => int(-inf..0)
int(-inf..1) \\ int(5..20) => int(-inf..1)
int(-inf..1) \\ int(-20..-5) => int(-inf..-21) | int(-4..1)
int(-inf..1) \\ int(-10..10) => int(-inf..-11)
int(-inf..1) \\ int(0..inf) => int(-inf..-1)
int(-inf..1) \\ int(1..inf) => int(-inf..0)
int(-inf..1) \\ int(-inf..0) => 1
int(-inf..1) \\ int(-inf..1) => never
int(-inf..1) \\ int(-inf..inf) => never
int(-inf..1) \\ nonInt(0..1) => int(-inf..1)
int(-inf..1) \\ nonInt(0..2) => int(-inf..1)
int(-inf..1) \\ nonInt(-1..2) => int(-inf..1)
int(-inf..1) \\ nonInt(0..inf) => int(-inf..1)
int(-inf..1) \\ nonInt(-1..inf) => int(-inf..1)
int(-inf..1) \\ nonInt(-inf..0) => int(-inf..1)
int(-inf..1) \\ nonInt(-inf..1) => int(-inf..1)
int(-inf..1) \\ nonInt(-inf..inf) => int(-inf..1)
int(-inf..1) \\ 1 | int(3..4) => int(-inf..0)
int(-inf..inf) \\ number => never
int(-inf..inf) \\ -3.14 => int(-inf..inf)
int(-inf..inf) \\ -2 => int(-inf..-3) | int(-1..inf)
int(-inf..inf) \\ -1 => int(-inf..-2) | int(0..inf)
int(-inf..inf) \\ -0.5 => int(-inf..inf)
int(-inf..inf) \\ 0 => int(-inf..-1) | int(1..inf)
int(-inf..inf) \\ 0.5 => int(-inf..inf)
int(-inf..inf) \\ 1 => int(-inf..0) | int(2..inf)
int(-inf..inf) \\ 2 => int(-inf..1) | int(3..inf)
int(-inf..inf) \\ 2.78 => int(-inf..inf)
int(-inf..inf) \\ 3 => int(-inf..2) | int(4..inf)
int(-inf..inf) \\ 3.14 => int(-inf..inf)
int(-inf..inf) \\ 10 => int(-inf..9) | int(11..inf)
int(-inf..inf) \\ 100 => int(-inf..99) | int(101..inf)
int(-inf..inf) \\ -inf => int(-inf..inf)
int(-inf..inf) \\ inf => int(-inf..inf)
int(-inf..inf) \\ nan => int(-inf..inf)
int(-inf..inf) \\ 0..1 => int(-inf..-1) | int(2..inf)
int(-inf..inf) \\ 0!..1 => int(-inf..0) | int(2..inf)
int(-inf..inf) \\ 0..!1 => int(-inf..-1) | int(1..inf)
int(-inf..inf) \\ 0..2 => int(-inf..-1) | int(3..inf)
int(-inf..inf) \\ 0!..!2 => int(-inf..0) | int(2..inf)
int(-inf..inf) \\ 0.5..1.5 => int(-inf..0) | int(2..inf)
int(-inf..inf) \\ 0.5..2.5 => int(-inf..0) | int(3..inf)
int(-inf..inf) \\ 0.5!..2.5 => int(-inf..0) | int(3..inf)
int(-inf..inf) \\ 0.5..!2.5 => int(-inf..0) | int(3..inf)
int(-inf..inf) \\ -2.56..3.35 => int(-inf..-3) | int(4..inf)
int(-inf..inf) \\ 0.5..0.75 => int(-inf..inf)
int(-inf..inf) \\ 1..2 => int(-inf..0) | int(3..inf)
int(-inf..inf) \\ 0..inf => int(-inf..-1)
int(-inf..inf) \\ 0!..inf => int(-inf..0)
int(-inf..inf) \\ 0..!inf => int(-inf..-1)
int(-inf..inf) \\ 0!..!inf => int(-inf..0)
int(-inf..inf) \\ 1..inf => int(-inf..0)
int(-inf..inf) \\ 1!..inf => int(-inf..1)
int(-inf..inf) \\ 1..!inf => int(-inf..0)
int(-inf..inf) \\ 2..inf => int(-inf..1)
int(-inf..inf) \\ 2!..inf => int(-inf..2)
int(-inf..inf) \\ 2.5..inf => int(-inf..2)
int(-inf..inf) \\ -inf..0 => int(1..inf)
int(-inf..inf) \\ -inf..inf => never
int(-inf..inf) \\ -inf!..inf => never
int(-inf..inf) \\ -inf..!inf => never
int(-inf..inf) \\ -inf!..!inf => never
int(-inf..inf) \\ int(0..1) => int(-inf..-1) | int(2..inf)
int(-inf..inf) \\ int(0..2) => int(-inf..-1) | int(3..inf)
int(-inf..inf) \\ int(1..2) => int(-inf..0) | int(3..inf)
int(-inf..inf) \\ int(5..20) => int(-inf..4) | int(21..inf)
int(-inf..inf) \\ int(-20..-5) => int(-inf..-21) | int(-4..inf)
int(-inf..inf) \\ int(-10..10) => int(-inf..-11) | int(11..inf)
int(-inf..inf) \\ int(0..inf) => int(-inf..-1)
int(-inf..inf) \\ int(1..inf) => int(-inf..0)
int(-inf..inf) \\ int(-inf..0) => int(1..inf)
int(-inf..inf) \\ int(-inf..1) => int(2..inf)
int(-inf..inf) \\ int(-inf..inf) => never
int(-inf..inf) \\ nonInt(0..1) => int(-inf..inf)
int(-inf..inf) \\ nonInt(0..2) => int(-inf..inf)
int(-inf..inf) \\ nonInt(-1..2) => int(-inf..inf)
int(-inf..inf) \\ nonInt(0..inf) => int(-inf..inf)
int(-inf..inf) \\ nonInt(-1..inf) => int(-inf..inf)
int(-inf..inf) \\ nonInt(-inf..0) => int(-inf..inf)
int(-inf..inf) \\ nonInt(-inf..1) => int(-inf..inf)
int(-inf..inf) \\ nonInt(-inf..inf) => int(-inf..inf)
int(-inf..inf) \\ 1 | int(3..4) => int(-inf..0) | 2 | int(5..inf)
nonInt(0..1) \\ number => never
nonInt(0..1) \\ -3.14 => nonInt(0..1)
nonInt(0..1) \\ -2 => nonInt(0..1)
nonInt(0..1) \\ -1 => nonInt(0..1)
nonInt(0..1) \\ -0.5 => nonInt(0..1)
nonInt(0..1) \\ 0 => nonInt(0..1)
nonInt(0..1) \\ 0.5 => 0!..!0.5 | 0.5!..!1
nonInt(0..1) \\ 1 => nonInt(0..1)
nonInt(0..1) \\ 2 => nonInt(0..1)
nonInt(0..1) \\ 2.78 => nonInt(0..1)
nonInt(0..1) \\ 3 => nonInt(0..1)
nonInt(0..1) \\ 3.14 => nonInt(0..1)
nonInt(0..1) \\ 10 => nonInt(0..1)
nonInt(0..1) \\ 100 => nonInt(0..1)
nonInt(0..1) \\ -inf => nonInt(0..1)
nonInt(0..1) \\ inf => nonInt(0..1)
nonInt(0..1) \\ nan => nonInt(0..1)
nonInt(0..1) \\ 0..1 => never
nonInt(0..1) \\ 0!..1 => never
nonInt(0..1) \\ 0..!1 => never
nonInt(0..1) \\ 0..2 => never
nonInt(0..1) \\ 0!..!2 => never
nonInt(0..1) \\ 0.5..1.5 => 0!..!0.5
nonInt(0..1) \\ 0.5..2.5 => 0!..!0.5
nonInt(0..1) \\ 0.5!..2.5 => 0!..0.5
nonInt(0..1) \\ 0.5..!2.5 => 0!..!0.5
nonInt(0..1) \\ -2.56..3.35 => never
nonInt(0..1) \\ 0.5..0.75 => 0!..!0.5 | 0.75!..!1
nonInt(0..1) \\ 1..2 => nonInt(0..1)
nonInt(0..1) \\ 0..inf => never
nonInt(0..1) \\ 0!..inf => never
nonInt(0..1) \\ 0..!inf => never
nonInt(0..1) \\ 0!..!inf => never
nonInt(0..1) \\ 1..inf => nonInt(0..1)
nonInt(0..1) \\ 1!..inf => nonInt(0..1)
nonInt(0..1) \\ 1..!inf => nonInt(0..1)
nonInt(0..1) \\ 2..inf => nonInt(0..1)
nonInt(0..1) \\ 2!..inf => nonInt(0..1)
nonInt(0..1) \\ 2.5..inf => nonInt(0..1)
nonInt(0..1) \\ -inf..0 => nonInt(0..1)
nonInt(0..1) \\ -inf..inf => never
nonInt(0..1) \\ -inf!..inf => never
nonInt(0..1) \\ -inf..!inf => never
nonInt(0..1) \\ -inf!..!inf => never
nonInt(0..1) \\ int(0..1) => nonInt(0..1)
nonInt(0..1) \\ int(0..2) => nonInt(0..1)
nonInt(0..1) \\ int(1..2) => nonInt(0..1)
nonInt(0..1) \\ int(5..20) => nonInt(0..1)
nonInt(0..1) \\ int(-20..-5) => nonInt(0..1)
nonInt(0..1) \\ int(-10..10) => nonInt(0..1)
nonInt(0..1) \\ int(0..inf) => nonInt(0..1)
nonInt(0..1) \\ int(1..inf) => nonInt(0..1)
nonInt(0..1) \\ int(-inf..0) => nonInt(0..1)
nonInt(0..1) \\ int(-inf..1) => nonInt(0..1)
nonInt(0..1) \\ int(-inf..inf) => nonInt(0..1)
nonInt(0..1) \\ nonInt(0..1) => never
nonInt(0..1) \\ nonInt(0..2) => never
nonInt(0..1) \\ nonInt(-1..2) => never
nonInt(0..1) \\ nonInt(0..inf) => never
nonInt(0..1) \\ nonInt(-1..inf) => never
nonInt(0..1) \\ nonInt(-inf..0) => nonInt(0..1)
nonInt(0..1) \\ nonInt(-inf..1) => never
nonInt(0..1) \\ nonInt(-inf..inf) => never
nonInt(0..1) \\ 1 | int(3..4) => nonInt(0..1)
nonInt(0..2) \\ number => never
nonInt(0..2) \\ -3.14 => nonInt(0..2)
nonInt(0..2) \\ -2 => nonInt(0..2)
nonInt(0..2) \\ -1 => nonInt(0..2)
nonInt(0..2) \\ -0.5 => nonInt(0..2)
nonInt(0..2) \\ 0 => nonInt(0..2)
nonInt(0..2) \\ 0.5 => 0!..!0.5 | 0.5!..!1 | nonInt(1..2)
nonInt(0..2) \\ 1 => nonInt(0..2)
nonInt(0..2) \\ 2 => nonInt(0..2)
nonInt(0..2) \\ 2.78 => nonInt(0..2)
nonInt(0..2) \\ 3 => nonInt(0..2)
nonInt(0..2) \\ 3.14 => nonInt(0..2)
nonInt(0..2) \\ 10 => nonInt(0..2)
nonInt(0..2) \\ 100 => nonInt(0..2)
nonInt(0..2) \\ -inf => nonInt(0..2)
nonInt(0..2) \\ inf => nonInt(0..2)
nonInt(0..2) \\ nan => nonInt(0..2)
nonInt(0..2) \\ 0..1 => nonInt(1..2)
nonInt(0..2) \\ 0!..1 => nonInt(1..2)
nonInt(0..2) \\ 0..!1 => nonInt(1..2)
nonInt(0..2) \\ 0..2 => never
nonInt(0..2) \\ 0!..!2 => never
nonInt(0..2) \\ 0.5..1.5 => 0!..!0.5 | 1.5!..!2
nonInt(0..2) \\ 0.5..2.5 => 0!..!0.5
nonInt(0..2) \\ 0.5!..2.5 => 0!..0.5
nonInt(0..2) \\ 0.5..!2.5 => 0!..!0.5
nonInt(0..2) \\ -2.56..3.35 => never
nonInt(0..2) \\ 0.5..0.75 => 0!..!0.5 | 0.75!..!1 | nonInt(1..2)
nonInt(0..2) \\ 1..2 => nonInt(0..1)
nonInt(0..2) \\ 0..inf => never
nonInt(0..2) \\ 0!..inf => never
nonInt(0..2) \\ 0..!inf => never
nonInt(0..2) \\ 0!..!inf => never
nonInt(0..2) \\ 1..inf => nonInt(0..1)
nonInt(0..2) \\ 1!..inf => nonInt(0..1)
nonInt(0..2) \\ 1..!inf => nonInt(0..1)
nonInt(0..2) \\ 2..inf => nonInt(0..2)
nonInt(0..2) \\ 2!..inf => nonInt(0..2)
nonInt(0..2) \\ 2.5..inf => nonInt(0..2)
nonInt(0..2) \\ -inf..0 => nonInt(0..2)
nonInt(0..2) \\ -inf..inf => never
nonInt(0..2) \\ -inf!..inf => never
nonInt(0..2) \\ -inf..!inf => never
nonInt(0..2) \\ -inf!..!inf => never
nonInt(0..2) \\ int(0..1) => nonInt(0..2)
nonInt(0..2) \\ int(0..2) => nonInt(0..2)
nonInt(0..2) \\ int(1..2) => nonInt(0..2)
nonInt(0..2) \\ int(5..20) => nonInt(0..2)
nonInt(0..2) \\ int(-20..-5) => nonInt(0..2)
nonInt(0..2) \\ int(-10..10) => nonInt(0..2)
nonInt(0..2) \\ int(0..inf) => nonInt(0..2)
nonInt(0..2) \\ int(1..inf) => nonInt(0..2)
nonInt(0..2) \\ int(-inf..0) => nonInt(0..2)
nonInt(0..2) \\ int(-inf..1) => nonInt(0..2)
nonInt(0..2) \\ int(-inf..inf) => nonInt(0..2)
nonInt(0..2) \\ nonInt(0..1) => nonInt(1..2)
nonInt(0..2) \\ nonInt(0..2) => never
nonInt(0..2) \\ nonInt(-1..2) => never
nonInt(0..2) \\ nonInt(0..inf) => never
nonInt(0..2) \\ nonInt(-1..inf) => never
nonInt(0..2) \\ nonInt(-inf..0) => nonInt(0..2)
nonInt(0..2) \\ nonInt(-inf..1) => nonInt(1..2)
nonInt(0..2) \\ nonInt(-inf..inf) => never
nonInt(0..2) \\ 1 | int(3..4) => nonInt(0..2)
nonInt(-1..2) \\ number => never
nonInt(-1..2) \\ -3.14 => nonInt(-1..2)
nonInt(-1..2) \\ -2 => nonInt(-1..2)
nonInt(-1..2) \\ -1 => nonInt(-1..2)
nonInt(-1..2) \\ -0.5 => -1!..!-0.5 | -0.5!..!0 | nonInt(0..2)
nonInt(-1..2) \\ 0 => nonInt(-1..2)
nonInt(-1..2) \\ 0.5 => nonInt(-1..0) | 0!..!0.5 | 0.5!..!1 | nonInt(1..2)
nonInt(-1..2) \\ 1 => nonInt(-1..2)
nonInt(-1..2) \\ 2 => nonInt(-1..2)
nonInt(-1..2) \\ 2.78 => nonInt(-1..2)
nonInt(-1..2) \\ 3 => nonInt(-1..2)
nonInt(-1..2) \\ 3.14 => nonInt(-1..2)
nonInt(-1..2) \\ 10 => nonInt(-1..2)
nonInt(-1..2) \\ 100 => nonInt(-1..2)
nonInt(-1..2) \\ -inf => nonInt(-1..2)
nonInt(-1..2) \\ inf => nonInt(-1..2)
nonInt(-1..2) \\ nan => nonInt(-1..2)
nonInt(-1..2) \\ 0..1 => nonInt(-1..0) | nonInt(1..2)
nonInt(-1..2) \\ 0!..1 => nonInt(-1..0) | nonInt(1..2)
nonInt(-1..2) \\ 0..!1 => nonInt(-1..0) | nonInt(1..2)
nonInt(-1..2) \\ 0..2 => nonInt(-1..0)
nonInt(-1..2) \\ 0!..!2 => nonInt(-1..0)
nonInt(-1..2) \\ 0.5..1.5 => nonInt(-1..0) | 0!..!0.5 | 1.5!..!2
nonInt(-1..2) \\ 0.5..2.5 => nonInt(-1..0) | 0!..!0.5
nonInt(-1..2) \\ 0.5!..2.5 => nonInt(-1..0) | 0!..0.5
nonInt(-1..2) \\ 0.5..!2.5 => nonInt(-1..0) | 0!..!0.5
nonInt(-1..2) \\ -2.56..3.35 => never
nonInt(-1..2) \\ 0.5..0.75 => nonInt(-1..0) | 0!..!0.5 | 0.75!..!1 | nonInt(1..2)
nonInt(-1..2) \\ 1..2 => nonInt(-1..1)
nonInt(-1..2) \\ 0..inf => nonInt(-1..0)
nonInt(-1..2) \\ 0!..inf => nonInt(-1..0)
nonInt(-1..2) \\ 0..!inf => nonInt(-1..0)
nonInt(-1..2) \\ 0!..!inf => nonInt(-1..0)
nonInt(-1..2) \\ 1..inf => nonInt(-1..1)
nonInt(-1..2) \\ 1!..inf => nonInt(-1..1)
nonInt(-1..2) \\ 1..!inf => nonInt(-1..1)
nonInt(-1..2) \\ 2..inf => nonInt(-1..2)
nonInt(-1..2) \\ 2!..inf => nonInt(-1..2)
nonInt(-1..2) \\ 2.5..inf => nonInt(-1..2)
nonInt(-1..2) \\ -inf..0 => nonInt(0..2)
nonInt(-1..2) \\ -inf..inf => never
nonInt(-1..2) \\ -inf!..inf => never
nonInt(-1..2) \\ -inf..!inf => never
nonInt(-1..2) \\ -inf!..!inf => never
nonInt(-1..2) \\ int(0..1) => nonInt(-1..2)
nonInt(-1..2) \\ int(0..2) => nonInt(-1..2)
nonInt(-1..2) \\ int(1..2) => nonInt(-1..2)
nonInt(-1..2) \\ int(5..20) => nonInt(-1..2)
nonInt(-1..2) \\ int(-20..-5) => nonInt(-1..2)
nonInt(-1..2) \\ int(-10..10) => nonInt(-1..2)
nonInt(-1..2) \\ int(0..inf) => nonInt(-1..2)
nonInt(-1..2) \\ int(1..inf) => nonInt(-1..2)
nonInt(-1..2) \\ int(-inf..0) => nonInt(-1..2)
nonInt(-1..2) \\ int(-inf..1) => nonInt(-1..2)
nonInt(-1..2) \\ int(-inf..inf) => nonInt(-1..2)
nonInt(-1..2) \\ nonInt(0..1) => nonInt(-1..0) | nonInt(1..2)
nonInt(-1..2) \\ nonInt(0..2) => nonInt(-1..0)
nonInt(-1..2) \\ nonInt(-1..2) => never
nonInt(-1..2) \\ nonInt(0..inf) => nonInt(-1..0)
nonInt(-1..2) \\ nonInt(-1..inf) => never
nonInt(-1..2) \\ nonInt(-inf..0) => nonInt(0..2)
nonInt(-1..2) \\ nonInt(-inf..1) => nonInt(1..2)
nonInt(-1..2) \\ nonInt(-inf..inf) => never
nonInt(-1..2) \\ 1 | int(3..4) => nonInt(-1..2)
nonInt(0..inf) \\ number => never
nonInt(0..inf) \\ -3.14 => nonInt(0..inf)
nonInt(0..inf) \\ -2 => nonInt(0..inf)
nonInt(0..inf) \\ -1 => nonInt(0..inf)
nonInt(0..inf) \\ -0.5 => nonInt(0..inf)
nonInt(0..inf) \\ 0 => nonInt(0..inf)
nonInt(0..inf) \\ 0.5 => 0!..!0.5 | 0.5!..!1 | nonInt(1..inf)
nonInt(0..inf) \\ 1 => nonInt(0..inf)
nonInt(0..inf) \\ 2 => nonInt(0..inf)
nonInt(0..inf) \\ 2.78 => nonInt(0..2) | 2!..!2.78 | 2.78!..!3 | nonInt(3..inf)
nonInt(0..inf) \\ 3 => nonInt(0..inf)
nonInt(0..inf) \\ 3.14 => nonInt(0..3) | 3!..!3.14 | 3.14!..!4 | nonInt(4..inf)
nonInt(0..inf) \\ 10 => nonInt(0..inf)
nonInt(0..inf) \\ 100 => nonInt(0..inf)
nonInt(0..inf) \\ -inf => nonInt(0..inf)
nonInt(0..inf) \\ inf => nonInt(0..inf)
nonInt(0..inf) \\ nan => nonInt(0..inf)
nonInt(0..inf) \\ 0..1 => nonInt(1..inf)
nonInt(0..inf) \\ 0!..1 => nonInt(1..inf)
nonInt(0..inf) \\ 0..!1 => nonInt(1..inf)
nonInt(0..inf) \\ 0..2 => nonInt(2..inf)
nonInt(0..inf) \\ 0!..!2 => nonInt(2..inf)
nonInt(0..inf) \\ 0.5..1.5 => 0!..!0.5 | 1.5!..!2 | nonInt(2..inf)
nonInt(0..inf) \\ 0.5..2.5 => 0!..!0.5 | 2.5!..!3 | nonInt(3..inf)
nonInt(0..inf) \\ 0.5!..2.5 => 0!..0.5 | 2.5!..!3 | nonInt(3..inf)
nonInt(0..inf) \\ 0.5..!2.5 => 0!..!0.5 | 2.5..!3 | nonInt(3..inf)
nonInt(0..inf) \\ -2.56..3.35 => 3.35!..!4 | nonInt(4..inf)
nonInt(0..inf) \\ 0.5..0.75 => 0!..!0.5 | 0.75!..!1 | nonInt(1..inf)
nonInt(0..inf) \\ 1..2 => nonInt(0..1) | nonInt(2..inf)
nonInt(0..inf) \\ 0..inf => never
nonInt(0..inf) \\ 0!..inf => never
nonInt(0..inf) \\ 0..!inf => never
nonInt(0..inf) \\ 0!..!inf => never
nonInt(0..inf) \\ 1..inf => nonInt(0..1)
nonInt(0..inf) \\ 1!..inf => nonInt(0..1)
nonInt(0..inf) \\ 1..!inf => nonInt(0..1)
nonInt(0..inf) \\ 2..inf => nonInt(0..2)
nonInt(0..inf) \\ 2!..inf => nonInt(0..2)
nonInt(0..inf) \\ 2.5..inf => nonInt(0..2) | 2!..!2.5
nonInt(0..inf) \\ -inf..0 => nonInt(0..inf)
nonInt(0..inf) \\ -inf..inf => never
nonInt(0..inf) \\ -inf!..inf => never
nonInt(0..inf) \\ -inf..!inf => never
nonInt(0..inf) \\ -inf!..!inf => never
nonInt(0..inf) \\ int(0..1) => nonInt(0..inf)
nonInt(0..inf) \\ int(0..2) => nonInt(0..inf)
nonInt(0..inf) \\ int(1..2) => nonInt(0..inf)
nonInt(0..inf) \\ int(5..20) => nonInt(0..inf)
nonInt(0..inf) \\ int(-20..-5) => nonInt(0..inf)
nonInt(0..inf) \\ int(-10..10) => nonInt(0..inf)
nonInt(0..inf) \\ int(0..inf) => nonInt(0..inf)
nonInt(0..inf) \\ int(1..inf) => nonInt(0..inf)
nonInt(0..inf) \\ int(-inf..0) => nonInt(0..inf)
nonInt(0..inf) \\ int(-inf..1) => nonInt(0..inf)
nonInt(0..inf) \\ int(-inf..inf) => nonInt(0..inf)
nonInt(0..inf) \\ nonInt(0..1) => nonInt(1..inf)
nonInt(0..inf) \\ nonInt(0..2) => nonInt(2..inf)
nonInt(0..inf) \\ nonInt(-1..2) => nonInt(2..inf)
nonInt(0..inf) \\ nonInt(0..inf) => never
nonInt(0..inf) \\ nonInt(-1..inf) => never
nonInt(0..inf) \\ nonInt(-inf..0) => nonInt(0..inf)
nonInt(0..inf) \\ nonInt(-inf..1) => nonInt(1..inf)
nonInt(0..inf) \\ nonInt(-inf..inf) => never
nonInt(0..inf) \\ 1 | int(3..4) => nonInt(0..inf)
nonInt(-1..inf) \\ number => never
nonInt(-1..inf) \\ -3.14 => nonInt(-1..inf)
nonInt(-1..inf) \\ -2 => nonInt(-1..inf)
nonInt(-1..inf) \\ -1 => nonInt(-1..inf)
nonInt(-1..inf) \\ -0.5 => -1!..!-0.5 | -0.5!..!0 | nonInt(0..inf)
nonInt(-1..inf) \\ 0 => nonInt(-1..inf)
nonInt(-1..inf) \\ 0.5 => nonInt(-1..0) | 0!..!0.5 | 0.5!..!1 | nonInt(1..inf)
nonInt(-1..inf) \\ 1 => nonInt(-1..inf)
nonInt(-1..inf) \\ 2 => nonInt(-1..inf)
nonInt(-1..inf) \\ 2.78 => nonInt(-1..2) | 2!..!2.78 | 2.78!..!3 | nonInt(3..inf)
nonInt(-1..inf) \\ 3 => nonInt(-1..inf)
nonInt(-1..inf) \\ 3.14 => nonInt(-1..3) | 3!..!3.14 | 3.14!..!4 | nonInt(4..inf)
nonInt(-1..inf) \\ 10 => nonInt(-1..inf)
nonInt(-1..inf) \\ 100 => nonInt(-1..inf)
nonInt(-1..inf) \\ -inf => nonInt(-1..inf)
nonInt(-1..inf) \\ inf => nonInt(-1..inf)
nonInt(-1..inf) \\ nan => nonInt(-1..inf)
nonInt(-1..inf) \\ 0..1 => nonInt(-1..0) | nonInt(1..inf)
nonInt(-1..inf) \\ 0!..1 => nonInt(-1..0) | nonInt(1..inf)
nonInt(-1..inf) \\ 0..!1 => nonInt(-1..0) | nonInt(1..inf)
nonInt(-1..inf) \\ 0..2 => nonInt(-1..0) | nonInt(2..inf)
nonInt(-1..inf) \\ 0!..!2 => nonInt(-1..0) | nonInt(2..inf)
nonInt(-1..inf) \\ 0.5..1.5 => nonInt(-1..0) | 0!..!0.5 | 1.5!..!2 | nonInt(2..inf)
nonInt(-1..inf) \\ 0.5..2.5 => nonInt(-1..0) | 0!..!0.5 | 2.5!..!3 | nonInt(3..inf)
nonInt(-1..inf) \\ 0.5!..2.5 => nonInt(-1..0) | 0!..0.5 | 2.5!..!3 | nonInt(3..inf)
nonInt(-1..inf) \\ 0.5..!2.5 => nonInt(-1..0) | 0!..!0.5 | 2.5..!3 | nonInt(3..inf)
nonInt(-1..inf) \\ -2.56..3.35 => 3.35!..!4 | nonInt(4..inf)
nonInt(-1..inf) \\ 0.5..0.75 => nonInt(-1..0) | 0!..!0.5 | 0.75!..!1 | nonInt(1..inf)
nonInt(-1..inf) \\ 1..2 => nonInt(-1..1) | nonInt(2..inf)
nonInt(-1..inf) \\ 0..inf => nonInt(-1..0)
nonInt(-1..inf) \\ 0!..inf => nonInt(-1..0)
nonInt(-1..inf) \\ 0..!inf => nonInt(-1..0)
nonInt(-1..inf) \\ 0!..!inf => nonInt(-1..0)
nonInt(-1..inf) \\ 1..inf => nonInt(-1..1)
nonInt(-1..inf) \\ 1!..inf => nonInt(-1..1)
nonInt(-1..inf) \\ 1..!inf => nonInt(-1..1)
nonInt(-1..inf) \\ 2..inf => nonInt(-1..2)
nonInt(-1..inf) \\ 2!..inf => nonInt(-1..2)
nonInt(-1..inf) \\ 2.5..inf => nonInt(-1..2) | 2!..!2.5
nonInt(-1..inf) \\ -inf..0 => nonInt(0..inf)
nonInt(-1..inf) \\ -inf..inf => never
nonInt(-1..inf) \\ -inf!..inf => never
nonInt(-1..inf) \\ -inf..!inf => never
nonInt(-1..inf) \\ -inf!..!inf => never
nonInt(-1..inf) \\ int(0..1) => nonInt(-1..inf)
nonInt(-1..inf) \\ int(0..2) => nonInt(-1..inf)
nonInt(-1..inf) \\ int(1..2) => nonInt(-1..inf)
nonInt(-1..inf) \\ int(5..20) => nonInt(-1..inf)
nonInt(-1..inf) \\ int(-20..-5) => nonInt(-1..inf)
nonInt(-1..inf) \\ int(-10..10) => nonInt(-1..inf)
nonInt(-1..inf) \\ int(0..inf) => nonInt(-1..inf)
nonInt(-1..inf) \\ int(1..inf) => nonInt(-1..inf)
nonInt(-1..inf) \\ int(-inf..0) => nonInt(-1..inf)
nonInt(-1..inf) \\ int(-inf..1) => nonInt(-1..inf)
nonInt(-1..inf) \\ int(-inf..inf) => nonInt(-1..inf)
nonInt(-1..inf) \\ nonInt(0..1) => nonInt(-1..0) | nonInt(1..inf)
nonInt(-1..inf) \\ nonInt(0..2) => nonInt(-1..0) | nonInt(2..inf)
nonInt(-1..inf) \\ nonInt(-1..2) => nonInt(2..inf)
nonInt(-1..inf) \\ nonInt(0..inf) => nonInt(-1..0)
nonInt(-1..inf) \\ nonInt(-1..inf) => never
nonInt(-1..inf) \\ nonInt(-inf..0) => nonInt(0..inf)
nonInt(-1..inf) \\ nonInt(-inf..1) => nonInt(1..inf)
nonInt(-1..inf) \\ nonInt(-inf..inf) => never
nonInt(-1..inf) \\ 1 | int(3..4) => nonInt(-1..inf)
nonInt(-inf..0) \\ number => never
nonInt(-inf..0) \\ -3.14 => nonInt(-inf..-4) | -4!..!-3.14 | -3.14!..!-3 | nonInt(-3..0)
nonInt(-inf..0) \\ -2 => nonInt(-inf..0)
nonInt(-inf..0) \\ -1 => nonInt(-inf..0)
nonInt(-inf..0) \\ -0.5 => nonInt(-inf..-1) | -1!..!-0.5 | -0.5!..!0
nonInt(-inf..0) \\ 0 => nonInt(-inf..0)
nonInt(-inf..0) \\ 0.5 => nonInt(-inf..0)
nonInt(-inf..0) \\ 1 => nonInt(-inf..0)
nonInt(-inf..0) \\ 2 => nonInt(-inf..0)
nonInt(-inf..0) \\ 2.78 => nonInt(-inf..0)
nonInt(-inf..0) \\ 3 => nonInt(-inf..0)
nonInt(-inf..0) \\ 3.14 => nonInt(-inf..0)
nonInt(-inf..0) \\ 10 => nonInt(-inf..0)
nonInt(-inf..0) \\ 100 => nonInt(-inf..0)
nonInt(-inf..0) \\ -inf => nonInt(-inf..0)
nonInt(-inf..0) \\ inf => nonInt(-inf..0)
nonInt(-inf..0) \\ nan => nonInt(-inf..0)
nonInt(-inf..0) \\ 0..1 => nonInt(-inf..0)
nonInt(-inf..0) \\ 0!..1 => nonInt(-inf..0)
nonInt(-inf..0) \\ 0..!1 => nonInt(-inf..0)
nonInt(-inf..0) \\ 0..2 => nonInt(-inf..0)
nonInt(-inf..0) \\ 0!..!2 => nonInt(-inf..0)
nonInt(-inf..0) \\ 0.5..1.5 => nonInt(-inf..0)
nonInt(-inf..0) \\ 0.5..2.5 => nonInt(-inf..0)
nonInt(-inf..0) \\ 0.5!..2.5 => nonInt(-inf..0)
nonInt(-inf..0) \\ 0.5..!2.5 => nonInt(-inf..0)
nonInt(-inf..0) \\ -2.56..3.35 => nonInt(-inf..-3) | -3!..!-2.56
nonInt(-inf..0) \\ 0.5..0.75 => nonInt(-inf..0)
nonInt(-inf..0) \\ 1..2 => nonInt(-inf..0)
nonInt(-inf..0) \\ 0..inf => nonInt(-inf..0)
nonInt(-inf..0) \\ 0!..inf => nonInt(-inf..0)
nonInt(-inf..0) \\ 0..!inf => nonInt(-inf..0)
nonInt(-inf..0) \\ 0!..!inf => nonInt(-inf..0)
nonInt(-inf..0) \\ 1..inf => nonInt(-inf..0)
nonInt(-inf..0) \\ 1!..inf => nonInt(-inf..0)
nonInt(-inf..0) \\ 1..!inf => nonInt(-inf..0)
nonInt(-inf..0) \\ 2..inf => nonInt(-inf..0)
nonInt(-inf..0) \\ 2!..inf => nonInt(-inf..0)
nonInt(-inf..0) \\ 2.5..inf => nonInt(-inf..0)
nonInt(-inf..0) \\ -inf..0 => never
nonInt(-inf..0) \\ -inf..inf => never
nonInt(-inf..0) \\ -inf!..inf => never
nonInt(-inf..0) \\ -inf..!inf => never
nonInt(-inf..0) \\ -inf!..!inf => never
nonInt(-inf..0) \\ int(0..1) => nonInt(-inf..0)
nonInt(-inf..0) \\ int(0..2) => nonInt(-inf..0)
nonInt(-inf..0) \\ int(1..2) => nonInt(-inf..0)
nonInt(-inf..0) \\ int(5..20) => nonInt(-inf..0)
nonInt(-inf..0) \\ int(-20..-5) => nonInt(-inf..0)
nonInt(-inf..0) \\ int(-10..10) => nonInt(-inf..0)
nonInt(-inf..0) \\ int(0..inf) => nonInt(-inf..0)
nonInt(-inf..0) \\ int(1..inf) => nonInt(-inf..0)
nonInt(-inf..0) \\ int(-inf..0) => nonInt(-inf..0)
nonInt(-inf..0) \\ int(-inf..1) => nonInt(-inf..0)
nonInt(-inf..0) \\ int(-inf..inf) => nonInt(-inf..0)
nonInt(-inf..0) \\ nonInt(0..1) => nonInt(-inf..0)
nonInt(-inf..0) \\ nonInt(0..2) => nonInt(-inf..0)
nonInt(-inf..0) \\ nonInt(-1..2) => nonInt(-inf..-1)
nonInt(-inf..0) \\ nonInt(0..inf) => nonInt(-inf..0)
nonInt(-inf..0) \\ nonInt(-1..inf) => nonInt(-inf..-1)
nonInt(-inf..0) \\ nonInt(-inf..0) => never
nonInt(-inf..0) \\ nonInt(-inf..1) => never
nonInt(-inf..0) \\ nonInt(-inf..inf) => never
nonInt(-inf..0) \\ 1 | int(3..4) => nonInt(-inf..0)
nonInt(-inf..1) \\ number => never
nonInt(-inf..1) \\ -3.14 => nonInt(-inf..-4) | -4!..!-3.14 | -3.14!..!-3 | nonInt(-3..1)
nonInt(-inf..1) \\ -2 => nonInt(-inf..1)
nonInt(-inf..1) \\ -1 => nonInt(-inf..1)
nonInt(-inf..1) \\ -0.5 => nonInt(-inf..-1) | -1!..!-0.5 | -0.5!..!0 | nonInt(0..1)
nonInt(-inf..1) \\ 0 => nonInt(-inf..1)
nonInt(-inf..1) \\ 0.5 => nonInt(-inf..0) | 0!..!0.5 | 0.5!..!1
nonInt(-inf..1) \\ 1 => nonInt(-inf..1)
nonInt(-inf..1) \\ 2 => nonInt(-inf..1)
nonInt(-inf..1) \\ 2.78 => nonInt(-inf..1)
nonInt(-inf..1) \\ 3 => nonInt(-inf..1)
nonInt(-inf..1) \\ 3.14 => nonInt(-inf..1)
nonInt(-inf..1) \\ 10 => nonInt(-inf..1)
nonInt(-inf..1) \\ 100 => nonInt(-inf..1)
nonInt(-inf..1) \\ -inf => nonInt(-inf..1)
nonInt(-inf..1) \\ inf => nonInt(-inf..1)
nonInt(-inf..1) \\ nan => nonInt(-inf..1)
nonInt(-inf..1) \\ 0..1 => nonInt(-inf..0)
nonInt(-inf..1) \\ 0!..1 => nonInt(-inf..0)
nonInt(-inf..1) \\ 0..!1 => nonInt(-inf..0)
nonInt(-inf..1) \\ 0..2 => nonInt(-inf..0)
nonInt(-inf..1) \\ 0!..!2 => nonInt(-inf..0)
nonInt(-inf..1) \\ 0.5..1.5 => nonInt(-inf..0) | 0!..!0.5
nonInt(-inf..1) \\ 0.5..2.5 => nonInt(-inf..0) | 0!..!0.5
nonInt(-inf..1) \\ 0.5!..2.5 => nonInt(-inf..0) | 0!..0.5
nonInt(-inf..1) \\ 0.5..!2.5 => nonInt(-inf..0) | 0!..!0.5
nonInt(-inf..1) \\ -2.56..3.35 => nonInt(-inf..-3) | -3!..!-2.56
nonInt(-inf..1) \\ 0.5..0.75 => nonInt(-inf..0) | 0!..!0.5 | 0.75!..!1
nonInt(-inf..1) \\ 1..2 => nonInt(-inf..1)
nonInt(-inf..1) \\ 0..inf => nonInt(-inf..0)
nonInt(-inf..1) \\ 0!..inf => nonInt(-inf..0)
nonInt(-inf..1) \\ 0..!inf => nonInt(-inf..0)
nonInt(-inf..1) \\ 0!..!inf => nonInt(-inf..0)
nonInt(-inf..1) \\ 1..inf => nonInt(-inf..1)
nonInt(-inf..1) \\ 1!..inf => nonInt(-inf..1)
nonInt(-inf..1) \\ 1..!inf => nonInt(-inf..1)
nonInt(-inf..1) \\ 2..inf => nonInt(-inf..1)
nonInt(-inf..1) \\ 2!..inf => nonInt(-inf..1)
nonInt(-inf..1) \\ 2.5..inf => nonInt(-inf..1)
nonInt(-inf..1) \\ -inf..0 => nonInt(0..1)
nonInt(-inf..1) \\ -inf..inf => never
nonInt(-inf..1) \\ -inf!..inf => never
nonInt(-inf..1) \\ -inf..!inf => never
nonInt(-inf..1) \\ -inf!..!inf => never
nonInt(-inf..1) \\ int(0..1) => nonInt(-inf..1)
nonInt(-inf..1) \\ int(0..2) => nonInt(-inf..1)
nonInt(-inf..1) \\ int(1..2) => nonInt(-inf..1)
nonInt(-inf..1) \\ int(5..20) => nonInt(-inf..1)
nonInt(-inf..1) \\ int(-20..-5) => nonInt(-inf..1)
nonInt(-inf..1) \\ int(-10..10) => nonInt(-inf..1)
nonInt(-inf..1) \\ int(0..inf) => nonInt(-inf..1)
nonInt(-inf..1) \\ int(1..inf) => nonInt(-inf..1)
nonInt(-inf..1) \\ int(-inf..0) => nonInt(-inf..1)
nonInt(-inf..1) \\ int(-inf..1) => nonInt(-inf..1)
nonInt(-inf..1) \\ int(-inf..inf) => nonInt(-inf..1)
nonInt(-inf..1) \\ nonInt(0..1) => nonInt(-inf..0)
nonInt(-inf..1) \\ nonInt(0..2) => nonInt(-inf..0)
nonInt(-inf..1) \\ nonInt(-1..2) => nonInt(-inf..-1)
nonInt(-inf..1) \\ nonInt(0..inf) => nonInt(-inf..0)
nonInt(-inf..1) \\ nonInt(-1..inf) => nonInt(-inf..-1)
nonInt(-inf..1) \\ nonInt(-inf..0) => nonInt(0..1)
nonInt(-inf..1) \\ nonInt(-inf..1) => never
nonInt(-inf..1) \\ nonInt(-inf..inf) => never
nonInt(-inf..1) \\ 1 | int(3..4) => nonInt(-inf..1)
nonInt(-inf..inf) \\ number => never
nonInt(-inf..inf) \\ -3.14 => nonInt(-inf..-4) | -4!..!-3.14 | -3.14!..!-3 | nonInt(-3..inf)
nonInt(-inf..inf) \\ -2 => nonInt(-inf..inf)
nonInt(-inf..inf) \\ -1 => nonInt(-inf..inf)
nonInt(-inf..inf) \\ -0.5 => nonInt(-inf..-1) | -1!..!-0.5 | -0.5!..!0 | nonInt(0..inf)
nonInt(-inf..inf) \\ 0 => nonInt(-inf..inf)
nonInt(-inf..inf) \\ 0.5 => nonInt(-inf..0) | 0!..!0.5 | 0.5!..!1 | nonInt(1..inf)
nonInt(-inf..inf) \\ 1 => nonInt(-inf..inf)
nonInt(-inf..inf) \\ 2 => nonInt(-inf..inf)
nonInt(-inf..inf) \\ 2.78 => nonInt(-inf..2) | 2!..!2.78 | 2.78!..!3 | nonInt(3..inf)
nonInt(-inf..inf) \\ 3 => nonInt(-inf..inf)
nonInt(-inf..inf) \\ 3.14 => nonInt(-inf..3) | 3!..!3.14 | 3.14!..!4 | nonInt(4..inf)
nonInt(-inf..inf) \\ 10 => nonInt(-inf..inf)
nonInt(-inf..inf) \\ 100 => nonInt(-inf..inf)
nonInt(-inf..inf) \\ -inf => nonInt(-inf..inf)
nonInt(-inf..inf) \\ inf => nonInt(-inf..inf)
nonInt(-inf..inf) \\ nan => nonInt(-inf..inf)
nonInt(-inf..inf) \\ 0..1 => nonInt(-inf..0) | nonInt(1..inf)
nonInt(-inf..inf) \\ 0!..1 => nonInt(-inf..0) | nonInt(1..inf)
nonInt(-inf..inf) \\ 0..!1 => nonInt(-inf..0) | nonInt(1..inf)
nonInt(-inf..inf) \\ 0..2 => nonInt(-inf..0) | nonInt(2..inf)
nonInt(-inf..inf) \\ 0!..!2 => nonInt(-inf..0) | nonInt(2..inf)
nonInt(-inf..inf) \\ 0.5..1.5 => nonInt(-inf..0) | 0!..!0.5 | 1.5!..!2 | nonInt(2..inf)
nonInt(-inf..inf) \\ 0.5..2.5 => nonInt(-inf..0) | 0!..!0.5 | 2.5!..!3 | nonInt(3..inf)
nonInt(-inf..inf) \\ 0.5!..2.5 => nonInt(-inf..0) | 0!..0.5 | 2.5!..!3 | nonInt(3..inf)
nonInt(-inf..inf) \\ 0.5..!2.5 => nonInt(-inf..0) | 0!..!0.5 | 2.5..!3 | nonInt(3..inf)
nonInt(-inf..inf) \\ -2.56..3.35 => nonInt(-inf..-3) | -3!..!-2.56 | 3.35!..!4 | nonInt(4..inf)
nonInt(-inf..inf) \\ 0.5..0.75 => nonInt(-inf..0) | 0!..!0.5 | 0.75!..!1 | nonInt(1..inf)
nonInt(-inf..inf) \\ 1..2 => nonInt(-inf..1) | nonInt(2..inf)
nonInt(-inf..inf) \\ 0..inf => nonInt(-inf..0)
nonInt(-inf..inf) \\ 0!..inf => nonInt(-inf..0)
nonInt(-inf..inf) \\ 0..!inf => nonInt(-inf..0)
nonInt(-inf..inf) \\ 0!..!inf => nonInt(-inf..0)
nonInt(-inf..inf) \\ 1..inf => nonInt(-inf..1)
nonInt(-inf..inf) \\ 1!..inf => nonInt(-inf..1)
nonInt(-inf..inf) \\ 1..!inf => nonInt(-inf..1)
nonInt(-inf..inf) \\ 2..inf => nonInt(-inf..2)
nonInt(-inf..inf) \\ 2!..inf => nonInt(-inf..2)
nonInt(-inf..inf) \\ 2.5..inf => nonInt(-inf..2) | 2!..!2.5
nonInt(-inf..inf) \\ -inf..0 => nonInt(0..inf)
nonInt(-inf..inf) \\ -inf..inf => never
nonInt(-inf..inf) \\ -inf!..inf => never
nonInt(-inf..inf) \\ -inf..!inf => never
nonInt(-inf..inf) \\ -inf!..!inf => never
nonInt(-inf..inf) \\ int(0..1) => nonInt(-inf..inf)
nonInt(-inf..inf) \\ int(0..2) => nonInt(-inf..inf)
nonInt(-inf..inf) \\ int(1..2) => nonInt(-inf..inf)
nonInt(-inf..inf) \\ int(5..20) => nonInt(-inf..inf)
nonInt(-inf..inf) \\ int(-20..-5) => nonInt(-inf..inf)
nonInt(-inf..inf) \\ int(-10..10) => nonInt(-inf..inf)
nonInt(-inf..inf) \\ int(0..inf) => nonInt(-inf..inf)
nonInt(-inf..inf) \\ int(1..inf) => nonInt(-inf..inf)
nonInt(-inf..inf) \\ int(-inf..0) => nonInt(-inf..inf)
nonInt(-inf..inf) \\ int(-inf..1) => nonInt(-inf..inf)
nonInt(-inf..inf) \\ int(-inf..inf) => nonInt(-inf..inf)
nonInt(-inf..inf) \\ nonInt(0..1) => nonInt(-inf..0) | nonInt(1..inf)
nonInt(-inf..inf) \\ nonInt(0..2) => nonInt(-inf..0) | nonInt(2..inf)
nonInt(-inf..inf) \\ nonInt(-1..2) => nonInt(-inf..-1) | nonInt(2..inf)
nonInt(-inf..inf) \\ nonInt(0..inf) => nonInt(-inf..0)
nonInt(-inf..inf) \\ nonInt(-1..inf) => nonInt(-inf..-1)
nonInt(-inf..inf) \\ nonInt(-inf..0) => nonInt(0..inf)
nonInt(-inf..inf) \\ nonInt(-inf..1) => nonInt(1..inf)
nonInt(-inf..inf) \\ nonInt(-inf..inf) => never
nonInt(-inf..inf) \\ 1 | int(3..4) => nonInt(-inf..inf)
1 | int(3..4) \\ number => never
1 | int(3..4) \\ -3.14 => 1 | int(3..4)
1 | int(3..4) \\ -2 => 1 | int(3..4)
1 | int(3..4) \\ -1 => 1 | int(3..4)
1 | int(3..4) \\ -0.5 => 1 | int(3..4)
1 | int(3..4) \\ 0 => 1 | int(3..4)
1 | int(3..4) \\ 0.5 => 1 | int(3..4)
1 | int(3..4) \\ 1 => int(3..4)
1 | int(3..4) \\ 2 => 1 | int(3..4)
1 | int(3..4) \\ 2.78 => 1 | int(3..4)
1 | int(3..4) \\ 3 => 1 | 4
1 | int(3..4) \\ 3.14 => 1 | int(3..4)
1 | int(3..4) \\ 10 => 1 | int(3..4)
1 | int(3..4) \\ 100 => 1 | int(3..4)
1 | int(3..4) \\ -inf => 1 | int(3..4)
1 | int(3..4) \\ inf => 1 | int(3..4)
1 | int(3..4) \\ nan => 1 | int(3..4)
1 | int(3..4) \\ 0..1 => int(3..4)
1 | int(3..4) \\ 0!..1 => int(3..4)
1 | int(3..4) \\ 0..!1 => 1 | int(3..4)
1 | int(3..4) \\ 0..2 => int(3..4)
1 | int(3..4) \\ 0!..!2 => int(3..4)
1 | int(3..4) \\ 0.5..1.5 => int(3..4)
1 | int(3..4) \\ 0.5..2.5 => int(3..4)
1 | int(3..4) \\ 0.5!..2.5 => int(3..4)
1 | int(3..4) \\ 0.5..!2.5 => int(3..4)
1 | int(3..4) \\ -2.56..3.35 => 4
1 | int(3..4) \\ 0.5..0.75 => 1 | int(3..4)
1 | int(3..4) \\ 1..2 => int(3..4)
1 | int(3..4) \\ 0..inf => never
1 | int(3..4) \\ 0!..inf => never
1 | int(3..4) \\ 0..!inf => never
1 | int(3..4) \\ 0!..!inf => never
1 | int(3..4) \\ 1..inf => never
1 | int(3..4) \\ 1!..inf => 1
1 | int(3..4) \\ 1..!inf => never
1 | int(3..4) \\ 2..inf => 1
1 | int(3..4) \\ 2!..inf => 1
1 | int(3..4) \\ 2.5..inf => 1
1 | int(3..4) \\ -inf..0 => 1 | int(3..4)
1 | int(3..4) \\ -inf..inf => never
1 | int(3..4) \\ -inf!..inf => never
1 | int(3..4) \\ -inf..!inf => never
1 | int(3..4) \\ -inf!..!inf => never
1 | int(3..4) \\ int(0..1) => int(3..4)
1 | int(3..4) \\ int(0..2) => int(3..4)
1 | int(3..4) \\ int(1..2) => int(3..4)
1 | int(3..4) \\ int(5..20) => 1 | int(3..4)
1 | int(3..4) \\ int(-20..-5) => 1 | int(3..4)
1 | int(3..4) \\ int(-10..10) => never
1 | int(3..4) \\ int(0..inf) => never
1 | int(3..4) \\ int(1..inf) => never
1 | int(3..4) \\ int(-inf..0) => 1 | int(3..4)
1 | int(3..4) \\ int(-inf..1) => int(3..4)
1 | int(3..4) \\ int(-inf..inf) => never
1 | int(3..4) \\ nonInt(0..1) => 1 | int(3..4)
1 | int(3..4) \\ nonInt(0..2) => 1 | int(3..4)
1 | int(3..4) \\ nonInt(-1..2) => 1 | int(3..4)
1 | int(3..4) \\ nonInt(0..inf) => 1 | int(3..4)
1 | int(3..4) \\ nonInt(-1..inf) => 1 | int(3..4)
1 | int(3..4) \\ nonInt(-inf..0) => 1 | int(3..4)
1 | int(3..4) \\ nonInt(-inf..1) => 1 | int(3..4)
1 | int(3..4) \\ nonInt(-inf..inf) => 1 | int(3..4)
1 | int(3..4) \\ 1 | int(3..4) => never
string \\ string => never
string \\ "" => invStrSet("")
string \\ "foo" => invStrSet("foo")
string \\ "bar" => invStrSet("bar")
string \\ "ðŸ’©" => invStrSet("ðŸ’©")
string \\ "bar" | "foo" => invStrSet("bar" | "foo")
string \\ "baz" | "foo" => invStrSet("baz" | "foo")
string \\ invStrSet("foo") => "foo"
string \\ invStrSet("bar" | "foo") => "bar" | "foo"
string \\ invStrSet("bar") => "bar"
string \\ invStrSet("") => ""
"" \\ string => never
"" \\ "" => never
"" \\ "foo" => ""
"" \\ "bar" => ""
"" \\ "ðŸ’©" => ""
"" \\ "bar" | "foo" => ""
"" \\ "baz" | "foo" => ""
"" \\ invStrSet("foo") => never
"" \\ invStrSet("bar" | "foo") => never
"" \\ invStrSet("bar") => never
"" \\ invStrSet("") => ""
"foo" \\ string => never
"foo" \\ "" => "foo"
"foo" \\ "foo" => never
"foo" \\ "bar" => "foo"
"foo" \\ "ðŸ’©" => "foo"
"foo" \\ "bar" | "foo" => never
"foo" \\ "baz" | "foo" => never
"foo" \\ invStrSet("foo") => "foo"
"foo" \\ invStrSet("bar" | "foo") => "foo"
"foo" \\ invStrSet("bar") => never
"foo" \\ invStrSet("") => never
"bar" \\ string => never
"bar" \\ "" => "bar"
"bar" \\ "foo" => "bar"
"bar" \\ "bar" => never
"bar" \\ "ðŸ’©" => "bar"
"bar" \\ "bar" | "foo" => never
"bar" \\ "baz" | "foo" => "bar"
"bar" \\ invStrSet("foo") => never
"bar" \\ invStrSet("bar" | "foo") => "bar"
"bar" \\ invStrSet("bar") => "bar"
"bar" \\ invStrSet("") => never
"ðŸ’©" \\ string => never
"ðŸ’©" \\ "" => "ðŸ’©"
"ðŸ’©" \\ "foo" => "ðŸ’©"
"ðŸ’©" \\ "bar" => "ðŸ’©"
"ðŸ’©" \\ "ðŸ’©" => never
"ðŸ’©" \\ "bar" | "foo" => "ðŸ’©"
"ðŸ’©" \\ "baz" | "foo" => "ðŸ’©"
"ðŸ’©" \\ invStrSet("foo") => never
"ðŸ’©" \\ invStrSet("bar" | "foo") => never
"ðŸ’©" \\ invStrSet("bar") => never
"ðŸ’©" \\ invStrSet("") => never
"bar" | "foo" \\ string => never
"bar" | "foo" \\ "" => "bar" | "foo"
"bar" | "foo" \\ "foo" => "bar"
"bar" | "foo" \\ "bar" => "foo"
"bar" | "foo" \\ "ðŸ’©" => "bar" | "foo"
"bar" | "foo" \\ "bar" | "foo" => never
"bar" | "foo" \\ "baz" | "foo" => "bar"
"bar" | "foo" \\ invStrSet("foo") => "foo"
"bar" | "foo" \\ invStrSet("bar" | "foo") => "bar" | "foo"
"bar" | "foo" \\ invStrSet("bar") => "bar"
"bar" | "foo" \\ invStrSet("") => never
"baz" | "foo" \\ string => never
"baz" | "foo" \\ "" => "baz" | "foo"
"baz" | "foo" \\ "foo" => "baz"
"baz" | "foo" \\ "bar" => "baz" | "foo"
"baz" | "foo" \\ "ðŸ’©" => "baz" | "foo"
"baz" | "foo" \\ "bar" | "foo" => "baz"
"baz" | "foo" \\ "baz" | "foo" => never
"baz" | "foo" \\ invStrSet("foo") => "foo"
"baz" | "foo" \\ invStrSet("bar" | "foo") => "foo"
"baz" | "foo" \\ invStrSet("bar") => never
"baz" | "foo" \\ invStrSet("") => never
invStrSet("foo") \\ string => never
invStrSet("foo") \\ "" => invStrSet("" | "foo")
invStrSet("foo") \\ "foo" => invStrSet("foo")
invStrSet("foo") \\ "bar" => invStrSet("bar" | "foo")
invStrSet("foo") \\ "ðŸ’©" => invStrSet("foo" | "ðŸ’©")
invStrSet("foo") \\ "bar" | "foo" => invStrSet("bar" | "foo")
invStrSet("foo") \\ "baz" | "foo" => invStrSet("baz" | "foo")
invStrSet("foo") \\ invStrSet("foo") => never
invStrSet("foo") \\ invStrSet("bar" | "foo") => "bar"
invStrSet("foo") \\ invStrSet("bar") => "bar"
invStrSet("foo") \\ invStrSet("") => ""
invStrSet("bar" | "foo") \\ string => never
invStrSet("bar" | "foo") \\ "" => invStrSet("" | "bar" | "foo")
invStrSet("bar" | "foo") \\ "foo" => invStrSet("bar" | "foo")
invStrSet("bar" | "foo") \\ "bar" => invStrSet("bar" | "foo")
invStrSet("bar" | "foo") \\ "ðŸ’©" => invStrSet("bar" | "foo" | "ðŸ’©")
invStrSet("bar" | "foo") \\ "bar" | "foo" => invStrSet("bar" | "foo")
invStrSet("bar" | "foo") \\ "baz" | "foo" => invStrSet("bar" | "baz" | "foo")
invStrSet("bar" | "foo") \\ invStrSet("foo") => never
invStrSet("bar" | "foo") \\ invStrSet("bar" | "foo") => never
invStrSet("bar" | "foo") \\ invStrSet("bar") => never
invStrSet("bar" | "foo") \\ invStrSet("") => ""
invStrSet("bar") \\ string => never
invStrSet("bar") \\ "" => invStrSet("" | "bar")
invStrSet("bar") \\ "foo" => invStrSet("bar" | "foo")
invStrSet("bar") \\ "bar" => invStrSet("bar")
invStrSet("bar") \\ "ðŸ’©" => invStrSet("bar" | "ðŸ’©")
invStrSet("bar") \\ "bar" | "foo" => invStrSet("bar" | "foo")
invStrSet("bar") \\ "baz" | "foo" => invStrSet("bar" | "baz" | "foo")
invStrSet("bar") \\ invStrSet("foo") => "foo"
invStrSet("bar") \\ invStrSet("bar" | "foo") => "foo"
invStrSet("bar") \\ invStrSet("bar") => never
invStrSet("bar") \\ invStrSet("") => ""
invStrSet("") \\ string => never
invStrSet("") \\ "" => invStrSet("")
invStrSet("") \\ "foo" => invStrSet("" | "foo")
invStrSet("") \\ "bar" => invStrSet("" | "bar")
invStrSet("") \\ "ðŸ’©" => invStrSet("" | "ðŸ’©")
invStrSet("") \\ "bar" | "foo" => invStrSet("" | "bar" | "foo")
invStrSet("") \\ "baz" | "foo" => invStrSet("" | "baz" | "foo")
invStrSet("") \\ invStrSet("foo") => "foo"
invStrSet("") \\ invStrSet("bar" | "foo") => "bar" | "foo"
invStrSet("") \\ invStrSet("bar") => "bar"
invStrSet("") \\ invStrSet("") => never
false \\ false => never
false \\ true => false
false \\ false | true => never
false \\ Foo { a: 1, b: 2 } => false
false \\ Foo { a: 3, b: 2 } => false
false \\ Foo { a: 3, b: 4 } => false
false \\ Foo { a: 1 | 3, b: 2 } => false
false \\ Foo { a: 3, b: number } => false
false \\ Foo { a: int(0..inf), b: number } => false
false \\ notStructs(Foo) => never
false \\ notStructs(true | Foo) => never
false \\ notStructs(true) => never
false \\ anyStruct => never
true \\ false => true
true \\ true => never
true \\ false | true => never
true \\ Foo { a: 1, b: 2 } => true
true \\ Foo { a: 3, b: 2 } => true
true \\ Foo { a: 3, b: 4 } => true
true \\ Foo { a: 1 | 3, b: 2 } => true
true \\ Foo { a: 3, b: number } => true
true \\ Foo { a: int(0..inf), b: number } => true
true \\ notStructs(Foo) => never
true \\ notStructs(true | Foo) => true
true \\ notStructs(true) => true
true \\ anyStruct => never
false | true \\ false => true
false | true \\ true => false
false | true \\ false | true => never
false | true \\ Foo { a: 1, b: 2 } => false | true
false | true \\ Foo { a: 3, b: 2 } => false | true
false | true \\ Foo { a: 3, b: 4 } => false | true
false | true \\ Foo { a: 1 | 3, b: 2 } => false | true
false | true \\ Foo { a: 3, b: number } => false | true
false | true \\ Foo { a: int(0..inf), b: number } => false | true
false | true \\ notStructs(Foo) => never
false | true \\ notStructs(true | Foo) => true
false | true \\ notStructs(true) => true
false | true \\ anyStruct => never
Foo { a: 1, b: 2 } \\ false => Foo { a: 1, b: 2 }
Foo { a: 1, b: 2 } \\ true => Foo { a: 1, b: 2 }
Foo { a: 1, b: 2 } \\ false | true => Foo { a: 1, b: 2 }
Foo { a: 1, b: 2 } \\ Foo { a: 1, b: 2 } => never
Foo { a: 1, b: 2 } \\ Foo { a: 3, b: 2 } => Foo { a: 1, b: 2 }
Foo { a: 1, b: 2 } \\ Foo { a: 3, b: 4 } => Foo { a: 1, b: 2 }
Foo { a: 1, b: 2 } \\ Foo { a: 1 | 3, b: 2 } => never
Foo { a: 1, b: 2 } \\ Foo { a: 3, b: number } => Foo { a: 1, b: 2 }
Foo { a: 1, b: 2 } \\ Foo { a: int(0..inf), b: number } => never
Foo { a: 1, b: 2 } \\ notStructs(Foo) => Foo { a: 1, b: 2 }
Foo { a: 1, b: 2 } \\ notStructs(true | Foo) => Foo { a: 1, b: 2 }
Foo { a: 1, b: 2 } \\ notStructs(true) => never
Foo { a: 1, b: 2 } \\ anyStruct => never
Foo { a: 3, b: 2 } \\ false => Foo { a: 3, b: 2 }
Foo { a: 3, b: 2 } \\ true => Foo { a: 3, b: 2 }
Foo { a: 3, b: 2 } \\ false | true => Foo { a: 3, b: 2 }
Foo { a: 3, b: 2 } \\ Foo { a: 1, b: 2 } => Foo { a: 3, b: 2 }
Foo { a: 3, b: 2 } \\ Foo { a: 3, b: 2 } => never
Foo { a: 3, b: 2 } \\ Foo { a: 3, b: 4 } => Foo { a: 3, b: 2 }
Foo { a: 3, b: 2 } \\ Foo { a: 1 | 3, b: 2 } => never
Foo { a: 3, b: 2 } \\ Foo { a: 3, b: number } => never
Foo { a: 3, b: 2 } \\ Foo { a: int(0..inf), b: number } => never
Foo { a: 3, b: 2 } \\ notStructs(Foo) => Foo { a: 3, b: 2 }
Foo { a: 3, b: 2 } \\ notStructs(true | Foo) => Foo { a: 3, b: 2 }
Foo { a: 3, b: 2 } \\ notStructs(true) => never
Foo { a: 3, b: 2 } \\ anyStruct => never
Foo { a: 3, b: 4 } \\ false => Foo { a: 3, b: 4 }
Foo { a: 3, b: 4 } \\ true => Foo { a: 3, b: 4 }
Foo { a: 3, b: 4 } \\ false | true => Foo { a: 3, b: 4 }
Foo { a: 3, b: 4 } \\ Foo { a: 1, b: 2 } => Foo { a: 3, b: 4 }
Foo { a: 3, b: 4 } \\ Foo { a: 3, b: 2 } => Foo { a: 3, b: 4 }
Foo { a: 3, b: 4 } \\ Foo { a: 3, b: 4 } => never
Foo { a: 3, b: 4 } \\ Foo { a: 1 | 3, b: 2 } => Foo { a: 3, b: 4 }
Foo { a: 3, b: 4 } \\ Foo { a: 3, b: number } => never
Foo { a: 3, b: 4 } \\ Foo { a: int(0..inf), b: number } => never
Foo { a: 3, b: 4 } \\ notStructs(Foo) => Foo { a: 3, b: 4 }
Foo { a: 3, b: 4 } \\ notStructs(true | Foo) => Foo { a: 3, b: 4 }
Foo { a: 3, b: 4 } \\ notStructs(true) => never
Foo { a: 3, b: 4 } \\ anyStruct => never
Foo { a: 1 | 3, b: 2 } \\ false => Foo { a: 1 | 3, b: 2 }
Foo { a: 1 | 3, b: 2 } \\ true => Foo { a: 1 | 3, b: 2 }
Foo { a: 1 | 3, b: 2 } \\ false | true => Foo { a: 1 | 3, b: 2 }
Foo { a: 1 | 3, b: 2 } \\ Foo { a: 1, b: 2 } => Foo { a: 3, b: 2 }
Foo { a: 1 | 3, b: 2 } \\ Foo { a: 3, b: 2 } => Foo { a: 1, b: 2 }
Foo { a: 1 | 3, b: 2 } \\ Foo { a: 3, b: 4 } => Foo { a: 1 | 3, b: 2 }
Foo { a: 1 | 3, b: 2 } \\ Foo { a: 1 | 3, b: 2 } => never
Foo { a: 1 | 3, b: 2 } \\ Foo { a: 3, b: number } => Foo { a: 1, b: 2 }
Foo { a: 1 | 3, b: 2 } \\ Foo { a: int(0..inf), b: number } => never
Foo { a: 1 | 3, b: 2 } \\ notStructs(Foo) => Foo { a: 1 | 3, b: 2 }
Foo { a: 1 | 3, b: 2 } \\ notStructs(true | Foo) => Foo { a: 1 | 3, b: 2 }
Foo { a: 1 | 3, b: 2 } \\ notStructs(true) => never
Foo { a: 1 | 3, b: 2 } \\ anyStruct => never
Foo { a: 3, b: number } \\ false => Foo { a: 3, b: number }
Foo { a: 3, b: number } \\ true => Foo { a: 3, b: number }
Foo { a: 3, b: number } \\ false | true => Foo { a: 3, b: number }
Foo { a: 3, b: number } \\ Foo { a: 1, b: 2 } => Foo { a: 3, b: number }
Foo { a: 3, b: number } \\ Foo { a: 3, b: 2 } => Foo { a: 3, b: -inf..!2 | 2!..inf | nan }
Foo { a: 3, b: number } \\ Foo { a: 3, b: 4 } => Foo { a: 3, b: -inf..!4 | 4!..inf | nan }
Foo { a: 3, b: number } \\ Foo { a: 1 | 3, b: 2 } => Foo { a: 3, b: -inf..!2 | 2!..inf | nan }
Foo { a: 3, b: number } \\ Foo { a: 3, b: number } => never
Foo { a: 3, b: number } \\ Foo { a: int(0..inf), b: number } => never
Foo { a: 3, b: number } \\ notStructs(Foo) => Foo { a: 3, b: number }
Foo { a: 3, b: number } \\ notStructs(true | Foo) => Foo { a: 3, b: number }
Foo { a: 3, b: number } \\ notStructs(true) => never
Foo { a: 3, b: number } \\ anyStruct => never
Foo { a: int(0..inf), b: number } \\ false => Foo { a: int(0..inf), b: number }
Foo { a: int(0..inf), b: number } \\ true => Foo { a: int(0..inf), b: number }
Foo { a: int(0..inf), b: number } \\ false | true => Foo { a: int(0..inf), b: number }
Foo { a: int(0..inf), b: number } \\ Foo { a: 1, b: 2 } => Foo { a: int(0..inf), b: number }
Foo { a: int(0..inf), b: number } \\ Foo { a: 3, b: 2 } => Foo { a: int(0..inf), b: number }
Foo { a: int(0..inf), b: number } \\ Foo { a: 3, b: 4 } => Foo { a: int(0..inf), b: number }
Foo { a: int(0..inf), b: number } \\ Foo { a: 1 | 3, b: 2 } => Foo { a: int(0..inf), b: number }
Foo { a: int(0..inf), b: number } \\ Foo { a: 3, b: number } => Foo { a: int(0..2) | int(4..inf), b: number }
Foo { a: int(0..inf), b: number } \\ Foo { a: int(0..inf), b: number } => never
Foo { a: int(0..inf), b: number } \\ notStructs(Foo) => Foo { a: int(0..inf), b: number }
Foo { a: int(0..inf), b: number } \\ notStructs(true | Foo) => Foo { a: int(0..inf), b: number }
Foo { a: int(0..inf), b: number } \\ notStructs(true) => never
Foo { a: int(0..inf), b: number } \\ anyStruct => never
notStructs(Foo) \\ false => notStructs(false | Foo)
notStructs(Foo) \\ true => notStructs(true | Foo)
notStructs(Foo) \\ false | true => notStructs(false | true | Foo)
notStructs(Foo) \\ Foo { a: 1, b: 2 } => notStructs(Foo)
notStructs(Foo) \\ Foo { a: 3, b: 2 } => notStructs(Foo)
notStructs(Foo) \\ Foo { a: 3, b: 4 } => notStructs(Foo)
notStructs(Foo) \\ Foo { a: 1 | 3, b: 2 } => notStructs(Foo)
notStructs(Foo) \\ Foo { a: 3, b: number } => notStructs(Foo)
notStructs(Foo) \\ Foo { a: int(0..inf), b: number } => notStructs(Foo)
notStructs(Foo) \\ notStructs(Foo) => never
notStructs(Foo) \\ notStructs(true | Foo) => true
notStructs(Foo) \\ notStructs(true) => true
notStructs(Foo) \\ anyStruct => never
notStructs(true | Foo) \\ false => notStructs(false | true | Foo)
notStructs(true | Foo) \\ true => notStructs(true | Foo)
notStructs(true | Foo) \\ false | true => notStructs(false | true | Foo)
notStructs(true | Foo) \\ Foo { a: 1, b: 2 } => notStructs(true | Foo)
notStructs(true | Foo) \\ Foo { a: 3, b: 2 } => notStructs(true | Foo)
notStructs(true | Foo) \\ Foo { a: 3, b: 4 } => notStructs(true | Foo)
notStructs(true | Foo) \\ Foo { a: 1 | 3, b: 2 } => notStructs(true | Foo)
notStructs(true | Foo) \\ Foo { a: 3, b: number } => notStructs(true | Foo)
notStructs(true | Foo) \\ Foo { a: int(0..inf), b: number } => notStructs(true | Foo)
notStructs(true | Foo) \\ notStructs(Foo) => never
notStructs(true | Foo) \\ notStructs(true | Foo) => never
notStructs(true | Foo) \\ notStructs(true) => never
notStructs(true | Foo) \\ anyStruct => never
notStructs(true) \\ false => notStructs(false | true)
notStructs(true) \\ true => notStructs(true)
notStructs(true) \\ false | true => notStructs(false | true)
notStructs(true) \\ Foo { a: 1, b: 2 } => notStructs(true)
notStructs(true) \\ Foo { a: 3, b: 2 } => notStructs(true)
notStructs(true) \\ Foo { a: 3, b: 4 } => notStructs(true)
notStructs(true) \\ Foo { a: 1 | 3, b: 2 } => notStructs(true)
notStructs(true) \\ Foo { a: 3, b: number } => Foo { a: int(0..2) | int(4..inf), b: number } | notStructs(true | Foo)
notStructs(true) \\ Foo { a: int(0..inf), b: number } => notStructs(true | Foo)
notStructs(true) \\ notStructs(Foo) => Foo { a: int(0..inf), b: number }
notStructs(true) \\ notStructs(true | Foo) => Foo { a: int(0..inf), b: number }
notStructs(true) \\ notStructs(true) => never
notStructs(true) \\ anyStruct => never
anyStruct \\ false => notStructs(false)
anyStruct \\ true => notStructs(true)
anyStruct \\ false | true => notStructs(false | true)
anyStruct \\ Foo { a: 1, b: 2 } => anyStruct
anyStruct \\ Foo { a: 3, b: 2 } => anyStruct
anyStruct \\ Foo { a: 3, b: 4 } => anyStruct
anyStruct \\ Foo { a: 1 | 3, b: 2 } => anyStruct
anyStruct \\ Foo { a: 3, b: number } => Foo { a: int(0..2) | int(4..inf), b: number } | notStructs(Foo)
anyStruct \\ Foo { a: int(0..inf), b: number } => notStructs(Foo)
anyStruct \\ notStructs(Foo) => Foo { a: int(0..inf), b: number }
anyStruct \\ notStructs(true | Foo) => true | Foo { a: int(0..inf), b: number }
anyStruct \\ notStructs(true) => true
anyStruct \\ anyStruct => never"
`;
